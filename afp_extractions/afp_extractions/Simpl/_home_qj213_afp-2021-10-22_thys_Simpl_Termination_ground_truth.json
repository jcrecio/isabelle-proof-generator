{"file_name": "/home/qj213/afp-2021-10-22/thys/Simpl/Termination.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Simpl", "problem_names": ["lemma terminates_Skip': \"\\<Gamma>\\<turnstile>Skip \\<down> s\"", "lemma terminates_Call_body:\n \"\\<Gamma> p=Some bdy\\<Longrightarrow>\\<Gamma>\\<turnstile>Call  p \\<down>s = \\<Gamma>\\<turnstile>(the (\\<Gamma> p))\\<down>s\"", "lemma terminates_Normal_Call_body:\n \"p \\<in> dom \\<Gamma> \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>Call p \\<down>Normal s = \\<Gamma>\\<turnstile>(the (\\<Gamma> p))\\<down>Normal s\"", "lemma terminates_implies_exec:\n  assumes terminates: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<exists>t. \\<Gamma>\\<turnstile>\\<langle>c,s\\<rangle> \\<Rightarrow> t\"", "lemma terminates_block:\n\"\\<lbrakk>\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n  \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\"", "lemma terminates_block_elim [cases set, consumes 1]:\nassumes termi: \"\\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\"\nassumes e: \"\\<lbrakk>\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n          \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\n         \\<rbrakk> \\<Longrightarrow> P\"\nshows P", "lemma terminates_call:\n\"\\<lbrakk>\\<Gamma> p = Some bdy; \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n  \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>call init p return c \\<down> Normal s\"", "lemma terminates_callUndefined:\n\"\\<lbrakk>\\<Gamma> p = None\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>call init p return result \\<down> Normal s\"", "lemma terminates_call_elim [cases set, consumes 1]:\nassumes termi: \"\\<Gamma>\\<turnstile>call init p return c \\<down> Normal s\"\nassumes bdy: \"\\<And>bdy. \\<lbrakk>\\<Gamma> p = Some bdy; \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk> \\<Longrightarrow> P\"\nassumes undef: \"\\<lbrakk>\\<Gamma> p = None\\<rbrakk> \\<Longrightarrow> P\"\nshows P", "lemma terminates_dynCall:\n\"\\<lbrakk>\\<Gamma>\\<turnstile>call init (p s) return c \\<down> Normal s\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>dynCall init p return c \\<down> Normal s\"", "lemma terminates_dynCall_elim [cases set, consumes 1]:\nassumes termi: \"\\<Gamma>\\<turnstile>dynCall init p return c \\<down> Normal s\"\nassumes \"\\<lbrakk>\\<Gamma>\\<turnstile>call init (p s) return c \\<down> Normal s\\<rbrakk> \\<Longrightarrow> P\"\nshows P", "lemma terminates_sequence_app:\n  \"\\<And>s. \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s;\n        \\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n\\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s\"", "lemma terminates_sequence_appD:\n  \"\\<And>s. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s\n   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s \\<and>\n       (\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\"", "lemma terminates_sequence_appE [consumes 1]:\n  \"\\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s;\n    \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s;\n     \\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk> \\<Longrightarrow> P\\<rbrakk>\n   \\<Longrightarrow> P\"", "lemma terminates_to_terminates_sequence_flatten:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>sequence Seq (flatten c)\\<down>s\"", "lemma terminates_to_terminates_normalize:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>normalize c\\<down>s\"", "lemma terminates_sequence_flatten_to_terminates:\n  shows \"\\<And>s. \\<Gamma>\\<turnstile>sequence Seq (flatten c)\\<down>s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\"", "lemma terminates_normalize_to_terminates:\n  shows \"\\<And>s. \\<Gamma>\\<turnstile>normalize c\\<down>s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\"", "lemma terminates_iff_terminates_normalize:\n\"\\<Gamma>\\<turnstile>normalize c\\<down>s = \\<Gamma>\\<turnstile>c\\<down>s\"", "lemma terminates_strip_guards_to_terminates: \"\\<And>s. \\<Gamma>\\<turnstile>strip_guards F c\\<down>s  \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\"", "lemma terminates_strip_to_terminates:\n  assumes termi_strip: \"strip F \\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>c\\<down>s\"", "lemma inter_guards_terminates:\n  \"\\<And>c c2 s. \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c; \\<Gamma>\\<turnstile>c1\\<down>s \\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\"", "lemma inter_guards_terminates':\n  assumes c: \"(c1 \\<inter>\\<^sub>g c2) = Some c\"\n  assumes termi_c2: \"\\<Gamma>\\<turnstile>c2\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>c\\<down>s\"", "lemma terminates_to_terminates_mark_guards:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>mark_guards f c\\<down>s\"", "lemma terminates_mark_guards_to_terminates_Normal:\n  \"\\<And>s. \\<Gamma>\\<turnstile>mark_guards f c\\<down>Normal s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>Normal s\"", "lemma terminates_mark_guards_to_terminates:\n  \"\\<Gamma>\\<turnstile>mark_guards f c\\<down>s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down> s\"", "lemma terminates_to_terminates_merge_guards:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>merge_guards c\\<down>s\"", "lemma terminates_merge_guards_to_terminates_Normal:\n  shows \"\\<And>s. \\<Gamma>\\<turnstile>merge_guards c\\<down>Normal s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>Normal s\"", "lemma terminates_merge_guards_to_terminates:\n   \"\\<Gamma>\\<turnstile>merge_guards c\\<down> s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down> s\"", "theorem terminates_iff_terminates_merge_guards:\n  \"\\<Gamma>\\<turnstile>c\\<down> s = \\<Gamma>\\<turnstile>merge_guards c\\<down> s\"", "lemma terminates_fewer_guards_Normal:\n  shows \"\\<And>c s. \\<lbrakk>\\<Gamma>\\<turnstile>c'\\<down>Normal s; c \\<subseteq>\\<^sub>g c'; \\<Gamma>\\<turnstile>\\<langle>c',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\\<rbrakk>\n              \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>Normal s\"", "theorem terminates_fewer_guards:\n  shows \"\\<lbrakk>\\<Gamma>\\<turnstile>c'\\<down>s; c \\<subseteq>\\<^sub>g c'; \\<Gamma>\\<turnstile>\\<langle>c',s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\"", "lemma terminates_noFault_strip_guards:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>Normal s\"\n  shows \"\\<lbrakk>\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk> \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F c\\<down>Normal s\"", "lemma terminates_noFault_strip:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>Normal s\"\n  shows \"\\<lbrakk>\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk> \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>c\\<down>Normal s\"", "lemma terminates_while_lemma:\n  assumes termi: \"\\<Gamma>\\<turnstile>w\\<down>fk\"\n  shows \"\\<And>k b c. \\<lbrakk>fk = Normal (f k); w=While b c;\n                       \\<forall>i. \\<Gamma>\\<turnstile>\\<langle>c,Normal (f i) \\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n         \\<Longrightarrow> \\<exists>i. f i \\<notin> b\"", "lemma terminates_while:\n  \"\\<lbrakk>\\<Gamma>\\<turnstile>(While b c)\\<down>Normal (f k);\n    \\<forall>i. \\<Gamma>\\<turnstile>\\<langle>c,Normal (f i) \\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n         \\<Longrightarrow> \\<exists>i. f i \\<notin> b\"", "lemma wf_terminates_while:\n \"wf {(t,s). \\<Gamma>\\<turnstile>(While b c)\\<down>Normal s \\<and> s\\<in>b \\<and>\n             \\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> Normal t}\"", "lemma terminates_restrict_to_terminates:\n  assumes terminates_res: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> c \\<down> s\"\n  assumes not_Stuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c,s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\"\n  shows \"\\<Gamma>\\<turnstile> c \\<down> s\""], "translations": [["", "lemma terminates_Skip': \"\\<Gamma>\\<turnstile>Skip \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Skip \\<down> s", "by (cases s) (auto intro: terminates.intros)"], ["", "lemma terminates_Call_body:\n \"\\<Gamma> p=Some bdy\\<Longrightarrow>\\<Gamma>\\<turnstile>Call  p \\<down>s = \\<Gamma>\\<turnstile>(the (\\<Gamma> p))\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = Some bdy \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Call p \\<down> s =\n    \\<Gamma>\\<turnstile>the (\\<Gamma> p) \\<down> s", "by (cases s)\n     (auto elim: terminates_Normal_elim_cases intro: terminates.intros)"], ["", "lemma terminates_Normal_Call_body:\n \"p \\<in> dom \\<Gamma> \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>Call p \\<down>Normal s = \\<Gamma>\\<turnstile>(the (\\<Gamma> p))\\<down>Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> dom \\<Gamma> \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Call p \\<down> Normal s =\n    \\<Gamma>\\<turnstile>the (\\<Gamma> p) \\<down> Normal s", "by (auto elim: terminates_Normal_elim_cases intro: terminates.intros)"], ["", "lemma terminates_implies_exec:\n  assumes terminates: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<exists>t. \\<Gamma>\\<turnstile>\\<langle>c,s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. \\<Gamma>\\<turnstile> \\<langle>c,s\\<rangle> \\<Rightarrow> t", "using terminates"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<exists>t. \\<Gamma>\\<turnstile> \\<langle>c,s\\<rangle> \\<Rightarrow> t", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n        s\\<rangle> \\<Rightarrow> t\n 2. \\<And>f s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Basic\n   f,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> t;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<exists>t.\n                \\<Gamma>\\<turnstile> \\<langle>While b\n         c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>While b\n                      c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 18 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n        s\\<rangle> \\<Rightarrow> t\n 2. \\<And>f s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Basic\n   f,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> t;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<exists>t.\n                \\<Gamma>\\<turnstile> \\<langle>While b\n         c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>While b\n                      c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Skip,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Skip,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Basic\n   f,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>While b\n    c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Basic\n   f,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>While b\n    c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 17 subgoals...", "case Basic"], ["proof (state)\nthis:\n  \n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Basic\n   f,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>While b\n    c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Basic\n                                    f_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n         s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>Call\n                      p,Normal s\\<rangle> \\<Rightarrow> t\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n         s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>Call\n                      p,Normal s\\<rangle> \\<Rightarrow> t\nA total of 16 subgoals...", "case (Spec r s)"], ["proof (state)\nthis:\n  \n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Spec\n   r,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n         s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>Call\n                      p,Normal s\\<rangle> \\<Rightarrow> t\nA total of 16 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow> t", "by (cases \"\\<exists>t. (s,t)\\<in> r\") (auto intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Spec r,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>p s.\n        \\<Gamma> p = None \\<Longrightarrow>\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal s\\<rangle> \\<Rightarrow> t\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>p s.\n        \\<Gamma> p = None \\<Longrightarrow>\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal s\\<rangle> \\<Rightarrow> t\nA total of 15 subgoals...", "case Guard"], ["proof (state)\nthis:\n  s_ \\<in> g_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>p s.\n        \\<Gamma> p = None \\<Longrightarrow>\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal s\\<rangle> \\<Rightarrow> t\nA total of 15 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> g_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\nc_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\n                                    c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\nA total of 14 subgoals...", "case GuardFault"], ["proof (state)\nthis:\n  s_ \\<notin> g_\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Guard f g\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> g_\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\nc_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\n                                    c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c\n     s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>DynCom\n                      c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c\n     s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>DynCom\n                      c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 13 subgoals...", "case Fault"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Fault f\\<rangle> \\<Rightarrow> t\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c\n     s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>DynCom\n                      c,Normal s\\<rangle> \\<Rightarrow> t\nA total of 13 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>c_,Fault f_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Fault f_\\<rangle> \\<Rightarrow> t\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n          s\\<rangle> \\<Rightarrow> t\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n          s\\<rangle> \\<Rightarrow> t\nA total of 12 subgoals...", "case Seq"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,s'\\<rangle> \\<Rightarrow> t)\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 10. \\<And>s.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n          s\\<rangle> \\<Rightarrow> t\nA total of 12 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,s'\\<rangle> \\<Rightarrow> t)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1_\nc\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec_Seq')"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1_\n                                    c\\<^sub>2_,Normal\n          s_\\<rangle> \\<Rightarrow> t\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c s.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c s.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\nA total of 11 subgoals...", "case CondTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> t\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 9. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c s.\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\nc\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                    c\\<^sub>2_,Normal\n          s_\\<rangle> \\<Rightarrow> t\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> t;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<exists>t.\n                \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                   s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                      c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> t;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<exists>t.\n                \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                   s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                      c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case CondFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n         s_\\<rangle> \\<Rightarrow> t\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n              s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 8. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<exists>t.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> t;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<exists>t.\n                \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                   s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t.\n                             \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                      c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n         s_\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\nc\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                    c\\<^sub>2_,Normal\n          s_\\<rangle> \\<Rightarrow> t\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case WhileTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal s_\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal\n s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b_ c_ \\<down> s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>While b_\n  c_,s'\\<rangle> \\<Rightarrow> t)\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>While b\n        c,s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>While b\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 7. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal s_\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal\n s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b_ c_ \\<down> s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>While b_\n  c_,s'\\<rangle> \\<Rightarrow> t)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>While b_\nc_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>While b_\n                                    c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 6. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>While b_\nc_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>While b_\n                                    c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case (Call p bdy s)"], ["proof (state)\nthis:\n  \\<Gamma> p = Some bdy\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "then"], ["proof (chain)\npicking this:\n  \\<Gamma> p = Some bdy\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> t", "obtain s' where\n    \"\\<Gamma>\\<turnstile>\\<langle>bdy,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma> p = Some bdy\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "have \"\\<Gamma> p = Some bdy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = Some bdy", "by fact"], ["proof (state)\nthis:\n  \\<Gamma> p = Some bdy\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n        s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Call\n                     p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 5. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma> p = Some bdy", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma> p = Some bdy\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Call\np,Normal s\\<rangle> \\<Rightarrow> t", "by (cases s') (iprover intro: exec.intros)+"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Call p,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case CallUndefined"], ["proof (state)\nthis:\n  \\<Gamma> p_ = None\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Call\n   p,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p_ = None\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Call\np_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Call\n                                    p_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case Stuck"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow> t\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow> t\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case DynCom"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_ s_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\n    s,Normal s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>DynCom\n                     c,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_ s_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>DynCom\nc_,Normal s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                    c_,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case Throw"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n         s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Throw,Normal s_\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case Abrupt"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<exists>t.\n          \\<Gamma>\\<turnstile> \\<langle>c,Abrupt s\\<rangle> \\<Rightarrow> t\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>c_,Abrupt s_\\<rangle> \\<Rightarrow> t", "by (iprover intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Abrupt s_\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "case (Catch c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n     s'\\<rangle> \\<Rightarrow> t)\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n     s'\\<rangle> \\<Rightarrow> t)", "obtain s' where exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n     s'\\<rangle> \\<Rightarrow> t)\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n    s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<exists>t.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> t;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<exists>t.\n               \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                  s'\\<rangle> \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                     c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Catch c1\nc2,Normal s\\<rangle> \\<Rightarrow> t", "proof (cases s')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Normal x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "case (Normal s'')"], ["proof (state)\nthis:\n  s' = Normal s''\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Normal x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 4. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "with exec_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Normal s''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Normal s''\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Catch c1\nc2,Normal s\\<rangle> \\<Rightarrow> t", "by (auto intro!: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                    c2,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "case (Abrupt s'')"], ["proof (state)\nthis:\n  s' = Abrupt s''\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "with exec_c1 Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n     s'\\<rangle> \\<Rightarrow> t)\n  s' = Abrupt s''", "obtain t where \"\\<Gamma>\\<turnstile>\\<langle>c2,Normal s'' \\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<exists>t.\n         \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n     s'\\<rangle> \\<Rightarrow> t)\n  s' = Abrupt s''\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n    s''\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal s''\\<rangle> \\<Rightarrow> t\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 3. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "with exec_c1 Abrupt"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Abrupt s''\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal s''\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Abrupt s''\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal s''\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Catch c1\nc2,Normal s\\<rangle> \\<Rightarrow> t", "by (auto intro: exec.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                    c2,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "case Fault"], ["proof (state)\nthis:\n  s' = Fault x3_\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n            s\\<rangle> \\<Rightarrow> s';\n        s' = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                     c2,Normal s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "with exec_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Fault x3_", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Catch c1\nc2,Normal s\\<rangle> \\<Rightarrow> t", "by (auto intro!: exec.CatchMiss)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                    c2,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "case Stuck"], ["proof (state)\nthis:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n         s\\<rangle> \\<Rightarrow> s';\n     s' = Stuck\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                  c2,Normal s\\<rangle> \\<Rightarrow> t", "with exec_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Stuck", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>\\<turnstile> \\<langle>Catch c1\nc2,Normal s\\<rangle> \\<Rightarrow> t", "by (auto intro!: exec.CatchMiss)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                    c2,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                    c2,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_block:\n\"\\<lbrakk>\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n  \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>block init bdy return\n     c \\<down> Normal s", "apply (unfold block_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom\n     (\\<lambda>s.\n         Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n          (DynCom\n            (\\<lambda>t. Seq (Basic (return s)) (c s t)))) \\<down> Normal s", "apply (fastforce intro: terminates.intros elim!: exec_Normal_elim_cases\n        dest!: not_isAbrD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma terminates_block_elim [cases set, consumes 1]:\nassumes termi: \"\\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\"\nassumes e: \"\\<lbrakk>\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n          \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\n         \\<rbrakk> \\<Longrightarrow> P\"\nshows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "have \"\\<Gamma>\\<turnstile>\\<langle>Basic init,Normal s\\<rangle> \\<Rightarrow> Normal (init s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Basic\n                                   init,Normal\n   s\\<rangle> \\<Rightarrow> Normal (init s)", "by (auto intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 init,Normal\n s\\<rangle> \\<Rightarrow> Normal (init s)\n\ngoal (1 subgoal):\n 1. P", "with termi"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 init,Normal\n s\\<rangle> \\<Rightarrow> Normal (init s)", "have \"\\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 init,Normal\n s\\<rangle> \\<Rightarrow> Normal (init s)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)", "apply (unfold block_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>DynCom\n                                  (\\<lambda>s.\nSeq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))) \\<down> Normal s;\n     \\<Gamma>\\<turnstile> \\<langle>Basic\n                                    init,Normal\n    s\\<rangle> \\<Rightarrow> Normal (init s)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)", "apply (elim terminates_Normal_elim_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>Basic\n      init,Normal s\\<rangle> \\<Rightarrow> Normal (init s);\n     \\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n (Seq (Basic (return s))\n   Throw),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>DynCom\n                             (\\<lambda>t.\n                                 Seq (Basic (return s)) (c s t)) \\<down> s';\n     \\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>Seq (Basic init)\n bdy,Normal s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>Seq (Basic (return s)) Throw \\<down> Normal s';\n     \\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n init,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> s'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\n\ngoal (1 subgoal):\n 1. P", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\n\ngoal (1 subgoal):\n 1. P", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\n\ngoal (1 subgoal):\n 1. P", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "assume exec_bdy: \"\\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     (init\n s)\\<rangle> \\<Rightarrow> Normal t\n\ngoal (1 subgoal):\n 1. P", "have \"\\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)", "from exec_bdy"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     (init\n s)\\<rangle> \\<Rightarrow> Normal t", "have \"\\<Gamma>\\<turnstile>\\<langle>Catch (Seq (Basic init) bdy)\n                               (Seq (Basic (return s)) Throw),Normal s\\<rangle> \\<Rightarrow> Normal t\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     (init\n s)\\<rangle> \\<Rightarrow> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n                                   (Seq (Basic (return s))\n                                     Throw),Normal\n       s\\<rangle> \\<Rightarrow> Normal t", "by (fastforce intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n                                 (Seq (Basic (return s))\n                                   Throw),Normal\n     s\\<rangle> \\<Rightarrow> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)", "with termi"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n                                 (Seq (Basic (return s))\n                                   Throw),Normal\n     s\\<rangle> \\<Rightarrow> Normal t", "have \"\\<Gamma>\\<turnstile>DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)) \\<down> Normal t\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>block init bdy return c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n                                 (Seq (Basic (return s))\n                                   Throw),Normal\n     s\\<rangle> \\<Rightarrow> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom\n                         (\\<lambda>t.\n                             Seq (Basic (return s))\n                              (c s t)) \\<down> Normal t", "apply (unfold block_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>DynCom\n                                  (\\<lambda>s.\nSeq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))) \\<down> Normal s;\n     \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n                                    (Seq (Basic (return s))\nThrow),Normal s\\<rangle> \\<Rightarrow> Normal t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom\n     (\\<lambda>t. Seq (Basic (return s)) (c s t)) \\<down> Normal t", "apply (elim terminates_Normal_elim_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n      (Seq (Basic (return s))\n        Throw),Normal s\\<rangle> \\<Rightarrow> Normal t;\n     \\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>Catch (Seq (Basic init) bdy)\n (Seq (Basic (return s))\n   Throw),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>DynCom\n                             (\\<lambda>t.\n                                 Seq (Basic (return s)) (c s t)) \\<down> s';\n     \\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>Seq (Basic init)\n bdy,Normal s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>Seq (Basic (return s)) Throw \\<down> Normal s';\n     \\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n init,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> s'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom\n     (\\<lambda>t. Seq (Basic (return s)) (c s t)) \\<down> Normal t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom\n                       (\\<lambda>t.\n                           Seq (Basic (return s)) (c s t)) \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>DynCom\n                       (\\<lambda>t.\n                           Seq (Basic (return s)) (c s t)) \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)", "apply (elim terminates_Normal_elim_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s'.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\n(return s),Normal t\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n       \\<Gamma>\\<turnstile>c s t \\<down> s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)", "apply (auto intro: exec.intros)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\n\ngoal (1 subgoal):\n 1. P", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     (init\n s)\\<rangle> \\<Rightarrow> Normal ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c s ?t2 \\<down> Normal (return s ?t2)\n\ngoal (1 subgoal):\n 1. P", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     (init\n s)\\<rangle> \\<Rightarrow> Normal ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c s ?t2 \\<down> Normal (return s ?t2)", "show P"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     (init\n s)\\<rangle> \\<Rightarrow> Normal ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c s ?t2 \\<down> Normal (return s ?t2)\n\ngoal (1 subgoal):\n 1. P", "by (iprover intro: e)"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_call:\n\"\\<lbrakk>\\<Gamma> p = Some bdy; \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n  \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>call init p return c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> p = Some bdy;\n     \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>call init p return\n     c \\<down> Normal s", "apply (unfold call_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> p = Some bdy;\n     \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>block init (Call p) return\n     c \\<down> Normal s", "apply (rule terminates_block)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma> p = Some bdy;\n     \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal (init s)\n 2. \\<lbrakk>\\<Gamma> p = Some bdy;\n     \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Call\n                  p,Normal\n                     (init\n                       s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n                         \\<Gamma>\\<turnstile>c s\n        t \\<down> Normal (return s t)", "apply  (iprover intro: terminates.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> p = Some bdy;\n     \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t.\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n        \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>t.\n                         \\<Gamma>\\<turnstile> \\<langle>Call\n                  p,Normal\n                     (init\n                       s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n                         \\<Gamma>\\<turnstile>c s\n        t \\<down> Normal (return s t)", "apply (auto elim: exec_Normal_elim_cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma terminates_callUndefined:\n\"\\<lbrakk>\\<Gamma> p = None\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>call init p return result \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = None \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>call init p return result \\<down> Normal s", "apply (unfold call_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = None \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>block init (Call p) return result \\<down> Normal s", "apply (rule terminates_block)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma> p = None \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Call p \\<down> Normal (init s)\n 2. \\<Gamma> p = None \\<Longrightarrow>\n    \\<forall>t.\n       \\<Gamma>\\<turnstile> \\<langle>Call\np,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n       \\<Gamma>\\<turnstile>result s t \\<down> Normal (return s t)", "apply  (iprover intro: terminates.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = None \\<Longrightarrow>\n    \\<forall>t.\n       \\<Gamma>\\<turnstile> \\<langle>Call\np,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n       \\<Gamma>\\<turnstile>result s t \\<down> Normal (return s t)", "apply (auto elim: exec_Normal_elim_cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma terminates_call_elim [cases set, consumes 1]:\nassumes termi: \"\\<Gamma>\\<turnstile>call init p return c \\<down> Normal s\"\nassumes bdy: \"\\<And>bdy. \\<lbrakk>\\<Gamma> p = Some bdy; \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s);\n     \\<forall>t. \\<Gamma>\\<turnstile>\\<langle>bdy,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow> \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk> \\<Longrightarrow> P\"\nassumes undef: \"\\<lbrakk>\\<Gamma> p = None\\<rbrakk> \\<Longrightarrow> P\"\nshows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "apply (cases \"\\<Gamma> p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma> p = None \\<Longrightarrow> P\n 2. \\<And>a. \\<Gamma> p = Some a \\<Longrightarrow> P", "apply  (erule undef)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. \\<Gamma> p = Some a \\<Longrightarrow> P", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>call init p return c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a. \\<Gamma> p = Some a \\<Longrightarrow> P", "apply (unfold call_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<Gamma>\\<turnstile>block init (Call p) return\n                             c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> P", "apply (erule terminates_block_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<Gamma>\\<turnstile>Call p \\<down> Normal (init s);\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t)\\<rbrakk>\n       \\<Longrightarrow> P", "apply (erule terminates_Normal_elim_cases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a bdy.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal (init s)\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = None\\<rbrakk>\n       \\<Longrightarrow> P", "apply  simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>\\<forall>t.\n                   \\<Gamma>\\<turnstile> \\<langle>Call\n            p,Normal\n               (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = Some a;\n        \\<Gamma>\\<turnstile>a \\<down> Normal (init s)\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = None\\<rbrakk>\n       \\<Longrightarrow> P", "apply  (frule (1) bdy)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>\\<forall>t.\n                   \\<Gamma>\\<turnstile> \\<langle>Call\n            p,Normal\n               (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = Some a;\n        \\<Gamma>\\<turnstile>a \\<down> Normal (init s)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t.\n                            \\<Gamma>\\<turnstile> \\<langle>a,Normal\n                       (init\n                         s)\\<rangle> \\<Rightarrow> Normal\n              t \\<longrightarrow>\n                            \\<Gamma>\\<turnstile>c s\n           t \\<down> Normal (return s t)\n 2. \\<And>a.\n       \\<lbrakk>\\<forall>t.\n                   \\<Gamma>\\<turnstile> \\<langle>Call\n            p,Normal\n               (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = Some a; \\<Gamma>\\<turnstile>a \\<down> Normal (init s);\n        P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = None\\<rbrakk>\n       \\<Longrightarrow> P", "apply   (fastforce intro: exec.intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>\\<forall>t.\n                   \\<Gamma>\\<turnstile> \\<langle>Call\n            p,Normal\n               (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = Some a; \\<Gamma>\\<turnstile>a \\<down> Normal (init s);\n        P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = None\\<rbrakk>\n       \\<Longrightarrow> P", "apply  assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<Gamma> p = Some a;\n        \\<forall>t.\n           \\<Gamma>\\<turnstile> \\<langle>Call\n    p,Normal (init s)\\<rangle> \\<Rightarrow> Normal t \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c s t \\<down> Normal (return s t);\n        \\<Gamma> p = None\\<rbrakk>\n       \\<Longrightarrow> P", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma terminates_dynCall:\n\"\\<lbrakk>\\<Gamma>\\<turnstile>call init (p s) return c \\<down> Normal s\\<rbrakk>\n \\<Longrightarrow> \\<Gamma>\\<turnstile>dynCall init p return c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>call init (p s) return\n                         c \\<down> Normal s \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>dynCall init p return c \\<down> Normal s", "apply (unfold dynCall_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>call init (p s) return\n                         c \\<down> Normal s \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>DynCom\n                         (\\<lambda>s.\n                             call init (p s) return c) \\<down> Normal s", "apply (auto intro: terminates.intros terminates_call)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma terminates_dynCall_elim [cases set, consumes 1]:\nassumes termi: \"\\<Gamma>\\<turnstile>dynCall init p return c \\<down> Normal s\"\nassumes \"\\<lbrakk>\\<Gamma>\\<turnstile>call init (p s) return c \\<down> Normal s\\<rbrakk> \\<Longrightarrow> P\"\nshows P"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>dynCall init p return c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. P", "apply (unfold dynCall_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom\n                         (\\<lambda>s.\n                             call init (p s) return\n                              c) \\<down> Normal s \\<Longrightarrow>\n    P", "apply (elim terminates_Normal_elim_cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>call init (p s) return\n                         c \\<down> Normal s \\<Longrightarrow>\n    P", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{const \"sequence\"}, @{const \"flatten\"} and\n @{const \"normalize\"}\\<close>"], ["", "(* ************************************************************************ *)"], ["", "lemma terminates_sequence_app:\n  \"\\<And>s. \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s;\n        \\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n\\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (xs @ ys) \\<down> Normal s", "proof (induct xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    [],Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ([] @ ys) \\<down> Normal s\n 2. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "case Nil"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    [],Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    [],Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ([] @ ys) \\<down> Normal s\n 2. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    [],Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ([] @ ys) \\<down> Normal s", "by (auto intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ([] @ ys) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal ?s;\n   \\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   ?s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n   (xs @ ys) \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    (x #\n                                     xs),Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "have termi_x_xs: \"\\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "have termi_ys: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq (x # xs),Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow> \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s'.\n       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n(x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "by fact"], ["proof (state)\nthis:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    (x #\n                                     xs),Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq\n           xs \\<down> Normal s;\n                    \\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq\n      ys \\<down> s'\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n                    (xs @ ys) \\<down> Normal s;\n        \\<Gamma>\\<turnstile>sequence Seq (a # xs) \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (a # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        ((a # xs) @ ys) \\<down> Normal s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "proof (cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "case Nil"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "with termi_x_xs termi_ys"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    (x #\n                                     xs),Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n  xs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    (x #\n                                     xs),Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "by (cases ys) (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "case Cons"], ["proof (state)\nthis:\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "from termi_x_xs Cons"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  xs = a_ # list_", "have \"\\<Gamma>\\<turnstile>x \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>x \\<down> Normal s", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "assume exec_x: \"\\<Gamma>\\<turnstile>\\<langle>x,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "from exec_x termi_x_xs Cons"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  xs = a_ # list_", "have termi_xs: \"\\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "proof (cases s')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s' = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 4. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "case (Normal s'')"], ["proof (state)\nthis:\n  s' = Normal s''\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s' = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 4. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "with exec_x termi_ys Cons"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    (x #\n                                     xs),Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n  xs = a_ # list_\n  s' = Normal s''", "have \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s'' \\<rangle> \\<Rightarrow> s' \\<longrightarrow> \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    (x #\n                                     xs),Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n  xs = a_ # list_\n  s' = Normal s''\n\ngoal (1 subgoal):\n 1. \\<forall>s'.\n       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\nxs,Normal s''\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "by (auto intro: exec.intros)"], ["proof (state)\nthis:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                    xs,Normal\n  s''\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s' = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 4. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "from Cons.hyps [OF termi_xs [simplified Normal] this]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''", "have \"\\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s' = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 4. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "with Normal"], ["proof (chain)\npicking this:\n  s' = Normal s''\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''", "show ?thesis"], ["proof (prove)\nusing this:\n  s' = Normal s''\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "case Abrupt"], ["proof (state)\nthis:\n  s' = Abrupt x2_\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 3. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "case Fault"], ["proof (state)\nthis:\n  s' = Fault x3_\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n 2. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (1 subgoal):\n 1. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "case Stuck"], ["proof (state)\nthis:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> ?s'2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "using Cons"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> ?s'2\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_sequence_appD:\n  \"\\<And>s. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s\n   \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s \\<and>\n       (\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "proof (induct xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            ([] @ ys) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    [],Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n 2. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>sequence Seq\n  xs \\<down> Normal s \\<and>\n                   (\\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s');\n        \\<Gamma>\\<turnstile>sequence Seq\n                             ((a # xs) @ ys) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (a # xs) \\<down> Normal s \\<and>\n                         (\\<forall>s'.\n                             \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                      (a #\n                       xs),Normal\n                            s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                             \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "case Nil"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ([] @ ys) \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            ([] @ ys) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    [],Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n 2. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>sequence Seq\n  xs \\<down> Normal s \\<and>\n                   (\\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s');\n        \\<Gamma>\\<turnstile>sequence Seq\n                             ((a # xs) @ ys) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (a # xs) \\<down> Normal s \\<and>\n                         (\\<forall>s'.\n                             \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                      (a #\n                       xs),Normal\n                            s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                             \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq ([] @ ys) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n [],Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "by (auto elim: terminates_Normal_elim_cases exec_Normal_elim_cases\n         intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq [] \\<down> Normal s \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     [],Normal\n   s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>sequence Seq\n  xs \\<down> Normal s \\<and>\n                   (\\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s');\n        \\<Gamma>\\<turnstile>sequence Seq\n                             ((a # xs) @ ys) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (a # xs) \\<down> Normal s \\<and>\n                         (\\<forall>s'.\n                             \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                      (a #\n                       xs),Normal\n                            s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                             \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>sequence Seq\n  xs \\<down> Normal s \\<and>\n                   (\\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s');\n        \\<Gamma>\\<turnstile>sequence Seq\n                             ((a # xs) @ ys) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (a # xs) \\<down> Normal s \\<and>\n                         (\\<forall>s'.\n                             \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                      (a #\n                       xs),Normal\n                            s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                             \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (xs @ ys) \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal ?s \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   ?s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>sequence Seq\n  xs \\<down> Normal s \\<and>\n                   (\\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s');\n        \\<Gamma>\\<turnstile>sequence Seq\n                             ((a # xs) @ ys) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (a # xs) \\<down> Normal s \\<and>\n                         (\\<forall>s'.\n                             \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                      (a #\n                       xs),Normal\n                            s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                             \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "have termi_x_xs_ys: \"\\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a xs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (xs @ ys) \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>sequence Seq\n  xs \\<down> Normal s \\<and>\n                   (\\<forall>s'.\n                       \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s');\n        \\<Gamma>\\<turnstile>sequence Seq\n                             ((a # xs) @ ys) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>sequence Seq\n        (a # xs) \\<down> Normal s \\<and>\n                         (\\<forall>s'.\n                             \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                      (a #\n                       xs),Normal\n                            s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                             \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "proof (cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "case Nil"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "with termi_x_xs_ys"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n  xs = []", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "by (cases ys)\n         (auto elim: terminates_Normal_elim_cases exec_Normal_elim_cases\n           intro:  terminates_Skip')"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     (x #\nxs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "case Cons"], ["proof (state)\nthis:\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "with termi_x_xs_ys"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n  xs = a_ # list_", "obtain termi_x: \"\\<Gamma>\\<turnstile>x \\<down> Normal s\" and\n           termi_xs_ys: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>x,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq (xs@ys) \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq ((x # xs) @ ys) \\<down> Normal s\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>x \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>x,Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>x,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "have \"\\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s", "proof (rule terminates.Seq [rule_format])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>x \\<down> Normal s\n 2. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>x,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "show \"\\<Gamma>\\<turnstile>x \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>x \\<down> Normal s", "by (rule termi_x)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>x \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>x,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>x,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>x,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "assume exec_x: \"\\<Gamma>\\<turnstile>\\<langle>x,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>x,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "show \"\\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "from termi_xs_ys [rule_format, OF exec_x]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "have termi_xs_ys': \"\\<Gamma>\\<turnstile>sequence Seq (xs@ys) \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "proof (cases s')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s' = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 3. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 4. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "case (Normal s'')"], ["proof (state)\nthis:\n  s' = Normal s''\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s' = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 3. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 4. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "from Cons.hyps [OF termi_xs_ys' [simplified Normal]]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s'' \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   s''\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s'' \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   s''\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "using Normal"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s'' \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   s''\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n  s' = Normal s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 3. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 3. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "case Abrupt"], ["proof (state)\nthis:\n  s' = Abrupt x2_\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s' = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 3. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "case Fault"], ["proof (state)\nthis:\n  s' = Fault x3_\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s' = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n 2. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal (1 subgoal):\n 1. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "case Stuck"], ["proof (state)\nthis:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. s' = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "assume exec_x_xs: \"\\<Gamma>\\<turnstile>\\<langle>Seq x (sequence Seq xs),Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "have \"\\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "from exec_x_xs"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal s\\<rangle> \\<Rightarrow> s'", "obtain t where\n          exec_x: \"\\<Gamma>\\<turnstile>\\<langle>x,Normal s \\<rangle> \\<Rightarrow> t\" and\n          exec_xs: \"\\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,t \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>x,Normal\n            s\\<rangle> \\<Rightarrow> t;\n         \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n  xs,t\\<rangle> \\<Rightarrow> s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by cases"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "proof (cases t)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 4. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "case (Normal t')"], ["proof (state)\nthis:\n  t = Normal t'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 4. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "with exec_x termi_xs_ys"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>x,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n  t = Normal t'", "have \"\\<Gamma>\\<turnstile>sequence Seq (xs@ys) \\<down> Normal t'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>x,Normal s\\<rangle> \\<Rightarrow> t\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>x,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> s'\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal t'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal t'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 4. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "from Cons.hyps [OF this] exec_xs Normal"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal t' \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Normal t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal t' \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     xs,Normal\n   t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "case (Abrupt t')"], ["proof (state)\nthis:\n  t = Abrupt t'\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "with exec_xs"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Abrupt t'", "have \"s'=Abrupt t'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Abrupt t'\n\ngoal (1 subgoal):\n 1. s' = Abrupt t'", "by (auto dest: Abrupt_end)"], ["proof (state)\nthis:\n  s' = Abrupt t'\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 3. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Abrupt t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "case (Fault f)"], ["proof (state)\nthis:\n  t = Fault f\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "with exec_xs"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Fault f", "have \"s'=Fault f\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Fault f\n\ngoal (1 subgoal):\n 1. s' = Fault f", "by (auto dest: Fault_end)"], ["proof (state)\nthis:\n  s' = Fault f\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n 2. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Fault f\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (1 subgoal):\n 1. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "case Stuck"], ["proof (state)\nthis:\n  t = Stuck\n\ngoal (1 subgoal):\n 1. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "with exec_xs"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Stuck", "have \"s'=Stuck\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq xs,t\\<rangle> \\<Rightarrow> s'\n  t = Stuck\n\ngoal (1 subgoal):\n 1. s' = Stuck", "by (auto dest: Stuck_end)"], ["proof (state)\nthis:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. t = Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal\n  s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n       (\\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n    (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal\n  s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> ?s'2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal\n  s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "using Cons"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Seq x (sequence Seq xs) \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Seq x\n                                 (sequence Seq\n                                   xs),Normal\n  s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> ?s'2\n  xs = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n    (\\<forall>s'.\n        \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n (x # xs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n        \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     (x #\nxs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (x # xs) \\<down> Normal s \\<and>\n  (\\<forall>s'.\n      \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                     (x #\nxs),Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n      \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_sequence_appE [consumes 1]:\n  \"\\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s;\n    \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s;\n     \\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>sequence Seq xs,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>  \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk> \\<Longrightarrow> P\\<rbrakk>\n   \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq (xs @ ys) \\<down> Normal s;\n     \\<lbrakk>\\<Gamma>\\<turnstile>sequence Seq xs \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n  xs,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>sequence Seq ys \\<down> s'\\<rbrakk>\n     \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto dest: terminates_sequence_appD)"], ["", "lemma terminates_to_terminates_sequence_flatten:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>sequence Seq (flatten c)\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (flatten c) \\<down> s", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (flatten c) \\<down> s", "by (induct)\n   (auto intro: terminates.intros terminates_sequence_app\n     exec_sequence_flatten_to_exec)"], ["", "lemma terminates_to_terminates_normalize:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>normalize c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize c \\<down> s", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize c \\<down> s", "proof induct"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>Language.normalize\n                                 (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "case Seq"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>1_ \\<down> Normal s_\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>2_ \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>Language.normalize\n                                 (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>1_ \\<down> Normal s_\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>2_ \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize\n                         (Seq c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_", "by (fastforce intro: terminates.intros terminates_sequence_app\n                 terminates_to_terminates_sequence_flatten\n        dest: exec_sequence_flatten_to_exec exec_normalize_to_exec)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize\n                       (Seq c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>Language.normalize\n                                (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>Language.normalize\n                                (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\nA total of 17 subgoals...", "case WhileTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>Language.normalize c_ \\<down> Normal s_\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal\n s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b_ c_ \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>Language.normalize (While b_ c_) \\<down> s'\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>Language.normalize\n                                (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>Language.normalize c_ \\<down> Normal s_\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal\n s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b_ c_ \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>Language.normalize (While b_ c_) \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize (While b_ c_) \\<down> Normal s_", "by (fastforce intro: terminates.intros terminates_sequence_app\n                 terminates_to_terminates_sequence_flatten\n        dest: exec_sequence_flatten_to_exec exec_normalize_to_exec)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize (While b_ c_) \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "case Catch"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>1_ \\<down> Normal s_\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>2_ \\<down> Normal s'\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>1_ \\<down> Normal s_\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n         s_\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>Language.normalize c\\<^sub>2_ \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize\n                         (Catch c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_", "by (fastforce intro: terminates.intros terminates_sequence_app\n                 terminates_to_terminates_sequence_flatten\n        dest: exec_sequence_flatten_to_exec exec_normalize_to_exec)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize\n                       (Catch c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile>Language.normalize (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile>Language.normalize (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>Language.normalize c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Language.normalize\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "qed (auto intro: terminates.intros)"], ["", "lemma terminates_sequence_flatten_to_terminates:\n  shows \"\\<And>s. \\<Gamma>\\<turnstile>sequence Seq (flatten c)\\<down>s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten c) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> s", "proof (induct c)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten Skip) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Basic x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Spec x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Seq c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Cond x1 c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (While x1 c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Call x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>sequence Seq\n   (flatten xa) \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (DynCom x)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Guard x1 x2a c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten Throw) \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten (Seq c1 c2)) \\<down> s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten Skip) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Basic x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Spec x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Seq c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Cond x1 c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (While x1 c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Call x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>sequence Seq\n   (flatten xa) \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (DynCom x)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Guard x1 x2a c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten Throw) \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "have \"\\<Gamma>\\<turnstile>sequence Seq (flatten (Seq c1 c2)) \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (flatten (Seq c1 c2)) \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten (Seq c1 c2)) \\<down> s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten Skip) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Basic x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Spec x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Seq c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Cond x1 c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (While x1 c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Call x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>sequence Seq\n   (flatten xa) \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (DynCom x)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Guard x1 x2a c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten Throw) \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "hence termi_app: \"\\<Gamma>\\<turnstile>sequence Seq (flatten c1 @ flatten c2) \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten (Seq c1 c2)) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (flatten c1 @ flatten c2) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1 @ flatten c2) \\<down> s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten Skip) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Basic x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Spec x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Seq c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Cond x1 c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (While x1 c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Call x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>sequence Seq\n   (flatten xa) \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (DynCom x)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Guard x1 x2a c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten Throw) \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "proof (cases s)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "case (Normal s')"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "have \"\\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'", "proof (rule terminates.Seq [rule_format])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n 2. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from termi_app [simplified Normal]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten c1 @ flatten c2) \\<down> Normal s'", "have \"\\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten c1 @ flatten c2) \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> Normal s'", "by (cases rule: terminates_sequence_appE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> Normal s'\n\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n 2. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "with Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> Normal s'", "show \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "fix s''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "assume \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s' \\<rangle> \\<Rightarrow> s''\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from termi_app [simplified Normal] exec_to_exec_sequence_flatten [OF this]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten c1 @ flatten c2) \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                 (flatten\n                                   c1),Normal s'\\<rangle> \\<Rightarrow> s''", "have \"\\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten c1 @ flatten c2) \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                 (flatten\n                                   c1),Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> s''", "by (cases rule: terminates_sequence_appE) auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> s''\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "with Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> s''", "show \"\\<Gamma>\\<turnstile>c2 \\<down> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c1) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>sequence Seq (flatten c2) \\<down> s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "with Normal"], ["proof (chain)\npicking this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "qed (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten Skip) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Basic x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Spec x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c1) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>sequence Seq\n                                (flatten c2) \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Cond x1 c1 c2)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (While x1 c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten (Call x)) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>sequence Seq\n   (flatten xa) \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (DynCom x)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>sequence Seq\n  (flatten c) \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>sequence Seq\n                             (flatten (Guard x1 x2a c)) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>sequence Seq\n                            (flatten Throw) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>sequence Seq\n   (flatten c1) \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>sequence Seq\n                                 (flatten c2) \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>sequence Seq\n                              (flatten (Catch c1 c2)) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "qed (auto intro: terminates.intros)"], ["", "lemma terminates_normalize_to_terminates:\n  shows \"\\<And>s. \\<Gamma>\\<turnstile>normalize c\\<down>s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize c \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> s", "proof (induct c)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Skip \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>Language.normalize\n                             Throw \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Skip \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>Language.normalize\n                             Throw \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize Skip \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Skip \\<down> s", "by (auto intro:  terminates_Skip')"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Skip \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>Language.normalize\n   c1 \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>Language.normalize\n                                 c2 \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              (Catch c1 c2) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>Language.normalize\n   c1 \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>Language.normalize\n                                 c2 \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              (Catch c1 c2) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize (Basic x_) \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>Language.normalize\n   c1 \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>Language.normalize\n                                 c2 \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>Language.normalize\n                              (Catch c1 c2) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize (Basic x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Basic x_ \\<down> s", "by (cases s) (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Basic x_ \\<down> s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize (Spec x_) \\<down> s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize (Spec x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Spec x_ \\<down> s", "by (cases s) (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Spec x_ \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Seq c1 c2) \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "have \"\\<Gamma>\\<turnstile>normalize (Seq c1 c2) \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize (Seq c1 c2) \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize (Seq c1 c2) \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "hence termi_app: \"\\<Gamma>\\<turnstile>sequence Seq (flatten (normalize c1) @ flatten (normalize c2)) \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize (Seq c1 c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq\n                         (flatten (Language.normalize c1) @\n                          flatten (Language.normalize c2)) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c1) @\n                        flatten (Language.normalize c2)) \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "proof (cases s)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "case (Normal s')"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "have \"\\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'", "proof (rule terminates.Seq [rule_format])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n 2. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from termi_app [simplified Normal]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c1) @\n                        flatten (Language.normalize c2)) \\<down> Normal s'", "have \"\\<Gamma>\\<turnstile>sequence Seq (flatten (normalize c1))  \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c1) @\n                        flatten (Language.normalize c2)) \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq\n                         (flatten (Language.normalize c1)) \\<down> Normal s'", "by (cases rule: terminates_sequence_appE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c1)) \\<down> Normal s'\n\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n 2. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from terminates_sequence_flatten_to_terminates [OF this] Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s", "show \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "fix s''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "assume \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s' \\<rangle> \\<Rightarrow> s''\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from exec_to_exec_normalize [OF this]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''", "have \"\\<Gamma>\\<turnstile>\\<langle>normalize c1,Normal s' \\<rangle> \\<Rightarrow> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                   c1,Normal s'\\<rangle> \\<Rightarrow> s''", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from termi_app [simplified Normal] exec_to_exec_sequence_flatten [OF this]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c1) @\n                        flatten (Language.normalize c2)) \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                 (flatten\n                                   (Language.normalize\n                                     c1)),Normal\n     s'\\<rangle> \\<Rightarrow> s''", "have \"\\<Gamma>\\<turnstile>sequence Seq (flatten (normalize c2))  \\<down> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c1) @\n                        flatten (Language.normalize c2)) \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>sequence Seq\n                                 (flatten\n                                   (Language.normalize\n                                     c1)),Normal\n     s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>sequence Seq\n                         (flatten (Language.normalize c2)) \\<down> s''", "by (cases rule: terminates_sequence_appE) auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sequence Seq\n                       (flatten (Language.normalize c2)) \\<down> s''\n\ngoal (1 subgoal):\n 1. \\<And>s'a.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s'\\<rangle> \\<Rightarrow> s'a \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'a", "from terminates_sequence_flatten_to_terminates [OF this] Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> s''\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s", "show \"\\<Gamma>\\<turnstile>c2 \\<down> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> s''\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "with Normal"], ["proof (chain)\npicking this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "qed (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (Cond b c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Cond b c1 c2) \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Cond b c1 c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "by (cases s)\n       (auto intro: terminates.intros elim!: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (While b c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize c \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "have \"\\<Gamma>\\<turnstile>normalize (While b c) \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "hence termi_norm_w: \"\\<Gamma>\\<turnstile>While b (normalize c) \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize (While b c) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b (Language.normalize c) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b (Language.normalize c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b (Language.normalize c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "fix t w"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume termi_w: \"\\<Gamma>\\<turnstile> w \\<down> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>w \\<down> t\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "have \"w=While b (normalize c) \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = While b (Language.normalize c) \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> t", "using termi_w"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>w \\<down> t\n\ngoal (1 subgoal):\n 1. w = While b (Language.normalize c) \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> t", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (Language.normalize c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (Language.normalize c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case (WhileTrue t' b' c')"], ["proof (state)\nthis:\n  t' \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal t'\n  c' = While b (Language.normalize c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = While b (Language.normalize c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = While b (Language.normalize c)\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (Language.normalize c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (Language.normalize c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "from WhileTrue"], ["proof (chain)\npicking this:\n  t' \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal t'\n  c' = While b (Language.normalize c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = While b (Language.normalize c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = While b (Language.normalize c)", "obtain\n        t'_b: \"t' \\<in> b\" and\n        termi_norm_c: \"\\<Gamma>\\<turnstile>normalize c \\<down> Normal t'\" and\n        termi_norm_w': \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>normalize c,Normal t' \\<rangle> \\<Rightarrow> s' \\<longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\""], ["proof (prove)\nusing this:\n  t' \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal t'\n  c' = While b (Language.normalize c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = While b (Language.normalize c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = While b (Language.normalize c)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>t' \\<in> b;\n      \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal t';\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n  c,Normal t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t' \\<in> b\n  \\<Gamma>\\<turnstile>Language.normalize c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                    c,Normal\n t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (Language.normalize c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (Language.normalize c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "from While.hyps [OF termi_norm_c]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'", "have \"\\<Gamma>\\<turnstile>c \\<down> Normal t'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal t'", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (Language.normalize c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (Language.normalize c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (Language.normalize c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (Language.normalize c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "from termi_norm_w'"], ["proof (chain)\npicking this:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                    c,Normal\n t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'", "have \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>c,Normal t' \\<rangle> \\<Rightarrow> s' \\<longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>Language.normalize\n                                    c,Normal\n t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<forall>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  t'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> s'", "by (auto intro: exec_to_exec_normalize)"], ["proof (state)\nthis:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\nt'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (Language.normalize c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (Language.normalize c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\nt'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\nt'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal t'", "using t'_b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal t'\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\nt'\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n  t' \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal t'", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal t'\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (Language.normalize c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (Language.normalize c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (Language.normalize c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 =\n        While b (Language.normalize c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = While b (Language.normalize c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "qed (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  w = While b (Language.normalize c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> t\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>?w2 \\<down> ?t2;\n   ?w2 = While b (Language.normalize c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> ?t2\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "from this [OF termi_norm_w]"], ["proof (chain)\npicking this:\n  While b (Language.normalize c) =\n  While b (Language.normalize c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> s", "show ?case"], ["proof (prove)\nusing this:\n  While b (Language.normalize c) =\n  While b (Language.normalize c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize (Call x_) \\<down> s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize (Call x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call x_ \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call x_ \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case DynCom"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>Language.normalize ?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (DynCom x_) \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>Language.normalize\n   xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>Language.normalize ?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (DynCom x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom x_ \\<down> s", "by (cases s) (auto intro: terminates.intros rangeI elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom x_ \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Guard"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize c_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Guard x1_ x2a_ c_) \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize c_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Guard x1_ x2a_ c_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard x1_ x2a_ c_ \\<down> s", "by (cases s) (auto intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard x1_ x2a_ c_ \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize Throw \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>Language.normalize\n                            Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize Throw \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Throw \\<down> s", "by (cases s) (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Throw \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Catch"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Language.normalize c1_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1_ \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2_ \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Catch c1_ c2_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>Language.normalize\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>Language.normalize\n                                c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>Language.normalize\n                             (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Language.normalize c1_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1_ \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize c2_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2_ \\<down> ?s\n  \\<Gamma>\\<turnstile>Language.normalize (Catch c1_ c2_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1_ c2_ \\<down> s", "by (cases s)\n       (auto dest: exec_to_exec_normalize elim!: terminates_Normal_elim_cases\n         intro!: terminates.Catch)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1_ c2_ \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_iff_terminates_normalize:\n\"\\<Gamma>\\<turnstile>normalize c\\<down>s = \\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Language.normalize c \\<down> s =\n    \\<Gamma>\\<turnstile>c \\<down> s", "by (auto intro: terminates_to_terminates_normalize\n    terminates_normalize_to_terminates)"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{const \"strip_guards\"}\\<close>"], ["", "(* ************************************************************************* *)"], ["", "lemma terminates_strip_guards_to_terminates: \"\\<And>s. \\<Gamma>\\<turnstile>strip_guards F c\\<down>s  \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> s", "proof (induct c)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Skip \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Skip \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>strip_guards F\n   c1 \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>strip_guards F\n                                 c2 \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>strip_guards F\n   c1 \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>strip_guards F\n                                 c2 \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Basic x_) \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Basic x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>strip_guards F\n   c1 \\<down> s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>strip_guards F\n                                 c2 \\<down> s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> s;\n         \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F (Basic x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Basic x_ \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Basic x_ \\<down> s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Spec x_) \\<down> s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Spec x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F (Spec x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Spec x_ \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Spec x_ \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "hence \"\\<Gamma>\\<turnstile>Seq (strip_guards F c1) (strip_guards F c2) \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq (strip_guards F c1)\n                         (strip_guards F c2) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq (strip_guards F c1) (strip_guards F c2) \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus \"\\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Seq (strip_guards F c1) (strip_guards F c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "proof (cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "fix f"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume \"s=Fault f\""], ["proof (state)\nthis:\n  s = Fault f\n\ngoal (4 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 4. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault f\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume \"s=Stuck\""], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume \"s=Abrupt s'\""], ["proof (state)\nthis:\n  s = Abrupt s'\n\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume s: \"s=Normal s'\""], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume \"\\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "hence \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'", "by (rule Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume c2:\n      \"\\<forall>s''. \\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow> \\<Gamma>\\<turnstile>strip_guards F c2\\<down>s''\""], ["proof (state)\nthis:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "{"], ["proof (state)\nthis:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "fix s''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s' \\<rangle> \\<Rightarrow> s''\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "have \" \\<Gamma>\\<turnstile>c2 \\<down> s''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "proof (cases s'')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s'' = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 4. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "case (Normal s''')"], ["proof (state)\nthis:\n  s'' = Normal s'''\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s'' = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 4. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "with exec_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n  s'' = Normal s'''", "have \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s' \\<rangle> \\<Rightarrow> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n  s'' = Normal s'''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                   c1,Normal s'\\<rangle> \\<Rightarrow> s''", "by (auto intro: exec_to_exec_strip_guards)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s'' = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 4. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "with c2"], ["proof (chain)\npicking this:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s''\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s''\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "by (iprover intro: Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "case (Abrupt s''')"], ["proof (state)\nthis:\n  s'' = Abrupt s'''\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "with exec_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n  s'' = Abrupt s'''", "have \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s' \\<rangle> \\<Rightarrow> s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s'\\<rangle> \\<Rightarrow> s''\n  s'' = Abrupt s'''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                   c1,Normal s'\\<rangle> \\<Rightarrow> s''", "by (auto intro: exec_to_exec_strip_guards )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (3 subgoals):\n 1. \\<And>x2.\n       s'' = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 3. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "with c2"], ["proof (chain)\npicking this:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s''\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s''\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s'\\<rangle> \\<Rightarrow> s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "by (iprover intro: Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "case Fault"], ["proof (state)\nthis:\n  s'' = Fault x3_\n\ngoal (2 subgoals):\n 1. \\<And>x3.\n       s'' = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''\n 2. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "thus ?thesis"], ["proof (prove)\nusing this:\n  s'' = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal (1 subgoal):\n 1. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "case Stuck"], ["proof (state)\nthis:\n  s'' = Stuck\n\ngoal (1 subgoal):\n 1. s'' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s''", "thus ?thesis"], ["proof (prove)\nusing this:\n  s'' = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s''", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s''2\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s''2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s''2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "using s"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s''2\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s", "by (iprover intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (Cond b c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Cond b c1 c2) \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "hence \"\\<Gamma>\\<turnstile>Cond b (strip_guards F c1) (strip_guards F c2) \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Cond b c1 c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b (strip_guards F c1)\n                         (strip_guards F c2) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b (strip_guards F c1)\n                       (strip_guards F c2) \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Cond x1 c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus \"\\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Cond b (strip_guards F c1)\n                       (strip_guards F c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "proof (cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 5. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "fix f"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 5. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "assume \"s=Fault f\""], ["proof (state)\nthis:\n  s = Fault f\n\ngoal (5 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 5. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault f\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 4. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 4. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "assume \"s=Stuck\""], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (4 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 4. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "assume \"s=Abrupt s'\""], ["proof (state)\nthis:\n  s = Abrupt s'\n\ngoal (3 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "assume \"s'\\<in>b\" \"\\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\" \"s = Normal s'\""], ["proof (state)\nthis:\n  s' \\<in> b\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\n  s = Normal s'\n\ngoal (2 subgoals):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<in> b;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' \\<in> b\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "by (iprover intro: terminates.intros Cond.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "assume \"s'\\<notin>b\" \"\\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\" \"s = Normal s'\""], ["proof (state)\nthis:\n  s' \\<notin> b\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa; sa \\<notin> b;\n        \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal sa\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s' \\<notin> b\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s", "by (iprover intro: terminates.intros Cond.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1 c2 \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (While b c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "have hyp_c: \"\\<And>s. \\<Gamma>\\<turnstile>strip_guards F c \\<down> s \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> ?s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "have \"\\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s", "using While.prems"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "fix sw"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume \"\\<Gamma>\\<turnstile>sw\\<down>s\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>sw \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>sw \\<down> s", "have \"sw=While b (strip_guards F c) \\<Longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>sw \\<down> s\n\ngoal (1 subgoal):\n 1. sw = While b (strip_guards F c) \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case (WhileTrue s b' c')"], ["proof (state)\nthis:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = While b (strip_guards F c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = While b (strip_guards F c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = While b (strip_guards F c)\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have eqs: \"While b' c' = While b (strip_guards F c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. While b' c' = While b (strip_guards F c)", "by fact"], ["proof (state)\nthis:\n  While b' c' = While b (strip_guards F c)\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "with \\<open>s\\<in>b'\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> b'\n  While b' c' = While b (strip_guards F c)", "have b: \"s\\<in>b\""], ["proof (prove)\nusing this:\n  s \\<in> b'\n  While b' c' = While b (strip_guards F c)\n\ngoal (1 subgoal):\n 1. s \\<in> b", "by simp"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "from eqs \\<open>\\<Gamma>\\<turnstile>c' \\<down> Normal s\\<close>"], ["proof (chain)\npicking this:\n  While b' c' = While b (strip_guards F c)\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  While b' c' = While b (strip_guards F c)\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "hence term_c: \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (rule hyp_c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "fix t"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "assume exec_c: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have \"\\<Gamma>\\<turnstile>While b c \\<down> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> t", "proof (cases t)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> t", "case Fault"], ["proof (state)\nthis:\n  t = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> t", "case Stuck"], ["proof (state)\nthis:\n  t = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> t\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "case (Abrupt t')"], ["proof (state)\nthis:\n  t = Abrupt t'\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Abrupt t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "case (Normal t')"], ["proof (state)\nthis:\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "with exec_c"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> t\n  t = Normal t'", "have \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c,Normal s \\<rangle> \\<Rightarrow> Normal t'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> t\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                   c,Normal\ns\\<rangle> \\<Rightarrow> Normal t'", "by (auto intro: exec_to_exec_strip_guards)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal s\\<rangle> \\<Rightarrow> Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> t", "with WhileTrue.hyps eqs Normal"], ["proof (chain)\npicking this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = While b (strip_guards F c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = While b (strip_guards F c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = While b (strip_guards F c)\n  t = Normal t'\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal s\\<rangle> \\<Rightarrow> Normal t'", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = While b (strip_guards F c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = While b (strip_guards F c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = While b (strip_guards F c)\n  t = Normal t'\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal s\\<rangle> \\<Rightarrow> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> t", "by fastforce"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> t\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?t2\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b (strip_guards F c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?t2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "using b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?t2\n  s \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  While b_ c_ = While b (strip_guards F c)\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  While b_ c_ = While b (strip_guards F c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>s.\n       Skip = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = While b (strip_guards F c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b (strip_guards F c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b (strip_guards F c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b (strip_guards F c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         bdy = While b (strip_guards F c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         Call p = While b (strip_guards F c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 16 subgoals...", "qed simp_all"], ["proof (state)\nthis:\n  sw = While b (strip_guards F c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>?sw2 \\<down> s;\n   ?sw2 = While b (strip_guards F c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (While x1 c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?sw2 \\<down> s;\n   ?sw2 = While b (strip_guards F c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s", "show \"\\<Gamma>\\<turnstile>While b c \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>While b (strip_guards F c) \\<down> s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?sw2 \\<down> s;\n   ?sw2 = While b (strip_guards F c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Call x_) \\<down> s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>strip_guards F\n                            (Call x) \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F (Call x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call x_ \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call x_ \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case DynCom"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>strip_guards F ?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (DynCom x_) \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>strip_guards F xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (DynCom x) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>strip_guards F ?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (DynCom x_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom x_ \\<down> s", "by (cases s) (auto elim: terminates_Normal_elim_cases intro: terminates.intros rangeI)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom x_ \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Guard"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Guard x1_ x2a_ c_) \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F\n                             (Guard x1 x2a c) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Guard x1_ x2a_ c_) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard x1_ x2a_ c_ \\<down> s", "by (cases s) (auto elim: terminates_Normal_elim_cases intro: terminates.intros\n                  split: if_split_asm)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard x1_ x2a_ c_ \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Throw \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Throw \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "case (Catch c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "hence \"\\<Gamma>\\<turnstile>Catch (strip_guards F c1) (strip_guards F c2) \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s\n  \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch (strip_guards F c1)\n                         (strip_guards F c2) \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch (strip_guards F c1)\n                       (strip_guards F c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>strip_guards F\n  c1 \\<down> s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> s;\n        \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus \"\\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Catch (strip_guards F c1)\n                       (strip_guards F c2) \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "proof (cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 4. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "fix f"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 4. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume \"s=Fault f\""], ["proof (state)\nthis:\n  s = Fault f\n\ngoal (4 subgoals):\n 1. \\<And>f.\n       s = Fault f \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 3. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 4. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault f\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n\ngoal (3 subgoals):\n 1. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 3. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 3. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume \"s=Stuck\""], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (3 subgoals):\n 1. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 3. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume \"s=Abrupt s'\""], ["proof (state)\nthis:\n  s = Abrupt s'\n\ngoal (2 subgoals):\n 1. \\<And>sa.\n       s = Abrupt sa \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n 2. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume s: \"s=Normal s'\""], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume \"\\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "hence \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s'", "by (rule Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume c2:\n      \"\\<forall>s''. \\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s'\\<rangle> \\<Rightarrow> Abrupt s''\n             \\<longrightarrow> \\<Gamma>\\<turnstile>strip_guards F c2\\<down>Normal s''\""], ["proof (state)\nthis:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> Abrupt s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "{"], ["proof (state)\nthis:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> Abrupt s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "fix s''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s' \\<rangle> \\<Rightarrow> Abrupt s''\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "have \" \\<Gamma>\\<turnstile>c2 \\<down> Normal s''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s''", "from exec_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt s''", "have \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s' \\<rangle> \\<Rightarrow> Abrupt s''\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                   c1,Normal\n s'\\<rangle> \\<Rightarrow> Abrupt s''", "by (auto intro: exec_to_exec_strip_guards)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s'\\<rangle> \\<Rightarrow> Abrupt s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s''", "with c2"], ["proof (chain)\npicking this:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> Abrupt s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s''\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s'\\<rangle> \\<Rightarrow> Abrupt s''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s''.\n     \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                    c1,Normal\n  s'\\<rangle> \\<Rightarrow> Abrupt s'' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s''\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s'\\<rangle> \\<Rightarrow> Abrupt s''\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s''", "by (auto intro: Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s''\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s''2\n\ngoal (1 subgoal):\n 1. \\<And>sa.\n       \\<lbrakk>s = Normal sa;\n        \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal sa;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n    c1,Normal sa\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s''2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s''2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "using s"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?s''2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s''2\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s", "by (iprover intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_strip_to_terminates:\n  assumes termi_strip: \"strip F \\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "using termi_strip"], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof induct"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case (Seq c1 s c2)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "fix s'"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "assume exec: \"\\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have \"\\<Gamma>\\<turnstile>c2 \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "by (auto elim: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "from exec_to_exec_strip [OF exec this] Seq.hyps"], ["proof (chain)\npicking this:\n  strip ?F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>c2 \\<down> s'", "show ?thesis"], ["proof (prove)\nusing this:\n  strip ?F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            strip F\n             \\<Gamma>\\<turnstile> \\<langle>c,Normal\n        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "case (WhileTrue s b c)"], ["proof (state)\nthis:\n  s \\<in> b\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "have \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "fix s'"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "assume exec: \"\\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "have \"\\<Gamma>\\<turnstile>While b c \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "by (auto elim: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "from exec_to_exec_strip [OF exec this] WhileTrue.hyps"], ["proof (chain)\npicking this:\n  strip ?F\n   \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  s \\<in> b\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'", "show ?thesis"], ["proof (prove)\nusing this:\n  strip ?F\n   \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  s \\<in> b\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?s'2\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           strip F\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           strip F \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>While b c \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "case (Catch c1 s c2)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "fix s'"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "assume exec: \"\\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "from exec_to_exec_strip [OF exec] Catch.hyps"], ["proof (chain)\npicking this:\n  \\<not> isFault (Abrupt s') \\<Longrightarrow>\n  strip ?F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "have \"\\<Gamma>\\<turnstile>c2 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<not> isFault (Abrupt s') \\<Longrightarrow>\n  strip ?F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     strip F\n      \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s\n\ngoal (15 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "case Call"], ["proof (state)\nthis:\n  strip F \\<Gamma> p_ = Some bdy_\n  strip F \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>strip F \\<Gamma> p = Some bdy;\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  strip F \\<Gamma> p_ = Some bdy_\n  strip F \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_", "by (auto intro: terminates.intros terminates_strip_guards_to_terminates)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_\n\ngoal (14 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p s.\n        strip F \\<Gamma> p = None \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 14 subgoals...", "qed (auto intro: terminates.intros)"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{term \"c\\<^sub>1 \\<inter>\\<^sub>g c\\<^sub>2\"}\\<close>"], ["", "(* ************************************************************************* *)"], ["", "lemma inter_guards_terminates:\n  \"\\<And>c c2 s. \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c; \\<Gamma>\\<turnstile>c1\\<down>s \\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c c2 s.\n       \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "proof (induct c1)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>c c2 s.\n       \\<lbrakk>(Skip \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Skip \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Basic x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Basic x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 10. \\<And>c c2 s.\n        \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n         \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  (Skip \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Skip \\<down> s\n\ngoal (11 subgoals):\n 1. \\<And>c c2 s.\n       \\<lbrakk>(Skip \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Skip \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Basic x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Basic x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 10. \\<And>c c2 s.\n        \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n         \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  (Skip \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Skip \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (fastforce simp add: inter_guards_Skip)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Basic x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Basic x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 10. \\<And>c11 c12 c c2 s.\n        \\<lbrakk>\\<And>c c2 s.\n                    \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                     \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n         \\<And>c c2 s.\n            \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n             \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n         (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n         \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Basic x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Basic x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 10. \\<And>c11 c12 c c2 s.\n        \\<lbrakk>\\<And>c c2 s.\n                    \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                     \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n         \\<And>c c2 s.\n            \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n             \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n         (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n         \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Basic f)"], ["proof (state)\nthis:\n  (Basic f \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Basic f \\<down> s\n\ngoal (10 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Basic x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Basic x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 10. \\<And>c11 c12 c c2 s.\n        \\<lbrakk>\\<And>c c2 s.\n                    \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                     \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n         \\<And>c c2 s.\n            \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n             \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n         (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n         \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  (Basic f \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Basic f \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (fastforce simp add: inter_guards_Basic)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (9 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Spec r)"], ["proof (state)\nthis:\n  (Spec r \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Spec r \\<down> s\n\ngoal (9 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Spec x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Spec x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 9. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  (Spec r \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Spec r \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (fastforce simp add: inter_guards_Spec)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Seq a1 a2)"], ["proof (state)\nthis:\n  \\<lbrakk>(a1 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>a1 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  \\<lbrakk>(a2 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>a2 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (Seq a1 a2 \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"(Seq a1 a2 \\<inter>\\<^sub>g c2) = Some c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Seq a1 a2 \\<inter>\\<^sub>g c2) = Some c", "by fact"], ["proof (state)\nthis:\n  (Seq a1 a2 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "then"], ["proof (chain)\npicking this:\n  (Seq a1 a2 \\<inter>\\<^sub>g c2) = Some c", "obtain b1 b2 d1 d2 where\n    c2: \"c2=Seq b1 b2\" and\n    d1: \"(a1 \\<inter>\\<^sub>g b1) = Some d1\" and d2: \"(a2 \\<inter>\\<^sub>g b2) = Some d2\" and\n    c: \"c=Seq d1 d2\""], ["proof (prove)\nusing this:\n  (Seq a1 a2 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. (\\<And>b1 b2 d1 d2.\n        \\<lbrakk>c2 = Seq b1 b2; (a1 \\<inter>\\<^sub>g b1) = Some d1;\n         (a2 \\<inter>\\<^sub>g b2) = Some d2; c = Seq d1 d2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: inter_guards_Seq)"], ["proof (state)\nthis:\n  c2 = Seq b1 b2\n  (a1 \\<inter>\\<^sub>g b1) = Some d1\n  (a2 \\<inter>\\<^sub>g b2) = Some d2\n  c = Seq d1 d2\n\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have termi_c1: \"\\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"\\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "proof (cases s)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "case Fault"], ["proof (state)\nthis:\n  s = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "case Stuck"], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "case Abrupt"], ["proof (state)\nthis:\n  s = Abrupt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "case (Normal s')"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "note Normal_s = this"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "with d1 termi_c1"], ["proof (chain)\npicking this:\n  (a1 \\<inter>\\<^sub>g b1) = Some d1\n  \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\n  s = Normal s'", "have \"\\<Gamma>\\<turnstile>d1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  (a1 \\<inter>\\<^sub>g b1) = Some d1\n  \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d1 \\<down> Normal s'", "by (auto elim: terminates_Normal_elim_cases intro: Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "assume exec_d1: \"\\<Gamma>\\<turnstile>\\<langle>d1,Normal s' \\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal s'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "have \"\\<Gamma>\\<turnstile>d2 \\<down> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> t", "proof (cases t)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "case Fault"], ["proof (state)\nthis:\n  t = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "case Stuck"], ["proof (state)\nthis:\n  t = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> t\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "case Abrupt"], ["proof (state)\nthis:\n  t = Abrupt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "case (Normal t')"], ["proof (state)\nthis:\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "with inter_guards_exec_noFault [OF d1 exec_d1]"], ["proof (chain)\npicking this:\n  \\<not> isFault t \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal s'\\<rangle> \\<Rightarrow> t \\<and>\n  \\<Gamma>\\<turnstile> \\<langle>b1,Normal s'\\<rangle> \\<Rightarrow> t\n  t = Normal t'", "have \"\\<Gamma>\\<turnstile>\\<langle>a1,Normal s' \\<rangle> \\<Rightarrow> Normal t'\""], ["proof (prove)\nusing this:\n  \\<not> isFault t \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal s'\\<rangle> \\<Rightarrow> t \\<and>\n  \\<Gamma>\\<turnstile> \\<langle>b1,Normal s'\\<rangle> \\<Rightarrow> t\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>a1,Normal\ns'\\<rangle> \\<Rightarrow> Normal t'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "with termi_c1 Normal_s"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\n  s = Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Normal t'", "have \"\\<Gamma>\\<turnstile>a2 \\<down> Normal t'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Seq a1 a2 \\<down> s\n  s = Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>a2 \\<down> Normal t'", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>a2 \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "with d2"], ["proof (chain)\npicking this:\n  (a2 \\<inter>\\<^sub>g b2) = Some d2\n  \\<Gamma>\\<turnstile>a2 \\<down> Normal t'", "have \"\\<Gamma>\\<turnstile>d2 \\<down> Normal t'\""], ["proof (prove)\nusing this:\n  (a2 \\<inter>\\<^sub>g b2) = Some d2\n  \\<Gamma>\\<turnstile>a2 \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t'", "by (auto intro: Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>d2 \\<down> t", "with Normal"], ["proof (chain)\npicking this:\n  t = Normal t'\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t'", "show ?thesis"], ["proof (prove)\nusing this:\n  t = Normal t'\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>d2 \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>d2 \\<down> ?t2", "have \"\\<Gamma>\\<turnstile>Seq d1 d2 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal\n                                    s'\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>d2 \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> Normal s'", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "with Normal"], ["proof (chain)\npicking this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> Normal s'", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n\ngoal (8 subgoals):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Seq c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Seq c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 8. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with c"], ["proof (chain)\npicking this:\n  c = Seq d1 d2\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s", "show ?case"], ["proof (prove)\nusing this:\n  c = Seq d1 d2\n  \\<Gamma>\\<turnstile>Seq d1 d2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Cond"], ["proof (state)\nthis:\n  \\<lbrakk>(c11_ \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>c11_ \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  \\<lbrakk>(c12_ \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>c12_ \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (Cond x1_ c11_ c12_ \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Cond x1_ c11_ c12_ \\<down> s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Cond x1 c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Cond x1 c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 7. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c11_ \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>c11_ \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  \\<lbrakk>(c12_ \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>c12_ \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (Cond x1_ c11_ c12_ \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Cond x1_ c11_ c12_ \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by - (cases s,\n          auto intro: terminates.intros elim!: terminates_Normal_elim_cases\n               simp add: inter_guards_Cond)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (While b bdy1)"], ["proof (state)\nthis:\n  \\<lbrakk>(bdy1 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>bdy1 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (While b bdy1 \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"(While b bdy1 \\<inter>\\<^sub>g c2) = Some c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (While b bdy1 \\<inter>\\<^sub>g c2) = Some c", "by fact"], ["proof (state)\nthis:\n  (While b bdy1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "then"], ["proof (chain)\npicking this:\n  (While b bdy1 \\<inter>\\<^sub>g c2) = Some c", "obtain bdy2 bdy where\n    c2: \"c2=While b bdy2\" and\n    bdy: \"(bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\" and\n    c: \"c=While b bdy\""], ["proof (prove)\nusing this:\n  (While b bdy1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. (\\<And>bdy2 bdy.\n        \\<lbrakk>c2 = While b bdy2; (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy;\n         c = While b bdy\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: inter_guards_While)"], ["proof (state)\nthis:\n  c2 = While b bdy2\n  (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\n  c = While b bdy\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"\\<Gamma>\\<turnstile>While b bdy1 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy1 \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "fix s w w1 w2"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "assume termi_w:  \"\\<Gamma>\\<turnstile>w \\<down> s\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>w \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "assume w: \"w=While b bdy1\""], ["proof (state)\nthis:\n  w = While b bdy1\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "from termi_w w"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>w \\<down> s\n  w = While b bdy1", "have \"\\<Gamma>\\<turnstile>While b bdy \\<down> s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>w \\<down> s\n  w = While b bdy1\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b bdy1 \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b bdy1 \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n         While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 18 subgoals...", "case (WhileTrue s b' bdy1')"], ["proof (state)\nthis:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b bdy1 \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b bdy1 \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n         While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 18 subgoals...", "have eqs: \"While b' bdy1' = While b bdy1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. While b' bdy1' = While b bdy1", "by fact"], ["proof (state)\nthis:\n  While b' bdy1' = While b bdy1\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b bdy1 \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b bdy1 \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n         While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 18 subgoals...", "from WhileTrue"], ["proof (chain)\npicking this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1", "have s_in_b: \"s \\<in> b\""], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1\n\ngoal (1 subgoal):\n 1. s \\<in> b", "by simp"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b bdy1 \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b bdy1 \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n         While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 18 subgoals...", "from WhileTrue"], ["proof (chain)\npicking this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1", "have termi_bdy1: \"\\<Gamma>\\<turnstile>bdy1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = While b bdy1 \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b bdy1 \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n         While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "from bdy termi_bdy1"], ["proof (chain)\npicking this:\n  (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\n  \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>bdy\\<down>(Normal s)\""], ["proof (prove)\nusing this:\n  (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\n  \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>bdy \\<down> Normal s", "by (rule While.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "assume exec_bdy: \"\\<Gamma>\\<turnstile>\\<langle>bdy,Normal s \\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>While b bdy\\<down>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> t", "proof (cases t)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> t", "case Fault"], ["proof (state)\nthis:\n  t = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> t", "case Stuck"], ["proof (state)\nthis:\n  t = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> t\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "case Abrupt"], ["proof (state)\nthis:\n  t = Abrupt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "case (Normal t')"], ["proof (state)\nthis:\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "with inter_guards_exec_noFault [OF bdy exec_bdy]"], ["proof (chain)\npicking this:\n  \\<not> isFault t \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>bdy1,Normal\ns\\<rangle> \\<Rightarrow> t \\<and>\n  \\<Gamma>\\<turnstile> \\<langle>bdy2,Normal s\\<rangle> \\<Rightarrow> t\n  t = Normal t'", "have \"\\<Gamma>\\<turnstile>\\<langle>bdy1,Normal s \\<rangle> \\<Rightarrow> Normal t'\""], ["proof (prove)\nusing this:\n  \\<not> isFault t \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>bdy1,Normal\ns\\<rangle> \\<Rightarrow> t \\<and>\n  \\<Gamma>\\<turnstile> \\<langle>bdy2,Normal s\\<rangle> \\<Rightarrow> t\n  t = Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>bdy1,Normal\n  s\\<rangle> \\<Rightarrow> Normal t'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy1,Normal\ns\\<rangle> \\<Rightarrow> Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "with WhileTrue"], ["proof (chain)\npicking this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1\n  \\<Gamma>\\<turnstile> \\<langle>bdy1,Normal\ns\\<rangle> \\<Rightarrow> Normal t'", "have \"\\<Gamma>\\<turnstile>While b bdy \\<down> Normal t'\""], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>bdy1' \\<down> Normal s\n  bdy1' = While b bdy1 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>bdy1',Normal\n    s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' bdy1' \\<down> s' \\<and>\n     (While b' bdy1' = While b bdy1 \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b bdy \\<down> s')\n  While b' bdy1' = While b bdy1\n  \\<Gamma>\\<turnstile> \\<langle>bdy1,Normal\ns\\<rangle> \\<Rightarrow> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal t'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> t", "with Normal"], ["proof (chain)\npicking this:\n  t = Normal t'\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal t'", "show ?thesis"], ["proof (prove)\nusing this:\n  t = Normal t'\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> ?t2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "using s_in_b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b bdy \\<down> ?t2\n  s \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s", "by (blast intro: terminates.WhileTrue)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba; While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba; While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 17 subgoals...", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  While b_ c_ = While b bdy1\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba; While ba c = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  While b_ c_ = While b bdy1\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s_", "by (blast intro: terminates.WhileFalse)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>s.\n       Skip = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 6. \\<And>c f.\n       c = While b bdy1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b bdy \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b bdy1 \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b bdy \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = While b bdy1 \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b bdy1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\n 10. \\<And>p bdya s.\n        \\<lbrakk>\\<Gamma> p = Some bdya;\n         \\<Gamma>\\<turnstile>bdya \\<down> Normal s;\n         bdya = While b bdy1 \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s;\n         Call p = While b bdy1\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> Normal s\nA total of 16 subgoals...", "qed (simp_all)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b bdy \\<down> s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>?w2 \\<down> ?sa2; ?w2 = While b bdy1\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> ?sa2\n\ngoal (6 subgoals):\n 1. \\<And>x1 c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (While x1 c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>While x1 c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 6. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?w2 \\<down> ?sa2; ?w2 = While b bdy1\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> ?sa2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?w2 \\<down> ?sa2; ?w2 = While b bdy1\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> ?sa2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "using c"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>While b bdy1 \\<down> s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?w2 \\<down> ?sa2; ?w2 = While b bdy1\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b bdy \\<down> ?sa2\n  c = While b bdy\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (5 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Call"], ["proof (state)\nthis:\n  (Call x_ \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Call x_ \\<down> s\n\ngoal (5 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>(Call x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Call x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 5. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  (Call x_ \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Call x_ \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (simp add: inter_guards_Call)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (DynCom f1)"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> range f1; (?xa \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (DynCom f1 \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>DynCom f1 \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"(DynCom f1 \\<inter>\\<^sub>g c2) = Some c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (DynCom f1 \\<inter>\\<^sub>g c2) = Some c", "by fact"], ["proof (state)\nthis:\n  (DynCom f1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (4 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "then"], ["proof (chain)\npicking this:\n  (DynCom f1 \\<inter>\\<^sub>g c2) = Some c", "obtain f2 f where\n    c2: \"c2=DynCom f2\" and\n    f_defined: \"\\<forall>s. ((f1 s) \\<inter>\\<^sub>g (f2 s)) \\<noteq> None\" and\n    c: \"c=DynCom (\\<lambda>s. the ((f1 s) \\<inter>\\<^sub>g (f2 s)))\""], ["proof (prove)\nusing this:\n  (DynCom f1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. (\\<And>f2.\n        \\<lbrakk>c2 = DynCom f2;\n         \\<forall>s. (f1 s \\<inter>\\<^sub>g f2 s) \\<noteq> None;\n         c = DynCom (\\<lambda>s. the (f1 s \\<inter>\\<^sub>g f2 s))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: inter_guards_DynCom)"], ["proof (state)\nthis:\n  c2 = DynCom f2\n  \\<forall>s. (f1 s \\<inter>\\<^sub>g f2 s) \\<noteq> None\n  c = DynCom (\\<lambda>s. the (f1 s \\<inter>\\<^sub>g f2 s))\n\ngoal (4 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have termi: \"\\<Gamma>\\<turnstile>DynCom f1 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom f1 \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom f1 \\<down> s\n\ngoal (4 subgoals):\n 1. \\<And>x c c2 s.\n       \\<lbrakk>\\<And>xa c c2 s.\n                   \\<lbrakk>xa \\<in> range x;\n                    (xa \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>xa \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (DynCom x \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof (cases s)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x3. s = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Fault"], ["proof (state)\nthis:\n  s = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x3. s = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Stuck"], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Abrupt"], ["proof (state)\nthis:\n  s = Abrupt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Normal s')"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "from f_defined"], ["proof (chain)\npicking this:\n  \\<forall>s. (f1 s \\<inter>\\<^sub>g f2 s) \\<noteq> None", "obtain f where f: \"((f1 s') \\<inter>\\<^sub>g (f2 s')) = Some f\""], ["proof (prove)\nusing this:\n  \\<forall>s. (f1 s \\<inter>\\<^sub>g f2 s) \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (f1 s' \\<inter>\\<^sub>g f2 s') = Some f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (f1 s' \\<inter>\\<^sub>g f2 s') = Some f\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "from Normal termi"], ["proof (chain)\npicking this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>DynCom f1 \\<down> s", "have \"\\<Gamma>\\<turnstile>f1 s'\\<down> (Normal s')\""], ["proof (prove)\nusing this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>DynCom f1 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>f1 s' \\<down> Normal s'", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>f1 s' \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "from DynCom.hyps f this"], ["proof (chain)\npicking this:\n  \\<lbrakk>?xa \\<in> range f1; (?xa \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (f1 s' \\<inter>\\<^sub>g f2 s') = Some f\n  \\<Gamma>\\<turnstile>f1 s' \\<down> Normal s'", "have \"\\<Gamma>\\<turnstile>f\\<down> (Normal s')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> range f1; (?xa \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>?xa \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (f1 s' \\<inter>\\<^sub>g f2 s') = Some f\n  \\<Gamma>\\<turnstile>f1 s' \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>f \\<down> Normal s'", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>f \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with c f Normal"], ["proof (chain)\npicking this:\n  c = DynCom (\\<lambda>s. the (f1 s \\<inter>\\<^sub>g f2 s))\n  (f1 s' \\<inter>\\<^sub>g f2 s') = Some f\n  s = Normal s'\n  \\<Gamma>\\<turnstile>f \\<down> Normal s'", "show ?thesis"], ["proof (prove)\nusing this:\n  c = DynCom (\\<lambda>s. the (f1 s \\<inter>\\<^sub>g f2 s))\n  (f1 s' \\<inter>\\<^sub>g f2 s') = Some f\n  s = Normal s'\n  \\<Gamma>\\<turnstile>f \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Guard f g1 bdy1)"], ["proof (state)\nthis:\n  \\<lbrakk>(bdy1 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>bdy1 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (Guard f g1 bdy1 \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Guard f g1 bdy1 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"(Guard f g1 bdy1 \\<inter>\\<^sub>g c2) = Some c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Guard f g1 bdy1 \\<inter>\\<^sub>g c2) = Some c", "by fact"], ["proof (state)\nthis:\n  (Guard f g1 bdy1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "then"], ["proof (chain)\npicking this:\n  (Guard f g1 bdy1 \\<inter>\\<^sub>g c2) = Some c", "obtain g2 bdy2 bdy where\n    c2: \"c2=Guard f g2 bdy2\" and\n    bdy: \"(bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\" and\n    c: \"c=Guard f (g1 \\<inter> g2) bdy\""], ["proof (prove)\nusing this:\n  (Guard f g1 bdy1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. (\\<And>g2 bdy2 bdy.\n        \\<lbrakk>c2 = Guard f g2 bdy2;\n         (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy;\n         c = Guard f (g1 \\<inter> g2) bdy\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: inter_guards_Guard)"], ["proof (state)\nthis:\n  c2 = Guard f g2 bdy2\n  (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\n  c = Guard f (g1 \\<inter> g2) bdy\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have termi_c1: \"\\<Gamma>\\<turnstile>Guard f g1 bdy1 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g1 bdy1 \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g1 bdy1 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c1 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c1 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c1 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Guard x1 x2a c1 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c1 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof (cases s)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x3. s = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Fault"], ["proof (state)\nthis:\n  s = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. \\<And>x3. s = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Stuck"], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Abrupt"], ["proof (state)\nthis:\n  s = Abrupt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Normal s')"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof (cases \"s' \\<in> g1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s' \\<in> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. s' \\<notin> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case False"], ["proof (state)\nthis:\n  s' \\<notin> g1\n\ngoal (2 subgoals):\n 1. s' \\<in> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. s' \\<notin> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with Normal c"], ["proof (chain)\npicking this:\n  s = Normal s'\n  c = Guard f (g1 \\<inter> g2) bdy\n  s' \\<notin> g1", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  c = Guard f (g1 \\<inter> g2) bdy\n  s' \\<notin> g1\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (auto intro: terminates.GuardFault)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. s' \\<in> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s' \\<in> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case True"], ["proof (state)\nthis:\n  s' \\<in> g1\n\ngoal (1 subgoal):\n 1. s' \\<in> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "note s_in_g1 = this"], ["proof (state)\nthis:\n  s' \\<in> g1\n\ngoal (1 subgoal):\n 1. s' \\<in> g1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof (cases \"s' \\<in> g2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s' \\<in> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. s' \\<notin> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case False"], ["proof (state)\nthis:\n  s' \\<notin> g2\n\ngoal (2 subgoals):\n 1. s' \\<in> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. s' \\<notin> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with Normal c"], ["proof (chain)\npicking this:\n  s = Normal s'\n  c = Guard f (g1 \\<inter> g2) bdy\n  s' \\<notin> g2", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  c = Guard f (g1 \\<inter> g2) bdy\n  s' \\<notin> g2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (auto intro: terminates.GuardFault)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. s' \\<in> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s' \\<in> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case True"], ["proof (state)\nthis:\n  s' \\<in> g2\n\ngoal (1 subgoal):\n 1. s' \\<in> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with termi_c1 s_in_g1 Normal"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Guard f g1 bdy1 \\<down> s\n  s' \\<in> g1\n  s = Normal s'\n  s' \\<in> g2", "have \"\\<Gamma>\\<turnstile>bdy1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Guard f g1 bdy1 \\<down> s\n  s' \\<in> g1\n  s = Normal s'\n  s' \\<in> g2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s'", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. s' \\<in> g2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with c bdy Guard.hyps Normal True s_in_g1"], ["proof (chain)\npicking this:\n  c = Guard f (g1 \\<inter> g2) bdy\n  (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\n  \\<lbrakk>(bdy1 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>bdy1 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  s = Normal s'\n  s' \\<in> g2\n  s' \\<in> g1\n  \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s'", "show ?thesis"], ["proof (prove)\nusing this:\n  c = Guard f (g1 \\<inter> g2) bdy\n  (bdy1 \\<inter>\\<^sub>g bdy2) = Some bdy\n  \\<lbrakk>(bdy1 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>bdy1 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  s = Normal s'\n  s' \\<in> g2\n  s' \\<in> g1\n  \\<Gamma>\\<turnstile>bdy1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (auto intro: terminates.Guard)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case Throw"], ["proof (state)\nthis:\n  (Throw \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Throw \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>c c2 s.\n       \\<lbrakk>(Throw \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Throw \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s\n 2. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "thus ?case"], ["proof (prove)\nusing this:\n  (Throw \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Throw \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (auto simp add: inter_guards_Throw)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "case (Catch a1 a2)"], ["proof (state)\nthis:\n  \\<lbrakk>(a1 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>a1 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  \\<lbrakk>(a2 \\<inter>\\<^sub>g ?c2.0) = Some ?c;\n   \\<Gamma>\\<turnstile>a2 \\<down> ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> ?s\n  (Catch a1 a2 \\<inter>\\<^sub>g c2) = Some c\n  \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"(Catch a1 a2 \\<inter>\\<^sub>g c2) = Some c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Catch a1 a2 \\<inter>\\<^sub>g c2) = Some c", "by fact"], ["proof (state)\nthis:\n  (Catch a1 a2 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "then"], ["proof (chain)\npicking this:\n  (Catch a1 a2 \\<inter>\\<^sub>g c2) = Some c", "obtain b1 b2 d1 d2 where\n    c2: \"c2=Catch b1 b2\" and\n    d1: \"(a1 \\<inter>\\<^sub>g b1) = Some d1\" and d2: \"(a2 \\<inter>\\<^sub>g b2) = Some d2\" and\n    c: \"c=Catch d1 d2\""], ["proof (prove)\nusing this:\n  (Catch a1 a2 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. (\\<And>b1 b2 d1 d2.\n        \\<lbrakk>c2 = Catch b1 b2; (a1 \\<inter>\\<^sub>g b1) = Some d1;\n         (a2 \\<inter>\\<^sub>g b2) = Some d2; c = Catch d1 d2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: inter_guards_Catch)"], ["proof (state)\nthis:\n  c2 = Catch b1 b2\n  (a1 \\<inter>\\<^sub>g b1) = Some d1\n  (a2 \\<inter>\\<^sub>g b2) = Some d2\n  c = Catch d1 d2\n\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have termi_c1: \"\\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "have \"\\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "proof (cases s)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "case Fault"], ["proof (state)\nthis:\n  s = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 3. \\<And>x3.\n       s = Fault x3 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 4. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "case Stuck"], ["proof (state)\nthis:\n  s = Stuck\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 3. s = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "case Abrupt"], ["proof (state)\nthis:\n  s = Abrupt x2_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n 2. \\<And>x2.\n       s = Abrupt x2 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "case (Normal s')"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "note Normal_s = this"], ["proof (state)\nthis:\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "with d1 termi_c1"], ["proof (chain)\npicking this:\n  (a1 \\<inter>\\<^sub>g b1) = Some d1\n  \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\n  s = Normal s'", "have \"\\<Gamma>\\<turnstile>d1 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  (a1 \\<inter>\\<^sub>g b1) = Some d1\n  \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\n  s = Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d1 \\<down> Normal s'", "by (auto elim: terminates_Normal_elim_cases intro: Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "assume exec_d1: \"\\<Gamma>\\<turnstile>\\<langle>d1,Normal s' \\<rangle> \\<Rightarrow> Abrupt t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal s'\\<rangle> \\<Rightarrow> Abrupt t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "have \"\\<Gamma>\\<turnstile>d2 \\<down> Normal t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "from inter_guards_exec_noFault [OF d1 exec_d1]"], ["proof (chain)\npicking this:\n  \\<not> isFault (Abrupt t) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         t \\<and>\n  \\<Gamma>\\<turnstile> \\<langle>b1,Normal s'\\<rangle> \\<Rightarrow> Abrupt t", "have \"\\<Gamma>\\<turnstile>\\<langle>a1,Normal s' \\<rangle> \\<Rightarrow> Abrupt t\""], ["proof (prove)\nusing this:\n  \\<not> isFault (Abrupt t) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         t \\<and>\n  \\<Gamma>\\<turnstile> \\<langle>b1,Normal s'\\<rangle> \\<Rightarrow> Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>a1,Normal\ns'\\<rangle> \\<Rightarrow> Abrupt t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal s'\\<rangle> \\<Rightarrow> Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "with termi_c1 Normal_s"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\n  s = Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal s'\\<rangle> \\<Rightarrow> Abrupt t", "have \"\\<Gamma>\\<turnstile>a2 \\<down> Normal t\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Catch a1 a2 \\<down> s\n  s = Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>a1,Normal s'\\<rangle> \\<Rightarrow> Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>a2 \\<down> Normal t", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>a2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "with d2"], ["proof (chain)\npicking this:\n  (a2 \\<inter>\\<^sub>g b2) = Some d2\n  \\<Gamma>\\<turnstile>a2 \\<down> Normal t", "have \"\\<Gamma>\\<turnstile>d2 \\<down> Normal t\""], ["proof (prove)\nusing this:\n  (a2 \\<inter>\\<^sub>g b2) = Some d2\n  \\<Gamma>\\<turnstile>a2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "by (auto intro: Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "with Normal"], ["proof (chain)\npicking this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>d2 \\<down> Normal t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal ?t2\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal ?t2", "have \"\\<Gamma>\\<turnstile>Catch d1 d2 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>d1 \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>d1,Normal\n                                    s'\\<rangle> \\<Rightarrow> Abrupt\n                         ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>d2 \\<down> Normal ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> Normal s'", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       s = Normal x1 \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "with Normal"], ["proof (chain)\npicking this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> Normal s'", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Normal s'\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<And>c11 c12 c c2 s.\n       \\<lbrakk>\\<And>c c2 s.\n                   \\<lbrakk>(c11 \\<inter>\\<^sub>g c2) = Some c;\n                    \\<Gamma>\\<turnstile>c11 \\<down> s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        \\<And>c c2 s.\n           \\<lbrakk>(c12 \\<inter>\\<^sub>g c2) = Some c;\n            \\<Gamma>\\<turnstile>c12 \\<down> s\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s;\n        (Catch c11 c12 \\<inter>\\<^sub>g c2) = Some c;\n        \\<Gamma>\\<turnstile>Catch c11 c12 \\<down> s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "with c"], ["proof (chain)\npicking this:\n  c = Catch d1 d2\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s", "show ?case"], ["proof (prove)\nusing this:\n  c = Catch d1 d2\n  \\<Gamma>\\<turnstile>Catch d1 d2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inter_guards_terminates':\n  assumes c: \"(c1 \\<inter>\\<^sub>g c2) = Some c\"\n  assumes termi_c2: \"\\<Gamma>\\<turnstile>c2\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "from c"], ["proof (chain)\npicking this:\n  (c1 \\<inter>\\<^sub>g c2) = Some c", "have \"(c2 \\<inter>\\<^sub>g c1) = Some c\""], ["proof (prove)\nusing this:\n  (c1 \\<inter>\\<^sub>g c2) = Some c\n\ngoal (1 subgoal):\n 1. (c2 \\<inter>\\<^sub>g c1) = Some c", "by (rule inter_guards_sym)"], ["proof (state)\nthis:\n  (c2 \\<inter>\\<^sub>g c1) = Some c\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "from this termi_c2"], ["proof (chain)\npicking this:\n  (c2 \\<inter>\\<^sub>g c1) = Some c\n  \\<Gamma>\\<turnstile>c2 \\<down> s", "show ?thesis"], ["proof (prove)\nusing this:\n  (c2 \\<inter>\\<^sub>g c1) = Some c\n  \\<Gamma>\\<turnstile>c2 \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "by (rule inter_guards_terminates)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{const \"mark_guards\"}\\<close>"], ["", "(* ************************************************************************ *)"], ["", "lemma terminates_to_terminates_mark_guards:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>mark_guards f c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c \\<down> s", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c \\<down> s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Skip \\<down> Normal s\n 2. \\<And>fa s.\n       \\<Gamma>\\<turnstile>mark_guards f (Basic fa) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 5. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 6. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Skip \\<down> Normal s\n 2. \\<And>fa s.\n       \\<Gamma>\\<turnstile>mark_guards f (Basic fa) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 5. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 6. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f Skip \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f Skip \\<down> Normal s_\n\ngoal (17 subgoals):\n 1. \\<And>fa s.\n       \\<Gamma>\\<turnstile>mark_guards f (Basic fa) \\<down> Normal s\n 2. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 3. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 4. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 5. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>fa s.\n       \\<Gamma>\\<turnstile>mark_guards f (Basic fa) \\<down> Normal s\n 2. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 3. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 4. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 5. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\nA total of 17 subgoals...", "case Basic"], ["proof (state)\nthis:\n  \n\ngoal (17 subgoals):\n 1. \\<And>fa s.\n       \\<Gamma>\\<turnstile>mark_guards f (Basic fa) \\<down> Normal s\n 2. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 3. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 4. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 5. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Basic f_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Basic f_) \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 2. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 3. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 4. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 2. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 3. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 4. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "case Spec"], ["proof (state)\nthis:\n  \n\ngoal (16 subgoals):\n 1. \\<And>r s. \\<Gamma>\\<turnstile>mark_guards f (Spec r) \\<down> Normal s\n 2. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 3. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 4. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Spec r_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Spec r_) \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 2. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 3. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<Gamma> p = None \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 2. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 3. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<Gamma> p = None \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\nA total of 15 subgoals...", "case Guard"], ["proof (state)\nthis:\n  s_ \\<in> g_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Guard fa g c) \\<down> Normal s\n 2. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 3. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<Gamma> p = None \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\nA total of 15 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> g_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Normal s_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Guard f_ g_ c_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Guard f_ g_ c_) \\<down> Normal s_\n\ngoal (14 subgoals):\n 1. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 2. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 7. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 9. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 10. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 2. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 7. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 9. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 10. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\nA total of 14 subgoals...", "case GuardFault"], ["proof (state)\nthis:\n  s_ \\<notin> g_\n\ngoal (14 subgoals):\n 1. \\<And>s g fa c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Guard fa g c) \\<down> Normal s\n 2. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 7. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 9. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 10. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> g_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Guard f_ g_ c_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Guard f_ g_ c_) \\<down> Normal s_\n\ngoal (13 subgoals):\n 1. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 6. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 8. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 9. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (DynCom c) \\<down> Normal s\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 6. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 8. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 9. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (DynCom c) \\<down> Normal s\nA total of 13 subgoals...", "case Fault"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. \\<And>c fa. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Fault fa\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 6. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 8. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 9. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (DynCom c) \\<down> Normal s\nA total of 13 subgoals...", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Fault f_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Fault f_\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "case (Seq c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "have \"\\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "fix t"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "assume exec_mark: \"\\<Gamma>\\<turnstile>\\<langle>mark_guards f c1,Normal s \\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "have \"\\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "from exec_mark_guards_to_exec [OF exec_mark]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault t \\<longrightarrow> isFault t') \\<and>\n     (t' = Fault f \\<longrightarrow> t' = t) \\<and>\n     (isFault t' \\<longrightarrow> isFault t) \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = t)", "obtain t' where\n        exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t_Fault: \"isFault t \\<longrightarrow> isFault t'\" and\n        t'_Fault_f: \"t' = Fault f \\<longrightarrow> t' = t\" and\n        t'_Fault: \"isFault t' \\<longrightarrow> isFault t\" and\n        t'_noFault: \"\\<not> isFault t' \\<longrightarrow> t' = t\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault t \\<longrightarrow> isFault t') \\<and>\n     (t' = Fault f \\<longrightarrow> t' = t) \\<and>\n     (isFault t' \\<longrightarrow> isFault t) \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = t)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n             s\\<rangle> \\<Rightarrow> t';\n         isFault t \\<longrightarrow> isFault t';\n         t' = Fault f \\<longrightarrow> t' = t;\n         isFault t' \\<longrightarrow> isFault t;\n         \\<not> isFault t' \\<longrightarrow> t' = t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t'\n  isFault t \\<longrightarrow> isFault t'\n  t' = Fault f \\<longrightarrow> t' = t\n  isFault t' \\<longrightarrow> isFault t\n  \\<not> isFault t' \\<longrightarrow> t' = t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "proof (cases \"isFault t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "case True"], ["proof (state)\nthis:\n  isFault t'\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "with t'_Fault"], ["proof (chain)\npicking this:\n  isFault t' \\<longrightarrow> isFault t\n  isFault t'", "have \"isFault t\""], ["proof (prove)\nusing this:\n  isFault t' \\<longrightarrow> isFault t\n  isFault t'\n\ngoal (1 subgoal):\n 1. isFault t", "by simp"], ["proof (state)\nthis:\n  isFault t\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "by (auto elim: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "case False"], ["proof (state)\nthis:\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "with t'_noFault"], ["proof (chain)\npicking this:\n  \\<not> isFault t' \\<longrightarrow> t' = t\n  \\<not> isFault t'", "have \"t'=t\""], ["proof (prove)\nusing this:\n  \\<not> isFault t' \\<longrightarrow> t' = t\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. t' = t", "by simp"], ["proof (state)\nthis:\n  t' = t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "with exec_c1 Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\n  t' = t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\n  t' = t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> t\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> ?t2\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 8. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\nA total of 12 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> ?t2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 4. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 6. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 7. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 9. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 10. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 4. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 6. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 7. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 9. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 10. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\nA total of 11 subgoals...", "case CondTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1_ \\<down> Normal s_\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 4. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 6. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 7. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 9. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 10. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1_ \\<down> Normal s_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f\n                         (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f\n                       (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 3. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 5. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 6. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 8. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 9. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 3. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 5. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 6. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 8. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 9. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case CondFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2_ \\<down> Normal s_\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 3. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 5. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 6. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 8. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 9. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n         (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>2_ \\<down> Normal s_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f\n                         (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f\n                       (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case (WhileTrue s b c)"], ["proof (state)\nthis:\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have s_in_b: \"s \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> b", "by fact"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "fix t"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "assume exec_mark: \"\\<Gamma>\\<turnstile>\\<langle>mark_guards f c,Normal s \\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "from exec_mark_guards_to_exec [OF exec_mark]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault t \\<longrightarrow> isFault t') \\<and>\n     (t' = Fault f \\<longrightarrow> t' = t) \\<and>\n     (isFault t' \\<longrightarrow> isFault t) \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = t)", "obtain t' where\n        exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t_Fault: \"isFault t \\<longrightarrow> isFault t'\" and\n        t'_Fault_f: \"t' = Fault f \\<longrightarrow> t' = t\" and\n        t'_Fault: \"isFault t' \\<longrightarrow> isFault t\" and\n        t'_noFault: \"\\<not> isFault t' \\<longrightarrow> t' = t\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault t \\<longrightarrow> isFault t') \\<and>\n     (t' = Fault f \\<longrightarrow> t' = t) \\<and>\n     (isFault t' \\<longrightarrow> isFault t) \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = t)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c,Normal\n            s\\<rangle> \\<Rightarrow> t';\n         isFault t \\<longrightarrow> isFault t';\n         t' = Fault f \\<longrightarrow> t' = t;\n         isFault t' \\<longrightarrow> isFault t;\n         \\<not> isFault t' \\<longrightarrow> t' = t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> t'\n  isFault t \\<longrightarrow> isFault t'\n  t' = Fault f \\<longrightarrow> t' = t\n  isFault t' \\<longrightarrow> isFault t\n  \\<not> isFault t' \\<longrightarrow> t' = t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "proof (cases \"isFault t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "case True"], ["proof (state)\nthis:\n  isFault t'\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "with t'_Fault"], ["proof (chain)\npicking this:\n  isFault t' \\<longrightarrow> isFault t\n  isFault t'", "have \"isFault t\""], ["proof (prove)\nusing this:\n  isFault t' \\<longrightarrow> isFault t\n  isFault t'\n\ngoal (1 subgoal):\n 1. isFault t", "by simp"], ["proof (state)\nthis:\n  isFault t\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "by (auto elim: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "case False"], ["proof (state)\nthis:\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "with t'_noFault"], ["proof (chain)\npicking this:\n  \\<not> isFault t' \\<longrightarrow> t' = t\n  \\<not> isFault t'", "have \"t'=t\""], ["proof (prove)\nusing this:\n  \\<not> isFault t' \\<longrightarrow> t' = t\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. t' = t", "by simp"], ["proof (state)\nthis:\n  t' = t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "with exec_c1 WhileTrue.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> t'\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\n  t' = t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> t'\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\n  t' = t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> t\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> ?t2\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 5. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 8. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> ?t2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 3. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 4. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 6. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 7. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 3. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 4. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 6. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 7. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 3. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 4. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 6. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 7. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (While b_ c_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (While b_ c_) \\<down> Normal s_\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 3. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 5. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 6. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 3. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 5. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 6. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma> p_ = Some bdy_\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f bdy_ \\<down> Normal s_\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f bdy \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Call p) \\<down> Normal s\n 2. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 3. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 5. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 6. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p_ = Some bdy_\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f bdy_ \\<down> Normal s_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Call p_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Call p_) \\<down> Normal s_\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 2. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 4. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 5. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 2. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 4. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 5. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case CallUndefined"], ["proof (state)\nthis:\n  \\<Gamma> p_ = None\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<Gamma> p = None \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>mark_guards f (Call p) \\<down> Normal s\n 2. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 4. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 5. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p_ = None\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Call p_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Call p_) \\<down> Normal s_\n\ngoal (5 subgoals):\n 1. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 3. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 4. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 3. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 4. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Stuck"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>c. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 3. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 4. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Stuck", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Stuck\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 2. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 3. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 2. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 3. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case DynCom"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f (c_ s_) \\<down> Normal s_\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f (c s) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (DynCom c) \\<down> Normal s\n 2. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 3. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile>mark_guards f (c_ s_) \\<down> Normal s_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (DynCom c_) \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (DynCom c_) \\<down> Normal s_\n\ngoal (3 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 2. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 2. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n 2. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s_\n\ngoal (2 subgoals):\n 1. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Abrupt"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>c s. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Abrupt s_", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c_ \\<down> Abrupt s_\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case (Catch c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "assume exec_mark: \"\\<Gamma>\\<turnstile>\\<langle>mark_guards f c1,Normal s \\<rangle> \\<Rightarrow> Abrupt t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal s\\<rangle> \\<Rightarrow> Abrupt t\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "from exec_mark_guards_to_exec [OF exec_mark]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt t) \\<longrightarrow> isFault t') \\<and>\n     (t' = Fault f \\<longrightarrow> t' = Abrupt t) \\<and>\n     (isFault t' \\<longrightarrow> isFault (Abrupt t)) \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt t)", "obtain t' where\n        exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t'_Fault_f: \"t' = Fault f \\<longrightarrow> t' = Abrupt t\" and\n        t'_Fault: \"isFault t' \\<longrightarrow> isFault (Abrupt t)\" and\n        t'_noFault: \"\\<not> isFault t' \\<longrightarrow> t' = Abrupt t\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt t) \\<longrightarrow> isFault t') \\<and>\n     (t' = Fault f \\<longrightarrow> t' = Abrupt t) \\<and>\n     (isFault t' \\<longrightarrow> isFault (Abrupt t)) \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt t)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1,Normal\n             s\\<rangle> \\<Rightarrow> t';\n         t' = Fault f \\<longrightarrow> t' = Abrupt t;\n         isFault t' \\<longrightarrow> isFault (Abrupt t);\n         \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t'\n  t' = Fault f \\<longrightarrow> t' = Abrupt t\n  isFault t' \\<longrightarrow> isFault (Abrupt t)\n  \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "proof (cases \"isFault t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "case True"], ["proof (state)\nthis:\n  isFault t'\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "with t'_Fault"], ["proof (chain)\npicking this:\n  isFault t' \\<longrightarrow> isFault (Abrupt t)\n  isFault t'", "have \"isFault (Abrupt t)\""], ["proof (prove)\nusing this:\n  isFault t' \\<longrightarrow> isFault (Abrupt t)\n  isFault t'\n\ngoal (1 subgoal):\n 1. isFault (Abrupt t)", "by simp"], ["proof (state)\nthis:\n  isFault (Abrupt t)\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault (Abrupt t)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "case False"], ["proof (state)\nthis:\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "with t'_noFault"], ["proof (chain)\npicking this:\n  \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\n  \\<not> isFault t'", "have \"t'=Abrupt t\""], ["proof (prove)\nusing this:\n  \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. t' = Abrupt t", "by simp"], ["proof (state)\nthis:\n  t' = Abrupt t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "with exec_c1 Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\n  t' = Abrupt t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\n  t' = Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?t2\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c\\<^sub>2 \\<down> Normal s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>mark_guards f\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?t2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_mark_guards_to_terminates_Normal:\n  \"\\<And>s. \\<Gamma>\\<turnstile>mark_guards f c\\<down>Normal s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            c \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof (induct c)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Skip \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>mark_guards f\n                             Throw \\<down> Normal s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f Skip \\<down> Normal s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Skip \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>mark_guards f\n                             Throw \\<down> Normal s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f Skip \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Skip \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>mark_guards f\n   c1 \\<down> Normal s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 c2 \\<down> Normal s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f\n                              (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>mark_guards f\n   c1 \\<down> Normal s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 c2 \\<down> Normal s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f\n                              (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Basic x_) \\<down> Normal s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>mark_guards f\n   c1 \\<down> Normal s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>mark_guards f\n                                 c2 \\<down> Normal s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>mark_guards f\n                              (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f (Basic x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Basic x_ \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Basic x_ \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Spec x_) \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f (Spec x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Spec x_ \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Spec x_ \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s", "obtain\n    termi_merge_c1: \"\\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\" and\n    termi_merge_c2: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>mark_guards f c1,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                           \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f (Seq c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n  c1,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                    c1,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "from termi_merge_c1 Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile> c2 \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "by (auto elim: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "from exec_to_exec_mark_guards [OF exec_c1 False]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards ?f\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'", "have \"\\<Gamma>\\<turnstile>\\<langle>mark_guards f c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards ?f\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                   c1,Normal s\\<rangle> \\<Rightarrow> s'", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "from termi_merge_c2 [rule_format, OF this] Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> s'\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "by (cases s') (auto)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Cond"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (Cond x1_ c1_ c2_) \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c1_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (Cond x1_ c1_ c2_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond x1_ c1_ c2_ \\<down> Normal s", "by (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond x1_ c1_ c2_ \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (While b c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "fix u c'"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume termi_c': \"\\<Gamma>\\<turnstile>c' \\<down> Normal u\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal u\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume c': \"c' = mark_guards f (While b c)\""], ["proof (state)\nthis:\n  c' = mark_guards f (While b c)\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>While b c \\<down> Normal u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal u", "using termi_c' c'"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal u\n  c' = mark_guards f (While b c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal u", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case (WhileTrue s b' c')"], ["proof (state)\nthis:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = mark_guards f (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = mark_guards f (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = mark_guards f (While b c)\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have s_in_b: \"s \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> b", "using WhileTrue"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = mark_guards f (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = mark_guards f (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = mark_guards f (While b c)\n\ngoal (1 subgoal):\n 1. s \\<in> b", "by simp"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have \"\\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s", "using WhileTrue"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = mark_guards f (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = mark_guards f (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = mark_guards f (While b c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "with While.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have hyp_w: \"\\<forall>w. \\<Gamma>\\<turnstile>\\<langle>mark_guards f c,Normal s \\<rangle> \\<Rightarrow> w \\<longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>mark_guards f\nc,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "using WhileTrue"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = mark_guards f (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = mark_guards f (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = mark_guards f (While b c)\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>mark_guards f\nc,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                    c,Normal\n s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "hence \"\\<forall>w. \\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> w \\<longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> w\""], ["proof (prove)\nusing this:\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                    c,Normal\n s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>mark_guards f\nc,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w \\<Longrightarrow>\n    \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w.\n       \\<forall>w.\n          \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n   c,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n          \\<Gamma>\\<turnstile>While b c \\<down> w \\<Longrightarrow>\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "apply (case_tac \"w\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>w x1.\n       \\<lbrakk>\\<forall>w.\n                   \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n            c,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>While b c \\<down> w;\n        w = Normal x1\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                    s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                         \\<Gamma>\\<turnstile>While b c \\<down> w\n 2. \\<And>w x2.\n       \\<lbrakk>\\<forall>w.\n                   \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n            c,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>While b c \\<down> w;\n        w = Abrupt x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                    s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                         \\<Gamma>\\<turnstile>While b c \\<down> w\n 3. \\<And>w x3.\n       \\<lbrakk>\\<forall>w.\n                   \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n            c,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>While b c \\<down> w;\n        w = Fault x3\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                    s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                         \\<Gamma>\\<turnstile>While b c \\<down> w\n 4. \\<And>w.\n       \\<lbrakk>\\<forall>w.\n                   \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n            c,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                   \\<Gamma>\\<turnstile>While b c \\<down> w;\n        w = Stuck\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                    s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n                         \\<Gamma>\\<turnstile>While b c \\<down> w", "apply (auto dest: exec_to_exec_mark_guards)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = mark_guards f (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "using s_in_b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n  s \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  While b_ c_ = mark_guards f (While b c)\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  While b_ c_ = mark_guards f (While b c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>s.\n       Skip = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>fa s.\n       Basic fa = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c fa.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g fa c.\n       \\<lbrakk>s \\<notin> g;\n        Guard fa g c = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c fa.\n       c = mark_guards f (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault fa\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = mark_guards f (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = mark_guards f (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = mark_guards f (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         bdy = mark_guards f (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         Call p = mark_guards f (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 16 subgoals...", "qed auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal u\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>?c'2 \\<down> Normal ?u2;\n   ?c'2 = mark_guards f (While b c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal ?u2\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "with While"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?c'2 \\<down> Normal ?u2;\n   ?c'2 = mark_guards f (While b c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal ?u2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (While b c) \\<down> Normal s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?c'2 \\<down> Normal ?u2;\n   ?c'2 = mark_guards f (While b c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal ?u2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Call x_) \\<down> Normal s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f (Call x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call x_ \\<down> Normal s", "by (fastforce intro: terminates.intros )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call x_ \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case DynCom"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>mark_guards f ?xa \\<down> Normal ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (DynCom x_) \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>mark_guards f\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>mark_guards f ?xa \\<down> Normal ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (DynCom x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom x_ \\<down> Normal s", "by (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom x_ \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (Guard f g c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (Guard f g c) \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (Guard f g c) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "by (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>mark_guards f\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f Throw \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Throw \\<down> Normal s", "by (fastforce intro: terminates.intros )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (Catch c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s", "obtain\n    termi_merge_c1: \"\\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\" and\n    termi_merge_c2: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>mark_guards f c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n                           \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f (Catch c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n  c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                    c1,Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "from termi_merge_c1 Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile> c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from exec_to_exec_mark_guards [OF exec_c1]"], ["proof (chain)\npicking this:\n  \\<not> isFault (Abrupt s') \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards ?f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'", "have \"\\<Gamma>\\<turnstile>\\<langle>mark_guards f c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (prove)\nusing this:\n  \\<not> isFault (Abrupt s') \\<Longrightarrow>\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards ?f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                   c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>mark_guards f\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from termi_merge_c2 [rule_format, OF this] Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal s'\n  \\<Gamma>\\<turnstile>mark_guards f c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>mark_guards f c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>mark_guards f\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>mark_guards f\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>mark_guards f\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_mark_guards_to_terminates:\n  \"\\<Gamma>\\<turnstile>mark_guards f c\\<down>s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>mark_guards f c \\<down> s \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> s", "by (cases s) (auto intro: terminates_mark_guards_to_terminates_Normal)"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{const \"merge_guards\"}\\<close>"], ["", "(* ************************************************************************ *)"], ["", "lemma terminates_to_terminates_merge_guards:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>s\"\n  shows \"\\<Gamma>\\<turnstile>merge_guards c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards c \\<down> s", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards c \\<down> s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "case (Guard s g c f)"], ["proof (state)\nthis:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "have s_in_g: \"s \\<in> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> g", "by fact"], ["proof (state)\nthis:\n  s \\<in> g\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "have termi_merge_c: \"\\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 6. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "proof (cases \"\\<exists>f' g' c'. merge_guards c = Guard f' g' c'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 2. \\<nexists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "case False"], ["proof (state)\nthis:\n  \\<nexists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (2 subgoals):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 2. \\<nexists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "hence \"merge_guards (Guard f g c) = Guard f g (merge_guards c)\""], ["proof (prove)\nusing this:\n  \\<nexists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. merge_guards (Guard f g c) = Guard f g (merge_guards c)", "by (cases \"merge_guards c\") (auto simp add: Let_def)"], ["proof (state)\nthis:\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)\n\ngoal (2 subgoals):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 2. \\<nexists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "with s_in_g termi_merge_c"], ["proof (chain)\npicking this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "case True"], ["proof (state)\nthis:\n  \\<exists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<exists>f' g' c'. merge_guards c = Guard f' g' c'", "obtain f' g' c' where\n      mc: \"merge_guards c = Guard f' g' c'\""], ["proof (prove)\nusing this:\n  \\<exists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. (\\<And>f' g' c'.\n        merge_guards c = Guard f' g' c' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "proof (cases \"f=f'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 2. f \\<noteq> f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "case False"], ["proof (state)\nthis:\n  f \\<noteq> f'\n\ngoal (2 subgoals):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 2. f \\<noteq> f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "with mc"], ["proof (chain)\npicking this:\n  merge_guards c = Guard f' g' c'\n  f \\<noteq> f'", "have \"merge_guards (Guard f g c) = Guard f g (merge_guards c)\""], ["proof (prove)\nusing this:\n  merge_guards c = Guard f' g' c'\n  f \\<noteq> f'\n\ngoal (1 subgoal):\n 1. merge_guards (Guard f g c) = Guard f g (merge_guards c)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)\n\ngoal (2 subgoals):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 2. f \\<noteq> f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "with s_in_g termi_merge_c"], ["proof (chain)\npicking this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "case True"], ["proof (state)\nthis:\n  f = f'\n\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "with mc"], ["proof (chain)\npicking this:\n  merge_guards c = Guard f' g' c'\n  f = f'", "have \"merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'\""], ["proof (prove)\nusing this:\n  merge_guards c = Guard f' g' c'\n  f = f'\n\ngoal (1 subgoal):\n 1. merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'", "by simp"], ["proof (state)\nthis:\n  merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'\n\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "with s_in_g mc True termi_merge_c"], ["proof (chain)\npicking this:\n  s \\<in> g\n  merge_guards c = Guard f' g' c'\n  f = f'\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n  merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> g\n  merge_guards c = Guard f' g' c'\n  f = f'\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n  merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "by (cases \"s \\<in> g'\")\n           (auto intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 5. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 5. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\nA total of 17 subgoals...", "case (GuardFault s g f c)"], ["proof (state)\nthis:\n  s \\<notin> g\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 5. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\nA total of 17 subgoals...", "have \"s \\<notin> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> g", "by fact"], ["proof (state)\nthis:\n  s \\<notin> g\n\ngoal (17 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>s g f c.\n       s \\<notin> g \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n 5. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        s \\<notin> b \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<notin> g\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "by (cases \"merge_guards c\")\n       (auto intro: terminates.intros split: if_split_asm simp add: Let_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal (16 subgoals):\n 1. \\<And>s. \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n 2. \\<And>f s. \\<Gamma>\\<turnstile>merge_guards (Basic f) \\<down> Normal s\n 3. \\<And>r s. \\<Gamma>\\<turnstile>merge_guards (Spec r) \\<down> Normal s\n 4. \\<And>c f. \\<Gamma>\\<turnstile>merge_guards c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>1 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c\\<^sub>2 \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> s'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       s \\<notin> b \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards bdy \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>merge_guards\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "qed (fastforce intro: terminates.intros dest: exec_merge_guards_to_exec)+"], ["", "lemma terminates_merge_guards_to_terminates_Normal:\n  shows \"\\<And>s. \\<Gamma>\\<turnstile>merge_guards c\\<down>Normal s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof (induct c)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Skip \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>merge_guards\n                             Throw \\<down> Normal s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n\ngoal (11 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Skip \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 5. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 6. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 7. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 8. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 9. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile>merge_guards\n                             Throw \\<down> Normal s \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards Skip \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Skip \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>merge_guards\n   c1 \\<down> Normal s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>merge_guards\n                                 c2 \\<down> Normal s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards\n                              (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>merge_guards\n   c1 \\<down> Normal s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>merge_guards\n                                 c2 \\<down> Normal s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards\n                              (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Basic x_) \\<down> Normal s\n\ngoal (10 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Basic x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic x \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 4. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 5. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 6. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 7. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 8. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c1 c2 s.\n        \\<lbrakk>\\<And>s.\n                    \\<Gamma>\\<turnstile>merge_guards\n   c1 \\<down> Normal s \\<Longrightarrow>\n                    \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n         \\<And>s.\n            \\<Gamma>\\<turnstile>merge_guards\n                                 c2 \\<down> Normal s \\<Longrightarrow>\n            \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n         \\<Gamma>\\<turnstile>merge_guards\n                              (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Basic x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Basic x_ \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Basic x_ \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Spec x_) \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Spec x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec x \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 3. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 4. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 5. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 6. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 7. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Spec x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Spec x_ \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Spec x_ \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (Seq c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (Seq c1 c2) \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>merge_guards (Seq c1 c2) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Seq c1 c2) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Seq c1 c2) \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards (Seq c1 c2) \\<down> Normal s", "obtain\n    termi_merge_c1: \"\\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\" and\n    termi_merge_c2: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>merge_guards c1,Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n                           \\<Gamma>\\<turnstile>merge_guards c2 \\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Seq c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>merge_guards\n  c1,Normal s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>merge_guards c2 \\<down> s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                    c1,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>merge_guards c2 \\<down> s'\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "from termi_merge_c1 Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile> c2 \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "from exec_to_exec_merge_guards [OF exec_c1]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'", "have \"\\<Gamma>\\<turnstile>\\<langle>merge_guards c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                   c1,Normal s\\<rangle> \\<Rightarrow> s'", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "from termi_merge_c2 [rule_format, OF this] Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> s'\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> s'\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "by (cases s') (auto)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (8 subgoals):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Seq c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n 2. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 3. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 4. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 5. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 6. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Cond"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c1_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (Cond x1_ c1_ c2_) \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Cond x1 c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond x1 c1 c2 \\<down> Normal s\n 2. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 3. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 4. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 5. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c1_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2_ \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2_ \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (Cond x1_ c1_ c2_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond x1_ c1_ c2_ \\<down> Normal s", "by (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond x1_ c1_ c2_ \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (While b c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "fix u c'"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume termi_c': \"\\<Gamma>\\<turnstile>c' \\<down> Normal u\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal u\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume c': \"c' = merge_guards (While b c)\""], ["proof (state)\nthis:\n  c' = merge_guards (While b c)\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>While b c \\<down> Normal u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal u", "using termi_c' c'"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal u\n  c' = merge_guards (While b c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal u", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case (WhileTrue s b' c')"], ["proof (state)\nthis:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = merge_guards (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = merge_guards (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = merge_guards (While b c)\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have s_in_b: \"s \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> b", "using WhileTrue"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = merge_guards (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = merge_guards (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = merge_guards (While b c)\n\ngoal (1 subgoal):\n 1. s \\<in> b", "by simp"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have \"\\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s", "using WhileTrue"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = merge_guards (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = merge_guards (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = merge_guards (While b c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "with While.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "have hyp_w: \"\\<forall>w. \\<Gamma>\\<turnstile>\\<langle>merge_guards c,Normal s \\<rangle> \\<Rightarrow> w \\<longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>merge_guards\nc,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "using WhileTrue"], ["proof (prove)\nusing this:\n  s \\<in> b'\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c' = merge_guards (While b c) \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c' \\<down> s' \\<and>\n     (While b' c' = merge_guards (While b c) \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  While b' c' = merge_guards (While b c)\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>merge_guards\nc,Normal s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "by simp"], ["proof (state)\nthis:\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                    c,Normal\n s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "hence \"\\<forall>w. \\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> w \\<longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> w\""], ["proof (prove)\nusing this:\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                    c,Normal\n s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> w", "by (simp add: exec_iff_exec_merge_guards [symmetric])"], ["proof (state)\nthis:\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         c = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = merge_guards (While b c) \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "using s_in_b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>w.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> w \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> w\n  s \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  While b_ c_ = merge_guards (While b c)\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba;\n         While ba c = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  While b_ c_ = merge_guards (While b c)\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>s.\n       Skip = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>f s.\n       Basic f = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>r s.\n       Spec r = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        c = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        Guard f g c = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>c f.\n       c = merge_guards (While b c) \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = merge_guards (While b c) \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        c\\<^sub>1 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        c\\<^sub>2 = merge_guards (While b c) \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = merge_guards (While b c)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         bdy = merge_guards (While b c) \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>While b c \\<down> Normal s;\n         Call p = merge_guards (While b c)\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 16 subgoals...", "qed auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal u\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>?c'2 \\<down> Normal ?u2;\n   ?c'2 = merge_guards (While b c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal ?u2\n\ngoal (6 subgoals):\n 1. \\<And>x1 c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (While x1 c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While x1 c \\<down> Normal s\n 2. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 3. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 4. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "with While"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?c'2 \\<down> Normal ?u2;\n   ?c'2 = merge_guards (While b c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal ?u2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (While b c) \\<down> Normal s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?c'2 \\<down> Normal ?u2;\n   ?c'2 = merge_guards (While b c)\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal ?u2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Call x_) \\<down> Normal s\n\ngoal (5 subgoals):\n 1. \\<And>x s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            (Call x) \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Call x \\<down> Normal s\n 2. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 3. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Call x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call x_ \\<down> Normal s", "by (fastforce intro: terminates.intros )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call x_ \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case DynCom"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>merge_guards ?xa \\<down> Normal ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (DynCom x_) \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>xa s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>merge_guards\n   xa \\<down> Normal s\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>xa \\<down> Normal\n                               s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (DynCom x) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s\n 2. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> range x_;\n   \\<Gamma>\\<turnstile>merge_guards ?xa \\<down> Normal ?s\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (DynCom x_) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom x_ \\<down> Normal s", "by (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom x_ \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (Guard f g c)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have termi_merge: \"\\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Guard x1 x2a c) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard x1 x2a c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "proof (cases \"\\<exists>f' g' c'. merge_guards c = Guard f' g' c'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<nexists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "case False"], ["proof (state)\nthis:\n  \\<nexists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (2 subgoals):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<nexists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "hence m: \"merge_guards (Guard f g c) = Guard f g (merge_guards c)\""], ["proof (prove)\nusing this:\n  \\<nexists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. merge_guards (Guard f g c) = Guard f g (merge_guards c)", "by (cases \"merge_guards c\") (auto simp add: Let_def)"], ["proof (state)\nthis:\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)\n\ngoal (2 subgoals):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<nexists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "from termi_merge Guard.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "by (simp only: m)\n         (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "case True"], ["proof (state)\nthis:\n  \\<exists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<exists>f' g' c'. merge_guards c = Guard f' g' c'", "obtain f' g' c' where\n      mc: \"merge_guards c = Guard f' g' c'\""], ["proof (prove)\nusing this:\n  \\<exists>f' g' c'. merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. (\\<And>f' g' c'.\n        merge_guards c = Guard f' g' c' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  merge_guards c = Guard f' g' c'\n\ngoal (1 subgoal):\n 1. \\<exists>f' g' c'. merge_guards c = Guard f' g' c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "proof (cases \"f=f'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. f \\<noteq> f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "case False"], ["proof (state)\nthis:\n  f \\<noteq> f'\n\ngoal (2 subgoals):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. f \\<noteq> f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "with mc"], ["proof (chain)\npicking this:\n  merge_guards c = Guard f' g' c'\n  f \\<noteq> f'", "have m: \"merge_guards (Guard f g c) = Guard f g (merge_guards c)\""], ["proof (prove)\nusing this:\n  merge_guards c = Guard f' g' c'\n  f \\<noteq> f'\n\ngoal (1 subgoal):\n 1. merge_guards (Guard f g c) = Guard f g (merge_guards c)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  merge_guards (Guard f g c) = Guard f g (merge_guards c)\n\ngoal (2 subgoals):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. f \\<noteq> f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "from termi_merge Guard.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "by (simp only: m)\n         (fastforce intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "case True"], ["proof (state)\nthis:\n  f = f'\n\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "with mc"], ["proof (chain)\npicking this:\n  merge_guards c = Guard f' g' c'\n  f = f'", "have m: \"merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'\""], ["proof (prove)\nusing this:\n  merge_guards c = Guard f' g' c'\n  f = f'\n\ngoal (1 subgoal):\n 1. merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'", "by simp"], ["proof (state)\nthis:\n  merge_guards (Guard f g c) = Guard f (g \\<inter> g') c'\n\ngoal (1 subgoal):\n 1. f = f' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "from termi_merge Guard.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Guard f g c) \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "by (simp only: m mc)\n           (auto intro: terminates.intros elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards Throw \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile>merge_guards\n                            Throw \\<down> Normal s \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards Throw \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Throw \\<down> Normal s", "by (fastforce intro: terminates.intros )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "case (Catch c1 c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards (Catch c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>merge_guards (Catch c1 c2) \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards (Catch c1 c2) \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards (Catch c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards (Catch c1 c2) \\<down> Normal s", "obtain\n    termi_merge_c1: \"\\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\" and\n    termi_merge_c2: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>merge_guards c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n                           \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards (Catch c1 c2) \\<down> Normal s\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>merge_guards\n  c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                    c1,Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "from termi_merge_c1 Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile> c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from exec_to_exec_merge_guards [OF exec_c1]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'", "have \"\\<Gamma>\\<turnstile>\\<langle>merge_guards c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                   c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s'", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>merge_guards\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from termi_merge_c2 [rule_format, OF this] Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal s'\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal s'\n  \\<Gamma>\\<turnstile>merge_guards c1 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>merge_guards c2 \\<down> Normal ?s \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "by iprover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<And>c1 c2 s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>\\<turnstile>merge_guards\n  c1 \\<down> Normal s \\<Longrightarrow>\n                   \\<Gamma>\\<turnstile>c1 \\<down> Normal s;\n        \\<And>s.\n           \\<Gamma>\\<turnstile>merge_guards\n                                c2 \\<down> Normal s \\<Longrightarrow>\n           \\<Gamma>\\<turnstile>c2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile>merge_guards\n                             (Catch c1 c2) \\<down> Normal s\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma terminates_merge_guards_to_terminates:\n   \"\\<Gamma>\\<turnstile>merge_guards c\\<down> s \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>merge_guards c \\<down> s \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> s", "by (cases s) (auto intro: terminates_merge_guards_to_terminates_Normal)"], ["", "theorem terminates_iff_terminates_merge_guards:\n  \"\\<Gamma>\\<turnstile>c\\<down> s = \\<Gamma>\\<turnstile>merge_guards c\\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s =\n    \\<Gamma>\\<turnstile>merge_guards c \\<down> s", "by (iprover intro: terminates_to_terminates_merge_guards\n    terminates_merge_guards_to_terminates)"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{term \"c\\<^sub>1 \\<subseteq>\\<^sub>g c\\<^sub>2\"}\\<close>"], ["", "(* ************************************************************************ *)"], ["", "lemma terminates_fewer_guards_Normal:\n  shows \"\\<And>c s. \\<lbrakk>\\<Gamma>\\<turnstile>c'\\<down>Normal s; c \\<subseteq>\\<^sub>g c'; \\<Gamma>\\<turnstile>\\<langle>c',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\\<rbrakk>\n              \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g c';\n        \\<Gamma>\\<turnstile> \\<langle>c',Normal\n    s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof (induct c')"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Skip \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Skip;\n        \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Basic x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Basic x;\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n         c \\<subseteq>\\<^sub>g Throw;\n         \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n        s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\nA total of 11 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Skip\n  \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (11 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Skip \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Skip;\n        \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Basic x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Basic x;\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n         c \\<subseteq>\\<^sub>g Throw;\n         \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n        s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Skip\n  \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros dest: subseteq_guardsD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (10 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Basic x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Basic x;\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 10. \\<And>c'1 c'2 c s.\n        \\<lbrakk>\\<And>c s.\n                    \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                     c \\<subseteq>\\<^sub>g c'1;\n                     \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                  s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal\n                               s;\n         \\<And>c s.\n            \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n             c \\<subseteq>\\<^sub>g c'2;\n             \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n          s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n         c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n         \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n  c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Basic x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Basic x;\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 10. \\<And>c'1 c'2 c s.\n        \\<lbrakk>\\<And>c s.\n                    \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                     c \\<subseteq>\\<^sub>g c'1;\n                     \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                  s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal\n                               s;\n         \\<And>c s.\n            \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n             c \\<subseteq>\\<^sub>g c'2;\n             \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n          s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n         c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n         \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n  c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Basic x_ \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Basic x_\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 x_,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (10 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Basic x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Basic x;\n        \\<Gamma>\\<turnstile> \\<langle>Basic\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 10. \\<And>c'1 c'2 c s.\n        \\<lbrakk>\\<And>c s.\n                    \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                     c \\<subseteq>\\<^sub>g c'1;\n                     \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                  s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal\n                               s;\n         \\<And>c s.\n            \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n             c \\<subseteq>\\<^sub>g c'2;\n             \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n          s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n         c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n         \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n  c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Basic x_ \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Basic x_\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 x_,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros dest: subseteq_guardsD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Spec x_ \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Spec x_\n  \\<Gamma>\\<turnstile> \\<langle>Spec\n                                 x_,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (9 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Spec x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Spec x;\n        \\<Gamma>\\<turnstile> \\<langle>Spec\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 9. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Spec x_ \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Spec x_\n  \\<Gamma>\\<turnstile> \\<langle>Spec\n                                 x_,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros dest: subseteq_guardsD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case (Seq c1' c2')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>c1' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c1';\n   \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<lbrakk>\\<Gamma>\\<turnstile>c2' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c2';\n   \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>Seq c1' c2' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Seq c1' c2'\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have termi: \"\\<Gamma>\\<turnstile>Seq c1' c2' \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1' c2' \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1' c2' \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Seq c1' c2' \\<down> Normal s", "obtain\n    termi_c1': \"\\<Gamma>\\<turnstile>c1'\\<down> Normal s\" and\n    termi_c2': \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow> s' \\<longrightarrow> \\<Gamma>\\<turnstile>c2'\\<down> s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Seq c1' c2' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>c1' \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>c2' \\<down> s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2' \\<down> s'\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>Seq c1' c2',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Seq c1'\n                                   c2',Normal\n  s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "hence noFault_c1': \"\\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"c \\<subseteq>\\<^sub>g Seq c1' c2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<subseteq>\\<^sub>g Seq c1' c2'", "by fact"], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g Seq c1' c2'\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from subseteq_guards_Seq [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c1'a c2'a.\n     c = Seq c1'a c2'a \\<and>\n     (c1'a \\<subseteq>\\<^sub>g c1') \\<and> (c2'a \\<subseteq>\\<^sub>g c2')", "obtain c1 c2 where\n    c: \"c = Seq c1 c2\" and\n    c1_c1': \"c1 \\<subseteq>\\<^sub>g c1'\" and\n    c2_c2': \"c2 \\<subseteq>\\<^sub>g c2'\""], ["proof (prove)\nusing this:\n  \\<exists>c1'a c2'a.\n     c = Seq c1'a c2'a \\<and>\n     (c1'a \\<subseteq>\\<^sub>g c1') \\<and> (c2'a \\<subseteq>\\<^sub>g c2')\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c = Seq c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n         c2 \\<subseteq>\\<^sub>g c2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c = Seq c1 c2\n  c1 \\<subseteq>\\<^sub>g c1'\n  c2 \\<subseteq>\\<^sub>g c2'\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi_c1' c1_c1' noFault_c1'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  c1 \\<subseteq>\\<^sub>g c1'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "have \"\\<Gamma>\\<turnstile>c1\\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  c1 \\<subseteq>\\<^sub>g c1'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (rule Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "fix t"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>c2\\<down> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "from exec_to_exec_subseteq_guards [OF c1_c1' exec_c1]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault t \\<longrightarrow> isFault t') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = t)", "obtain t' where\n        exec_c1': \"\\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t_Fault: \"isFault t \\<longrightarrow> isFault t'\" and\n        t'_noFault: \"\\<not> isFault t' \\<longrightarrow> t' = t\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault t \\<longrightarrow> isFault t') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = t)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1',Normal\n              s\\<rangle> \\<Rightarrow> t';\n         isFault t \\<longrightarrow> isFault t';\n         \\<not> isFault t' \\<longrightarrow> t' = t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  isFault t \\<longrightarrow> isFault t'\n  \\<not> isFault t' \\<longrightarrow> t' = t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "proof (cases \"isFault t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "case True"], ["proof (state)\nthis:\n  isFault t'\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "with exec_c1' noFault_c1'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  isFault t'", "have False"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  isFault t'\n\ngoal (1 subgoal):\n 1. False", "by (fastforce elim: isFaultE dest: Fault_end simp add: final_notin_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "case False"], ["proof (state)\nthis:\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "with t'_noFault"], ["proof (chain)\npicking this:\n  \\<not> isFault t' \\<longrightarrow> t' = t\n  \\<not> isFault t'", "have t': \"t'=t\""], ["proof (prove)\nusing this:\n  \\<not> isFault t' \\<longrightarrow> t' = t\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. t' = t", "by simp"], ["proof (state)\nthis:\n  t' = t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "with termi_c2' exec_c1'"], ["proof (chain)\npicking this:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2' \\<down> s'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = t", "have termi_c2': \"\\<Gamma>\\<turnstile>c2'\\<down> t\""], ["proof (prove)\nusing this:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2' \\<down> s'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2' \\<down> t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2' \\<down> t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "proof (cases t)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "case Fault"], ["proof (state)\nthis:\n  t = Fault x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 3. \\<And>x3.\n       t = Fault x3 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 4. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Fault x3_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "case Abrupt"], ["proof (state)\nthis:\n  t = Abrupt x2_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. \\<And>x2.\n       t = Abrupt x2 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 3. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Abrupt x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "case Stuck"], ["proof (state)\nthis:\n  t = Stuck\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t\n 2. t = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Stuck\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "case (Normal u)"], ["proof (state)\nthis:\n  t = Normal u\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "with noFault exec_c1' t'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = t\n  t = Normal u", "have \"\\<Gamma>\\<turnstile>\\<langle>c2',Normal u \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = t\n  t = Normal u\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n u\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "from termi_c2' [simplified Normal] c2_c2' this"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal u\n  c2 \\<subseteq>\\<^sub>g c2'\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "have \"\\<Gamma>\\<turnstile>c2 \\<down> Normal u\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal u\n  c2 \\<subseteq>\\<^sub>g c2'\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal u", "by (rule Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal u\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Normal x1 \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> t", "with Normal exec_c1"], ["proof (chain)\npicking this:\n  t = Normal u\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal u", "show ?thesis"], ["proof (prove)\nusing this:\n  t = Normal u\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal u\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> t\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?t2\n\ngoal (8 subgoals):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Seq c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Seq c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Seq c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 8. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?t2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "using c"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> ?t2\n  c = Seq c1 c2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case (Cond b c1' c2')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>c1' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c1';\n   \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<lbrakk>\\<Gamma>\\<turnstile>c2' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c2';\n   \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Cond b c1' c2'\n  \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>Cond b c1' c2',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                   c2',Normal\n  s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have termi: \"\\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"c \\<subseteq>\\<^sub>g Cond b c1' c2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<subseteq>\\<^sub>g Cond b c1' c2'", "by fact"], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g Cond b c1' c2'\n\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from subseteq_guards_Cond [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c1'a c2'a.\n     c = Cond b c1'a c2'a \\<and>\n     (c1'a \\<subseteq>\\<^sub>g c1') \\<and> (c2'a \\<subseteq>\\<^sub>g c2')", "obtain c1 c2 where\n    c: \"c = Cond b c1 c2\" and\n    c1_c1': \"c1 \\<subseteq>\\<^sub>g c1'\" and\n    c2_c2': \"c2 \\<subseteq>\\<^sub>g c2'\""], ["proof (prove)\nusing this:\n  \\<exists>c1'a c2'a.\n     c = Cond b c1'a c2'a \\<and>\n     (c1'a \\<subseteq>\\<^sub>g c1') \\<and> (c2'a \\<subseteq>\\<^sub>g c2')\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n         c2 \\<subseteq>\\<^sub>g c2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c = Cond b c1 c2\n  c1 \\<subseteq>\\<^sub>g c1'\n  c2 \\<subseteq>\\<^sub>g c2'\n\ngoal (7 subgoals):\n 1. \\<And>x1 c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Cond x1 c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Cond x1 c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Cond x1 c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 7. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  c = Cond b c1 c2\n  c1 \\<subseteq>\\<^sub>g c1'\n  c2 \\<subseteq>\\<^sub>g c2'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof (cases \"s \\<in> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<in> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case True"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<in> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with termi"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\n  s \\<in> b", "have termi_c1': \"\\<Gamma>\\<turnstile>c1' \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\n  s \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1' \\<down> Normal s", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<in> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from True noFault"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault", "have \"\\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<in> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi_c1' c1_c1' this"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  c1 \\<subseteq>\\<^sub>g c1'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "have \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  c1 \\<subseteq>\\<^sub>g c1'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (rule Cond.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<in> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with True c"], ["proof (chain)\npicking this:\n  s \\<in> b\n  c = Cond b c1 c2\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> b\n  c = Cond b c1 c2\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case False"], ["proof (state)\nthis:\n  s \\<notin> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with termi"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\n  s \\<notin> b", "have termi_c2': \"\\<Gamma>\\<turnstile>c2' \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Cond b c1' c2' \\<down> Normal s\n  s \\<notin> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2' \\<down> Normal s", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from False noFault"], ["proof (chain)\npicking this:\n  s \\<notin> b\n  \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault", "have \"\\<Gamma>\\<turnstile>\\<langle>c2',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  s \\<notin> b\n  \\<Gamma>\\<turnstile> \\<langle>Cond b c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi_c2' c2_c2' this"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal s\n  c2 \\<subseteq>\\<^sub>g c2'\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "have \"\\<Gamma>\\<turnstile>c2 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal s\n  c2 \\<subseteq>\\<^sub>g c2'\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s", "by (rule Cond.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = Cond b c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n     c2 \\<subseteq>\\<^sub>g c2'; s \\<notin> b\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with False c"], ["proof (chain)\npicking this:\n  s \\<notin> b\n  c = Cond b c1 c2\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<notin> b\n  c = Cond b c1 c2\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case (While b c')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c';\n   \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                     ?s\\<rangle> \\<Rightarrow>\\<notin>range\n                                 Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>While b c' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>While b c',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have termi: \"\\<Gamma>\\<turnstile>While b c' \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c' \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c' \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"c \\<subseteq>\\<^sub>g While b c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<subseteq>\\<^sub>g While b c'", "by fact"], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g While b c'\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from subseteq_guards_While [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c''. c = While b c'' \\<and> (c'' \\<subseteq>\\<^sub>g c')", "obtain c'' where\n    c: \"c = While b c''\" and\n    c''_c': \"c'' \\<subseteq>\\<^sub>g c'\""], ["proof (prove)\nusing this:\n  \\<exists>c''. c = While b c'' \\<and> (c'' \\<subseteq>\\<^sub>g c')\n\ngoal (1 subgoal):\n 1. (\\<And>c''.\n        \\<lbrakk>c = While b c''; c'' \\<subseteq>\\<^sub>g c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c = While b c''\n  c'' \\<subseteq>\\<^sub>g c'\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "{"], ["proof (state)\nthis:\n  c = While b c''\n  c'' \\<subseteq>\\<^sub>g c'\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "fix d u"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume termi: \"\\<Gamma>\\<turnstile>d \\<down> u\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>d \\<down> u\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume d: \"d = While b c'\""], ["proof (state)\nthis:\n  d = While b c'\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume noFault: \"\\<Gamma>\\<turnstile>\\<langle>While b c',u \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',u\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>While b c'' \\<down> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> u", "using termi d noFault"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>d \\<down> u\n  d = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',u\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> u", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "case (WhileTrue u b' c''')"], ["proof (state)\nthis:\n  u \\<in> b'\n  \\<Gamma>\\<turnstile>c''' \\<down> Normal u\n  \\<lbrakk>c''' = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c''',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c''' \\<down> s' \\<and>\n     (While b' c''' = While b c' \\<longrightarrow>\n      \\<Gamma>\\<turnstile> \\<langle>While b\n                                     c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                    Fault \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c'' \\<down> s')\n  While b' c''' = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "have u_in_b: \"u \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> b", "using WhileTrue"], ["proof (prove)\nusing this:\n  u \\<in> b'\n  \\<Gamma>\\<turnstile>c''' \\<down> Normal u\n  \\<lbrakk>c''' = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c''',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c''' \\<down> s' \\<and>\n     (While b' c''' = While b c' \\<longrightarrow>\n      \\<Gamma>\\<turnstile> \\<langle>While b\n                                     c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                    Fault \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c'' \\<down> s')\n  While b' c''' = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. u \\<in> b", "by simp"], ["proof (state)\nthis:\n  u \\<in> b\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "have termi_c': \"\\<Gamma>\\<turnstile>c' \\<down> Normal u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c' \\<down> Normal u", "using WhileTrue"], ["proof (prove)\nusing this:\n  u \\<in> b'\n  \\<Gamma>\\<turnstile>c''' \\<down> Normal u\n  \\<lbrakk>c''' = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c''',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c''' \\<down> s' \\<and>\n     (While b' c''' = While b c' \\<longrightarrow>\n      \\<Gamma>\\<turnstile> \\<langle>While b\n                                     c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                    Fault \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c'' \\<down> s')\n  While b' c''' = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c' \\<down> Normal u", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal u\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>While b c',Normal u \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c',Normal\n u\\<rangle> \\<Rightarrow>\\<notin>range Fault", "using WhileTrue"], ["proof (prove)\nusing this:\n  u \\<in> b'\n  \\<Gamma>\\<turnstile>c''' \\<down> Normal u\n  \\<lbrakk>c''' = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c''',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c''' \\<down> s' \\<and>\n     (While b' c''' = While b c' \\<longrightarrow>\n      \\<Gamma>\\<turnstile> \\<langle>While b\n                                     c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                    Fault \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c'' \\<down> s')\n  While b' c''' = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c',Normal\n u\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "hence noFault_c': \"\\<Gamma>\\<turnstile>\\<langle>c',Normal u \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault", "using u_in_b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  u \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                    u\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "from While.hyps [OF termi_c' c''_c' this]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u", "have \"\\<Gamma>\\<turnstile>c'' \\<down> Normal u\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c'' \\<down> Normal u", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "from WhileTrue"], ["proof (chain)\npicking this:\n  u \\<in> b'\n  \\<Gamma>\\<turnstile>c''' \\<down> Normal u\n  \\<lbrakk>c''' = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c''',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c''' \\<down> s' \\<and>\n     (While b' c''' = While b c' \\<longrightarrow>\n      \\<Gamma>\\<turnstile> \\<langle>While b\n                                     c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                    Fault \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c'' \\<down> s')\n  While b' c''' = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "have hyp_w: \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>c',Normal u \\<rangle> \\<Rightarrow> s'  \\<longrightarrow> \\<Gamma>\\<turnstile>\\<langle>While b c',s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\n                        \\<longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> s'\""], ["proof (prove)\nusing this:\n  u \\<in> b'\n  \\<Gamma>\\<turnstile>c''' \\<down> Normal u\n  \\<lbrakk>c''' = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',Normal\nu\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c''',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b' c''' \\<down> s' \\<and>\n     (While b' c''' = While b c' \\<longrightarrow>\n      \\<Gamma>\\<turnstile> \\<langle>While b\n                                     c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                    Fault \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c'' \\<down> s')\n  While b' c''' = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<forall>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c',Normal\n   u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n       \\<Gamma>\\<turnstile> \\<langle>While b\nc',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n       \\<Gamma>\\<turnstile>While b c'' \\<down> s'", "by simp"], ["proof (state)\nthis:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile> \\<langle>While b\n                                    c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                   Fault \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c'' \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "{"], ["proof (state)\nthis:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n u\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile> \\<langle>While b\n                                    c',s'\\<rangle> \\<Rightarrow>\\<notin>range\n                                   Fault \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c'' \\<down> s'\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "fix v"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "assume exec_c'': \"\\<Gamma>\\<turnstile>\\<langle>c'',Normal u \\<rangle> \\<Rightarrow> v\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c'',Normal u\\<rangle> \\<Rightarrow> v\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "have \"\\<Gamma>\\<turnstile>While b c'' \\<down> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> v", "from exec_to_exec_subseteq_guards [OF c''_c' exec_c'']"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n u\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault v \\<longrightarrow> isFault t') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = v)", "obtain v' where\n            exec_c': \"\\<Gamma>\\<turnstile>\\<langle>c',Normal u \\<rangle> \\<Rightarrow> v'\" and\n            v_Fault: \"isFault v \\<longrightarrow> isFault v'\" and\n            v'_noFault: \"\\<not> isFault v' \\<longrightarrow> v' = v\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c',Normal\n u\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault v \\<longrightarrow> isFault t') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = v)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c',Normal\n             u\\<rangle> \\<Rightarrow> v';\n         isFault v \\<longrightarrow> isFault v';\n         \\<not> isFault v' \\<longrightarrow> v' = v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal u\\<rangle> \\<Rightarrow> v'\n  isFault v \\<longrightarrow> isFault v'\n  \\<not> isFault v' \\<longrightarrow> v' = v\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> v", "proof (cases \"isFault v'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault v' \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> v\n 2. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "case True"], ["proof (state)\nthis:\n  isFault v'\n\ngoal (2 subgoals):\n 1. isFault v' \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> v\n 2. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "with exec_c' noFault u_in_b"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal u\\<rangle> \\<Rightarrow> v'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  u \\<in> b\n  isFault v'", "have False"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal u\\<rangle> \\<Rightarrow> v'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  u \\<in> b\n  isFault v'\n\ngoal (1 subgoal):\n 1. False", "by (fastforce\n                   simp add: final_notin_def intro: exec.intros elim: isFaultE)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. isFault v' \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> v\n 2. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> v", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> v\n\ngoal (1 subgoal):\n 1. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "case False"], ["proof (state)\nthis:\n  \\<not> isFault v'\n\ngoal (1 subgoal):\n 1. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "with v'_noFault"], ["proof (chain)\npicking this:\n  \\<not> isFault v' \\<longrightarrow> v' = v\n  \\<not> isFault v'", "have v': \"v'=v\""], ["proof (prove)\nusing this:\n  \\<not> isFault v' \\<longrightarrow> v' = v\n  \\<not> isFault v'\n\ngoal (1 subgoal):\n 1. v' = v", "by simp"], ["proof (state)\nthis:\n  v' = v\n\ngoal (1 subgoal):\n 1. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "with noFault exec_c' u_in_b"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal u\\<rangle> \\<Rightarrow> v'\n  u \\<in> b\n  v' = v", "have \"\\<Gamma>\\<turnstile>\\<langle>While b c',v \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     u\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal u\\<rangle> \\<Rightarrow> v'\n  u \\<in> b\n  v' = v\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c',v\\<rangle> \\<Rightarrow>\\<notin>range\n                                 Fault", "by (fastforce simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',v\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (1 subgoal):\n 1. \\<not> isFault v' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c'' \\<down> v", "from hyp_w [rule_format, OF exec_c' [simplified v'] this]"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> v", "show \"\\<Gamma>\\<turnstile>While b c'' \\<down> v\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> v\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> v", "."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> v\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c'',Normal\n                                     u\\<rangle> \\<Rightarrow> ?v2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c'' \\<down> ?v2\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<lbrakk>c = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While ba c \\<down> s' \\<and>\n            (While ba c = While b c' \\<longrightarrow>\n             \\<Gamma>\\<turnstile> \\<langle>While b\n      c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n         While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 18 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u\n  \\<Gamma>\\<turnstile> \\<langle>c'',Normal\n                                     u\\<rangle> \\<Rightarrow> ?v2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c'' \\<down> ?v2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u\n  \\<Gamma>\\<turnstile> \\<langle>c'',Normal\n                                     u\\<rangle> \\<Rightarrow> ?v2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c'' \\<down> ?v2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u", "using u_in_b"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal u\n  \\<Gamma>\\<turnstile> \\<langle>c'',Normal\n                                     u\\<rangle> \\<Rightarrow> ?v2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>While b c'' \\<down> ?v2\n  u \\<in> b\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> Normal u\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba; While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba; While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 17 subgoals...", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  While b_ c_ = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>range\n                                 Fault\n\ngoal (17 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>s ba c.\n        \\<lbrakk>s \\<notin> ba; While ba c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  While b_ c_ = While b c'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>range\n                                 Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>Skip = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 2. \\<And>f s.\n       \\<lbrakk>Basic f = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 3. \\<And>r s.\n       \\<lbrakk>Spec r = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<lbrakk>c = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g; Guard f g c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 6. \\<And>c f.\n       \\<lbrakk>c = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Fault f\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (c\\<^sub>2 = While b c' \\<longrightarrow>\n            \\<Gamma>\\<turnstile> \\<langle>While b\n     c',s'\\<rangle> \\<Rightarrow>\\<notin>range Fault \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c'' \\<down> s');\n        Seq c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 8. \\<And>s ba c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> ba; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>1 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 9. \\<And>s ba c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> ba;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<lbrakk>c\\<^sub>2 = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n        Cond ba c\\<^sub>1 c\\<^sub>2 = While b c';\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<lbrakk>bdy = While b c';\n          \\<Gamma>\\<turnstile> \\<langle>While b\n   c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s;\n         Call p = While b c';\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> Normal s\nA total of 16 subgoals...", "qed auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c'' \\<down> u\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>?d2 \\<down> ?u2; ?d2 = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',?u2\\<rangle> \\<Rightarrow>\\<notin>range\n                                  Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> ?u2\n\ngoal (6 subgoals):\n 1. \\<And>x1 c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>While x1 c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g While x1 c';\n        \\<Gamma>\\<turnstile> \\<langle>While x1\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 6. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with c noFault termi"], ["proof (chain)\npicking this:\n  c = While b c''\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  \\<Gamma>\\<turnstile>While b c' \\<down> Normal s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?d2 \\<down> ?u2; ?d2 = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',?u2\\<rangle> \\<Rightarrow>\\<notin>range\n                                  Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> ?u2", "show ?case"], ["proof (prove)\nusing this:\n  c = While b c''\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  \\<Gamma>\\<turnstile>While b c' \\<down> Normal s\n  \\<lbrakk>\\<Gamma>\\<turnstile>?d2 \\<down> ?u2; ?d2 = While b c';\n   \\<Gamma>\\<turnstile> \\<langle>While b\n                                  c',?u2\\<rangle> \\<Rightarrow>\\<notin>range\n                                  Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c'' \\<down> ?u2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (5 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call x_ \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Call x_\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 x_,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (5 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Call x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Call x;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 5. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Call x_ \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Call x_\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 x_,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros dest: subseteq_guardsD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case (DynCom C')"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> range C'; \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g ?xa;\n   \\<Gamma>\\<turnstile> \\<langle>?xa,Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>DynCom C' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g DynCom C'\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 C',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have termi: \"\\<Gamma>\\<turnstile>DynCom C' \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom C' \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom C' \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "hence termi_C': \"\\<Gamma>\\<turnstile>C' s \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>DynCom C' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>C' s \\<down> Normal s", "by cases"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>C' s \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>DynCom C',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                   C',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 C',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "hence noFault_C': \"\\<Gamma>\\<turnstile>\\<langle>C' s,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 C',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>C' s,Normal\n  s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>C' s,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"c \\<subseteq>\\<^sub>g DynCom C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<subseteq>\\<^sub>g DynCom C'", "by fact"], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g DynCom C'\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from subseteq_guards_DynCom [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>C'a.\n     c = DynCom C'a \\<and> (\\<forall>s. C'a s \\<subseteq>\\<^sub>g C' s)", "obtain C where\n    c: \"c = DynCom C\" and\n    C_C': \"\\<forall>s. C s \\<subseteq>\\<^sub>g C' s\""], ["proof (prove)\nusing this:\n  \\<exists>C'a.\n     c = DynCom C'a \\<and> (\\<forall>s. C'a s \\<subseteq>\\<^sub>g C' s)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>c = DynCom C;\n         \\<forall>s. C s \\<subseteq>\\<^sub>g C' s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c = DynCom C\n  \\<forall>s. C s \\<subseteq>\\<^sub>g C' s\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from DynCom.hyps termi_C' C_C' [rule_format] noFault_C'"], ["proof (chain)\npicking this:\n  \\<lbrakk>?xa \\<in> range C'; \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g ?xa;\n   \\<Gamma>\\<turnstile> \\<langle>?xa,Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>C' s \\<down> Normal s\n  C ?s \\<subseteq>\\<^sub>g C' ?s\n  \\<Gamma>\\<turnstile> \\<langle>C' s,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault", "have \"\\<Gamma>\\<turnstile>C s \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> range C'; \\<Gamma>\\<turnstile>?xa \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g ?xa;\n   \\<Gamma>\\<turnstile> \\<langle>?xa,Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>C' s \\<down> Normal s\n  C ?s \\<subseteq>\\<^sub>g C' ?s\n  \\<Gamma>\\<turnstile> \\<langle>C' s,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>C s \\<down> Normal s", "by fast"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>C s \\<down> Normal s\n\ngoal (4 subgoals):\n 1. \\<And>x c s.\n       \\<lbrakk>\\<And>xa c s.\n                   \\<lbrakk>xa \\<in> range x;\n                    \\<Gamma>\\<turnstile>xa \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g xa;\n                    \\<Gamma>\\<turnstile> \\<langle>xa,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>DynCom x \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g DynCom x;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n x,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 4. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with c"], ["proof (chain)\npicking this:\n  c = DynCom C\n  \\<Gamma>\\<turnstile>C s \\<down> Normal s", "show ?case"], ["proof (prove)\nusing this:\n  c = DynCom C\n  \\<Gamma>\\<turnstile>C s \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case (Guard f' g' c')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c';\n   \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                     ?s\\<rangle> \\<Rightarrow>\\<notin>range\n                                 Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>Guard f' g' c' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Guard f' g' c'\n  \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>Guard f' g' c',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                   c',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have termi: \"\\<Gamma>\\<turnstile>Guard f' g' c' \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f' g' c' \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f' g' c' \\<down> Normal s\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"c \\<subseteq>\\<^sub>g Guard f' g' c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<subseteq>\\<^sub>g Guard f' g' c'", "by fact"], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g Guard f' g' c'\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "hence c_cases: \"(c \\<subseteq>\\<^sub>g c') \\<or> (\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'))\""], ["proof (prove)\nusing this:\n  c \\<subseteq>\\<^sub>g Guard f' g' c'\n\ngoal (1 subgoal):\n 1. (c \\<subseteq>\\<^sub>g c') \\<or>\n    (\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'))", "by (rule subseteq_guards_Guard)"], ["proof (state)\nthis:\n  (c \\<subseteq>\\<^sub>g c') \\<or>\n  (\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'))\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2a c' c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c';\n                    \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Guard x1 x2a c' \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Guard x1 x2a c';\n        \\<Gamma>\\<turnstile> \\<langle>Guard x1 x2a\n c',Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 3. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  (c \\<subseteq>\\<^sub>g c') \\<or>\n  (\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'))\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof (cases \"s \\<in> g'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<in> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case True"], ["proof (state)\nthis:\n  s \\<in> g'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<in> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "note s_in_g' = this"], ["proof (state)\nthis:\n  s \\<in> g'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<in> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with noFault"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  s \\<in> g'", "have noFault_c': \"\\<Gamma>\\<turnstile>\\<langle>c',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  s \\<in> g'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<in> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi s_in_g'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Guard f' g' c' \\<down> Normal s\n  s \\<in> g'", "have termi_c': \"\\<Gamma>\\<turnstile>c' \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Guard f' g' c' \\<down> Normal s\n  s \\<in> g'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c' \\<down> Normal s", "by cases auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<in> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from c_cases"], ["proof (chain)\npicking this:\n  (c \\<subseteq>\\<^sub>g c') \\<or>\n  (\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'))", "show ?thesis"], ["proof (prove)\nusing this:\n  (c \\<subseteq>\\<^sub>g c') \\<or>\n  (\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'))\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<subseteq>\\<^sub>g c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume \"c \\<subseteq>\\<^sub>g c'\""], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g c'\n\ngoal (2 subgoals):\n 1. c \\<subseteq>\\<^sub>g c' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi_c' this noFault_c'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g c'\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault", "show \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g c'\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (rule Guard.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume \"\\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c')\""], ["proof (state)\nthis:\n  \\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c')\n\ngoal (1 subgoal):\n 1. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c')", "obtain c'' where\n        c: \"c = Guard f' g' c''\" and c''_c': \"c'' \\<subseteq>\\<^sub>g c'\""], ["proof (prove)\nusing this:\n  \\<exists>c''. c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c')\n\ngoal (1 subgoal):\n 1. (\\<And>c''.\n        \\<lbrakk>c = Guard f' g' c''; c'' \\<subseteq>\\<^sub>g c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c = Guard f' g' c''\n  c'' \\<subseteq>\\<^sub>g c'\n\ngoal (1 subgoal):\n 1. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi_c' c''_c' noFault_c'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c'' \\<subseteq>\\<^sub>g c'\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault", "have \"\\<Gamma>\\<turnstile>c'' \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c' \\<down> Normal s\n  c'' \\<subseteq>\\<^sub>g c'\n  \\<Gamma>\\<turnstile> \\<langle>c',Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>range\n                               Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c'' \\<down> Normal s", "by (rule Guard.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<exists>c''.\n       c = Guard f' g' c'' \\<and>\n       (c'' \\<subseteq>\\<^sub>g c') \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c \\<down> Normal s", "with s_in_g' c"], ["proof (chain)\npicking this:\n  s \\<in> g'\n  c = Guard f' g' c''\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal s", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> g'\n  c = Guard f' g' c''\n  \\<Gamma>\\<turnstile>c'' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case False"], ["proof (state)\nthis:\n  s \\<notin> g'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "with noFault"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  s \\<notin> g'", "have False"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f' g'\n                                 c',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  s \\<notin> g'\n\ngoal (1 subgoal):\n 1. False", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(c \\<subseteq>\\<^sub>g c') \\<or>\n             (\\<exists>c''.\n                 c = Guard f' g' c'' \\<and> (c'' \\<subseteq>\\<^sub>g c'));\n     s \\<notin> g'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Throw\n  \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>Throw \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Throw;\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Throw\n  \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros dest: subseteq_guardsD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "case (Catch c1' c2')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>\\<turnstile>c1' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c1';\n   \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<lbrakk>\\<Gamma>\\<turnstile>c2' \\<down> Normal ?s;\n   ?c \\<subseteq>\\<^sub>g c2';\n   \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n?s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>\\<turnstile>?c \\<down> Normal ?s\n  \\<Gamma>\\<turnstile>Catch c1' c2' \\<down> Normal s\n  c \\<subseteq>\\<^sub>g Catch c1' c2'\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have termi: \"\\<Gamma>\\<turnstile>Catch c1' c2' \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1' c2' \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1' c2' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>Catch c1' c2' \\<down> Normal s", "obtain\n    termi_c1': \"\\<Gamma>\\<turnstile>c1'\\<down> Normal s\" and\n    termi_c2': \"\\<forall>s'. \\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow> \\<Gamma>\\<turnstile>c2'\\<down> Normal s'\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>Catch c1' c2' \\<down> Normal s\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<Gamma>\\<turnstile>c1' \\<down> Normal s;\n      \\<forall>s'.\n         \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n      s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n         \\<Gamma>\\<turnstile>c2' \\<down> Normal s'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: terminates_Normal_elim_cases)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2' \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have noFault: \"\\<Gamma>\\<turnstile>\\<langle>Catch c1' c2',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Catch c1'\n                                   c2',Normal\n  s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "hence noFault_c1': \"\\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n s\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (fastforce intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"c \\<subseteq>\\<^sub>g Catch c1' c2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<subseteq>\\<^sub>g Catch c1' c2'", "by fact"], ["proof (state)\nthis:\n  c \\<subseteq>\\<^sub>g Catch c1' c2'\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from subseteq_guards_Catch [OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c1'a c2'a.\n     c = Catch c1'a c2'a \\<and>\n     (c1'a \\<subseteq>\\<^sub>g c1') \\<and> (c2'a \\<subseteq>\\<^sub>g c2')", "obtain c1 c2 where\n    c: \"c = Catch c1 c2\" and\n    c1_c1': \"c1 \\<subseteq>\\<^sub>g c1'\" and\n    c2_c2': \"c2 \\<subseteq>\\<^sub>g c2'\""], ["proof (prove)\nusing this:\n  \\<exists>c1'a c2'a.\n     c = Catch c1'a c2'a \\<and>\n     (c1'a \\<subseteq>\\<^sub>g c1') \\<and> (c2'a \\<subseteq>\\<^sub>g c2')\n\ngoal (1 subgoal):\n 1. (\\<And>c1 c2.\n        \\<lbrakk>c = Catch c1 c2; c1 \\<subseteq>\\<^sub>g c1';\n         c2 \\<subseteq>\\<^sub>g c2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c = Catch c1 c2\n  c1 \\<subseteq>\\<^sub>g c1'\n  c2 \\<subseteq>\\<^sub>g c2'\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "from termi_c1' c1_c1' noFault_c1'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  c1 \\<subseteq>\\<^sub>g c1'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "have \"\\<Gamma>\\<turnstile>c1\\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1' \\<down> Normal s\n  c1 \\<subseteq>\\<^sub>g c1'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (rule Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "assume exec_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt t\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt t\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>c2\\<down> Normal t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "from exec_to_exec_subseteq_guards [OF c1_c1' exec_c1]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt t) \\<longrightarrow> isFault t') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt t)", "obtain t' where\n        exec_c1': \"\\<Gamma>\\<turnstile>\\<langle>c1',Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t'_noFault: \"\\<not> isFault t' \\<longrightarrow> t' = Abrupt t\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt t) \\<longrightarrow> isFault t') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt t)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>\\<turnstile> \\<langle>c1',Normal\n              s\\<rangle> \\<Rightarrow> t';\n         \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "proof (cases \"isFault t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "case True"], ["proof (state)\nthis:\n  isFault t'\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "with exec_c1' noFault_c1'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  isFault t'", "have False"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n  isFault t'\n\ngoal (1 subgoal):\n 1. False", "by (fastforce elim: isFaultE dest: Fault_end simp add: final_notin_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. isFault t' \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n 2. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal t", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "case False"], ["proof (state)\nthis:\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "with t'_noFault"], ["proof (chain)\npicking this:\n  \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\n  \\<not> isFault t'", "have t': \"t'=Abrupt t\""], ["proof (prove)\nusing this:\n  \\<not> isFault t' \\<longrightarrow> t' = Abrupt t\n  \\<not> isFault t'\n\ngoal (1 subgoal):\n 1. t' = Abrupt t", "by simp"], ["proof (state)\nthis:\n  t' = Abrupt t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "with termi_c2' exec_c1'"], ["proof (chain)\npicking this:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2' \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt t", "have termi_c2': \"\\<Gamma>\\<turnstile>c2'\\<down> Normal t\""], ["proof (prove)\nusing this:\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1',Normal\n  s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2' \\<down> Normal s'\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2' \\<down> Normal t", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "with noFault exec_c1' t'"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt t\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal t", "have \"\\<Gamma>\\<turnstile>\\<langle>c2',Normal t \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1'\n                                 c2',Normal\ns\\<rangle> \\<Rightarrow>\\<notin>range Fault\n  \\<Gamma>\\<turnstile> \\<langle>c1',Normal s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt t\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n t\\<rangle> \\<Rightarrow>\\<notin>range Fault", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     t\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<not> isFault t' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "from termi_c2' c2_c2' this"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal t\n  c2 \\<subseteq>\\<^sub>g c2'\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     t\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault", "show \"\\<Gamma>\\<turnstile>c2 \\<down> Normal t\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c2' \\<down> Normal t\n  c2 \\<subseteq>\\<^sub>g c2'\n  \\<Gamma>\\<turnstile> \\<langle>c2',Normal\n                                     t\\<rangle> \\<Rightarrow>\\<notin>range\n                                Fault\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal t", "by (rule Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal t\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?t2\n\ngoal (1 subgoal):\n 1. \\<And>c'1 c'2 c s.\n       \\<lbrakk>\\<And>c s.\n                   \\<lbrakk>\\<Gamma>\\<turnstile>c'1 \\<down> Normal s;\n                    c \\<subseteq>\\<^sub>g c'1;\n                    \\<Gamma>\\<turnstile> \\<langle>c'1,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>c s.\n           \\<lbrakk>\\<Gamma>\\<turnstile>c'2 \\<down> Normal s;\n            c \\<subseteq>\\<^sub>g c'2;\n            \\<Gamma>\\<turnstile> \\<langle>c'2,Normal\n         s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile>Catch c'1 c'2 \\<down> Normal s;\n        c \\<subseteq>\\<^sub>g Catch c'1 c'2;\n        \\<Gamma>\\<turnstile> \\<langle>Catch c'1\n c'2,Normal s\\<rangle> \\<Rightarrow>\\<notin>range Fault\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?t2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?t2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "using c"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow> Abrupt\n                        ?t2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal ?t2\n  c = Catch c1 c2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem terminates_fewer_guards:\n  shows \"\\<lbrakk>\\<Gamma>\\<turnstile>c'\\<down>s; c \\<subseteq>\\<^sub>g c'; \\<Gamma>\\<turnstile>\\<langle>c',s \\<rangle> \\<Rightarrow>\\<notin>Fault ` UNIV\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>\\<turnstile>c\\<down>s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>c' \\<down> s; c \\<subseteq>\\<^sub>g c';\n     \\<Gamma>\\<turnstile> \\<langle>c',s\\<rangle> \\<Rightarrow>\\<notin>range\n                                 Fault\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>\\<turnstile>c \\<down> s", "by (cases s) (auto intro: terminates_fewer_guards_Normal)"], ["", "lemma terminates_noFault_strip_guards:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>Normal s\"\n  shows \"\\<lbrakk>\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk> \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F c\\<down>Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 6. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c,Normal\n    s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>While b\n      c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\ns_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Basic f) \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 6. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c,Normal\n    s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>While b\n      c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (While b c) \\<down> Normal s\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\ns_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F Skip \\<down> Normal s_\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Basic f) \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (While b c) \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Basic f) \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (While b c) \\<down> Normal s\nA total of 17 subgoals...", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 f_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Basic f) \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (While b c) \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 f_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Basic f_) \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Basic f_) \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Spec\n                                 r_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F (Spec r) \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 16 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Spec\n                                 r_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Spec r_) \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Spec r_) \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "case (Guard s g c f)"], ["proof (state)\nthis:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "have s_in_g: \"s \\<in> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> g", "by fact"], ["proof (state)\nthis:\n  s \\<in> g\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "have \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "have \"\\<Gamma>\\<turnstile>\\<langle>Guard f g c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                   c,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "with s_in_g"], ["proof (chain)\npicking this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "by (fastforce simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "with Guard.hyps"], ["proof (chain)\npicking this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "have \"\\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Call p) \\<down> Normal s\nA total of 15 subgoals...", "with s_in_g"], ["proof (chain)\npicking this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s", "show ?case"], ["proof (prove)\nusing this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Guard f g c) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Guard f g c) \\<down> Normal s\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\nF \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\nF \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\nA total of 14 subgoals...", "case GuardFault"], ["proof (state)\nthis:\n  s_ \\<notin> g_\n  \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Guard f g c) \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\nF \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> g_\n  \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Guard f_ g_ c_) \\<down> Normal s_", "by (auto intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Guard f_ g_ c_) \\<down> Normal s_\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\n  s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>DynCom\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (DynCom c) \\<down> Normal s\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\n  s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>DynCom\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (DynCom c) \\<down> Normal s\nA total of 13 subgoals...", "case Fault"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Fault\n                                    f_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\n  s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>DynCom\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (DynCom c) \\<down> Normal s\nA total of 13 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Fault\n                                    f_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> Fault f_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> Fault f_\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "case (Seq c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "have noFault_Seq: \"\\<Gamma>\\<turnstile>\\<langle>Seq c1 c2,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                   c2,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "hence noFault_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "with Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have \"\\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "fix s'"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "assume exec_strip_guards_c1: \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "have \"\\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "by (auto elim: isFaultE intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "with exec_strip_guards_to_exec [OF exec_strip_guards_c1] noFault_c1"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<not> isFault s'", "have *: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'", "by (auto simp add: final_notin_def elim!: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "with noFault_Seq"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'", "have \"\\<Gamma>\\<turnstile>\\<langle>c2,s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "with *"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "using Seq.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s')\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> s'\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s'2\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Seq c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\nA total of 12 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Seq c1 c2) \\<down> Normal s\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\nA total of 11 subgoals...", "case CondTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F\n                         (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_", "by (fastforce intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F\n                       (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n            s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             \\<Gamma>\\<turnstile>strip_guards F\n                                  c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n  c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n            s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             \\<Gamma>\\<turnstile>strip_guards F\n                                  c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n  c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case CondFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Cond b c\\<^sub>1 c\\<^sub>2) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n            s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             \\<Gamma>\\<turnstile>strip_guards F\n                                  c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n  c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n         (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F\n                         (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_", "by (fastforce intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F\n                       (Cond b_ c\\<^sub>1_ c\\<^sub>2_) \\<down> Normal s_\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case (WhileTrue s b c)"], ["proof (state)\nthis:\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have s_in_b: \"s \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> b", "by fact"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have noFault_while: \"\\<Gamma>\\<turnstile>\\<langle>While b c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "with s_in_b"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have noFault_c: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "with WhileTrue.hyps"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "have \"\\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "assume exec_strip_guards_c: \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "by (auto elim: isFaultE intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "with exec_strip_guards_to_exec [OF exec_strip_guards_c] noFault_c"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n  \\<not> isFault s'", "have *: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'", "by (auto simp add: final_notin_def elim!: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "with s_in_b noFault_while"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'", "have \"\\<Gamma>\\<turnstile>\\<langle>While b c,s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "with *"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "using WhileTrue.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s')\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s'\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> ?s'2\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> Normal s", "using WhileTrue.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> ?s'2\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> s')\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (While b c) \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile> \\<langle>While b_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (While b c) \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile> \\<langle>While b_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (While b_ c_) \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (While b_ c_) \\<down> Normal s_\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Call"], ["proof (state)\nthis:\n  \\<Gamma> p_ = Some bdy_\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>bdy_,Normal\ns_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p_ = Some bdy_\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>bdy_,Normal\ns_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F bdy_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Call p_) \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Call p_) \\<down> Normal s_\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case CallUndefined"], ["proof (state)\nthis:\n  \\<Gamma> p_ = None\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Call p) \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p_ = None\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Call p_) \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Call p_) \\<down> Normal s_\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Stuck"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                 F\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                 F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> Stuck", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> Stuck\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case DynCom"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c_ s_,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F (c_ s_) \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F (c s) \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (DynCom c) \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c_ s_,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F (c_ s_) \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (DynCom c_) \\<down> Normal s_", "by (auto intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (DynCom c_) \\<down> Normal s_\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F Throw \\<down> Normal s_\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case Abrupt"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Abrupt\n                                    s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>strip_guards F c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Abrupt\n                                    s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> Abrupt s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c_ \\<down> Abrupt s_\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "case (Catch c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s')\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have noFault_Catch: \"\\<Gamma>\\<turnstile>\\<langle>Catch c1 c2,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                   c2,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "hence noFault_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (fastforce simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "with Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have \"\\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "{"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "assume exec_strip_guards_c1: \"\\<Gamma>\\<turnstile>\\<langle>strip_guards F c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'", "from exec_strip_guards_to_exec [OF exec_strip_guards_c1] noFault_c1"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt s') \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = Abrupt s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have *: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt s') \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = Abrupt s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal\ns\\<rangle> \\<Rightarrow> Abrupt s'", "by (auto simp add: final_notin_def elim!: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'", "with noFault_Catch"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'", "have \"\\<Gamma>\\<turnstile>\\<langle>c2,Normal s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2,Normal\ns'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'", "with *"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'", "using Catch.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s')\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "}"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            \\<Gamma>\\<turnstile>strip_guards F c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>strip_guards F\n        (Catch c\\<^sub>1 c\\<^sub>2) \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> Normal s", "using Catch.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>strip_guards F\n                                 c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal ?s'2\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>strip_guards F c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      \\<Gamma>\\<turnstile>strip_guards F c2 \\<down> Normal s')\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> Normal s", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>strip_guards F (Catch c1 c2) \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Lemmas about @{const \"strip_guards\"}\\<close>"], ["", "(* ************************************************************************* *)"], ["", "lemma terminates_noFault_strip:\n  assumes termi: \"\\<Gamma>\\<turnstile>c\\<down>Normal s\"\n  shows \"\\<lbrakk>\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk> \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>c\\<down>Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c \\<down> Normal s", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c \\<down> Normal s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c,Normal\n    s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>While b\n      c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\ns_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c,Normal\n    s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>While b\n      c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Skip,Normal\ns_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Skip \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Skip \\<down> Normal s_\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 f_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>\\<turnstile> \\<langle>Basic\nf,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>\\<turnstile> \\<langle>While b\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Basic\n                                 f_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Basic f_ \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Basic f_ \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Spec\n                                 r_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>\\<turnstile> \\<langle>Spec\nr,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Spec\n                                 r_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Spec r_ \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Spec r_ \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "case (Guard s g c f)"], ["proof (state)\nthis:\n  s \\<in> g\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "have s_in_g: \"s \\<in> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> g", "by fact"], ["proof (state)\nthis:\n  s \\<in> g\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "have \"\\<Gamma>\\<turnstile>\\<langle>Guard f g c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                   c,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "with s_in_g"], ["proof (chain)\npicking this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  s \\<in> g\n  \\<Gamma>\\<turnstile> \\<langle>Guard f g\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "by (fastforce simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "have \"strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (simp add: Guard.hyps)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>\\<Gamma> p = None;\n         \\<Gamma>\\<turnstile> \\<langle>Call\n  p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "with s_in_g"], ["proof (chain)\npicking this:\n  s \\<in> g\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s", "show ?case"], ["proof (prove)\nusing this:\n  s \\<in> g\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s", "by (auto intro: terminates.intros simp del: strip_simp)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\nF \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\nF \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\nA total of 14 subgoals...", "case GuardFault"], ["proof (state)\nthis:\n  s_ \\<notin> g_\n  \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>\\<turnstile> \\<langle>Guard f g\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\nF \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> g_\n  \\<Gamma>\\<turnstile> \\<langle>Guard f_ g_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Guard f_ g_ c_ \\<down> Normal s_", "by (auto intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Guard f_ g_ c_ \\<down> Normal s_\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\n  s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>DynCom\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\n  s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>DynCom\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\nA total of 13 subgoals...", "case Fault"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Fault\n                                    f_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>\\<turnstile> \\<langle>c,Fault\n  f\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\n  s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>DynCom\n  c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\nA total of 13 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Fault\n                                    f_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c_ \\<down> Fault f_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c_ \\<down> Fault f_\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "case (Seq c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>c2 \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "have noFault_Seq: \"\\<Gamma>\\<turnstile>\\<langle>Seq c1 c2,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                   c2,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "hence noFault_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have \"strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (simp add: Seq.hyps)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "moreover"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "{"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "fix s'"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "assume exec_strip_c1: \"strip F \\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "have \"strip F \\<Gamma>\\<turnstile>c2 \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "by (auto elim: isFaultE intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "with exec_strip_to_exec [OF exec_strip_c1] noFault_c1"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<not> isFault s'", "have *: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'", "by (auto simp add: final_notin_def elim!: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "with noFault_Seq"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'", "have \"\\<Gamma>\\<turnstile>\\<langle>c2,s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Seq c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "with *"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "using Seq.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>c2 \\<down> s')\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> s'", "by (simp del: strip_simp)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "}"], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n         F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>Seq c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n       s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s", "by (fastforce intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\nA total of 11 subgoals...", "case CondTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. strip F\n     \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_", "by (fastforce intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n            s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n  c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n          c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n            s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n  c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n          c\\<^sub>2 \\<down> Normal s", "case CondFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n            s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n         strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n               s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n            (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n             strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n  c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n        \\<Longrightarrow> strip F\n                           \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n          c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n      s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n                                 c\\<^sub>2_,Normal\n       s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. strip F\n     \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_", "by (fastforce intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case (WhileTrue s b c)"], ["proof (state)\nthis:\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>While b c \\<down> s')\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have s_in_b: \"s \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> b", "by fact"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have noFault_while: \"\\<Gamma>\\<turnstile>\\<langle>While b c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "with s_in_b"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have noFault_c: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "have \"strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (simp add: WhileTrue.hyps)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "assume exec_strip_c: \"strip F \\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have \"strip F \\<Gamma>\\<turnstile>While b c \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "proof (cases \"isFault s'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "case True"], ["proof (state)\nthis:\n  isFault s'\n\ngoal (2 subgoals):\n 1. isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  isFault s'\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "by (auto elim: isFaultE intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "case False"], ["proof (state)\nthis:\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "with exec_strip_to_exec [OF exec_strip_c] noFault_c"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n  \\<not> isFault s'", "have *: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault s' \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = s')\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n  \\<not> isFault s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'", "by (auto simp add: final_notin_def elim!: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "with s_in_b noFault_while"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'", "have \"\\<Gamma>\\<turnstile>\\<langle>While b c,s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>While b\n                                   c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<not> isFault s' \\<Longrightarrow>\n    strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "with *"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "using WhileTrue.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n  \\<Gamma>\\<turnstile> \\<langle>While b\n                                 c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>While b c \\<down> s')\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b c \\<down> s'", "by (simp del: strip_simp)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> ?s'2\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>While b\n     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> ?s'2\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "using WhileTrue.hyps"], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                    s\\<rangle> \\<Rightarrow> ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> ?s'2\n  s \\<in> b\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal\n                                   s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                             F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\ns\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>While b\n                                     c,s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                  F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>While b c \\<down> s')\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "by (auto intro: terminates.intros simp del: strip_simp)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile> \\<langle>While b_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile> \\<langle>While b\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>\\<turnstile> \\<langle>While b_\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>While b_ c_ \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>While b_ c_ \\<down> Normal s_\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case (Call p bdy s)"], ["proof (state)\nthis:\n  \\<Gamma> p = Some bdy\n  \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have bdy: \"\\<Gamma> p = Some bdy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = Some bdy", "by fact"], ["proof (state)\nthis:\n  \\<Gamma> p = Some bdy\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have \"\\<Gamma>\\<turnstile>\\<langle>Call p,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Call\n                                   p,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "with bdy"], ["proof (chain)\npicking this:\n  \\<Gamma> p = Some bdy\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have bdy_noFault: \"\\<Gamma>\\<turnstile>\\<langle>bdy,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma> p = Some bdy\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (auto intro: exec.intros simp add: final_notin_def)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "have strip_bdy_noFault: \"strip F \\<Gamma>\\<turnstile>\\<langle>bdy,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. strip F\n     \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (auto simp add: final_notin_def dest!: exec_strip_to_exec elim!: isFaultE)"], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "from bdy_noFault"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "have \"strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s", "by (simp add: Call.hyps)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "from terminates_noFault_strip_guards [OF this strip_bdy_noFault]"], ["proof (chain)\npicking this:\n  strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s", "have \"strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s\""], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s", "."], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>\\<Gamma> p = Some bdy;\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>bdy,Normal\n     s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "with bdy"], ["proof (chain)\npicking this:\n  \\<Gamma> p = Some bdy\n  strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p = Some bdy\n  strip F \\<Gamma>\\<turnstile>strip_guards F bdy \\<down> Normal s\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s", "by (fastforce intro: terminates.Call)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case CallUndefined"], ["proof (state)\nthis:\n  \\<Gamma> p_ = None\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>\\<Gamma> p = None;\n        \\<Gamma>\\<turnstile> \\<langle>Call\n p,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> p_ = None\n  \\<Gamma>\\<turnstile> \\<langle>Call\n                                 p_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case Stuck"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                 F\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                     F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                 F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c_ \\<down> Stuck", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c_ \\<down> Stuck\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case DynCom"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c_ s_,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\n s,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>DynCom\n c,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>c_ s_,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>\\<turnstile> \\<langle>DynCom\n                                 c_,Normal\n                                     s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                                F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>DynCom c_ \\<down> Normal s_", "by (auto intro: terminates.intros exec.intros simp add: final_notin_def )"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>DynCom c_ \\<down> Normal s_\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n      s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Throw,Normal\n s_\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Throw \\<down> Normal s_\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case Abrupt"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Abrupt\n                                    s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>\\<turnstile> \\<langle>c,Abrupt\n  s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n       strip F \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c_,Abrupt\n                                    s_\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c_ \\<down> Abrupt s_", "by (auto intro: terminates.intros)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c_ \\<down> Abrupt s_\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case (Catch c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s')\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have noFault_Catch: \"\\<Gamma>\\<turnstile>\\<langle>Catch c1 c2,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                   c2,Normal\n s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "hence noFault_c1: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal\ns\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (fastforce simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have \"strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (simp add: Catch.hyps)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "moreover"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "{"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "assume exec_strip_c1: \"strip F \\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "have \"strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from exec_strip_to_exec [OF exec_strip_c1] noFault_c1"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt s') \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = Abrupt s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F", "have *: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> t' \\<and>\n     (isFault (Abrupt s') \\<longrightarrow> isFault t') \\<and>\n     (t' \\<in> Fault ` (- F) \\<longrightarrow> t' = Abrupt s') \\<and>\n     (\\<not> isFault t' \\<longrightarrow> t' = Abrupt s')\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c1,Normal\ns\\<rangle> \\<Rightarrow> Abrupt s'", "by (auto simp add: final_notin_def elim!: isFaultE)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "with * noFault_Catch"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'", "have \"\\<Gamma>\\<turnstile>\\<langle>c2,Normal s' \\<rangle> \\<Rightarrow>\\<notin>Fault ` F\""], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>Catch c1\n                                 c2,Normal\n                                     s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile> \\<langle>c2,Normal\ns'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F", "by (auto simp add: final_notin_def intro: exec.intros)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "with *"], ["proof (chain)\npicking this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "using Catch.hyps"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n  \\<Gamma>\\<turnstile> \\<langle>c2,Normal\n                                    s'\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                               F\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s')\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "by (simp del: strip_simp)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "}"], ["proof (state)\nthis:\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n           s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<Longrightarrow>\n        strip F \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s' \\<and>\n           (\\<Gamma>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n               s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n            strip F \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>\\<turnstile> \\<langle>Catch c\\<^sub>1\n c\\<^sub>2,Normal s\\<rangle> \\<Rightarrow>\\<notin>Fault ` F\\<rbrakk>\n       \\<Longrightarrow> strip F\n                          \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "ultimately"], ["proof (chain)\npicking this:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2", "show ?case"], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "using Catch.hyps"], ["proof (prove)\nusing this:\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  strip F\n   \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                     s\\<rangle> \\<Rightarrow> Abrupt\n                         ?s'2 \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal ?s'2\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n                                    s\\<rangle> \\<Rightarrow>\\<notin>Fault `\n                              F \\<Longrightarrow>\n  strip F \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>\\<turnstile> \\<langle>c2,Normal\n  s'\\<rangle> \\<Rightarrow>\\<notin>Fault ` F \\<longrightarrow>\n      strip F \\<Gamma>\\<turnstile>c2 \\<down> Normal s')\n\ngoal (1 subgoal):\n 1. strip F \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "by (auto intro: terminates.intros simp del: strip_simp)"], ["proof (state)\nthis:\n  strip F \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ************************************************************************* *)"], ["", "subsection \\<open>Miscellaneous\\<close>"], ["", "(* ************************************************************************* *)"], ["", "lemma terminates_while_lemma:\n  assumes termi: \"\\<Gamma>\\<turnstile>w\\<down>fk\"\n  shows \"\\<And>k b c. \\<lbrakk>fk = Normal (f k); w=While b c;\n                       \\<forall>i. \\<Gamma>\\<turnstile>\\<langle>c,Normal (f i) \\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n         \\<Longrightarrow> \\<exists>i. f i \\<notin> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k b c.\n       \\<lbrakk>fk = Normal (f k); w = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b", "using termi"], ["proof (prove)\nusing this:\n  \\<Gamma>\\<turnstile>w \\<down> fk\n\ngoal (1 subgoal):\n 1. \\<And>k b c.\n       \\<lbrakk>fk = Normal (f k); w = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Skip = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 2. \\<And>fa s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Basic fa = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 3. \\<And>r s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Spec r = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 4. \\<And>s g c fa k b ca.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>k b ca.\n           \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 5. \\<And>s g fa c k b ca.\n       \\<lbrakk>s \\<notin> g; Normal s = Normal (f k);\n        Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 6. \\<And>c fa k b ca.\n       \\<lbrakk>Fault fa = Normal (f k); c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2 k b c.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<forall>x xa xb.\n               s' = Normal (f x) \\<longrightarrow>\n               c\\<^sub>2 = While xa xb \\<longrightarrow>\n               (\\<forall>i.\n                   \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n               (f i)\\<rangle> \\<Rightarrow> Normal\n       (f (Suc i))) \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> xa));\n        Normal s = Normal (f k); Seq c\\<^sub>1 c\\<^sub>2 = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2 k ba c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1 k ba c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>2 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 10. \\<And>s b c k ba ca.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<And>k b ca.\n            \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n             \\<forall>i.\n                \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n            (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<forall>x xa xb.\n                s' = Normal (f x) \\<longrightarrow>\n                While b c = While xa xb \\<longrightarrow>\n                (\\<forall>i.\n                    \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n                (f i)\\<rangle> \\<Rightarrow> Normal\n        (f (Suc i))) \\<longrightarrow>\n                (\\<exists>i. f i \\<notin> xa));\n         Normal s = Normal (f k); While b c = While ba ca;\n         \\<forall>i.\n            \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n        (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\nA total of 18 subgoals...", "case WhileTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<lbrakk>Normal s_ = Normal (f ?k); c_ = While ?b ?c;\n   \\<forall>i.\n      \\<Gamma>\\<turnstile> \\<langle>?c,Normal\n  (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i. f i \\<notin> ?b\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal\n s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b_ c_ \\<down> s' \\<and>\n     (\\<forall>x xa xb.\n         s' = Normal (f x) \\<longrightarrow>\n         While b_ c_ = While xa xb \\<longrightarrow>\n         (\\<forall>i.\n             \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n         (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))) \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> xa))\n  Normal s_ = Normal (f k)\n  While b_ c_ = While b c\n  \\<forall>i.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\n(f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\n\ngoal (18 subgoals):\n 1. \\<And>s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Skip = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 2. \\<And>fa s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Basic fa = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 3. \\<And>r s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Spec r = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 4. \\<And>s g c fa k b ca.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>k b ca.\n           \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 5. \\<And>s g fa c k b ca.\n       \\<lbrakk>s \\<notin> g; Normal s = Normal (f k);\n        Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 6. \\<And>c fa k b ca.\n       \\<lbrakk>Fault fa = Normal (f k); c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2 k b c.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<forall>x xa xb.\n               s' = Normal (f x) \\<longrightarrow>\n               c\\<^sub>2 = While xa xb \\<longrightarrow>\n               (\\<forall>i.\n                   \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n               (f i)\\<rangle> \\<Rightarrow> Normal\n       (f (Suc i))) \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> xa));\n        Normal s = Normal (f k); Seq c\\<^sub>1 c\\<^sub>2 = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2 k ba c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1 k ba c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>2 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 10. \\<And>s b c k ba ca.\n        \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<And>k b ca.\n            \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n             \\<forall>i.\n                \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n            (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n         \\<forall>s'.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s' \\<and>\n            (\\<forall>x xa xb.\n                s' = Normal (f x) \\<longrightarrow>\n                While b c = While xa xb \\<longrightarrow>\n                (\\<forall>i.\n                    \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n                (f i)\\<rangle> \\<Rightarrow> Normal\n        (f (Suc i))) \\<longrightarrow>\n                (\\<exists>i. f i \\<notin> xa));\n         Normal s = Normal (f k); While b c = While ba ca;\n         \\<forall>i.\n            \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n        (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<lbrakk>Normal s_ = Normal (f ?k); c_ = While ?b ?c;\n   \\<forall>i.\n      \\<Gamma>\\<turnstile> \\<langle>?c,Normal\n  (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i. f i \\<notin> ?b\n  \\<forall>s'.\n     \\<Gamma>\\<turnstile> \\<langle>c_,Normal\n s_\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>\\<turnstile>While b_ c_ \\<down> s' \\<and>\n     (\\<forall>x xa xb.\n         s' = Normal (f x) \\<longrightarrow>\n         While b_ c_ = While xa xb \\<longrightarrow>\n         (\\<forall>i.\n             \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n         (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))) \\<longrightarrow>\n         (\\<exists>i. f i \\<notin> xa))\n  Normal s_ = Normal (f k)\n  While b_ c_ = While b c\n  \\<forall>i.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\n(f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>i. f i \\<notin> b", "by blast"], ["proof (state)\nthis:\n  \\<exists>i. f i \\<notin> b\n\ngoal (17 subgoals):\n 1. \\<And>s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Skip = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 2. \\<And>fa s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Basic fa = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 3. \\<And>r s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Spec r = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 4. \\<And>s g c fa k b ca.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>k b ca.\n           \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 5. \\<And>s g fa c k b ca.\n       \\<lbrakk>s \\<notin> g; Normal s = Normal (f k);\n        Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 6. \\<And>c fa k b ca.\n       \\<lbrakk>Fault fa = Normal (f k); c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2 k b c.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<forall>x xa xb.\n               s' = Normal (f x) \\<longrightarrow>\n               c\\<^sub>2 = While xa xb \\<longrightarrow>\n               (\\<forall>i.\n                   \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n               (f i)\\<rangle> \\<Rightarrow> Normal\n       (f (Suc i))) \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> xa));\n        Normal s = Normal (f k); Seq c\\<^sub>1 c\\<^sub>2 = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2 k ba c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1 k ba c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>2 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 10. \\<And>s b c k ba ca.\n        \\<lbrakk>s \\<notin> b; Normal s = Normal (f k);\n         While b c = While ba ca;\n         \\<forall>i.\n            \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n        (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Skip = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 2. \\<And>fa s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Basic fa = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 3. \\<And>r s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Spec r = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 4. \\<And>s g c fa k b ca.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>k b ca.\n           \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 5. \\<And>s g fa c k b ca.\n       \\<lbrakk>s \\<notin> g; Normal s = Normal (f k);\n        Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 6. \\<And>c fa k b ca.\n       \\<lbrakk>Fault fa = Normal (f k); c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2 k b c.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<forall>x xa xb.\n               s' = Normal (f x) \\<longrightarrow>\n               c\\<^sub>2 = While xa xb \\<longrightarrow>\n               (\\<forall>i.\n                   \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n               (f i)\\<rangle> \\<Rightarrow> Normal\n       (f (Suc i))) \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> xa));\n        Normal s = Normal (f k); Seq c\\<^sub>1 c\\<^sub>2 = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2 k ba c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1 k ba c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>2 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 10. \\<And>s b c k ba ca.\n        \\<lbrakk>s \\<notin> b; Normal s = Normal (f k);\n         While b c = While ba ca;\n         \\<forall>i.\n            \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n        (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\nA total of 17 subgoals...", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  Normal s_ = Normal (f k)\n  While b_ c_ = While b c\n  \\<forall>i.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\n(f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\n\ngoal (17 subgoals):\n 1. \\<And>s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Skip = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 2. \\<And>fa s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Basic fa = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 3. \\<And>r s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Spec r = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 4. \\<And>s g c fa k b ca.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>k b ca.\n           \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 5. \\<And>s g fa c k b ca.\n       \\<lbrakk>s \\<notin> g; Normal s = Normal (f k);\n        Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 6. \\<And>c fa k b ca.\n       \\<lbrakk>Fault fa = Normal (f k); c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2 k b c.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<forall>x xa xb.\n               s' = Normal (f x) \\<longrightarrow>\n               c\\<^sub>2 = While xa xb \\<longrightarrow>\n               (\\<forall>i.\n                   \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n               (f i)\\<rangle> \\<Rightarrow> Normal\n       (f (Suc i))) \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> xa));\n        Normal s = Normal (f k); Seq c\\<^sub>1 c\\<^sub>2 = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2 k ba c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1 k ba c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>2 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 10. \\<And>s b c k ba ca.\n        \\<lbrakk>s \\<notin> b; Normal s = Normal (f k);\n         While b c = While ba ca;\n         \\<forall>i.\n            \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n        (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  Normal s_ = Normal (f k)\n  While b_ c_ = While b c\n  \\<forall>i.\n     \\<Gamma>\\<turnstile> \\<langle>c,Normal\n(f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>i. f i \\<notin> b", "by blast"], ["proof (state)\nthis:\n  \\<exists>i. f i \\<notin> b\n\ngoal (16 subgoals):\n 1. \\<And>s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Skip = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 2. \\<And>fa s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Basic fa = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 3. \\<And>r s k b c.\n       \\<lbrakk>Normal s = Normal (f k); Spec r = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 4. \\<And>s g c fa k b ca.\n       \\<lbrakk>s \\<in> g; \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<And>k b ca.\n           \\<lbrakk>Normal s = Normal (f k); c = While b ca;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 5. \\<And>s g fa c k b ca.\n       \\<lbrakk>s \\<notin> g; Normal s = Normal (f k);\n        Guard fa g c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 6. \\<And>c fa k b ca.\n       \\<lbrakk>Fault fa = Normal (f k); c = While b ca;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>ca,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2 k b c.\n       \\<lbrakk>\\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        \\<forall>s'.\n           \\<Gamma>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n              s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<forall>x xa xb.\n               s' = Normal (f x) \\<longrightarrow>\n               c\\<^sub>2 = While xa xb \\<longrightarrow>\n               (\\<forall>i.\n                   \\<Gamma>\\<turnstile> \\<langle>xb,Normal\n               (f i)\\<rangle> \\<Rightarrow> Normal\n       (f (Suc i))) \\<longrightarrow>\n               (\\<exists>i. f i \\<notin> xa));\n        Normal s = Normal (f k); Seq c\\<^sub>1 c\\<^sub>2 = While b c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> b\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2 k ba c.\n       \\<lbrakk>s \\<in> b; \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>1 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1 k ba c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<And>k b c.\n           \\<lbrakk>Normal s = Normal (f k); c\\<^sub>2 = While b c;\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n        Normal s = Normal (f k); Cond b c\\<^sub>1 c\\<^sub>2 = While ba c;\n        \\<forall>i.\n           \\<Gamma>\\<turnstile> \\<langle>c,Normal\n      (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i. f i \\<notin> ba\n 10. \\<And>p bdy s k b c.\n        \\<lbrakk>\\<Gamma> p = Some bdy;\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<And>k b c.\n            \\<lbrakk>Normal s = Normal (f k); bdy = While b c;\n             \\<forall>i.\n                \\<Gamma>\\<turnstile> \\<langle>c,Normal\n           (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n            \\<Longrightarrow> \\<exists>i. f i \\<notin> b;\n         Normal s = Normal (f k); Call p = While b c;\n         \\<forall>i.\n            \\<Gamma>\\<turnstile> \\<langle>c,Normal\n       (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n        \\<Longrightarrow> \\<exists>i. f i \\<notin> b\nA total of 16 subgoals...", "qed simp_all"], ["", "lemma terminates_while:\n  \"\\<lbrakk>\\<Gamma>\\<turnstile>(While b c)\\<down>Normal (f k);\n    \\<forall>i. \\<Gamma>\\<turnstile>\\<langle>c,Normal (f i) \\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n         \\<Longrightarrow> \\<exists>i. f i \\<notin> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>\\<turnstile>While b c \\<down> Normal (f k);\n     \\<forall>i.\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i. f i \\<notin> b", "by (blast intro: terminates_while_lemma)"], ["", "lemma wf_terminates_while:\n \"wf {(t,s). \\<Gamma>\\<turnstile>(While b c)\\<down>Normal s \\<and> s\\<in>b \\<and>\n             \\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> Normal t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(t, s).\n        \\<Gamma>\\<turnstile>While b c \\<down> Normal s \\<and>\n        s \\<in> b \\<and>\n        \\<Gamma>\\<turnstile> \\<langle>c,Normal\n   s\\<rangle> \\<Rightarrow> Normal t}", "apply(subst wf_iff_no_infinite_down_chain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>f.\n       \\<forall>i.\n          (f (Suc i), f i)\n          \\<in> {(t, s).\n                 \\<Gamma>\\<turnstile>While b c \\<down> Normal s \\<and>\n                 s \\<in> b \\<and>\n                 \\<Gamma>\\<turnstile> \\<langle>c,Normal\n            s\\<rangle> \\<Rightarrow> Normal t}", "apply(rule notI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>i.\n          (f (Suc i), f i)\n          \\<in> {(t, s).\n                 \\<Gamma>\\<turnstile>While b c \\<down> Normal s \\<and>\n                 s \\<in> b \\<and>\n                 \\<Gamma>\\<turnstile> \\<langle>c,Normal\n            s\\<rangle> \\<Rightarrow> Normal t} \\<Longrightarrow>\n    False", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>i.\n          \\<Gamma>\\<turnstile>While b c \\<down> Normal (f i) \\<and>\n          f i \\<in> b \\<and>\n          \\<Gamma>\\<turnstile> \\<langle>c,Normal\n     (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i)) \\<Longrightarrow>\n       False", "apply(insert terminates_while)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<forall>i.\n                   \\<Gamma>\\<turnstile>While b c \\<down> Normal (f i) \\<and>\n                   f i \\<in> b \\<and>\n                   \\<Gamma>\\<turnstile> \\<langle>c,Normal\n              (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i));\n        \\<And>\\<Gamma> b c f k.\n           \\<lbrakk>\\<Gamma>\\<turnstile>While b c \\<down> Normal (f k);\n            \\<forall>i.\n               \\<Gamma>\\<turnstile> \\<langle>c,Normal\n          (f i)\\<rangle> \\<Rightarrow> Normal (f (Suc i))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>i. f i \\<notin> b\\<rbrakk>\n       \\<Longrightarrow> False", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma terminates_restrict_to_terminates:\n  assumes terminates_res: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> c \\<down> s\"\n  assumes not_Stuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c,s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\"\n  shows \"\\<Gamma>\\<turnstile> c \\<down> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "using terminates_res not_Stuck"], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> s", "proof (induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Skip,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Basic\n                  f,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                         s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b\n             c \\<down> s' \\<and>\n            (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                        c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "case Skip"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Skip,Normal\n                  s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (18 subgoals):\n 1. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Skip,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Skip \\<down> Normal s\n 2. \\<And>f s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Basic\n                  f,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 3. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 4. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 6. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<in> b;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                         s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b\n             c \\<down> s' \\<and>\n            (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                        c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n             \\<Gamma>\\<turnstile>While b c \\<down> s');\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Skip \\<down> Normal s_", "by (rule terminates.Skip)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Skip \\<down> Normal s_\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Basic\n                  f,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Basic\n                  f,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "case Basic"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Basic\n             f_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (17 subgoals):\n 1. \\<And>f s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Basic\n                  f,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Basic f \\<down> Normal s\n 2. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 3. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 5. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>s b c.\n        \\<lbrakk>s \\<notin> b;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\nA total of 17 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Basic f_ \\<down> Normal s_", "by (rule terminates.Basic)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Basic f_ \\<down> Normal s_\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                    p,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                    p,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "case Spec"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n             r_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (16 subgoals):\n 1. \\<And>r s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Spec\n                  r,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Spec r \\<down> Normal s\n 2. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 4. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 10. \\<And>p bdy s.\n        \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                    p,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 16 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Spec r_ \\<down> Normal s_", "by (rule terminates.Spec)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Spec r_ \\<down> Normal s_\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                    p,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                    p,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "case Guard"], ["proof (state)\nthis:\n  s_ \\<in> g_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_,Normal\n                s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f_ g_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (15 subgoals):\n 1. \\<And>s g c f.\n       \\<lbrakk>s \\<in> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 3. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 9. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>p s.\n        \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                    p,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\nA total of 15 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> g_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_,Normal\n                s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f_ g_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f_ g_ c_ \\<down> Normal s_", "by (auto intro: terminates.Guard dest: notStuck_GuardD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f_ g_ c_ \\<down> Normal s_\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Stuck\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Stuck\nA total of 14 subgoals...", "case GuardFault"], ["proof (state)\nthis:\n  s_ \\<notin> g_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f_ g_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (14 subgoals):\n 1. \\<And>s g f c.\n       \\<lbrakk>s \\<notin> g;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f g\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Guard f g c \\<down> Normal s\n 2. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 8. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 10. \\<And>c.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Stuck\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> g_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Guard f_ g_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Guard f_ g_ c_ \\<down> Normal s_", "by (auto intro: terminates.GuardFault)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Guard f_ g_ c_ \\<down> Normal s_\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                    s,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                    s,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\nA total of 13 subgoals...", "case Fault"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_,Fault\n                f_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (13 subgoals):\n 1. \\<And>c f.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Fault\n                    f\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Fault f\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 7. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 9. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 10. \\<And>c s.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                    s,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                    c,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\nA total of 13 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c_ \\<down> Fault f_", "by (rule terminates.Fault)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ \\<down> Fault f_\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                         s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                         s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "case (Seq c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                   s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>c2 \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                         s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "have not_Stuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>Seq c1 c2,Normal s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c1\n               c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                         s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "hence c1_notStuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                  s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by (rule notStuck_SeqD1)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (12 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Seq c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 6. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 8. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 9. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 10. \\<And>s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                         s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>Throw \\<down> Normal s\nA total of 12 subgoals...", "show \"\\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s", "proof (rule terminates.Seq,safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n 2. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'", "from c1_notStuck"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (rule Seq.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'", "assume exec: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> s'", "show \"\\<Gamma>\\<turnstile>c2 \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "from exec_to_exec_restrict [OF exec]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>|\\<^bsub>?P\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                    s\\<rangle> \\<Rightarrow> t' \\<and>\n     (s' = Stuck \\<longrightarrow> t' = Stuck) \\<and>\n     (\\<forall>f.\n         s' = Fault f \\<longrightarrow> t' \\<in> {Fault f, Stuck}) \\<and>\n     (t' \\<noteq> Stuck \\<longrightarrow> t' = s')", "obtain t' where\n        exec_res: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t'_notStuck: \"t' \\<noteq> Stuck \\<longrightarrow> t' = s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>|\\<^bsub>?P\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                    s\\<rangle> \\<Rightarrow> t' \\<and>\n     (s' = Stuck \\<longrightarrow> t' = Stuck) \\<and>\n     (\\<forall>f.\n         s' = Fault f \\<longrightarrow> t' \\<in> {Fault f, Stuck}) \\<and>\n     (t' \\<noteq> Stuck \\<longrightarrow> t' = s')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                               s\\<rangle> \\<Rightarrow> t';\n         t' \\<noteq> Stuck \\<longrightarrow> t' = s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' \\<noteq> Stuck \\<longrightarrow> t' = s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "proof (cases \"t'=Stuck\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "case True"], ["proof (state)\nthis:\n  t' = Stuck\n\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "with c1_notStuck exec_res"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Stuck", "have \"False\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Stuck\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: final_notin_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "case False"], ["proof (state)\nthis:\n  t' \\<noteq> Stuck\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "with t'_notStuck"], ["proof (chain)\npicking this:\n  t' \\<noteq> Stuck \\<longrightarrow> t' = s'\n  t' \\<noteq> Stuck", "have t': \"t'=s'\""], ["proof (prove)\nusing this:\n  t' \\<noteq> Stuck \\<longrightarrow> t' = s'\n  t' \\<noteq> Stuck\n\ngoal (1 subgoal):\n 1. t' = s'", "by simp"], ["proof (state)\nthis:\n  t' = s'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "with not_Stuck exec_res"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = s'", "have \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c2,s' \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Seq c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by (auto dest: notStuck_SeqD2)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> s'", "with exec_res t' Seq.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = s'\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                   s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>c2 \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = s'\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                   s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c2 \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>c2 \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Seq c1 c2 \\<down> Normal s\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Abrupt s\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Abrupt s\nA total of 11 subgoals...", "case CondTrue"], ["proof (state)\nthis:\n  s_ \\<in> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n                        s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n             c\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (11 subgoals):\n 1. \\<And>s b c\\<^sub>1 c\\<^sub>2.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 5. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 7. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 8. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 9. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 10. \\<And>c s.\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Abrupt s\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<in> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1_,Normal\n                        s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c\\<^sub>1_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n             c\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_", "by (auto intro: terminates.CondTrue dest: notStuck_CondTrueD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                    s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                 s\\<rangle> \\<Rightarrow> Abrupt\n                     s' \\<longrightarrow>\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                               s' \\<and>\n            (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                  s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n             \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                    c\\<^sub>2,Normal\n                               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                    s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                 s\\<rangle> \\<Rightarrow> Abrupt\n                     s' \\<longrightarrow>\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                               s' \\<and>\n            (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                  s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n             \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                    c\\<^sub>2,Normal\n                               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "case CondFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n                        s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n             c\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (10 subgoals):\n 1. \\<And>s b c\\<^sub>2 c\\<^sub>1.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Cond b c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 4. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 6. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 7. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 8. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 9. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 10. \\<And>c\\<^sub>1 s c\\<^sub>2.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                    s;\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n         \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n         \\<forall>s'.\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                 s\\<rangle> \\<Rightarrow> Abrupt\n                     s' \\<longrightarrow>\n            \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                               s' \\<and>\n            (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                  s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n             \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n         \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                    c\\<^sub>2,Normal\n                               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n         c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2_,Normal\n                        s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c\\<^sub>2_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Cond b_ c\\<^sub>1_\n             c\\<^sub>2_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_", "by (auto intro: terminates.CondFalse dest: notStuck_CondFalseD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Cond b_ c\\<^sub>1_ c\\<^sub>2_ \\<down> Normal s_\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case (WhileTrue s b c)"], ["proof (state)\nthis:\n  s \\<in> b\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                 c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "have s: \"s \\<in> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> b", "by fact"], ["proof (state)\nthis:\n  s \\<in> b\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "have not_Stuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>While b c,Normal s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n               c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "with WhileTrue"], ["proof (chain)\npicking this:\n  s \\<in> b\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                 c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "have c_notStuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\nusing this:\n  s \\<in> b\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                 c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                 s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by (iprover intro:  notStuck_WhileTrueD1)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (9 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<in> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                     s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                        s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                       c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>While b c \\<down> s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 3. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 5. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 6. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 7. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 8. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 9. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> Normal s", "proof (rule terminates.WhileTrue [OF s],safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s\n 2. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> s'", "from c_notStuck"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show \"\\<Gamma>\\<turnstile>c \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c \\<down> Normal s", "by (rule WhileTrue.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> s'", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> s'", "assume exec: \"\\<Gamma>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c,Normal s\\<rangle> \\<Rightarrow> s'\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c,Normal\n  s\\<rangle> \\<Rightarrow> s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>While b c \\<down> s'", "show \"\\<Gamma>\\<turnstile>While b c \\<down> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "from exec_to_exec_restrict [OF exec]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>|\\<^bsub>?P\\<^esub>\\<turnstile> \\<langle>c,Normal\n                   s\\<rangle> \\<Rightarrow> t' \\<and>\n     (s' = Stuck \\<longrightarrow> t' = Stuck) \\<and>\n     (\\<forall>f.\n         s' = Fault f \\<longrightarrow> t' \\<in> {Fault f, Stuck}) \\<and>\n     (t' \\<noteq> Stuck \\<longrightarrow> t' = s')", "obtain t' where\n        exec_res: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c,Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t'_notStuck: \"t' \\<noteq> Stuck \\<longrightarrow> t' = s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>|\\<^bsub>?P\\<^esub>\\<turnstile> \\<langle>c,Normal\n                   s\\<rangle> \\<Rightarrow> t' \\<and>\n     (s' = Stuck \\<longrightarrow> t' = Stuck) \\<and>\n     (\\<forall>f.\n         s' = Fault f \\<longrightarrow> t' \\<in> {Fault f, Stuck}) \\<and>\n     (t' \\<noteq> Stuck \\<longrightarrow> t' = s')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                              s\\<rangle> \\<Rightarrow> t';\n         t' \\<noteq> Stuck \\<longrightarrow> t' = s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  t' \\<noteq> Stuck \\<longrightarrow> t' = s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "proof (cases \"t'=Stuck\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "case True"], ["proof (state)\nthis:\n  t' = Stuck\n\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "with c_notStuck exec_res"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  t' = Stuck", "have \"False\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  t' = Stuck\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: final_notin_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "case False"], ["proof (state)\nthis:\n  t' \\<noteq> Stuck\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "with t'_notStuck"], ["proof (chain)\npicking this:\n  t' \\<noteq> Stuck \\<longrightarrow> t' = s'\n  t' \\<noteq> Stuck", "have t': \"t'=s'\""], ["proof (prove)\nusing this:\n  t' \\<noteq> Stuck \\<longrightarrow> t' = s'\n  t' \\<noteq> Stuck\n\ngoal (1 subgoal):\n 1. t' = s'", "by simp"], ["proof (state)\nthis:\n  t' = s'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "with not_Stuck exec_res s"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  s \\<in> b\n  t' = s'", "have \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>While b c,s' \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  s \\<in> b\n  t' = s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n               c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by (auto dest: notStuck_WhileTrueD2)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>While b c \\<down> s'", "with exec_res t' WhileTrue.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  t' = s'\n  s \\<in> b\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                 c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow> t'\n  t' = s'\n  s \\<in> b\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n               s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Normal\n                  s\\<rangle> \\<Rightarrow> s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>While b c \\<down> s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                 c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>While b c \\<down> s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n             c,s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b c \\<down> s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case WhileFalse"], ["proof (state)\nthis:\n  s_ \\<notin> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (8 subgoals):\n 1. \\<And>s b c.\n       \\<lbrakk>s \\<notin> b;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>While b c \\<down> Normal s\n 2. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 4. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 5. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 6. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 7. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 8. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "then"], ["proof (chain)\npicking this:\n  s_ \\<notin> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show ?case"], ["proof (prove)\nusing this:\n  s_ \\<notin> b_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>While b_\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>While b_ c_ \\<down> Normal s_", "by (iprover intro: terminates.WhileFalse)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>While b_ c_ \\<down> Normal s_\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case Call"], ["proof (state)\nthis:\n  (\\<Gamma>|\\<^bsub>M\\<^esub>) p_ = Some bdy_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy_,Normal\n                  s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n             p_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (7 subgoals):\n 1. \\<And>p bdy s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = Some bdy;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy,Normal\n                       s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>bdy \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 3. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 4. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 5. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 6. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 7. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<Gamma>|\\<^bsub>M\\<^esub>) p_ = Some bdy_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>bdy_,Normal\n                  s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>bdy_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n             p_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_", "by (auto intro: terminates.Call dest: notStuck_CallD restrict_SomeD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case CallUndefined"], ["proof (state)\nthis:\n  (\\<Gamma>|\\<^bsub>M\\<^esub>) p_ = None\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n             p_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (6 subgoals):\n 1. \\<And>p s.\n       \\<lbrakk>(\\<Gamma>|\\<^bsub>M\\<^esub>) p = None;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n                   p,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Call p \\<down> Normal s\n 2. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 3. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 4. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 5. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 6. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<Gamma>|\\<^bsub>M\\<^esub>) p_ = None\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Call\n             p_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_", "by (auto dest: notStuck_CallDefinedD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Call p_ \\<down> Normal s_\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case Stuck"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (5 subgoals):\n 1. \\<And>c.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Stuck\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Stuck\n 2. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 3. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 4. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 5. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c_ \\<down> Stuck", "by (rule terminates.Stuck)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ \\<down> Stuck\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case DynCom"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_\n             s_,Normal\n                 s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (4 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\n                   s,Normal\n                      s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c s \\<down> Normal s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n                   c,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>DynCom c \\<down> Normal s\n 2. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 3. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 4. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_\n             s_,Normal\n                 s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c_ s_ \\<down> Normal s_\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>DynCom\n             c_,Normal s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>DynCom c_ \\<down> Normal s_", "by (auto intro: terminates.DynCom dest: notStuck_DynComD)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>DynCom c_ \\<down> Normal s_\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case Throw"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                   s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Throw,Normal\n                        s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>Throw \\<down> Normal s\n 2. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 3. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Throw \\<down> Normal s_", "by (rule terminates.Throw)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Throw \\<down> Normal s_\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case Abrupt"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c_,Abrupt\n                s_\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c,Abrupt\n                    s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c \\<down> Abrupt s\n 2. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c_ \\<down> Abrupt s_", "by (rule terminates.Abrupt)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c_ \\<down> Abrupt s_\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "case (Catch c1 s c2)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                   s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                    s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>c2 \\<down> Normal s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "have not_Stuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>Catch c1 c2,Normal s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c1\n               c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by fact"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "hence c1_notStuck: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                  s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by (rule notStuck_CatchD1)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>2.\n       \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>1 \\<down> Normal\n                                   s;\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                             s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n        \\<Gamma>\\<turnstile>c\\<^sub>1 \\<down> Normal s;\n        \\<forall>s'.\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>1,Normal\n                                s\\<rangle> \\<Rightarrow> Abrupt\n                    s' \\<longrightarrow>\n           \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c\\<^sub>2 \\<down> Normal\n                              s' \\<and>\n           (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c\\<^sub>2,Normal\n                                 s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n            \\<Gamma>\\<turnstile>c\\<^sub>2 \\<down> Normal s');\n        \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c\\<^sub>1\n                   c\\<^sub>2,Normal\n                              s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<turnstile>Catch c\\<^sub>1\n        c\\<^sub>2 \\<down> Normal s", "show \"\\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s", "proof (rule terminates.Catch,safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n 2. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> Abrupt s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from c1_notStuck"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show \"\\<Gamma>\\<turnstile>c1 \\<down> Normal s\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c1 \\<down> Normal s", "by (rule Catch.hyps)"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> Abrupt s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> Abrupt s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> Abrupt s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "assume exec: \"\\<Gamma>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> Abrupt s'\""], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile> \\<langle>c1,Normal s\\<rangle> \\<Rightarrow> Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<Gamma>\\<turnstile> \\<langle>c1,Normal\n   s\\<rangle> \\<Rightarrow> Abrupt s' \\<Longrightarrow>\n       \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "show \"\\<Gamma>\\<turnstile>c2 \\<down> Normal s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "from exec_to_exec_restrict [OF exec]"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     \\<Gamma>|\\<^bsub>?P\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                    s\\<rangle> \\<Rightarrow> t' \\<and>\n     (Abrupt s' = Stuck \\<longrightarrow> t' = Stuck) \\<and>\n     (\\<forall>f.\n         Abrupt s' = Fault f \\<longrightarrow>\n         t' \\<in> {Fault f, Stuck}) \\<and>\n     (t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s')", "obtain t' where\n        exec_res: \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c1,Normal s \\<rangle> \\<Rightarrow> t'\" and\n        t'_notStuck: \"t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<Gamma>|\\<^bsub>?P\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                    s\\<rangle> \\<Rightarrow> t' \\<and>\n     (Abrupt s' = Stuck \\<longrightarrow> t' = Stuck) \\<and>\n     (\\<forall>f.\n         Abrupt s' = Fault f \\<longrightarrow>\n         t' \\<in> {Fault f, Stuck}) \\<and>\n     (t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                               s\\<rangle> \\<Rightarrow> t';\n         t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "proof (cases \"t'=Stuck\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "case True"], ["proof (state)\nthis:\n  t' = Stuck\n\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "with c1_notStuck exec_res"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Stuck", "have \"False\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Stuck\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: final_notin_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. t' = Stuck \\<Longrightarrow> \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n 2. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", ".."], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "case False"], ["proof (state)\nthis:\n  t' \\<noteq> Stuck\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "with t'_notStuck"], ["proof (chain)\npicking this:\n  t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s'\n  t' \\<noteq> Stuck", "have t': \"t'=Abrupt s'\""], ["proof (prove)\nusing this:\n  t' \\<noteq> Stuck \\<longrightarrow> t' = Abrupt s'\n  t' \\<noteq> Stuck\n\ngoal (1 subgoal):\n 1. t' = Abrupt s'", "by simp"], ["proof (state)\nthis:\n  t' = Abrupt s'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "with not_Stuck exec_res"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt s'", "have \"\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>\\<langle>c2,Normal s' \\<rangle> \\<Rightarrow>\\<notin>{Stuck}\""], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>Catch c1\n             c2,Normal s\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt s'\n\ngoal (1 subgoal):\n 1. \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                  s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "by (auto dest: notStuck_CatchD2)"], ["proof (state)\nthis:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Stuck \\<Longrightarrow>\n    \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "with exec_res t' Catch.hyps"], ["proof (chain)\npicking this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt s'\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                   s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                    s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>c2 \\<down> Normal s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow> t'\n  t' = Abrupt s'\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c1 \\<down> Normal s\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                s\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<Longrightarrow>\n  \\<Gamma>\\<turnstile>c1 \\<down> Normal s\n  \\<forall>s'.\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c1,Normal\n                   s\\<rangle> \\<Rightarrow> Abrupt s' \\<longrightarrow>\n     \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile>c2 \\<down> Normal s' \\<and>\n     (\\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                    s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck} \\<longrightarrow>\n      \\<Gamma>\\<turnstile>c2 \\<down> Normal s')\n  \\<Gamma>|\\<^bsub>M\\<^esub>\\<turnstile> \\<langle>c2,Normal\n                s'\\<rangle> \\<Rightarrow>\\<notin>{Stuck}\n\ngoal (1 subgoal):\n 1. \\<Gamma>\\<turnstile>c2 \\<down> Normal s'", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>c2 \\<down> Normal s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>\\<turnstile>Catch c1 c2 \\<down> Normal s\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}