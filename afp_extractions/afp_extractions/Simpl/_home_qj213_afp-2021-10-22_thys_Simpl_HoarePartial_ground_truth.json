{"file_name": "/home/qj213/afp-2021-10-22/thys/Simpl/HoarePartial.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Simpl", "problem_names": ["lemma conseq_no_aux:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' c Q',A';\n    \\<forall>s. s \\<in> P \\<longrightarrow> (s\\<in>P' \\<and> (Q' \\<subseteq> Q) \\<and> (A' \\<subseteq> A))\\<rbrakk>\n  \\<Longrightarrow>\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\"", "lemma conseq_exploit_pre:\n             \"\\<lbrakk>\\<forall>s \\<in> P. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s} \\<inter> P) c Q,A\\<rbrakk>\n              \\<Longrightarrow>\n              \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\"", "lemma conseq:\"\\<lbrakk>\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z);\n              \\<forall>s. s \\<in> P \\<longrightarrow> (\\<exists> Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A))\\<rbrakk>\n              \\<Longrightarrow>\n              \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\"", "lemma Lem: \"\\<lbrakk>\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z);\n             P \\<subseteq> {s. \\<exists> Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A)}\\<rbrakk>\n             \\<Longrightarrow>\n             \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (lem x c) Q,A\"", "lemma LemAnno:\nassumes conseq:  \"P \\<subseteq> {s. \\<exists>Z. s\\<in>P' Z \\<and>\n                     (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> t \\<in> Q) \\<and> (\\<forall>t. t \\<in> A' Z \\<longrightarrow> t \\<in> A)}\"\nassumes lem: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z)\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (lem x c) Q,A\"", "lemma LemAnnoNoAbrupt:\nassumes conseq:  \"P \\<subseteq>  {s. \\<exists>Z. s\\<in>P' Z \\<and> (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> t \\<in> Q)}\"\nassumes lem: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),{}\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (lem x c) Q,{}\"", "lemma TrivPost: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z)\n                 \\<Longrightarrow>\n                 \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c UNIV,UNIV\"", "lemma TrivPostNoAbr: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),{}\n                 \\<Longrightarrow>\n                 \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c UNIV,{}\"", "lemma conseq_under_new_pre:\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n        \\<forall>s \\<in> P. s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n\\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\"", "lemma conseq_Kleymann:\"\\<lbrakk>\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z);\n              \\<forall>s \\<in> P. (\\<exists>Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A))\\<rbrakk>\n              \\<Longrightarrow>\n              \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\"", "lemma DynComConseq:\n  assumes \"P \\<subseteq> {s. \\<exists>P' Q' A'.  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' (c s) Q',A' \\<and> P \\<subseteq> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P DynCom c Q,A\"", "lemma SpecAnno:\n assumes consequence: \"P \\<subseteq> {s. (\\<exists> Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A))}\"\n assumes spec: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) (c Z) (Q' Z),(A' Z)\"\n assumes bdy_constant:  \"\\<forall>Z. c Z = c undefined\"\n shows   \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (specAnno P' c Q' A') Q,A\"", "lemma SpecAnno':\n \"\\<lbrakk>P \\<subseteq> {s.  \\<exists> Z. s\\<in>P' Z \\<and>\n            (\\<forall>t. t \\<in> Q' Z \\<longrightarrow>  t \\<in> Q) \\<and> (\\<forall>t. t \\<in> A' Z \\<longrightarrow> t \\<in>  A)};\n   \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) (c Z) (Q' Z),(A' Z);\n   \\<forall>Z. c Z = c undefined\n  \\<rbrakk> \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (specAnno P' c Q' A') Q,A\"", "lemma SpecAnnoNoAbrupt:\n \"\\<lbrakk>P \\<subseteq> {s.  \\<exists> Z. s\\<in>P' Z \\<and>\n            (\\<forall>t. t \\<in> Q' Z \\<longrightarrow>  t \\<in> Q)};\n   \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) (c Z) (Q' Z),{};\n   \\<forall>Z. c Z = c undefined\n  \\<rbrakk> \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (specAnno P' c Q' (\\<lambda>s. {})) Q,A\"", "lemma Skip: \"P \\<subseteq> Q \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Skip Q,A\"", "lemma Basic: \"P \\<subseteq> {s. (f s) \\<in> Q} \\<Longrightarrow>  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Basic f) Q,A\"", "lemma BasicCond:\n  \"\\<lbrakk>P \\<subseteq> {s. (b s \\<longrightarrow> f s\\<in>Q) \\<and> (\\<not> b s \\<longrightarrow> g s\\<in>Q)}\\<rbrakk> \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Basic (\\<lambda>s. if b s then f s else g s) Q,A\"", "lemma Spec: \"P \\<subseteq> {s. (\\<forall>t. (s,t) \\<in> r \\<longrightarrow> t \\<in> Q) \\<and> (\\<exists>t. (s,t) \\<in> r)}\n            \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Spec r) Q,A\"", "lemma SpecIf:\n  \"\\<lbrakk>P \\<subseteq> {s. (b s \\<longrightarrow> f s \\<in> Q) \\<and> (\\<not> b s \\<longrightarrow> g s \\<in> Q \\<and> h s \\<in> Q)}\\<rbrakk> \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Spec (if_rel b f g h) Q,A\"", "lemma Seq [trans, intro?]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 R,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Seq c\\<^sub>1 c\\<^sub>2) Q,A\"", "lemma SeqSwap:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c2 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c1 R,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Seq c1 c2) Q,A\"", "lemma BSeq:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 R,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (bseq c\\<^sub>1 c\\<^sub>2) Q,A\"", "lemma Cond:\n  assumes wp: \"P \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\"\n  assumes deriv_c1: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 Q,A\"\n  assumes deriv_c2: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\"", "lemma CondSwap:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P1 c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P2 c2 Q,A; P \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P2)}\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c1 c2) Q,A\"", "lemma Cond':\n  \"\\<lbrakk>P \\<subseteq> {s. (b \\<subseteq> P1) \\<and> (- b \\<subseteq> P2)};\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P1 c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P2 c2 Q,A\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c1 c2) Q,A\"", "lemma CondInv:\n  assumes wp: \"P \\<subseteq> Q\"\n  assumes inv: \"Q \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\"\n  assumes deriv_c1: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 Q,A\"\n  assumes deriv_c2: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\"", "lemma CondInv':\n  assumes wp: \"P \\<subseteq> I\"\n  assumes inv: \"I \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\"\n  assumes wp': \"I \\<subseteq> Q\"\n  assumes deriv_c1: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 I,A\"\n  assumes deriv_c2: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 I,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\"", "lemma switchNil:\n  \"P \\<subseteq> Q \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P (switch v []) Q,A\"", "lemma switchCons:\n  \"\\<lbrakk>P \\<subseteq> {s. (v s \\<in> V \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and> (v s \\<notin> V \\<longrightarrow> s \\<in> P\\<^sub>2)};\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>1 c Q,A;\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>2 (switch v vs) Q,A\\<rbrakk>\n\\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P (switch v ((V,c)#vs)) Q,A\"", "lemma Guard:\n \"\\<lbrakk>P \\<subseteq> g \\<inter> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\"", "lemma GuardSwap:\n \"\\<lbrakk> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> g \\<inter> R\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\"", "lemma Guarantee:\n \"\\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R}; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\"", "lemma GuaranteeSwap:\n \"\\<lbrakk> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R}; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\"", "lemma GuardStrip:\n \"\\<lbrakk>P \\<subseteq> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\"", "lemma GuardStripSwap:\n \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> R; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\"", "lemma GuaranteeStrip:\n \"\\<lbrakk>P \\<subseteq> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\"", "lemma GuaranteeStripSwap:\n \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> R; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\"", "lemma GuaranteeAsGuard:\n \"\\<lbrakk>P \\<subseteq> g \\<inter> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\"", "lemma GuaranteeAsGuardSwap:\n \"\\<lbrakk> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> g \\<inter> R\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\"", "lemma GuardsNil:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards [] c) Q,A\"", "lemma GuardsCons:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Guard f g (guards gs c) Q,A \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards ((f,g)#gs) c) Q,A\"", "lemma GuardsConsGuaranteeStrip:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P guaranteeStrip f g (guards gs c) Q,A \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards (guaranteeStripPair f g#gs) c) Q,A\"", "lemma While:\n  assumes P_I: \"P \\<subseteq> I\"\n  assumes deriv_body: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I \\<inter> b) c I,A\"\n  assumes I_Q: \"I \\<inter> -b \\<subseteq> Q\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b I V c) Q,A\"", "lemma  WhileAnnoG:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards gs\n                    (whileAnno  b J V (Seq c (guards gs Skip)))) Q,A\n        \\<Longrightarrow>\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b I V c) Q,A\"", "lemma WhileNoGuard':\n  assumes P_I: \"P \\<subseteq> I\"\n  assumes deriv_body: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I \\<inter> b) c I,A\"\n  assumes I_Q: \"I \\<inter> -b \\<subseteq> Q\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b I V (Seq c Skip)) Q,A\"", "lemma WhileAnnoFix:\nassumes consequence: \"P \\<subseteq> {s. (\\<exists> Z. s\\<in>I Z \\<and> (I Z \\<inter> -b \\<subseteq> Q)) }\"\nassumes bdy: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I Z \\<inter> b) (c Z) (I Z),A\"\nassumes bdy_constant:  \"\\<forall>Z. c Z = c undefined\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoFix b I V c) Q,A\"", "lemma WhileAnnoFix':\nassumes consequence: \"P \\<subseteq> {s. (\\<exists> Z. s\\<in>I Z \\<and>\n                               (\\<forall>t. t \\<in> I Z \\<inter> -b \\<longrightarrow> t \\<in> Q)) }\"\nassumes bdy: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I Z \\<inter> b) (c Z) (I Z),A\"\nassumes bdy_constant:  \"\\<forall>Z. c Z = c undefined\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoFix b I V c) Q,A\"", "lemma WhileAnnoGFix:\nassumes whileAnnoFix:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards gs\n                (whileAnnoFix  b J V (\\<lambda>Z. (Seq (c Z) (guards gs Skip))))) Q,A\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoGFix gs b I V c) Q,A\"", "lemma Bind:\n  assumes adapt: \"P \\<subseteq> {s. s \\<in> P' s}\"\n  assumes c: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) (c (e s)) Q,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (bind e c) Q,A\"", "lemma Block:\nassumes adapt: \"P \\<subseteq> {s. init s \\<in> P' s}\"\nassumes bdy: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (block init bdy return c) Q,A\"", "lemma BlockSwap:\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes bdy: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\"\nassumes adapt: \"P \\<subseteq> {s. init s \\<in> P' s}\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (block init bdy return c) Q,A\"", "lemma BlockSpec:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                             (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes bdy: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) bdy (Q' Z),(A' Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (block init bdy return c) Q,A\"", "lemma Throw: \"P \\<subseteq> A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Throw Q,A\"", "lemmas Catch = hoarep.Catch", "lemma CatchSwap: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 Q,R\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Catch c\\<^sub>1 c\\<^sub>2 Q,A\"", "lemma raise: \"P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P raise f Q,A\"", "lemma condCatch: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 Q,((b \\<inter> R) \\<union> (-b \\<inter> A));\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A\\<rbrakk>\n                  \\<Longrightarrow>  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P condCatch c\\<^sub>1 b c\\<^sub>2 Q,A\"", "lemma condCatchSwap: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A;\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 Q,((b \\<inter> R) \\<union> (-b \\<inter> A))\\<rbrakk>\n                  \\<Longrightarrow>  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P condCatch c\\<^sub>1 b c\\<^sub>2 Q,A\"", "lemma ProcSpec:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                             (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call p (Q' Z),(A' Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\"", "lemma ProcSpec':\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t \\<in> Q' Z. return s t \\<in> R s t) \\<and>\n                             (\\<forall>t \\<in> A' Z. return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call p (Q' Z),(A' Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\"", "lemma ProcSpecNoAbrupt:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call p (Q' Z),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\"", "lemma FCall:\n\"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return (\\<lambda>s t. c (result t))) Q,A\n\\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (fcall init p return result c) Q,A\"", "lemma ProcRec:\n  assumes deriv_bodies:\n   \"\\<forall>p\\<in>Procs.\n    \\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>p\\<in>Procs. \\<Union>Z. {(P p Z,p,Q p Z,A p Z)})\n        \\<turnstile>\\<^bsub>/F\\<^esub> (P p Z) (the (\\<Gamma> p)) (Q p Z),(A p Z)\"\n  assumes Procs_defined: \"Procs \\<subseteq> dom \\<Gamma>\"\n  shows \"\\<forall>p\\<in>Procs. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(P p Z) Call p (Q p Z),(A p Z)\"", "lemma ProcRec':\n  assumes ctxt: \"\\<Theta>' = \\<Theta>\\<union>(\\<Union>p\\<in>Procs. \\<Union>Z. {(P p Z,p,Q p Z,A p Z)})\"\n  assumes deriv_bodies:\n   \"\\<forall>p\\<in>Procs. \\<forall>Z. \\<Gamma>,\\<Theta>'\\<turnstile>\\<^bsub>/F\\<^esub> (P p Z) (the (\\<Gamma> p)) (Q p Z),(A p Z)\"\n  assumes Procs_defined: \"Procs \\<subseteq> dom \\<Gamma>\"\n  shows \"\\<forall>p\\<in>Procs. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(P p Z) Call p (Q p Z),(A p Z)\"", "lemma ProcRecList:\n  assumes deriv_bodies:\n   \"\\<forall>p\\<in>set Procs.\n    \\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>p\\<in>set Procs. \\<Union>Z. {(P p Z,p,Q p Z,A p Z)})\n        \\<turnstile>\\<^bsub>/F\\<^esub> (P p Z) (the (\\<Gamma> p)) (Q p Z),(A p Z)\"\n  assumes dist: \"distinct Procs\"\n  assumes Procs_defined: \"set Procs \\<subseteq> dom \\<Gamma>\"\n  shows \"\\<forall>p\\<in>set Procs. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(P p Z) Call p (Q p Z),(A p Z)\"", "lemma  ProcRecSpecs:\n  \"\\<lbrakk>\\<forall>(P,p,Q,A) \\<in> Specs. \\<Gamma>,\\<Theta>\\<union>Specs\\<turnstile>\\<^bsub>/F\\<^esub> P (the (\\<Gamma> p)) Q,A;\n    \\<forall>(P,p,Q,A) \\<in> Specs. p \\<in> dom \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<forall>(P,p,Q,A) \\<in> Specs. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Call p) Q,A\"", "lemma ProcRec1:\n  assumes deriv_body:\n   \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>Z. {(P Z,p,Q Z,A Z)})\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (the (\\<Gamma> p)) (Q Z),(A Z)\"\n  assumes p_defined: \"p \\<in> dom \\<Gamma>\"\n  shows \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) Call p (Q Z),(A Z)\"", "lemma ProcNoRec1:\n  assumes deriv_body:\n   \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (the (\\<Gamma> p)) (Q Z),(A Z)\"\n  assumes p_def: \"p \\<in> dom \\<Gamma>\"\n  shows \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) Call p (Q Z),(A Z)\"", "lemma ProcBody:\n assumes WP: \"P \\<subseteq> P'\"\n assumes deriv_body: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' body Q,A\"\n assumes body: \"\\<Gamma> p = Some body\"\n shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Call p Q,A\"", "lemma CallBody:\nassumes adapt: \"P \\<subseteq> {s. init s \\<in> P' s}\"\nassumes bdy: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) body {t. return s t \\<in> R s t},{t. return s t \\<in> A}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes body: \"\\<Gamma> p = Some body\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\"", "lemmas ProcModifyReturn = HoarePartialProps.ProcModifyReturn", "lemmas ProcModifyReturnSameFaults = HoarePartialProps.ProcModifyReturnSameFaults", "lemma ProcModifyReturnNoAbr:\n  assumes spec: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return' c) Q,A\"\n  assumes result_conform:\n      \"\\<forall>s t. t \\<in> Modif (init s) \\<longrightarrow> (return' s t) = (return s t)\"\n  assumes modifies_spec:\n  \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} Call p (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\"", "lemma ProcModifyReturnNoAbrSameFaults:\n  assumes spec: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return' c) Q,A\"\n  assumes result_conform:\n      \"\\<forall>s t. t \\<in> Modif (init s) \\<longrightarrow> (return' s t) = (return s t)\"\n  assumes modifies_spec:\n  \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} Call p (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\"", "lemma DynProc:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' s Z \\<and>\n                          (\\<forall>t. t \\<in> Q' s Z \\<longrightarrow>  return s t \\<in> R s t) \\<and>\n                          (\\<forall>t. t \\<in> A' s Z \\<longrightarrow> return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>s\\<in> P. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s Z) Call (p s) (Q' s Z),(A' s Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P dynCall init p return c Q,A\"", "lemma DynProc':\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' s Z \\<and>\n                          (\\<forall>t \\<in> Q' s Z. return s t \\<in> R s t) \\<and>\n                          (\\<forall>t \\<in> A' s Z. return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>s\\<in> P. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s Z) Call (p s) (Q' s Z),(A' s Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P dynCall init p return c Q,A\"", "lemma DynProcStaticSpec:\nassumes adapt: \"P \\<subseteq> {s. s \\<in> S \\<and> (\\<exists>Z. init s \\<in> P' Z  \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> A' Z \\<longrightarrow> return s \\<tau> \\<in> A))}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes spec: \"\\<forall>s\\<in>S. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call (p s) (Q' Z),(A' Z)\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma DynProcProcPar:\nassumes adapt: \"P \\<subseteq> {s. p s = q \\<and> (\\<exists>Z. init s \\<in> P' Z  \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> A' Z \\<longrightarrow> return s \\<tau> \\<in> A))}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes spec: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call q (Q' Z),(A' Z)\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma DynProcProcParNoAbrupt:\nassumes adapt: \"P \\<subseteq> {s. p s = q \\<and> (\\<exists>Z. init s \\<in> P' Z  \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>))}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes spec: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call q (Q' Z),{}\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma DynProcModifyReturnNoAbr:\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>s \\<in> P. \\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} Call (p s)  (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma ProcDynModifyReturnNoAbrSameFaults:\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>s \\<in> P. \\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} (Call (p s)) (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma ProcProcParModifyReturn:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcPar} introduces the same constraint as first conjunction in\n         @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes ret_abr_modif: \"\\<forall>s t. t \\<in> (ModifAbr (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n          \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} (Call q) (Modif \\<sigma>),(ModifAbr \\<sigma>)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma ProcProcParModifyReturnSameFaults:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcPar} introduces the same constraint as first conjunction in\n         @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes ret_abr_modif: \"\\<forall>s t. t \\<in> (ModifAbr (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n          \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} Call q (Modif \\<sigma>),(ModifAbr \\<sigma>)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma ProcProcParModifyReturnNoAbr:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcParNoAbrupt} introduces the same constraint as\n      first conjunction in @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} (Call q) (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma ProcProcParModifyReturnNoAbrSameFaults:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcParNoAbrupt} introduces the same constraint as\n      first conjunction in @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} (Call q) (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\"", "lemma MergeGuards_iff: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P merge_guards c Q,A = \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\"", "lemma CombineStrip':\n  assumes deriv: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c' Q,A\"\n  assumes deriv_strip_triv: \"\\<Gamma>,{}\\<turnstile>\\<^bsub>/{}\\<^esub> P c'' UNIV,UNIV\"\n  assumes c'': \"c''= mark_guards False (strip_guards (-F) c')\"\n  assumes c: \"merge_guards c = merge_guards (mark_guards False c')\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P c Q,A\"", "lemma CombineStrip'':\n  assumes deriv: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{True}\\<^esub> P c' Q,A\"\n  assumes deriv_strip_triv: \"\\<Gamma>,{}\\<turnstile>\\<^bsub>/{}\\<^esub> P c'' UNIV,UNIV\"\n  assumes c'': \"c''= mark_guards False (strip_guards ({False}) c')\"\n  assumes c: \"merge_guards c = merge_guards (mark_guards False c')\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P c Q,A\"", "lemma AsmUN:\n  \"(\\<Union>Z. {(P Z, p, Q Z,A Z)}) \\<subseteq> \\<Theta>\n  \\<Longrightarrow>\n  \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (Call p) (Q Z),(A Z)\"", "lemma augment_context':\n  \"\\<lbrakk>\\<Theta> \\<subseteq> \\<Theta>'; \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z)  p (Q Z),(A Z)\\<rbrakk>\n   \\<Longrightarrow> \\<forall>Z. \\<Gamma>,\\<Theta>'\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\"", "lemma hoarep_strip:\n \"\\<lbrakk>\\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z); F' \\<subseteq> -F\\<rbrakk> \\<Longrightarrow>\n    \\<forall>Z. strip F' \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\"", "lemma augment_emptyFaults:\n \"\\<lbrakk>\\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/{}\\<^esub> (P Z) p (Q Z),(A Z)\\<rbrakk> \\<Longrightarrow>\n    \\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\"", "lemma augment_FaultsUNIV:\n \"\\<lbrakk>\\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\\<rbrakk> \\<Longrightarrow>\n    \\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/UNIV\\<^esub> (P Z) p (Q Z),(A Z)\"", "lemma PostConjI [trans]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c (Q \\<inter> R),(A \\<inter> B)\"", "lemma PostConjI' :\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c (Q \\<inter> R),(A \\<inter> B)\"", "lemma PostConjE [consumes 1]:\n  assumes conj: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c (Q \\<inter> R),(A \\<inter> B)\"\n  assumes E: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\\<rbrakk> \\<Longrightarrow> S\"\n  shows \"S\"", "lemma annotateI [trans]:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P anno Q,A; c = anno\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c Q,A\"", "lemma annotate_normI:\n  assumes deriv_anno: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P anno Q,A\"\n  assumes norm_eq: \"normalize c = normalize anno\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c Q,A\"", "lemma annotateWhile:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b I V c) Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (while gs b c) Q,A\"", "lemma reannotateWhile:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b I V c) Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b J V c) Q,A\"", "lemma reannotateWhileNoGuard:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b I V c) Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b J V c) Q,A\"", "lemma [trans] : \"P' \\<subseteq> P \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' c Q,A\"", "lemma [trans]: \"Q \\<subseteq> Q' \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q',A\"", "lemma [trans]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} c Q,A \\<Longrightarrow> (\\<And>s. P' s \\<longrightarrow> P s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P' s} c Q,A\"", "lemma [trans]:\n    \"(\\<And>s. P' s \\<longrightarrow> P s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P' s} c Q,A\"", "lemma [trans]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q s},A \\<Longrightarrow> (\\<And>s. Q s \\<longrightarrow> Q' s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q' s},A\"", "lemma [trans]:\n    \"(\\<And>s. Q s \\<longrightarrow> Q' s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q s},A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q' s},A\"", "lemma [intro?]: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Skip P,A\"", "lemma CondInt [trans,intro?]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> - b) c2 Q,A\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c1 c2) Q,A\"", "lemma CondConj [trans, intro?]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> b s} c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> \\<not> b s} c2 Q,A\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} (Cond {s. b s} c1 c2) Q,A\"", "lemma WhileInvInt [intro?]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) c P,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b P V c) (P \\<inter> -b),A\"", "lemma WhileInt [intro?]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) c P,A\n    \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b {s. undefined} V c) (P \\<inter> -b),A\"", "lemma WhileInvConj [intro?]:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> b s} c {s. P s},A\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} (whileAnno {s. b s} {s. P s} V c) {s. P s \\<and> \\<not> b s},A\"", "lemma WhileConj [intro?]:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> b s} c {s. P s},A\n    \\<Longrightarrow>\n\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} (whileAnno {s. b s} {s. undefined} V c) {s. P s \\<and> \\<not> b s},A\""], "translations": [["", "lemma conseq_no_aux:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' c Q',A';\n    \\<forall>s. s \\<in> P \\<longrightarrow> (s\\<in>P' \\<and> (Q' \\<subseteq> Q) \\<and> (A' \\<subseteq> A))\\<rbrakk>\n  \\<Longrightarrow>\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n     \\<forall>s.\n        s \\<in> P \\<longrightarrow>\n        s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "by (rule conseq [where P'=\"\\<lambda>Z. P'\" and Q'=\"\\<lambda>Z. Q'\" and A'=\"\\<lambda>Z. A'\"]) auto"], ["", "lemma conseq_exploit_pre:\n             \"\\<lbrakk>\\<forall>s \\<in> P. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s} \\<inter> P) c Q,A\\<rbrakk>\n              \\<Longrightarrow>\n              \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>P.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P) c Q,\n   A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "apply (rule Conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>P.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P) c Q,\n   A \\<Longrightarrow>\n    \\<forall>s\\<in>P.\n       \\<exists>P' Q' A'.\n          \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A' \\<and>\n          s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<forall>s\\<in>P.\n                   \\<Gamma>,\\<Theta>\n                      \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P) c Q,A;\n        s \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P' Q' A'.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',\n                        A' \\<and>\n                            s \\<in> P' \\<and>\n                            Q' \\<subseteq> Q \\<and> A' \\<subseteq> A", "apply (rule_tac x=\"{s} \\<inter> P\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<forall>s\\<in>P.\n                   \\<Gamma>,\\<Theta>\n                      \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P) c Q,A;\n        s \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q' A'.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter>\n                         P)\n                        c Q',A' \\<and>\n                            s \\<in> {s} \\<inter> P \\<and>\n                            Q' \\<subseteq> Q \\<and> A' \\<subseteq> A", "apply (rule_tac x=\"Q\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<forall>s\\<in>P.\n                   \\<Gamma>,\\<Theta>\n                      \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P) c Q,A;\n        s \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter>\n                         P)\n                        c Q,A' \\<and>\n                            s \\<in> {s} \\<inter> P \\<and>\n                            Q \\<subseteq> Q \\<and> A' \\<subseteq> A", "apply (rule_tac x=\"A\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<forall>s\\<in>P.\n                   \\<Gamma>,\\<Theta>\n                      \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P) c Q,A;\n        s \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>({s} \\<inter> P)\n                     c Q,A \\<and>\n                         s \\<in> {s} \\<inter> P \\<and>\n                         Q \\<subseteq> Q \\<and> A \\<subseteq> A", "by simp"], ["", "lemma conseq:\"\\<lbrakk>\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z);\n              \\<forall>s. s \\<in> P \\<longrightarrow> (\\<exists> Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A))\\<rbrakk>\n              \\<Longrightarrow>\n              \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),(A' Z);\n     \\<forall>s.\n        s \\<in> P \\<longrightarrow>\n        (\\<exists>Z.\n            s \\<in> P' Z \\<and>\n            Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "by (rule Conseq') blast"], ["", "lemma Lem: \"\\<lbrakk>\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z);\n             P \\<subseteq> {s. \\<exists> Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A)}\\<rbrakk>\n             \\<Longrightarrow>\n             \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (lem x c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),(A' Z);\n     P \\<subseteq> {s. \\<exists>Z.\n                          s \\<in> P' Z \\<and>\n                          Q' Z \\<subseteq> Q \\<and>\n                          A' Z \\<subseteq> A}\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P lem x c Q,A", "apply (unfold lem_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),(A' Z);\n     P \\<subseteq> {s. \\<exists>Z.\n                          s \\<in> P' Z \\<and>\n                          Q' Z \\<subseteq> Q \\<and>\n                          A' Z \\<subseteq> A}\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "apply (erule conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> P' Z \\<and>\n                         Q' Z \\<subseteq> Q \\<and>\n                         A' Z \\<subseteq> A} \\<Longrightarrow>\n    \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> P' Z \\<and> Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma LemAnno:\nassumes conseq:  \"P \\<subseteq> {s. \\<exists>Z. s\\<in>P' Z \\<and>\n                     (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> t \\<in> Q) \\<and> (\\<forall>t. t \\<in> A' Z \\<longrightarrow> t \\<in> A)}\"\nassumes lem: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z)\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (lem x c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P lem x c Q,A", "apply (rule Lem [OF lem])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> P' Z \\<and>\n                         Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A}", "using conseq"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow> t \\<in> Q) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow> t \\<in> A)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> P' Z \\<and>\n                         Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A}", "by blast"], ["", "lemma LemAnnoNoAbrupt:\nassumes conseq:  \"P \\<subseteq>  {s. \\<exists>Z. s\\<in>P' Z \\<and> (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> t \\<in> Q)}\"\nassumes lem: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),{}\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (lem x c) Q,{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P lem x c Q,{}", "apply (rule Lem [OF lem])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> P' Z \\<and>\n                         Q' Z \\<subseteq> Q \\<and> {} \\<subseteq> {}}", "using conseq"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow> t \\<in> Q)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> P' Z \\<and>\n                         Q' Z \\<subseteq> Q \\<and> {} \\<subseteq> {}}", "by blast"], ["", "lemma TrivPost: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z)\n                 \\<Longrightarrow>\n                 \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c UNIV,UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),\n   (A' Z) \\<Longrightarrow>\n    \\<forall>Z.\n       \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c UNIV,UNIV", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),\n      (A' Z) \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c UNIV,UNIV", "apply (erule conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>s.\n          s \\<in> P' Z \\<longrightarrow>\n          (\\<exists>Z.\n              s \\<in> P' Z \\<and>\n              Q' Z \\<subseteq> UNIV \\<and> A' Z \\<subseteq> UNIV)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma TrivPostNoAbr: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),{}\n                 \\<Longrightarrow>\n                 \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c UNIV,{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),\n   {} \\<Longrightarrow>\n    \\<forall>Z.\n       \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c UNIV,{}", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),\n      {} \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c UNIV,{}", "apply (erule conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>s.\n          s \\<in> P' Z \\<longrightarrow>\n          (\\<exists>Z.\n              s \\<in> P' Z \\<and>\n              Q' Z \\<subseteq> UNIV \\<and> {} \\<subseteq> {})", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma conseq_under_new_pre:\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n        \\<forall>s \\<in> P. s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n\\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n     \\<forall>s\\<in>P.\n        s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "apply (rule conseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n     \\<forall>s\\<in>P.\n        s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?P' Z) c\n                     (?Q' Z),(?A' Z)\n 2. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n     \\<forall>s\\<in>P.\n        s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         s \\<in> P \\<longrightarrow>\n                         (\\<exists>Z.\n                             s \\<in> ?P' Z \\<and>\n                             ?Q' Z \\<subseteq> Q \\<and> ?A' Z \\<subseteq> A)", "apply (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n        \\<forall>s\\<in>P.\n           s \\<in> P' \\<and>\n           Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?P' Z) c\n                     (?Q' Z),(?A' Z)\n 2. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n     \\<forall>s\\<in>P.\n        s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         s \\<in> P \\<longrightarrow>\n                         (\\<exists>Z.\n                             s \\<in> ?P' Z \\<and>\n                             ?Q' Z \\<subseteq> Q \\<and> ?A' Z \\<subseteq> A)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' c Q',A';\n     \\<forall>s\\<in>P.\n        s \\<in> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         s \\<in> P \\<longrightarrow>\n                         (\\<exists>Z.\n                             s \\<in> P' \\<and>\n                             Q' \\<subseteq> Q \\<and> A' \\<subseteq> A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma conseq_Kleymann:\"\\<lbrakk>\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) c (Q' Z),(A' Z);\n              \\<forall>s \\<in> P. (\\<exists>Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A))\\<rbrakk>\n              \\<Longrightarrow>\n              \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c (Q' Z),(A' Z);\n     \\<forall>s\\<in>P.\n        \\<exists>Z.\n           s \\<in> P' Z \\<and>\n           Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "by (rule Conseq') blast"], ["", "lemma DynComConseq:\n  assumes \"P \\<subseteq> {s. \\<exists>P' Q' A'.  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' (c s) Q',A' \\<and> P \\<subseteq> P' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P DynCom c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P DynCom c Q,A", "using assms"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>P' Q' A'.\n                       \\<Gamma>,\\<Theta>\n                          \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',A' \\<and>\n                       P \\<subseteq> P' \\<and>\n                       Q' \\<subseteq> Q \\<and> A' \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P DynCom c Q,A", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>P' Q' A'.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',\n                     A' \\<and>\n                         P \\<subseteq> P' \\<and>\n                         Q' \\<subseteq> Q \\<and>\n                         A' \\<subseteq> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P DynCom c Q,A", "apply (rule DynCom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>P' Q' A'.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',\n                     A' \\<and>\n                         P \\<subseteq> P' \\<and>\n                         Q' \\<subseteq> Q \\<and>\n                         A' \\<subseteq> A} \\<Longrightarrow>\n    \\<forall>s\\<in>P.\n       \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c s Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>P \\<subseteq> {s. \\<exists>P' Q' A'.\n                                     \\<Gamma>,\\<Theta>\n  \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',A' \\<and>\n                                     P \\<subseteq> P' \\<and>\n                                     Q' \\<subseteq> Q \\<and>\n                                     A' \\<subseteq> A};\n        s \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>P c s Q,A", "apply (rule Conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>P \\<subseteq> {s. \\<exists>P' Q' A'.\n                                     \\<Gamma>,\\<Theta>\n  \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',A' \\<and>\n                                     P \\<subseteq> P' \\<and>\n                                     Q' \\<subseteq> Q \\<and>\n                                     A' \\<subseteq> A};\n        s \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<forall>sa\\<in>P.\n                            \\<exists>P' Q' A'.\n                               \\<Gamma>,\\<Theta>\n                                  \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',\n                           A' \\<and>\n                               sa \\<in> P' \\<and>\n                               Q' \\<subseteq> Q \\<and> A' \\<subseteq> A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s sa.\n       \\<lbrakk>P \\<subseteq> {s. \\<exists>P' Q' A'.\n                                     \\<Gamma>,\\<Theta>\n  \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',A' \\<and>\n                                     P \\<subseteq> P' \\<and>\n                                     Q' \\<subseteq> Q \\<and>\n                                     A' \\<subseteq> A};\n        s \\<in> P; sa \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P' Q' A'.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>P' c s Q',\n                        A' \\<and>\n                            sa \\<in> P' \\<and>\n                            Q' \\<subseteq> Q \\<and> A' \\<subseteq> A", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SpecAnno:\n assumes consequence: \"P \\<subseteq> {s. (\\<exists> Z. s\\<in>P' Z \\<and> (Q' Z \\<subseteq> Q) \\<and> (A' Z \\<subseteq> A))}\"\n assumes spec: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) (c Z) (Q' Z),(A' Z)\"\n assumes bdy_constant:  \"\\<forall>Z. c Z = c undefined\"\n shows   \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (specAnno P' c Q' A') Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P specAnno P' c Q' A' Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P specAnno P' c Q' A' Q,A", "from spec bdy_constant"], ["proof (chain)\npicking this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z)\n  \\<forall>Z. c Z = c undefined", "have \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ((P' Z)) (c undefined) (Q' Z),(A' Z)\""], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z)\n  \\<forall>Z. c Z = c undefined\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c undefined (Q' Z),(A' Z)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z);\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z)\n                     c undefined (Q' Z),(A' Z)", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>\\<forall>Z.\n                   \\<Gamma>,\\<Theta>\n                      \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),\n               (A' Z);\n        \\<forall>Z. c Z = c undefined\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z)\n                     c undefined (Q' Z),(A' Z)", "apply (erule_tac x=Z in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>\\<forall>Z. c Z = c undefined;\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z)\n                     c undefined (Q' Z),(A' Z)", "apply (erule_tac x=Z in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>\\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z);\n        c Z = c undefined\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z)\n                     c undefined (Q' Z),(A' Z)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c undefined (Q' Z),(A' Z)\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P specAnno P' c Q' A' Q,A", "with consequence"], ["proof (chain)\npicking this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       s \\<in> P' Z \\<and>\n                       Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A}\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c undefined (Q' Z),(A' Z)", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       s \\<in> P' Z \\<and>\n                       Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A}\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c undefined (Q' Z),(A' Z)\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P specAnno P' c Q' A' Q,A", "apply (simp add: specAnno_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  Q' Z \\<subseteq> Q \\<and>\n                                  A' Z \\<subseteq> A};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c undefined (Q' Z),\n    (A' Z)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c undefined Q,A", "apply (erule conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> P' Z \\<and>\n                         Q' Z \\<subseteq> Q \\<and>\n                         A' Z \\<subseteq> A} \\<Longrightarrow>\n    \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> P' Z \\<and> Q' Z \\<subseteq> Q \\<and> A' Z \\<subseteq> A)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P specAnno P' c Q' A' Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma SpecAnno':\n \"\\<lbrakk>P \\<subseteq> {s.  \\<exists> Z. s\\<in>P' Z \\<and>\n            (\\<forall>t. t \\<in> Q' Z \\<longrightarrow>  t \\<in> Q) \\<and> (\\<forall>t. t \\<in> A' Z \\<longrightarrow> t \\<in>  A)};\n   \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) (c Z) (Q' Z),(A' Z);\n   \\<forall>Z. c Z = c undefined\n  \\<rbrakk> \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (specAnno P' c Q' A') Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  (\\<forall>t.\nt \\<in> Q' Z \\<longrightarrow> t \\<in> Q) \\<and>\n                                  (\\<forall>t.\nt \\<in> A' Z \\<longrightarrow> t \\<in> A)};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z);\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  specAnno P' c Q' A' Q,A", "apply (simp only: subset_iff [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  Q' Z \\<subseteq> Q \\<and>\n                                  A' Z \\<subseteq> A};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z);\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  specAnno P' c Q' A' Q,A", "apply (erule (1) SpecAnno)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),(A' Z);\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z. c Z = c undefined", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SpecAnnoNoAbrupt:\n \"\\<lbrakk>P \\<subseteq> {s.  \\<exists> Z. s\\<in>P' Z \\<and>\n            (\\<forall>t. t \\<in> Q' Z \\<longrightarrow>  t \\<in> Q)};\n   \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) (c Z) (Q' Z),{};\n   \\<forall>Z. c Z = c undefined\n  \\<rbrakk> \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (specAnno P' c Q' (\\<lambda>s. {})) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  (\\<forall>t.\nt \\<in> Q' Z \\<longrightarrow> t \\<in> Q)};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),{};\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  specAnno P' c Q' (\\<lambda>s. {}) Q,A", "apply (rule SpecAnno')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  (\\<forall>t.\nt \\<in> Q' Z \\<longrightarrow> t \\<in> Q)};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),{};\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> {s. \\<exists>Z.\n     s \\<in> P' Z \\<and>\n     (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> t \\<in> Q) \\<and>\n     (\\<forall>t. t \\<in> {} \\<longrightarrow> t \\<in> A)}\n 2. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  (\\<forall>t.\nt \\<in> Q' Z \\<longrightarrow> t \\<in> Q)};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),{};\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z\n                     (Q' Z),{}\n 3. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  s \\<in> P' Z \\<and>\n                                  (\\<forall>t.\nt \\<in> Q' Z \\<longrightarrow> t \\<in> Q)};\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) c Z (Q' Z),{};\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z. c Z = c undefined", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Skip: \"P \\<subseteq> Q \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Skip Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> Q \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Skip Q,A", "by (rule hoarep.Skip [THEN conseqPre],simp)"], ["", "lemma Basic: \"P \\<subseteq> {s. (f s) \\<in> Q} \\<Longrightarrow>  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Basic f) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. f s \\<in> Q} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Basic f Q,A", "by (rule hoarep.Basic [THEN conseqPre])"], ["", "lemma BasicCond:\n  \"\\<lbrakk>P \\<subseteq> {s. (b s \\<longrightarrow> f s\\<in>Q) \\<and> (\\<not> b s \\<longrightarrow> g s\\<in>Q)}\\<rbrakk> \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Basic (\\<lambda>s. if b s then f s else g s) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (b s \\<longrightarrow> f s \\<in> Q) \\<and>\n                      (\\<not> b s \\<longrightarrow>\n                       g s \\<in> Q)} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P\nBasic (\\<lambda>s. if b s then f s else g s) Q,A", "apply (rule Basic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (b s \\<longrightarrow> f s \\<in> Q) \\<and>\n                      (\\<not> b s \\<longrightarrow>\n                       g s \\<in> Q)} \\<Longrightarrow>\n    P \\<subseteq> {s. (if b s then f s else g s) \\<in> Q}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Spec: \"P \\<subseteq> {s. (\\<forall>t. (s,t) \\<in> r \\<longrightarrow> t \\<in> Q) \\<and> (\\<exists>t. (s,t) \\<in> r)}\n            \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Spec r) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (\\<forall>t.\n                          (s, t) \\<in> r \\<longrightarrow> t \\<in> Q) \\<and>\n                      (\\<exists>t. (s, t) \\<in> r)} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Spec r Q,A", "by (rule hoarep.Spec [THEN conseqPre])"], ["", "lemma SpecIf:\n  \"\\<lbrakk>P \\<subseteq> {s. (b s \\<longrightarrow> f s \\<in> Q) \\<and> (\\<not> b s \\<longrightarrow> g s \\<in> Q \\<and> h s \\<in> Q)}\\<rbrakk> \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Spec (if_rel b f g h) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (b s \\<longrightarrow> f s \\<in> Q) \\<and>\n                      (\\<not> b s \\<longrightarrow>\n                       g s \\<in> Q \\<and> h s \\<in> Q)} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Spec (if_rel b f g h) Q,A", "apply (rule Spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (b s \\<longrightarrow> f s \\<in> Q) \\<and>\n                      (\\<not> b s \\<longrightarrow>\n                       g s \\<in> Q \\<and> h s \\<in> Q)} \\<Longrightarrow>\n    P \\<subseteq> {s. (\\<forall>t.\n                          (s, t) \\<in> if_rel b f g h \\<longrightarrow>\n                          t \\<in> Q) \\<and>\n                      (\\<exists>t. (s, t) \\<in> if_rel b f g h)}", "apply (auto simp add: if_rel_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Seq [trans, intro?]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 R,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Seq c\\<^sub>1 c\\<^sub>2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 R,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  Seq c\\<^sub>1 c\\<^sub>2 Q,A", "by (rule hoarep.Seq)"], ["", "lemma SeqSwap:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c2 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c1 R,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Seq c1 c2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c2 Q,A;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c1 R,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Seq c1 c2 Q,A", "by (rule Seq)"], ["", "lemma BSeq:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 R,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (bseq c\\<^sub>1 c\\<^sub>2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 R,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  bseq c\\<^sub>1 c\\<^sub>2 Q,A", "by (unfold bseq_def) (rule Seq)"], ["", "lemma Cond:\n  assumes wp: \"P \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\"\n  assumes deriv_c1: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 Q,A\"\n  assumes deriv_c2: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "proof (rule hoarep.Cond [THEN conseqPre])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>(?P' \\<inter> b) c\\<^sub>1 Q,A\n 2. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>(?P' \\<inter> - b) c\\<^sub>2 Q,A\n 3. P \\<subseteq> ?P'", "from deriv_c1"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>1 c\\<^sub>1 Q,A", "show \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and> (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter> b) c\\<^sub>1 Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>1 c\\<^sub>1 Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s.\n  (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n  (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter>\n b)\nc\\<^sub>1 Q,A", "by (rule conseqPre) blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s.\n(s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n(s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter>\n                                     b)\n                                    c\\<^sub>1 Q,A\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s.\n  (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n  (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter>\n - b)\nc\\<^sub>2 Q,A\n 2. P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                      (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s.\n  (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n  (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter>\n - b)\nc\\<^sub>2 Q,A\n 2. P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                      (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "from deriv_c2"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>2 c\\<^sub>2 Q,A", "show \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and> (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter> - b) c\\<^sub>2 Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>2 c\\<^sub>2 Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s.\n  (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n  (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter>\n - b)\nc\\<^sub>2 Q,A", "by (rule conseqPre) blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s.\n(s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n(s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)} \\<inter>\n                                     - b)\n                                    c\\<^sub>2 Q,A\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                      (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                      (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "show \"P \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                      (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "by (rule wp)"], ["proof (state)\nthis:\n  P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                    (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma CondSwap:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P1 c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P2 c2 Q,A; P \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P2)}\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c1 c2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P1 c1 Q,A;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P2 c2 Q,A;\n     P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P1) \\<and>\n                       (s \\<notin> b \\<longrightarrow> s \\<in> P2)}\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c1 c2 Q,A", "by (rule Cond)"], ["", "lemma Cond':\n  \"\\<lbrakk>P \\<subseteq> {s. (b \\<subseteq> P1) \\<and> (- b \\<subseteq> P2)};\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P1 c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P2 c2 Q,A\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c1 c2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. b \\<subseteq> P1 \\<and> - b \\<subseteq> P2};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P1 c1 Q,A;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P2 c2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c1 c2 Q,A", "by (rule CondSwap) blast+"], ["", "lemma CondInv:\n  assumes wp: \"P \\<subseteq> Q\"\n  assumes inv: \"Q \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\"\n  assumes deriv_c1: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 Q,A\"\n  assumes deriv_c2: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "from wp inv"], ["proof (chain)\npicking this:\n  P \\<subseteq> Q\n  Q \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                    (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "have \"P \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\""], ["proof (prove)\nusing this:\n  P \\<subseteq> Q\n  Q \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                    (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                      (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}", "by blast"], ["proof (state)\nthis:\n  P \\<subseteq> {s. (s \\<in> b \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and>\n                    (s \\<notin> b \\<longrightarrow> s \\<in> P\\<^sub>2)}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "from Cond [OF this deriv_c1 deriv_c2]"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "."], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma CondInv':\n  assumes wp: \"P \\<subseteq> I\"\n  assumes inv: \"I \\<subseteq> {s. (s\\<in>b \\<longrightarrow> s\\<in>P\\<^sub>1) \\<and> (s\\<notin>b \\<longrightarrow> s\\<in>P\\<^sub>2)}\"\n  assumes wp': \"I \\<subseteq> Q\"\n  assumes deriv_c1: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 I,A\"\n  assumes deriv_c2: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 I,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "from CondInv [OF wp inv deriv_c1 deriv_c2]"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 I,A", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c\\<^sub>1 c\\<^sub>2) I,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 I,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 I,A", "."], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 I,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "from conseqPost [OF this wp' subset_refl]"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A", "."], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c\\<^sub>1 c\\<^sub>2 Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma switchNil:\n  \"P \\<subseteq> Q \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P (switch v []) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> Q \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P switch v [] Q,A", "by (simp add: Skip)"], ["", "lemma switchCons:\n  \"\\<lbrakk>P \\<subseteq> {s. (v s \\<in> V \\<longrightarrow> s \\<in> P\\<^sub>1) \\<and> (v s \\<notin> V \\<longrightarrow> s \\<in> P\\<^sub>2)};\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>1 c Q,A;\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>2 (switch v vs) Q,A\\<rbrakk>\n\\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P (switch v ((V,c)#vs)) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. (v s \\<in> V \\<longrightarrow>\n                                s \\<in> P\\<^sub>1) \\<and>\n                               (v s \\<notin> V \\<longrightarrow>\n                                s \\<in> P\\<^sub>2)};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>1 c Q,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>P\\<^sub>2 switch v vs Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  switch v ((V, c) # vs) Q,A", "by (simp add: Cond)"], ["", "lemma Guard:\n \"\\<lbrakk>P \\<subseteq> g \\<inter> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> g \\<inter> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g c Q,A", "apply (rule Guard [THEN conseqPre, of _ _ _ _ R])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<subseteq> g \\<inter> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>(g \\<inter> R) c Q,A\n 2. \\<lbrakk>P \\<subseteq> g \\<inter> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> g \\<inter> R", "apply (erule conseqPre)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<subseteq> g \\<inter> R \\<Longrightarrow> g \\<inter> R \\<subseteq> R\n 2. \\<lbrakk>P \\<subseteq> g \\<inter> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> g \\<inter> R", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma GuardSwap:\n \"\\<lbrakk> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> g \\<inter> R\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     P \\<subseteq> g \\<inter> R\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g c Q,A", "by (rule Guard)"], ["", "lemma Guarantee:\n \"\\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R}; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g c Q,A", "apply (rule Guarantee [THEN conseqPre, of _ _ _ _ _ \"{s. s \\<in> g \\<longrightarrow> s \\<in> R}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> f \\<in> F\n 2. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>(g \\<inter>\n                   {s. s \\<in> g \\<longrightarrow> s \\<in> R})\n                  c Q,A\n 3. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> {s. s \\<in> g \\<longrightarrow>\n  s \\<in> R}", "apply   assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>(g \\<inter>\n                   {s. s \\<in> g \\<longrightarrow> s \\<in> R})\n                  c Q,A\n 2. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> {s. s \\<in> g \\<longrightarrow>\n  s \\<in> R}", "apply  (erule conseqPre)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> g \\<inter> {s. s \\<in> g \\<longrightarrow> s \\<in> R}\n                      \\<subseteq> R\n 2. \\<lbrakk>P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> {s. s \\<in> g \\<longrightarrow>\n  s \\<in> R}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma GuaranteeSwap:\n \"\\<lbrakk> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R}; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     P \\<subseteq> {s. s \\<in> g \\<longrightarrow> s \\<in> R};\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g c Q,A", "by (rule Guarantee)"], ["", "lemma GuardStrip:\n \"\\<lbrakk>P \\<subseteq> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g c Q,A", "apply (rule Guarantee [THEN conseqPre])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>P \\<subseteq> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> ?P'\n                      \\<subseteq> {s. s \\<in> g \\<longrightarrow>\ns \\<in> ?R1}\n 2. \\<lbrakk>P \\<subseteq> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>?R1 c Q,A\n 3. \\<lbrakk>P \\<subseteq> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> f \\<in> F\n 4. \\<lbrakk>P \\<subseteq> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> ?P'", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma GuardStripSwap:\n \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> R; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Guard f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     P \\<subseteq> R; f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g c Q,A", "by (rule GuardStrip)"], ["", "lemma GuaranteeStrip:\n \"\\<lbrakk>P \\<subseteq> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  guaranteeStrip f g c Q,A", "by (unfold guaranteeStrip_def) (rule GuardStrip)"], ["", "lemma GuaranteeStripSwap:\n \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> R; f \\<in> F\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     P \\<subseteq> R; f \\<in> F\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  guaranteeStrip f g c Q,A", "by (unfold guaranteeStrip_def) (rule GuardStrip)"], ["", "lemma GuaranteeAsGuard:\n \"\\<lbrakk>P \\<subseteq> g \\<inter> R; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> g \\<inter> R;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  guaranteeStrip f g c Q,A", "by (unfold guaranteeStrip_def) (rule Guard)"], ["", "lemma GuaranteeAsGuardSwap:\n \"\\<lbrakk> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c Q,A; P \\<subseteq> g \\<inter> R\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guaranteeStrip f g c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>R c Q,A;\n     P \\<subseteq> g \\<inter> R\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  guaranteeStrip f g c Q,A", "by (rule GuaranteeAsGuard)"], ["", "lemma GuardsNil:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards [] c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P guards [] c Q,A", "by simp"], ["", "lemma GuardsCons:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Guard f g (guards gs c) Q,A \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards ((f,g)#gs) c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Guard f g (guards gs c) Q,\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P guards ((f, g) # gs) c Q,A", "by simp"], ["", "lemma GuardsConsGuaranteeStrip:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P guaranteeStrip f g (guards gs c) Q,A \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards (guaranteeStripPair f g#gs) c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P guaranteeStrip f g (guards gs c) Q,\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P\nguards (guaranteeStripPair f g # gs) c Q,A", "by (simp add: guaranteeStripPair_def guaranteeStrip_def)"], ["", "lemma While:\n  assumes P_I: \"P \\<subseteq> I\"\n  assumes deriv_body: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I \\<inter> b) c I,A\"\n  assumes I_Q: \"I \\<inter> -b \\<subseteq> Q\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b I V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b I V c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b I V c Q,A", "from deriv_body P_I I_Q"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(I \\<inter> b) c I,A\n  P \\<subseteq> I\n  I \\<inter> - b \\<subseteq> Q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(I \\<inter> b) c I,A\n  P \\<subseteq> I\n  I \\<inter> - b \\<subseteq> Q\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b I V c Q,A", "apply (simp add: whileAnno_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>(I \\<inter> b) c I,A;\n     P \\<subseteq> I; I \\<inter> - b \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P While b c Q,A", "apply (erule conseqPrePost [OF HoarePartialDef.While])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P \\<subseteq> I; I \\<inter> - b \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> P \\<subseteq> I\n 2. \\<lbrakk>P \\<subseteq> I; I \\<inter> - b \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> I \\<inter> - b \\<subseteq> Q\n 3. \\<lbrakk>P \\<subseteq> I; I \\<inter> - b \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> A \\<subseteq> A", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b I V c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>@{term \"J\"} will be instantiated by tactic with @{term \"gs' \\<inter> I\"} for\n  those guards that are not stripped.\\<close>"], ["", "lemma  WhileAnnoG:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards gs\n                    (whileAnno  b J V (Seq c (guards gs Skip)))) Q,A\n        \\<Longrightarrow>\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b I V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P\nguards gs (whileAnno b J V (Seq c (guards gs Skip))) Q,A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoG gs b I V c Q,A", "by (simp add: whileAnnoG_def whileAnno_def while_def)"], ["", "text \\<open>This form stems from @{term \"strip_guards F (whileAnnoG gs b I V c)\"}\\<close>"], ["", "lemma WhileNoGuard':\n  assumes P_I: \"P \\<subseteq> I\"\n  assumes deriv_body: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I \\<inter> b) c I,A\"\n  assumes I_Q: \"I \\<inter> -b \\<subseteq> Q\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b I V (Seq c Skip)) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b I V (Seq c Skip) Q,A", "apply (rule While [OF P_I _ I_Q])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>(I \\<inter> b) Seq c Skip I,A", "apply (rule Seq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(I \\<inter> b) c ?R3,A\n 2. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>?R3 Skip I,A", "apply  (rule deriv_body)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>I Skip I,A", "apply (rule hoarep.Skip)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma WhileAnnoFix:\nassumes consequence: \"P \\<subseteq> {s. (\\<exists> Z. s\\<in>I Z \\<and> (I Z \\<inter> -b \\<subseteq> Q)) }\"\nassumes bdy: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I Z \\<inter> b) (c Z) (I Z),A\"\nassumes bdy_constant:  \"\\<forall>Z. c Z = c undefined\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoFix b I V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A", "from bdy bdy_constant"], ["proof (chain)\npicking this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c Z (I Z),A\n  \\<forall>Z. c Z = c undefined", "have bdy': \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I Z \\<inter> b) (c undefined) (I Z),A\""], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c Z (I Z),A\n  \\<forall>Z. c Z = c undefined\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c undefined (I Z),\n   A", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c Z\n            (I Z),A;\n     \\<forall>Z. c Z = c undefined\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b)\n                     c undefined (I Z),A", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>\\<forall>Z.\n                   \\<Gamma>,\\<Theta>\n                      \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c Z\n               (I Z),A;\n        \\<forall>Z. c Z = c undefined\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b)\n                     c undefined (I Z),A", "apply (erule_tac x=Z in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>\\<forall>Z. c Z = c undefined;\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c Z (I Z),\n    A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b)\n                     c undefined (I Z),A", "apply (erule_tac x=Z in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>\\<Gamma>,\\<Theta>\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c Z\n            (I Z),A;\n        c Z = c undefined\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b)\n                     c undefined (I Z),A", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c undefined (I Z),A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A", "have \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I Z) (whileAnnoFix b I V c) (I Z \\<inter> -b),A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(I Z) whileAnnoFix b I V c\n   (I Z \\<inter> - b),A", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(I Z) whileAnnoFix b I V c\n   (I Z \\<inter> - b),A", "apply (unfold whileAnnoFix_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(I Z) While b (c undefined)\n   (I Z \\<inter> - b),A", "apply (rule hoarep.While)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(I Z \\<inter> b) c undefined (I Z),\n   A", "apply (rule bdy' [rule_format])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(I Z) whileAnnoFix b I V c\n (I Z \\<inter> - b),A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A", "then"], ["proof (chain)\npicking this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(I Z) whileAnnoFix b I V c\n (I Z \\<inter> - b),A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(I Z) whileAnnoFix b I V c\n (I Z \\<inter> - b),A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A", "apply (rule conseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> I Z \\<and>\n           I Z \\<inter> - b \\<subseteq> Q \\<and> A \\<subseteq> A)", "using consequence"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       s \\<in> I Z \\<and> I Z \\<inter> - b \\<subseteq> Q}\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> I Z \\<and>\n           I Z \\<inter> - b \\<subseteq> Q \\<and> A \\<subseteq> A)", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WhileAnnoFix':\nassumes consequence: \"P \\<subseteq> {s. (\\<exists> Z. s\\<in>I Z \\<and>\n                               (\\<forall>t. t \\<in> I Z \\<inter> -b \\<longrightarrow> t \\<in> Q)) }\"\nassumes bdy: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (I Z \\<inter> b) (c Z) (I Z),A\"\nassumes bdy_constant:  \"\\<forall>Z. c Z = c undefined\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoFix b I V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoFix b I V c Q,A", "apply (rule WhileAnnoFix [OF _ bdy bdy_constant])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> I Z \\<and> I Z \\<inter> - b \\<subseteq> Q}", "using consequence"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       s \\<in> I Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> I Z \\<inter> - b \\<longrightarrow>\n                           t \\<in> Q)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         s \\<in> I Z \\<and> I Z \\<inter> - b \\<subseteq> Q}", "by blast"], ["", "lemma WhileAnnoGFix:\nassumes whileAnnoFix:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (guards gs\n                (whileAnnoFix  b J V (\\<lambda>Z. (Seq (c Z) (guards gs Skip))))) Q,A\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoGFix gs b I V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoGFix gs b I V c Q,A", "using whileAnnoFix"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P guards gs\n (whileAnnoFix b J V (\\<lambda>Z. Seq (c Z) (guards gs Skip)))\n                                    Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoGFix gs b I V c Q,A", "by (simp add: whileAnnoGFix_def whileAnnoFix_def while_def)"], ["", "lemma Bind:\n  assumes adapt: \"P \\<subseteq> {s. s \\<in> P' s}\"\n  assumes c: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) (c (e s)) Q,A\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (bind e c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P bind e c Q,A", "apply (rule conseq [where P'=\"\\<lambda>Z. {s. s=Z \\<and> s \\<in> P' Z}\" and Q'=\"\\<lambda>Z. Q\" and\nA'=\"\\<lambda>Z. A\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P' Z}\n   bind e c Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P' Z}\n   bind e c Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  (unfold bind_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P' Z}\n   DynCom (\\<lambda>s. c (e s)) Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  (rule DynCom)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       \\<forall>s\\<in>{s. s = Z \\<and> s \\<in> P' Z}.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P' Z}\n      c (e s) Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  (rule ballI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P' Z}\n   c (e s) Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P' Z}\n   c (e Z) Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  (rule conseqPre)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z.\n       Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(?P'9 Z) c (e Z) Q,A\n 2. \\<And>Z.\n       Z \\<in> P' Z \\<Longrightarrow>\n       {s. s = Z \\<and> s \\<in> P' Z} \\<subseteq> ?P'9 Z\n 3. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply   (rule c [rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       Z \\<in> P' Z \\<Longrightarrow>\n       {s. s = Z \\<and> s \\<in> P' Z} \\<subseteq> P' Z\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply  blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "using adapt"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. s \\<in> P' s}\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Block:\nassumes adapt: \"P \\<subseteq> {s. init s \\<in> P' s}\"\nassumes bdy: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (block init bdy return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P block init bdy return c Q,A", "apply (rule conseq [where P'=\"\\<lambda>Z. {s. s=Z \\<and> init s \\<in> P' Z}\" and Q'=\"\\<lambda>Z. Q\" and\nA'=\"\\<lambda>Z. A\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   block init bdy return c Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> init s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> init s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   block init bdy return c Q,A", "using adapt"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. init s \\<in> P' s}\n\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> init s \\<in> P' Z} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   block init bdy return c Q,A", "apply  blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   block init bdy return c Q,A", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   block init bdy return c Q,A", "apply (unfold block_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   DynCom\n    (\\<lambda>s.\n        Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n         (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t))))\n   Q,A", "apply (rule DynCom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>s\\<in>{s. s = Z \\<and> init s \\<in> P' Z}.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n       s = Z \\<and> init s \\<in> P' Z}\n      Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n       (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))\n      Q,A", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       s \\<in> {s. s = Z \\<and> init s \\<in> P' Z} \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n    (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))\n   Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw))\n    (DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)))\n   Q,A", "apply (rule_tac R=\"{t. return Z t \\<in> R Z t}\" in SeqSwap )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> R Z t}\n   DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  (rule_tac  P'=\"\\<lambda>Z'. {t. t=Z' \\<and> return Z t \\<in> R Z t}\" and\n          Q'=\"\\<lambda>Z'. Q\" and A'=\"\\<lambda>Z'. A\" in conseq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<forall>Za.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n       t = Za \\<and> return Z t \\<in> R Z t}\n      DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<forall>s.\n          s \\<in> {t. return Z t \\<in> R Z t} \\<longrightarrow>\n          (\\<exists>Za.\n              s \\<in> {t. t = Za \\<and> return Z t \\<in> R Z t} \\<and>\n              Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 3. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<forall>s.\n          s \\<in> {t. return Z t \\<in> R Z t} \\<longrightarrow>\n          (\\<exists>Za.\n              s \\<in> {t. t = Za \\<and> return Z t \\<in> R Z t} \\<and>\n              Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<forall>Za.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n       t = Za \\<and> return Z t \\<in> R Z t}\n      DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A\n 3. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<forall>Za.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n       t = Za \\<and> return Z t \\<in> R Z t}\n      DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Za.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n    t = Za \\<and> return Z t \\<in> R Z t}\n   DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  (rule DynCom)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Za.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<forall>s\\<in>{t. t = Za \\<and> return Z t \\<in> R Z t}.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n       t = Za \\<and> return Z t \\<in> R Z t}\n      Seq (Basic (return Z)) (c Z s) Q,A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  (clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Za.\n       \\<lbrakk>init Z \\<in> P' Z; return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     Seq (Basic (return Z)) (c Z Za) Q,A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  (rule SeqSwap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Za.\n       \\<lbrakk>init Z \\<in> P' Z; return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R38 Z Za)\n                     c Z Za Q,A\n 2. \\<And>Z Za.\n       \\<lbrakk>init Z \\<in> P' Z; return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     Basic (return Z) (?R38 Z Za),A\n 3. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply   (rule c [rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Za.\n       \\<lbrakk>init Z \\<in> P' Z; return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     Basic (return Z) (R Z Za),A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  (rule Basic)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Za.\n       \\<lbrakk>init Z \\<in> P' Z; return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> {t. t = Za \\<and> return Z t \\<in> R Z t}\n                         \\<subseteq> {s. return Z s \\<in> R Z Za}\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply  clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Catch (Seq (Basic init) bdy) (Seq (Basic (return Z)) Throw)\n   {t. return Z t \\<in> R Z t},A", "apply (rule_tac R=\"{t. return Z t \\<in> A}\" in Catch)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Seq (Basic init) bdy {t. return Z t \\<in> R Z t},{t. return Z t \\<in> A}\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Seq (Basic (return Z)) Throw {t. return Z t \\<in> R Z t},A", "apply  (rule_tac R=\"{i. i \\<in> P' Z}\" in Seq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> init s \\<in> P' Z}\n   Basic init {i. i \\<in> P' Z},{t. return Z t \\<in> A}\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{i. i \\<in> P' Z} bdy\n   {t. return Z t \\<in> R Z t},{t. return Z t \\<in> A}\n 3. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Seq (Basic (return Z)) Throw {t. return Z t \\<in> R Z t},A", "apply   (rule Basic)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       {s. s = Z \\<and> init s \\<in> P' Z}\n       \\<subseteq> {s. init s \\<in> {i. i \\<in> P' Z}}\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{i. i \\<in> P' Z} bdy\n   {t. return Z t \\<in> R Z t},{t. return Z t \\<in> A}\n 3. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Seq (Basic (return Z)) Throw {t. return Z t \\<in> R Z t},A", "apply   clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{i. i \\<in> P' Z} bdy\n   {t. return Z t \\<in> R Z t},{t. return Z t \\<in> A}\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Seq (Basic (return Z)) Throw {t. return Z t \\<in> R Z t},A", "apply  simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) bdy\n   {t. return Z t \\<in> R Z t},{t. return Z t \\<in> A}\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Seq (Basic (return Z)) Throw {t. return Z t \\<in> R Z t},A", "apply  (rule bdy [rule_format])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Seq (Basic (return Z)) Throw {t. return Z t \\<in> R Z t},A", "apply (rule SeqSwap)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(?R62 Z) Throw\n   {t. return Z t \\<in> R Z t},A\n 2. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Basic (return Z) (?R62 Z),A", "apply  (rule Throw)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{t. return Z t \\<in> A}\n   Basic (return Z) A,A", "apply (rule Basic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       init Z \\<in> P' Z \\<Longrightarrow>\n       {t. return Z t \\<in> A} \\<subseteq> {s. return Z s \\<in> A}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma BlockSwap:\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes bdy: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\"\nassumes adapt: \"P \\<subseteq> {s. init s \\<in> P' s}\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (block init bdy return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P block init bdy return c Q,A", "using adapt bdy c"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. init s \\<in> P' s}\n  \\<forall>s.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' s) bdy\n {t. return s t \\<in> R s t},{t. return s t \\<in> A}\n  \\<forall>s t.\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(R s t) c s t Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P block init bdy return c Q,A", "by (rule Block)"], ["", "lemma BlockSpec:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                             (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes bdy: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) bdy (Q' Z),(A' Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (block init bdy return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P block init bdy return c Q,A", "apply (rule conseq [where P'=\"\\<lambda>Z. {s. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                             (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\" and Q'=\"\\<lambda>Z. Q\" and\nA'=\"\\<lambda>Z. A\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   block init bdy return c Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow>\n                           return s t \\<in> A)} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow>\n                           return s t \\<in> A)} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   block init bdy return c Q,A", "using adapt"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow>\n                           return s t \\<in> A)}\n\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow>\n                           return s t \\<in> A)} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   block init bdy return c Q,A", "apply  blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   block init bdy return c Q,A", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   block init bdy return c Q,A", "apply (unfold block_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   DynCom\n    (\\<lambda>s.\n        Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n         (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t))))\n   Q,A", "apply (rule DynCom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>s\\<in>{s. init s \\<in> P' Z \\<and>\n                          (\\<forall>t.\n                              t \\<in> Q' Z \\<longrightarrow>\n                              return s t \\<in> R s t) \\<and>\n                          (\\<forall>t.\n                              t \\<in> A' Z \\<longrightarrow>\n                              return s t \\<in> A)}.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n       init s \\<in> P' Z \\<and>\n       (\\<forall>t.\n           t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n       (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n      Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n       (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))\n      Q,A", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       s \\<in> {s. init s \\<in> P' Z \\<and>\n                   (\\<forall>t.\n                       t \\<in> Q' Z \\<longrightarrow>\n                       return s t \\<in> R s t) \\<and>\n                   (\\<forall>t.\n                       t \\<in> A' Z \\<longrightarrow>\n                       return s t \\<in> A)} \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n    init s \\<in> P' Z \\<and>\n    (\\<forall>t.\n        t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n    (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\n   Seq (Catch (Seq (Basic init) bdy) (Seq (Basic (return s)) Throw))\n    (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))\n   Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Seq (Catch (Seq (Basic init) bdy)\n                           (Seq (Basic (return s)) Throw))\n                      (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))\n                     Q,A", "apply (rule_tac R=\"{t. return s t \\<in> R s t}\" in SeqSwap )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> R s t}\n                     DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)) Q,A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  (rule_tac  P'=\"\\<lambda>Z'. {t. t=Z' \\<and> return s t \\<in> R s t}\" and\n          Q'=\"\\<lambda>Z'. Q\" and A'=\"\\<lambda>Z'. A\" in conseq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Z.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Z \\<and> return s t \\<in> R s t}\n                        DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t))\n                        Q,A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>sa.\n                            sa \\<in> {t.\nreturn s t \\<in> R s t} \\<longrightarrow>\n                            (\\<exists>Z.\n                                sa \\<in> {t.\n    t = Z \\<and> return s t \\<in> R s t} \\<and>\n                                Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 3. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>sa.\n                            sa \\<in> {t.\nreturn s t \\<in> R s t} \\<longrightarrow>\n                            (\\<exists>Z.\n                                sa \\<in> {t.\n    t = Z \\<and> return s t \\<in> R s t} \\<and>\n                                Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Z.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Z \\<and> return s t \\<in> R s t}\n                        DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t))\n                        Q,A\n 3. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Z.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Z \\<and> return s t \\<in> R s t}\n                        DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t))\n                        Q,A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return s t \\<in> R s t}\n                     DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)) Q,A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  (rule DynCom)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>sa\\<in>{t.\n    t = Za \\<and> return s t \\<in> R s t}.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Za \\<and> return s t \\<in> R s t}\n                        Seq (Basic (return s)) (c s sa) Q,A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  (clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A;\n        return s Za \\<in> R s Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return s t \\<in> R s t}\n                     Seq (Basic (return s)) (c s Za) Q,A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  (rule SeqSwap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A;\n        return s Za \\<in> R s Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R165 Z s Za)\n                     c s Za Q,A\n 2. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A;\n        return s Za \\<in> R s Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return s t \\<in> R s t}\n                     Basic (return s) (?R165 Z s Za),A\n 3. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply   (rule c [rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A;\n        return s Za \\<in> R s Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return s t \\<in> R s t}\n                     Basic (return s) (R s Za),A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  (rule Basic)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s Za.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A;\n        return s Za \\<in> R s Za\\<rbrakk>\n       \\<Longrightarrow> {t. t = Za \\<and> return s t \\<in> R s t}\n                         \\<subseteq> {sa. return s sa \\<in> R s Za}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply  clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Catch (Seq (Basic init) bdy)\n                      (Seq (Basic (return s)) Throw)\n                     {t. return s t \\<in> R s t},A", "apply (rule_tac R=\"{t. return s t \\<in> A}\" in Catch)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Seq (Basic init) bdy {t. return s t \\<in> R s t},\n                     {t. return s t \\<in> A}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply  (rule_tac R=\"{i. i \\<in> P' Z}\" in Seq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      init s \\<in> P' Z \\<and>\n                      (\\<forall>t.\n                          t \\<in> Q' Z \\<longrightarrow>\n                          return s t \\<in> R s t) \\<and>\n                      (\\<forall>t.\n                          t \\<in> A' Z \\<longrightarrow>\n                          return s t \\<in> A)}\n                     Basic init {i. i \\<in> P' Z},{t. return s t \\<in> A}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{i. i \\<in> P' Z}\n                     bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\n 3. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply   (rule Basic)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> {s. init s \\<in> P' Z \\<and>\n                             (\\<forall>t.\n                                 t \\<in> Q' Z \\<longrightarrow>\n                                 return s t \\<in> R s t) \\<and>\n                             (\\<forall>t.\n                                 t \\<in> A' Z \\<longrightarrow>\n                                 return s t \\<in> A)}\n                         \\<subseteq> {s. init s \\<in> {i. i \\<in> P' Z}}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{i. i \\<in> P' Z}\n                     bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\n 3. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply   clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{i. i \\<in> P' Z}\n                     bdy {t. return s t \\<in> R s t},{t. return s t \\<in> A}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply  simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) bdy\n                     {t. return s t \\<in> R s t},{t. return s t \\<in> A}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply  (rule conseq [OF bdy])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>sa.\n                            sa \\<in> P' Z \\<longrightarrow>\n                            (\\<exists>Z.\n                                sa \\<in> P' Z \\<and>\n                                Q' Z\n                                \\<subseteq> {t.\n       return s t \\<in> R s t} \\<and>\n                                A' Z \\<subseteq> {t. return s t \\<in> A})\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply  clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s sa.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A;\n        sa \\<in> P' Z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Z.\n                            sa \\<in> P' Z \\<and>\n                            Q' Z\n                            \\<subseteq> {t. return s t \\<in> R s t} \\<and>\n                            A' Z \\<subseteq> {t. return s t \\<in> A}\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply  blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Seq (Basic (return s)) Throw\n                     {t. return s t \\<in> R s t},A", "apply (rule SeqSwap)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R221 Z s) Throw\n                     {t. return s t \\<in> R s t},A\n 2. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Basic (return s) (?R221 Z s),A", "apply  (rule Throw)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      return s t \\<in> A}\n                     Basic (return s) A,A", "apply (rule Basic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z s.\n       \\<lbrakk>init s \\<in> P' Z;\n        \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t;\n        \\<forall>t.\n           t \\<in> A' Z \\<longrightarrow> return s t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> {t. return s t \\<in> A}\n                         \\<subseteq> {sa. return s sa \\<in> A}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Throw: \"P \\<subseteq> A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Throw Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Throw Q,A", "by (rule hoarep.Throw [THEN conseqPre])"], ["", "lemmas Catch = hoarep.Catch"], ["", "lemma CatchSwap: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 Q,R\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Catch c\\<^sub>1 c\\<^sub>2 Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,R\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  Catch c\\<^sub>1 c\\<^sub>2 Q,A", "by (rule hoarep.Catch)"], ["", "lemma raise: \"P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P raise f Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P raise f Q,A", "apply (simp add: raise_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Seq (Basic f) Throw Q,A", "apply (rule Seq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Basic f ?R,A\n 2. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>?R Throw Q,A", "apply  (rule Basic)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    P \\<subseteq> {s. f s \\<in> ?R}\n 2. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>?R Throw Q,A", "apply  (assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>A Throw Q,A", "apply (rule Throw)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. f s \\<in> A} \\<Longrightarrow> A \\<subseteq> A", "apply (rule subset_refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma condCatch: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 Q,((b \\<inter> R) \\<union> (-b \\<inter> A));\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A\\<rbrakk>\n                  \\<Longrightarrow>  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P condCatch c\\<^sub>1 b c\\<^sub>2 Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  condCatch c\\<^sub>1 b c\\<^sub>2 Q,A", "apply (simp add: condCatch_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  Catch c\\<^sub>1 (Cond b c\\<^sub>2 Throw) Q,A", "apply (rule Catch)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,?R\n 2. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>?R\n                  Cond b c\\<^sub>2 Throw Q,A", "apply  assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>(b \\<inter>\n                   R \\<union>\n                   - b \\<inter> A)\n                  Cond b c\\<^sub>2 Throw Q,A", "apply (rule CondSwap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>?P1.3 c\\<^sub>2 Q,A\n 2. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>?P2.3 Throw Q,A\n 3. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> b \\<inter> R \\<union> - b \\<inter> A\n                      \\<subseteq> {s. (s \\<in> b \\<longrightarrow>\n s \\<in> ?P1.3) \\<and>\n(s \\<notin> b \\<longrightarrow> s \\<in> ?P2.3)}", "apply   (assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>?P2.3 Throw Q,A\n 2. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> b \\<inter> R \\<union> - b \\<inter> A\n                      \\<subseteq> {s. (s \\<in> b \\<longrightarrow>\n s \\<in> R) \\<and>\n(s \\<notin> b \\<longrightarrow> s \\<in> ?P2.3)}", "apply  (rule hoarep.Throw)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n         (b \\<inter> R \\<union> - b \\<inter> A);\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A\\<rbrakk>\n    \\<Longrightarrow> b \\<inter> R \\<union> - b \\<inter> A\n                      \\<subseteq> {s. (s \\<in> b \\<longrightarrow>\n s \\<in> R) \\<and>\n(s \\<notin> b \\<longrightarrow> s \\<in> A)}", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma condCatchSwap: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> R c\\<^sub>2 Q,A;\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c\\<^sub>1 Q,((b \\<inter> R) \\<union> (-b \\<inter> A))\\<rbrakk>\n                  \\<Longrightarrow>  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P condCatch c\\<^sub>1 b c\\<^sub>2 Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>R c\\<^sub>2 Q,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>P c\\<^sub>1 Q,\n (b \\<inter> R \\<union> - b \\<inter> A)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  condCatch c\\<^sub>1 b c\\<^sub>2 Q,A", "by (rule condCatch)"], ["", "lemma ProcSpec:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                             (\\<forall>t. t \\<in> A' Z \\<longrightarrow> return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call p (Q' Z),(A' Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "using adapt c p"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow>\n                           return s t \\<in> A)}\n  \\<forall>s t.\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(R s t) c s t Q,A\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call p (Q' Z),(A' Z)\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "apply (unfold call_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                  init s \\<in> P' Z \\<and>\n                                  (\\<forall>t.\nt \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                                  (\\<forall>t.\nt \\<in> A' Z \\<longrightarrow> return s t \\<in> A)};\n     \\<forall>s t.\n        \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(R s t) c s t Q,A;\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call p (Q' Z),\n    (A' Z)\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P\n                  block init (Call p) return c Q,A", "by (rule BlockSpec)"], ["", "lemma ProcSpec':\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t \\<in> Q' Z. return s t \\<in> R s t) \\<and>\n                             (\\<forall>t \\<in> A' Z. return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call p (Q' Z),(A' Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "apply (rule ProcSpec [OF _ c p])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         init s \\<in> P' Z \\<and>\n                         (\\<forall>t.\n                             t \\<in> Q' Z \\<longrightarrow>\n                             return s t \\<in> R s t) \\<and>\n                         (\\<forall>t.\n                             t \\<in> A' Z \\<longrightarrow>\n                             return s t \\<in> A)}", "apply (insert adapt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         init s \\<in> P' Z \\<and>\n                         (\\<forall>t\\<in>Q' Z.\n                             return s t \\<in> R s t) \\<and>\n                         (\\<forall>t\\<in>A' Z.\n                             return s t \\<in> A)} \\<Longrightarrow>\n    P \\<subseteq> {s. \\<exists>Z.\n                         init s \\<in> P' Z \\<and>\n                         (\\<forall>t.\n                             t \\<in> Q' Z \\<longrightarrow>\n                             return s t \\<in> R s t) \\<and>\n                         (\\<forall>t.\n                             t \\<in> A' Z \\<longrightarrow>\n                             return s t \\<in> A)}", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>P \\<subseteq> {s. \\<exists>Z.\n                                     init s \\<in> P' Z \\<and>\n                                     (\\<forall>t\\<in>Q' Z.\n   return s t \\<in> R s t) \\<and>\n                                     (\\<forall>t\\<in>A' Z.\n   return s t \\<in> A)};\n        x \\<in> P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Z.\n                            init x \\<in> P' Z \\<and>\n                            (\\<forall>t.\n                                t \\<in> Q' Z \\<longrightarrow>\n                                return x t \\<in> R x t) \\<and>\n                            (\\<forall>t.\n                                t \\<in> A' Z \\<longrightarrow>\n                                return x t \\<in> A)", "apply (drule (1) subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> P;\n        x \\<in> {s. \\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t\\<in>Q' Z. return s t \\<in> R s t) \\<and>\n                       (\\<forall>t\\<in>A' Z. return s t \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Z.\n                            init x \\<in> P' Z \\<and>\n                            (\\<forall>t.\n                                t \\<in> Q' Z \\<longrightarrow>\n                                return x t \\<in> R x t) \\<and>\n                            (\\<forall>t.\n                                t \\<in> A' Z \\<longrightarrow>\n                                return x t \\<in> A)", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Z.\n       \\<lbrakk>x \\<in> P; init x \\<in> P' Z;\n        \\<forall>t\\<in>Q' Z. return x t \\<in> R x t;\n        \\<forall>t\\<in>A' Z. return x t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Z.\n                            init x \\<in> P' Z \\<and>\n                            (\\<forall>t.\n                                t \\<in> Q' Z \\<longrightarrow>\n                                return x t \\<in> R x t) \\<and>\n                            (\\<forall>t.\n                                t \\<in> A' Z \\<longrightarrow>\n                                return x t \\<in> A)", "apply (rule_tac x=Z in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x Z.\n       \\<lbrakk>x \\<in> P; init x \\<in> P' Z;\n        \\<forall>t\\<in>Q' Z. return x t \\<in> R x t;\n        \\<forall>t\\<in>A' Z. return x t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> init x \\<in> P' Z \\<and>\n                         (\\<forall>t.\n                             t \\<in> Q' Z \\<longrightarrow>\n                             return x t \\<in> R x t) \\<and>\n                         (\\<forall>t.\n                             t \\<in> A' Z \\<longrightarrow>\n                             return x t \\<in> A)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ProcSpecNoAbrupt:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' Z \\<and>\n                             (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call p (Q' Z),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "apply (rule ProcSpec [OF _ c p])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         init s \\<in> P' Z \\<and>\n                         (\\<forall>t.\n                             t \\<in> Q' Z \\<longrightarrow>\n                             return s t \\<in> R s t) \\<and>\n                         (\\<forall>t.\n                             t \\<in> {} \\<longrightarrow>\n                             return s t \\<in> A)}", "using adapt"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         init s \\<in> P' Z \\<and>\n                         (\\<forall>t.\n                             t \\<in> Q' Z \\<longrightarrow>\n                             return s t \\<in> R s t) \\<and>\n                         (\\<forall>t.\n                             t \\<in> {} \\<longrightarrow>\n                             return s t \\<in> A)}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma FCall:\n\"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return (\\<lambda>s t. c (result t))) Q,A\n\\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (fcall init p return result c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P\ncall init p return (\\<lambda>s t. c (result t)) Q,A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P fcall init p return result c Q,A", "by (simp add: fcall_def)"], ["", "lemma ProcRec:\n  assumes deriv_bodies:\n   \"\\<forall>p\\<in>Procs.\n    \\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>p\\<in>Procs. \\<Union>Z. {(P p Z,p,Q p Z,A p Z)})\n        \\<turnstile>\\<^bsub>/F\\<^esub> (P p Z) (the (\\<Gamma> p)) (Q p Z),(A p Z)\"\n  assumes Procs_defined: \"Procs \\<subseteq> dom \\<Gamma>\"\n  shows \"\\<forall>p\\<in>Procs. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(P p Z) Call p (Q p Z),(A p Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>Procs.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) Call p (Q p Z),(A p Z)", "by (intro strip)\n     (rule CallRec'\n     [OF _   Procs_defined deriv_bodies],\n     simp_all)"], ["", "lemma ProcRec':\n  assumes ctxt: \"\\<Theta>' = \\<Theta>\\<union>(\\<Union>p\\<in>Procs. \\<Union>Z. {(P p Z,p,Q p Z,A p Z)})\"\n  assumes deriv_bodies:\n   \"\\<forall>p\\<in>Procs. \\<forall>Z. \\<Gamma>,\\<Theta>'\\<turnstile>\\<^bsub>/F\\<^esub> (P p Z) (the (\\<Gamma> p)) (Q p Z),(A p Z)\"\n  assumes Procs_defined: \"Procs \\<subseteq> dom \\<Gamma>\"\n  shows \"\\<forall>p\\<in>Procs. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(P p Z) Call p (Q p Z),(A p Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>Procs.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) Call p (Q p Z),(A p Z)", "using ctxt deriv_bodies"], ["proof (prove)\nusing this:\n  \\<Theta>' =\n  \\<Theta> \\<union>\n  (\\<Union>p\\<in>Procs. \\<Union>Z. {(P p Z, p, Q p Z, A p Z)})\n  \\<forall>p\\<in>Procs.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>'\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) the (\\<Gamma> p) (Q p Z),\n    (A p Z)\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>Procs.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) Call p (Q p Z),(A p Z)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Theta>' =\n             \\<Theta> \\<union>\n             (\\<Union>p\\<in>Procs. \\<Union>Z. {(P p Z, p, Q p Z, A p Z)});\n     \\<forall>p\\<in>Procs.\n        \\<forall>Z.\n           \\<Gamma>,\\<Theta> \\<union>\n                    (\\<Union>p\\<in>Procs.\n                        \\<Union>Z. {(P p Z, p, Q p Z, A p Z)})\n              \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) the (\\<Gamma> p)\n       (Q p Z),(A p Z)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>p\\<in>Procs.\n                         \\<forall>Z.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) Call p\n                        (Q p Z),(A p Z)", "apply (erule ProcRec [OF _ Procs_defined])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ProcRecList:\n  assumes deriv_bodies:\n   \"\\<forall>p\\<in>set Procs.\n    \\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>p\\<in>set Procs. \\<Union>Z. {(P p Z,p,Q p Z,A p Z)})\n        \\<turnstile>\\<^bsub>/F\\<^esub> (P p Z) (the (\\<Gamma> p)) (Q p Z),(A p Z)\"\n  assumes dist: \"distinct Procs\"\n  assumes Procs_defined: \"set Procs \\<subseteq> dom \\<Gamma>\"\n  shows \"\\<forall>p\\<in>set Procs. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(P p Z) Call p (Q p Z),(A p Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>set Procs.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) Call p (Q p Z),(A p Z)", "using deriv_bodies Procs_defined"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>set Procs.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta> \\<union>\n                 (\\<Union>p\\<in>set Procs.\n                     \\<Union>Z. {(P p Z, p, Q p Z, A p Z)})\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) the (\\<Gamma> p) (Q p Z),\n    (A p Z)\n  set Procs \\<subseteq> dom \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>set Procs.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P p Z) Call p (Q p Z),(A p Z)", "by (rule ProcRec)"], ["", "lemma  ProcRecSpecs:\n  \"\\<lbrakk>\\<forall>(P,p,Q,A) \\<in> Specs. \\<Gamma>,\\<Theta>\\<union>Specs\\<turnstile>\\<^bsub>/F\\<^esub> P (the (\\<Gamma> p)) Q,A;\n    \\<forall>(P,p,Q,A) \\<in> Specs. p \\<in> dom \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<forall>(P,p,Q,A) \\<in> Specs. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Call p) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(P, p, Q, A)\\<in>Specs.\n                \\<Gamma>,\\<Theta> \\<union> Specs\n                   \\<turnstile>\\<^bsub>/F \\<^esub>P the (\\<Gamma> p) Q,A;\n     \\<forall>(P, p, Q, A)\\<in>Specs. p \\<in> dom \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(P, p, Q, A)\\<in>Specs.\n                         \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>P Call p Q,A", "apply (auto intro: CallRec)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ProcRec1:\n  assumes deriv_body:\n   \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>Z. {(P Z,p,Q Z,A Z)})\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (the (\\<Gamma> p)) (Q Z),(A Z)\"\n  assumes p_defined: \"p \\<in> dom \\<Gamma>\"\n  shows \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) Call p (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "from deriv_body p_defined"], ["proof (chain)\npicking this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta> \\<union> (\\<Union>Z. {(P Z, p, Q Z, A Z)})\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)\n  p \\<in> dom \\<Gamma>", "have \"\\<forall>p\\<in>{p}. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) Call p (Q Z),(A Z)\""], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta> \\<union> (\\<Union>Z. {(P Z, p, Q Z, A Z)})\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)\n  p \\<in> dom \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>{p}.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "by - (rule ProcRec [where A=\"\\<lambda>p. A\" and P=\"\\<lambda>p. P\" and Q=\"\\<lambda>p. Q\"],\n          simp_all)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>{p}.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>{p}.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "by simp"], ["proof (state)\nthis:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcNoRec1:\n  assumes deriv_body:\n   \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (the (\\<Gamma> p)) (Q Z),(A Z)\"\n  assumes p_def: \"p \\<in> dom \\<Gamma>\"\n  shows \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) Call p (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "from deriv_body"], ["proof (chain)\npicking this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)", "have \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<union>(\\<Union>Z. {(P Z,p,Q Z,A Z)})\n             \\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (the (\\<Gamma> p)) (Q Z),(A Z)\""], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta> \\<union> (\\<Union>Z. {(P Z, p, Q Z, A Z)})\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)", "by (blast intro: hoare_augment_context)"], ["proof (state)\nthis:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta> \\<union> (\\<Union>Z. {(P Z, p, Q Z, A Z)})\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "from this p_def"], ["proof (chain)\npicking this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta> \\<union> (\\<Union>Z. {(P Z, p, Q Z, A Z)})\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)\n  p \\<in> dom \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta> \\<union> (\\<Union>Z. {(P Z, p, Q Z, A Z)})\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) the (\\<Gamma> p) (Q Z),(A Z)\n  p \\<in> dom \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "by (rule ProcRec1)"], ["proof (state)\nthis:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcBody:\n assumes WP: \"P \\<subseteq> P'\"\n assumes deriv_body: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' body Q,A\"\n assumes body: \"\\<Gamma> p = Some body\"\n shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Call p Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Call p Q,A", "apply (rule conseqPre [OF _ WP])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' Call p Q,A", "apply (rule ProcNoRec1 [rule_format, where P=\"\\<lambda>Z. P'\" and Q=\"\\<lambda>Z. Q\" and A=\"\\<lambda>Z. A\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>P' the (\\<Gamma> p) Q,A\n 2. p \\<in> dom \\<Gamma>", "apply  (insert body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z.\n       \\<Gamma> p = Some body \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>P' the (\\<Gamma> p) Q,A\n 2. \\<Gamma> p = Some body \\<Longrightarrow> p \\<in> dom \\<Gamma>", "apply  simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma> p = Some body \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P' body Q,A\n 2. \\<Gamma> p = Some body \\<Longrightarrow> p \\<in> dom \\<Gamma>", "apply  (rule hoare_augment_context [OF deriv_body])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma> p = Some body \\<Longrightarrow> \\<Theta> \\<subseteq> \\<Theta>\n 2. \\<Gamma> p = Some body \\<Longrightarrow> p \\<in> dom \\<Gamma>", "apply  blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> p = Some body \\<Longrightarrow> p \\<in> dom \\<Gamma>", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma CallBody:\nassumes adapt: \"P \\<subseteq> {s. init s \\<in> P' s}\"\nassumes bdy: \"\\<forall>s. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s) body {t. return s t \\<in> R s t},{t. return s t \\<in> A}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes body: \"\\<Gamma> p = Some body\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "apply (unfold call_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P block init (Call p) return c Q,A", "apply (rule Block [OF adapt _ c])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' s) Call p\n   {t. return s t \\<in> R s t},{t. return s t \\<in> A}", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' s) Call p\n   {t. return s t \\<in> R s t},{t. return s t \\<in> A}", "apply (rule ProcBody [where \\<Gamma>=\\<Gamma>, OF _ bdy [rule_format] body])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. P' s \\<subseteq> P' s", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas ProcModifyReturn = HoarePartialProps.ProcModifyReturn"], ["", "lemmas ProcModifyReturnSameFaults = HoarePartialProps.ProcModifyReturnSameFaults"], ["", "lemma ProcModifyReturnNoAbr:\n  assumes spec: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return' c) Q,A\"\n  assumes result_conform:\n      \"\\<forall>s t. t \\<in> Modif (init s) \\<longrightarrow> (return' s t) = (return s t)\"\n  assumes modifies_spec:\n  \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} Call p (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "by (rule ProcModifyReturn [OF spec result_conform _ modifies_spec]) simp"], ["", "lemma ProcModifyReturnNoAbrSameFaults:\n  assumes spec: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return' c) Q,A\"\n  assumes result_conform:\n      \"\\<forall>s t. t \\<in> Modif (init s) \\<longrightarrow> (return' s t) = (return s t)\"\n  assumes modifies_spec:\n  \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} Call p (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (call init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P call init p return c Q,A", "by (rule ProcModifyReturnSameFaults [OF spec result_conform _ modifies_spec]) simp"], ["", "lemma DynProc:\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' s Z \\<and>\n                          (\\<forall>t. t \\<in> Q' s Z \\<longrightarrow>  return s t \\<in> R s t) \\<and>\n                          (\\<forall>t. t \\<in> A' s Z \\<longrightarrow> return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>s\\<in> P. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s Z) Call (p s) (Q' s Z),(A' s Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P dynCall init p return c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "apply (rule conseq [where P'=\"\\<lambda>Z. {s. s=Z \\<and> s \\<in> P}\"\n  and Q'=\"\\<lambda>Z. Q\" and A'=\"\\<lambda>Z. A\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   dynCall init p return c Q,A\n 2. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   dynCall init p return c Q,A", "using adapt"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' s Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' s Z \\<longrightarrow>\n                           return s t \\<in> A)}\n\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<in> P \\<longrightarrow>\n       (\\<exists>Z.\n           s \\<in> {s. s = Z \\<and> s \\<in> P} \\<and>\n           Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   dynCall init p return c Q,A", "apply  blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   dynCall init p return c Q,A", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   dynCall init p return c Q,A", "apply (unfold dynCall_def call_def block_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   DynCom\n    (\\<lambda>s.\n        DynCom\n         (\\<lambda>sa.\n             Seq (Catch (Seq (Basic init) (Call (p s)))\n                   (Seq (Basic (return sa)) Throw))\n              (DynCom (\\<lambda>t. Seq (Basic (return sa)) (c sa t)))))\n   Q,A", "apply (rule DynCom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<forall>s\\<in>{s. s = Z \\<and> s \\<in> P}.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n      DynCom\n       (\\<lambda>sa.\n           Seq (Catch (Seq (Basic init) (Call (p s)))\n                 (Seq (Basic (return sa)) Throw))\n            (DynCom (\\<lambda>t. Seq (Basic (return sa)) (c sa t))))\n      Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       Z \\<in> P \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   DynCom\n    (\\<lambda>s.\n        Seq (Catch (Seq (Basic init) (Call (p Z)))\n              (Seq (Basic (return s)) Throw))\n         (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t))))\n   Q,A", "apply (rule DynCom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       Z \\<in> P \\<Longrightarrow>\n       \\<forall>s\\<in>{s. s = Z \\<and> s \\<in> P}.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n      Seq (Catch (Seq (Basic init) (Call (p Z)))\n            (Seq (Basic (return s)) Throw))\n       (DynCom (\\<lambda>t. Seq (Basic (return s)) (c s t)))\n      Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       Z \\<in> P \\<Longrightarrow>\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>{s. s = Z \\<and> s \\<in> P}\n   Seq (Catch (Seq (Basic init) (Call (p Z)))\n         (Seq (Basic (return Z)) Throw))\n    (DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)))\n   Q,A", "apply (frule in_mono [rule_format, OF adapt])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z.\n       \\<lbrakk>Z \\<in> P;\n        Z \\<in> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' s Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' s Z \\<longrightarrow>\n                           return s t \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Catch (Seq (Basic init) (Call (p Z)))\n                           (Seq (Basic (return Z)) Throw))\n                      (DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)))\n                     Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Za;\n        \\<forall>t.\n           t \\<in> Q' Z Za \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Za \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Catch (Seq (Basic init) (Call (p Z)))\n                           (Seq (Basic (return Z)) Throw))\n                      (DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)))\n                     Q,A", "apply (rename_tac Z')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Catch (Seq (Basic init) (Call (p Z)))\n                           (Seq (Basic (return Z)) Throw))\n                      (DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)))\n                     Q,A", "apply (rule_tac R=\"Q' Z Z'\" in Seq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Catch (Seq (Basic init) (Call (p Z)))\n                      (Seq (Basic (return Z)) Throw)\n                     (Q' Z Z'),A\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply  (rule CatchSwap)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R32 Z Z')\n                     Seq (Basic (return Z)) Throw (Q' Z Z'),A\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Basic init) (Call (p Z)) (Q' Z Z'),(?R32 Z Z')\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply   (rule SeqSwap)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R35 Z Z') Throw\n                     (Q' Z Z'),A\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R32 Z Z')\n                     Basic (return Z) (?R35 Z Z'),A\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Basic init) (Call (p Z)) (Q' Z Z'),(?R32 Z Z')\n 4. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply    (rule Throw)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?R35 Z Z' \\<subseteq> A\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R32 Z Z')\n                     Basic (return Z) (?R35 Z Z'),A\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Basic init) (Call (p Z)) (Q' Z Z'),(?R32 Z Z')\n 4. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply    (rule subset_refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R32 Z Z')\n                     Basic (return Z) A,A\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Basic init) (Call (p Z)) (Q' Z Z'),(?R32 Z Z')\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply   (rule Basic)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?R32 Z Z' \\<subseteq> {s. return Z s \\<in> A}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Basic init) (Call (p Z)) (Q' Z Z'),(?R32 Z Z')\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply   (rule subset_refl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Seq (Basic init) (Call (p Z)) (Q' Z Z'),\n                     {s. return Z s \\<in> A}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply  (rule_tac R=\"{i. i \\<in> P' Z Z'}\" in Seq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{s.\n                      s = Z \\<and> s \\<in> P}\n                     Basic init {i. i \\<in> P' Z Z'},{s. return Z s \\<in> A}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{i.\n                      i \\<in> P' Z Z'}\n                     Call (p Z) (Q' Z Z'),{s. return Z s \\<in> A}\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply   (rule Basic)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> {s. s = Z \\<and> s \\<in> P}\n                         \\<subseteq> {s. init s \\<in> {i. i \\<in> P' Z Z'}}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{i.\n                      i \\<in> P' Z Z'}\n                     Call (p Z) (Q' Z Z'),{s. return Z s \\<in> A}\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply   clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{i.\n                      i \\<in> P' Z Z'}\n                     Call (p Z) (Q' Z Z'),{s. return Z s \\<in> A}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply  simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z Z')\n                     Call (p Z) (Q' Z Z'),{s. return Z s \\<in> A}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply  (rule_tac Q'=\"Q' Z Z'\" and A'=\"A' Z Z'\" in conseqPost)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z Z')\n                     Call (p Z) (Q' Z Z'),(A' Z Z')\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Q' Z Z' \\<subseteq> Q' Z Z'\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> A' Z Z' \\<subseteq> {s. return Z s \\<in> A}\n 4. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "using p"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>P.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' s Z) Call (p s) (Q' s Z),\n    (A' s Z)\n\ngoal (4 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z Z')\n                     Call (p Z) (Q' Z Z'),(A' Z Z')\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Q' Z Z' \\<subseteq> Q' Z Z'\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> A' Z Z' \\<subseteq> {s. return Z s \\<in> A}\n 4. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply    clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Q' Z Z' \\<subseteq> Q' Z Z'\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> A' Z Z' \\<subseteq> {s. return Z s \\<in> A}\n 3. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply   simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> A' Z Z' \\<subseteq> {s. return Z s \\<in> A}\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply  clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(Q' Z Z')\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply  (rule_tac  P'=\"\\<lambda>Z''. {t. t=Z'' \\<and> return Z t \\<in> R Z t}\" and\n          Q'=\"\\<lambda>Z''. Q\" and A'=\"\\<lambda>Z''. A\" in conseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Za.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Za \\<and> return Z t \\<in> R Z t}\n                        DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t))\n                        Q,A\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            s \\<in> Q' Z Z' \\<longrightarrow>\n                            (\\<exists>Za.\n                                s \\<in> {t.\n   t = Za \\<and> return Z t \\<in> R Z t} \\<and>\n                                Q \\<subseteq> Q \\<and> A \\<subseteq> A)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            s \\<in> Q' Z Z' \\<longrightarrow>\n                            (\\<exists>Za.\n                                s \\<in> {t.\n   t = Za \\<and> return Z t \\<in> R Z t} \\<and>\n                                Q \\<subseteq> Q \\<and> A \\<subseteq> A)\n 2. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Za.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Za \\<and> return Z t \\<in> R Z t}\n                        DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t))\n                        Q,A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z'.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Za.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Za \\<and> return Z t \\<in> R Z t}\n                        DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t))\n                        Q,A", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     DynCom (\\<lambda>t. Seq (Basic (return Z)) (c Z t)) Q,A", "apply (rule DynCom)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t.\n           t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s\\<in>{t.\n   t = Za \\<and> return Z t \\<in> R Z t}.\n                            \\<Gamma>,\\<Theta>\n                               \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                         t = Za \\<and> return Z t \\<in> R Z t}\n                        Seq (Basic (return Z)) (c Z s) Q,A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t. t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A;\n        return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     Seq (Basic (return Z)) (c Z Za) Q,A", "apply (rule SeqSwap)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t. t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A;\n        return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(?R66 Z Z' Za)\n                     c Z Za Q,A\n 2. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t. t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A;\n        return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     Basic (return Z) (?R66 Z Z' Za),A", "apply  (rule c [rule_format])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t. t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A;\n        return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                            \\<turnstile>\\<^bsub>/F \\<^esub>{t.\n                      t = Za \\<and> return Z t \\<in> R Z t}\n                     Basic (return Z) (R Z Za),A", "apply (rule Basic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Z Z' Za.\n       \\<lbrakk>Z \\<in> P; init Z \\<in> P' Z Z';\n        \\<forall>t.\n           t \\<in> Q' Z Z' \\<longrightarrow> return Z t \\<in> R Z t;\n        \\<forall>t. t \\<in> A' Z Z' \\<longrightarrow> return Z t \\<in> A;\n        return Z Za \\<in> R Z Za\\<rbrakk>\n       \\<Longrightarrow> {t. t = Za \\<and> return Z t \\<in> R Z t}\n                         \\<subseteq> {s. return Z s \\<in> R Z Za}", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma DynProc':\n  assumes adapt: \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' s Z \\<and>\n                          (\\<forall>t \\<in> Q' s Z. return s t \\<in> R s t) \\<and>\n                          (\\<forall>t \\<in> A' s Z. return s t \\<in> A)}\"\n  assumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\n  assumes p: \"\\<forall>s\\<in> P. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' s Z) Call (p s) (Q' s Z),(A' s Z)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P dynCall init p return c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from adapt"], ["proof (chain)\npicking this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t\\<in>Q' s Z.\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t\\<in>A' s Z. return s t \\<in> A)}", "have \"P \\<subseteq> {s. \\<exists>Z. init s \\<in> P' s Z \\<and>\n                          (\\<forall>t. t \\<in> Q' s Z \\<longrightarrow>  return s t \\<in> R s t) \\<and>\n                          (\\<forall>t. t \\<in> A' s Z \\<longrightarrow> return s t \\<in> A)}\""], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t\\<in>Q' s Z.\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t\\<in>A' s Z. return s t \\<in> A)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. \\<exists>Z.\n                         init s \\<in> P' s Z \\<and>\n                         (\\<forall>t.\n                             t \\<in> Q' s Z \\<longrightarrow>\n                             return s t \\<in> R s t) \\<and>\n                         (\\<forall>t.\n                             t \\<in> A' s Z \\<longrightarrow>\n                             return s t \\<in> A)}", "by blast"], ["proof (state)\nthis:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' s Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' s Z \\<longrightarrow>\n                           return s t \\<in> A)}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this c p"], ["proof (chain)\npicking this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' s Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' s Z \\<longrightarrow>\n                           return s t \\<in> A)}\n  \\<forall>s t.\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(R s t) c s t Q,A\n  \\<forall>s\\<in>P.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' s Z) Call (p s) (Q' s Z),\n    (A' s Z)", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' s Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' s Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' s Z \\<longrightarrow>\n                           return s t \\<in> A)}\n  \\<forall>s t.\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>(R s t) c s t Q,A\n  \\<forall>s\\<in>P.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' s Z) Call (p s) (Q' s Z),\n    (A' s Z)\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule DynProc)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DynProcStaticSpec:\nassumes adapt: \"P \\<subseteq> {s. s \\<in> S \\<and> (\\<exists>Z. init s \\<in> P' Z  \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> A' Z \\<longrightarrow> return s \\<tau> \\<in> A))}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes spec: \"\\<forall>s\\<in>S. \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call (p s) (Q' Z),(A' Z)\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from adapt"], ["proof (chain)\npicking this:\n  P \\<subseteq> {s \\<in> S.\n                 \\<exists>Z.\n                    init s \\<in> P' Z \\<and>\n                    (\\<forall>\\<tau>.\n                        \\<tau> \\<in> Q' Z \\<longrightarrow>\n                        return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                    (\\<forall>\\<tau>.\n                        \\<tau> \\<in> A' Z \\<longrightarrow>\n                        return s \\<tau> \\<in> A)}", "have P_S: \"P \\<subseteq> S\""], ["proof (prove)\nusing this:\n  P \\<subseteq> {s \\<in> S.\n                 \\<exists>Z.\n                    init s \\<in> P' Z \\<and>\n                    (\\<forall>\\<tau>.\n                        \\<tau> \\<in> Q' Z \\<longrightarrow>\n                        return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                    (\\<forall>\\<tau>.\n                        \\<tau> \\<in> A' Z \\<longrightarrow>\n                        return s \\<tau> \\<in> A)}\n\ngoal (1 subgoal):\n 1. P \\<subseteq> S", "by blast"], ["proof (state)\nthis:\n  P \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> S) (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> S) dynCall init p return c\nQ,A", "apply (rule DynProc [where P'=\"\\<lambda>s Z. P' Z\" and Q'=\"\\<lambda>s Z. Q' Z\"\n                         and A'=\"\\<lambda>s Z. A' Z\", OF _ c])"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<inter> S\n    \\<subseteq> {s. \\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> A' Z \\<longrightarrow>\n                           return s t \\<in> A)}\n 2. \\<forall>s\\<in>P \\<inter> S.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),(A' Z)", "apply  clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> P; x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Z.\n                            init x \\<in> P' Z \\<and>\n                            (\\<forall>t.\n                                t \\<in> Q' Z \\<longrightarrow>\n                                return x t \\<in> R x t) \\<and>\n                            (\\<forall>t.\n                                t \\<in> A' Z \\<longrightarrow>\n                                return x t \\<in> A)\n 2. \\<forall>s\\<in>P \\<inter> S.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),(A' Z)", "apply  (frule in_mono [rule_format, OF adapt])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> P; x \\<in> S;\n        x \\<in> {s \\<in> S.\n                 \\<exists>Z.\n                    init s \\<in> P' Z \\<and>\n                    (\\<forall>\\<tau>.\n                        \\<tau> \\<in> Q' Z \\<longrightarrow>\n                        return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                    (\\<forall>\\<tau>.\n                        \\<tau> \\<in> A' Z \\<longrightarrow>\n                        return s \\<tau> \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Z.\n                            init x \\<in> P' Z \\<and>\n                            (\\<forall>t.\n                                t \\<in> Q' Z \\<longrightarrow>\n                                return x t \\<in> R x t) \\<and>\n                            (\\<forall>t.\n                                t \\<in> A' Z \\<longrightarrow>\n                                return x t \\<in> A)\n 2. \\<forall>s\\<in>P \\<inter> S.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),(A' Z)", "apply  clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>P \\<inter> S.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),(A' Z)", "using spec"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>S.\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),(A' Z)\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>P \\<inter> S.\n       \\<forall>Z.\n          \\<Gamma>,\\<Theta>\n             \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),(A' Z)", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> S) dynCall init p return c\n                                    Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> S) dynCall init p return c\n                                    Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule conseqPre) (insert P_S,blast)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DynProcProcPar:\nassumes adapt: \"P \\<subseteq> {s. p s = q \\<and> (\\<exists>Z. init s \\<in> P' Z  \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>) \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> A' Z \\<longrightarrow> return s \\<tau> \\<in> A))}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes spec: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call q (Q' Z),(A' Z)\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "apply (rule DynProcStaticSpec [where S=\"{s. p s = q}\",simplified, OF adapt c])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       p s = q \\<longrightarrow>\n       (\\<forall>Z.\n           \\<Gamma>,\\<Theta>\n              \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),\n       (A' Z))", "using spec"], ["proof (prove)\nusing this:\n  \\<forall>Z.\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call q (Q' Z),(A' Z)\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       p s = q \\<longrightarrow>\n       (\\<forall>Z.\n           \\<Gamma>,\\<Theta>\n              \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),\n       (A' Z))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma DynProcProcParNoAbrupt:\nassumes adapt: \"P \\<subseteq> {s. p s = q \\<and> (\\<exists>Z. init s \\<in> P' Z  \\<and>\n                            (\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>))}\"\nassumes c: \"\\<forall>s t. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (R s t) (c s t) Q,A\"\nassumes spec: \"\\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P' Z) Call q (Q' Z),{}\"\nshows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "have \"P \\<subseteq> {s. p s = q \\<and> (\\<exists> Z. init s \\<in> P' Z \\<and>\n                      (\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t) \\<and>\n                      (\\<forall>t. t \\<in> {} \\<longrightarrow> return s t \\<in> A))}\"\n    (is \"P \\<subseteq> ?P'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> {s. p s = q \\<and>\n                      (\\<exists>Z.\n                          init s \\<in> P' Z \\<and>\n                          (\\<forall>t.\n                              t \\<in> Q' Z \\<longrightarrow>\n                              return s t \\<in> R s t) \\<and>\n                          (\\<forall>t.\n                              t \\<in> {} \\<longrightarrow>\n                              return s t \\<in> A))}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> {s. p s = q \\<and>\n                   (\\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> {} \\<longrightarrow>\n                           return s t \\<in> A))}", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> {s. p s = q \\<and>\n                   (\\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> {} \\<longrightarrow>\n                           return s t \\<in> A))}", "assume P: \"s\\<in>P\""], ["proof (state)\nthis:\n  s \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> {s. p s = q \\<and>\n                   (\\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> {} \\<longrightarrow>\n                           return s t \\<in> A))}", "with adapt"], ["proof (chain)\npicking this:\n  P \\<subseteq> {s. p s = q \\<and>\n                    (\\<exists>Z.\n                        init s \\<in> P' Z \\<and>\n                        (\\<forall>\\<tau>.\n                            \\<tau> \\<in> Q' Z \\<longrightarrow>\n                            return s \\<tau> \\<in> R s \\<tau>))}\n  s \\<in> P", "obtain Z where\n      Pre: \"p s = q \\<and> init s \\<in> P' Z\" and\n      adapt_Norm: \"\\<forall>\\<tau>. \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>\""], ["proof (prove)\nusing this:\n  P \\<subseteq> {s. p s = q \\<and>\n                    (\\<exists>Z.\n                        init s \\<in> P' Z \\<and>\n                        (\\<forall>\\<tau>.\n                            \\<tau> \\<in> Q' Z \\<longrightarrow>\n                            return s \\<tau> \\<in> R s \\<tau>))}\n  s \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<And>Z.\n        \\<lbrakk>p s = q \\<and> init s \\<in> P' Z;\n         \\<forall>\\<tau>.\n            \\<tau> \\<in> Q' Z \\<longrightarrow>\n            return s \\<tau> \\<in> R s \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p s = q \\<and> init s \\<in> P' Z\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> {s. p s = q \\<and>\n                   (\\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> {} \\<longrightarrow>\n                           return s t \\<in> A))}", "from  adapt_Norm"], ["proof (chain)\npicking this:\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>", "have \"\\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<tau>.\n     \\<tau> \\<in> Q' Z \\<longrightarrow> return s \\<tau> \\<in> R s \\<tau>\n\ngoal (1 subgoal):\n 1. \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t", "by auto"], ["proof (state)\nthis:\n  \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> P \\<Longrightarrow>\n       x \\<in> {s. p s = q \\<and>\n                   (\\<exists>Z.\n                       init s \\<in> P' Z \\<and>\n                       (\\<forall>t.\n                           t \\<in> Q' Z \\<longrightarrow>\n                           return s t \\<in> R s t) \\<and>\n                       (\\<forall>t.\n                           t \\<in> {} \\<longrightarrow>\n                           return s t \\<in> A))}", "then"], ["proof (chain)\npicking this:\n  \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t", "show \"s\\<in>?P'\""], ["proof (prove)\nusing this:\n  \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t\n\ngoal (1 subgoal):\n 1. s \\<in> {s. p s = q \\<and>\n                (\\<exists>Z.\n                    init s \\<in> P' Z \\<and>\n                    (\\<forall>t.\n                        t \\<in> Q' Z \\<longrightarrow>\n                        return s t \\<in> R s t) \\<and>\n                    (\\<forall>t.\n                        t \\<in> {} \\<longrightarrow> return s t \\<in> A))}", "using Pre"], ["proof (prove)\nusing this:\n  \\<forall>t. t \\<in> Q' Z \\<longrightarrow> return s t \\<in> R s t\n  p s = q \\<and> init s \\<in> P' Z\n\ngoal (1 subgoal):\n 1. s \\<in> {s. p s = q \\<and>\n                (\\<exists>Z.\n                    init s \\<in> P' Z \\<and>\n                    (\\<forall>t.\n                        t \\<in> Q' Z \\<longrightarrow>\n                        return s t \\<in> R s t) \\<and>\n                    (\\<forall>t.\n                        t \\<in> {} \\<longrightarrow> return s t \\<in> A))}", "by blast"], ["proof (state)\nthis:\n  s \\<in> {s. p s = q \\<and>\n              (\\<exists>Z.\n                  init s \\<in> P' Z \\<and>\n                  (\\<forall>t.\n                      t \\<in> Q' Z \\<longrightarrow>\n                      return s t \\<in> R s t) \\<and>\n                  (\\<forall>t.\n                      t \\<in> {} \\<longrightarrow> return s t \\<in> A))}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<subseteq> {s. p s = q \\<and>\n                    (\\<exists>Z.\n                        init s \\<in> P' Z \\<and>\n                        (\\<forall>t.\n                            t \\<in> Q' Z \\<longrightarrow>\n                            return s t \\<in> R s t) \\<and>\n                        (\\<forall>t.\n                            t \\<in> {} \\<longrightarrow>\n                            return s t \\<in> A))}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "note P = this"], ["proof (state)\nthis:\n  P \\<subseteq> {s. p s = q \\<and>\n                    (\\<exists>Z.\n                        init s \\<in> P' Z \\<and>\n                        (\\<forall>t.\n                            t \\<in> Q' Z \\<longrightarrow>\n                            return s t \\<in> R s t) \\<and>\n                        (\\<forall>t.\n                            t \\<in> {} \\<longrightarrow>\n                            return s t \\<in> A))}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "apply (rule DynProcStaticSpec [where S=\"{s. p s = q}\",simplified, OF P c])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       p s = q \\<longrightarrow>\n       (\\<forall>Z.\n           \\<Gamma>,\\<Theta>\n              \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),{})", "apply (insert spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call q (Q' Z),\n   {} \\<Longrightarrow>\n    \\<forall>s.\n       p s = q \\<longrightarrow>\n       (\\<forall>Z.\n           \\<Gamma>,\\<Theta>\n              \\<turnstile>\\<^bsub>/F \\<^esub>(P' Z) Call (p s) (Q' Z),{})", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DynProcModifyReturnNoAbr:\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>s \\<in> P. \\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} Call (p s)  (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from ret_nrm_modif"], ["proof (chain)\npicking this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "have \"\\<forall>s t. t  \\<in> (Modif (init s))\n        \\<longrightarrow> return' s t = return s t\""], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "by iprover"], ["proof (state)\nthis:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "then"], ["proof (chain)\npicking this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "have ret_nrm_modif': \"\\<forall>s t. t \\<in> (Modif (init s))\n                      \\<longrightarrow> return' s t = return s t\""], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "by simp"], ["proof (state)\nthis:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "have ret_abr_modif': \"\\<forall>s t. t \\<in> {}\n                        \\<longrightarrow> return' s t = return s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t", "by simp"], ["proof (state)\nthis:\n  \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from to_prove ret_nrm_modif' ret_abr_modif' modif_clause"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t\n  \\<forall>s\\<in>P.\n     \\<forall>\\<sigma>.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/UNIV \\<^esub>{\\<sigma>} Call (p s)\n       (Modif \\<sigma>),{}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t\n  \\<forall>s\\<in>P.\n     \\<forall>\\<sigma>.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/UNIV \\<^esub>{\\<sigma>} Call (p s)\n       (Modif \\<sigma>),{}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule dynProcModifyReturn)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcDynModifyReturnNoAbrSameFaults:\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>s \\<in> P. \\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} (Call (p s)) (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from ret_nrm_modif"], ["proof (chain)\npicking this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "have \"\\<forall>s t. t  \\<in> (Modif (init s))\n        \\<longrightarrow> return' s t = return s t\""], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "by iprover"], ["proof (state)\nthis:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "then"], ["proof (chain)\npicking this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "have ret_nrm_modif': \"\\<forall>s t. t \\<in> (Modif (init s))\n                      \\<longrightarrow> return' s t = return s t\""], ["proof (prove)\nusing this:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "by simp"], ["proof (state)\nthis:\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "have ret_abr_modif': \"\\<forall>s t. t \\<in> {}\n                        \\<longrightarrow> return' s t = return s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t", "by simp"], ["proof (state)\nthis:\n  \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from to_prove ret_nrm_modif' ret_abr_modif' modif_clause"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t\n  \\<forall>s\\<in>P.\n     \\<forall>\\<sigma>.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>{\\<sigma>} Call (p s)\n    (Modif \\<sigma>),{}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t. t \\<in> {} \\<longrightarrow> return' s t = return s t\n  \\<forall>s\\<in>P.\n     \\<forall>\\<sigma>.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>{\\<sigma>} Call (p s)\n    (Modif \\<sigma>),{}\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule dynProcModifyReturnSameFaults)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcProcParModifyReturn:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcPar} introduces the same constraint as first conjunction in\n         @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes ret_abr_modif: \"\\<forall>s t. t \\<in> (ModifAbr (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n          \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} (Call q) (Modif \\<sigma>),(ModifAbr \\<sigma>)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from to_prove"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return' c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return' c Q,A", "by (rule conseqPre) blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this ret_nrm_modif\n       ret_abr_modif"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t.\n     t \\<in> ModifAbr (init s) \\<longrightarrow> return' s t = return s t", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t.\n     t \\<in> ModifAbr (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return c Q,A", "by (rule dynProcModifyReturn) (insert modif_clause,auto)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this q"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule conseqPre)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcProcParModifyReturnSameFaults:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcPar} introduces the same constraint as first conjunction in\n         @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes ret_abr_modif: \"\\<forall>s t. t \\<in> (ModifAbr (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n          \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} Call q (Modif \\<sigma>),(ModifAbr \\<sigma>)\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from to_prove"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return' c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return' c Q,A", "by (rule conseqPre) blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this ret_nrm_modif\n       ret_abr_modif"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t.\n     t \\<in> ModifAbr (init s) \\<longrightarrow> return' s t = return s t", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n  \\<forall>s t.\n     t \\<in> ModifAbr (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return c Q,A", "by (rule dynProcModifyReturnSameFaults) (insert modif_clause,auto)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this q"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule conseqPre)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcProcParModifyReturnNoAbr:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcParNoAbrupt} introduces the same constraint as\n      first conjunction in @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/UNIV\\<^esub> {\\<sigma>} (Call q) (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from to_prove"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return' c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return' c Q,A", "by (rule conseqPre) blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this ret_nrm_modif"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return c Q,A", "by (rule DynProcModifyReturnNoAbr) (insert modif_clause,auto)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this q"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule conseqPre)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ProcProcParModifyReturnNoAbrSameFaults:\n  assumes q: \"P \\<subseteq> {s. p s = q} \\<inter> P'\"\n   \\<comment> \\<open>@{thm[source] DynProcProcParNoAbrupt} introduces the same constraint as\n      first conjunction in @{term P'}, so the vcg can simplify it.\\<close>\n  assumes to_prove: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' (dynCall init p return' c) Q,A\"\n  assumes ret_nrm_modif: \"\\<forall>s t. t \\<in> (Modif (init s))\n                            \\<longrightarrow> return' s t = return s t\"\n  assumes modif_clause:\n            \"\\<forall>\\<sigma>. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {\\<sigma>} (Call q) (Modif \\<sigma>),{}\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (dynCall init p return c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from to_prove"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A", "have\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return' c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P' dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return' c Q,A", "by (rule conseqPre) blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this ret_nrm_modif"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> ({s. p s = q} \\<inter> P') (dynCall init p return c) Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return' c Q,A\n  \\<forall>s t.\n     t \\<in> Modif (init s) \\<longrightarrow> return' s t = return s t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\ndynCall init p return c Q,A", "by (rule ProcDynModifyReturnNoAbrSameFaults) (insert modif_clause,auto)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "from this q"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>({s. p s = q} \\<inter> P')\n                                    dynCall init p return c Q,A\n  P \\<subseteq> {s. p s = q} \\<inter> P'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A", "by (rule conseqPre)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P dynCall init p return c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma MergeGuards_iff: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P merge_guards c Q,A = \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P merge_guards c Q,A =\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "by (auto intro: MergeGuardsI MergeGuardsD)"], ["", "lemma CombineStrip':\n  assumes deriv: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c' Q,A\"\n  assumes deriv_strip_triv: \"\\<Gamma>,{}\\<turnstile>\\<^bsub>/{}\\<^esub> P c'' UNIV,UNIV\"\n  assumes c'': \"c''= mark_guards False (strip_guards (-F) c')\"\n  assumes c: \"merge_guards c = merge_guards (mark_guards False c')\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "from deriv_strip_triv"], ["proof (chain)\npicking this:\n  \\<Gamma>,{}\\<turnstile>\\<^bsub>/{} \\<^esub>P c'' UNIV,UNIV", "have deriv_strip: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P c'' UNIV,UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>,{}\\<turnstile>\\<^bsub>/{} \\<^esub>P c'' UNIV,UNIV\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c'' UNIV,UNIV", "by (auto intro: hoare_augment_context)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c'' UNIV,UNIV\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "from deriv_strip [simplified c'']"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P mark_guards False\n  (strip_guards (- F) c')\n                                     UNIV,UNIV", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P (strip_guards (- F) c') UNIV,UNIV\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P mark_guards False\n  (strip_guards (- F) c')\n                                     UNIV,UNIV\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/{} \\<^esub>P strip_guards (- F) c' UNIV,UNIV", "by (rule MarkGuardsD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P strip_guards (- F) c' UNIV,UNIV\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "with deriv"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c' Q,A\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P strip_guards (- F) c' UNIV,UNIV", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P c' Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c' Q,A\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P strip_guards (- F) c' UNIV,UNIV\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c' Q,A", "by (rule CombineStrip)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c' Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "hence \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P mark_guards False c' Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c' Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/{} \\<^esub>P mark_guards False c' Q,A", "by (rule MarkGuardsI)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P mark_guards False c' Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "hence \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P merge_guards (mark_guards False c') Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P mark_guards False c' Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/{} \\<^esub>P merge_guards (mark_guards False c')\n Q,A", "by (rule MergeGuardsI)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P merge_guards (mark_guards False c')\n                                     Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "hence \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P merge_guards c Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/{} \\<^esub>P merge_guards (mark_guards False c')\n                                     Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P merge_guards c Q,A", "by (simp add: c)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P merge_guards c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P merge_guards c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "by (rule MergeGuardsD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma CombineStrip'':\n  assumes deriv: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{True}\\<^esub> P c' Q,A\"\n  assumes deriv_strip_triv: \"\\<Gamma>,{}\\<turnstile>\\<^bsub>/{}\\<^esub> P c'' UNIV,UNIV\"\n  assumes c'': \"c''= mark_guards False (strip_guards ({False}) c')\"\n  assumes c: \"merge_guards c = merge_guards (mark_guards False c')\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{}\\<^esub> P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/{} \\<^esub>P c Q,A", "apply (rule CombineStrip' [OF deriv deriv_strip_triv _ c])"], ["proof (prove)\ngoal (1 subgoal):\n 1. c'' = mark_guards False (strip_guards (- {True}) c')", "apply (insert c'')"], ["proof (prove)\ngoal (1 subgoal):\n 1. c'' = mark_guards False (strip_guards {False} c') \\<Longrightarrow>\n    c'' = mark_guards False (strip_guards (- {True}) c')", "apply (subgoal_tac \"- {True} = {False}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c'' = mark_guards False (strip_guards {False} c');\n     - {True} = {False}\\<rbrakk>\n    \\<Longrightarrow> c'' = mark_guards False (strip_guards (- {True}) c')\n 2. c'' = mark_guards False (strip_guards {False} c') \\<Longrightarrow>\n    - {True} = {False}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma AsmUN:\n  \"(\\<Union>Z. {(P Z, p, Q Z,A Z)}) \\<subseteq> \\<Theta>\n  \\<Longrightarrow>\n  \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) (Call p) (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>Z. {(P Z, p, Q Z, A Z)}) \\<subseteq> \\<Theta> \\<Longrightarrow>\n    \\<forall>Z.\n       \\<Gamma>,\\<Theta>\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) Call p (Q Z),(A Z)", "by (blast intro: hoarep.Asm)"], ["", "lemma augment_context':\n  \"\\<lbrakk>\\<Theta> \\<subseteq> \\<Theta>'; \\<forall>Z. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P Z)  p (Q Z),(A Z)\\<rbrakk>\n   \\<Longrightarrow> \\<forall>Z. \\<Gamma>,\\<Theta>'\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Theta> \\<subseteq> \\<Theta>';\n     \\<forall>Z.\n        \\<Gamma>,\\<Theta>\n           \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) p (Q Z),(A Z)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z.\n                         \\<Gamma>,\\<Theta>'\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) p (Q Z),\n                     (A Z)", "by (iprover intro: hoare_augment_context)"], ["", "lemma hoarep_strip:\n \"\\<lbrakk>\\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z); F' \\<subseteq> -F\\<rbrakk> \\<Longrightarrow>\n    \\<forall>Z. strip F' \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>Z.\n                \\<Gamma>,{}\n                   \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) p (Q Z),(A Z);\n     F' \\<subseteq> - F\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Z.\n                         strip F' \\<Gamma>,{}\n                            \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) p (Q Z),\n                     (A Z)", "by (iprover intro: hoare_strip_\\<Gamma>)"], ["", "lemma augment_emptyFaults:\n \"\\<lbrakk>\\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/{}\\<^esub> (P Z) p (Q Z),(A Z)\\<rbrakk> \\<Longrightarrow>\n    \\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,{}\n          \\<turnstile>\\<^bsub>/{} \\<^esub>(P Z) p (Q Z),\n    (A Z) \\<Longrightarrow>\n    \\<forall>Z.\n       \\<Gamma>,{}\\<turnstile>\\<^bsub>/F \\<^esub>(P Z) p (Q Z),(A Z)", "by (blast intro: augment_Faults)"], ["", "lemma augment_FaultsUNIV:\n \"\\<lbrakk>\\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/F\\<^esub> (P Z) p (Q Z),(A Z)\\<rbrakk> \\<Longrightarrow>\n    \\<forall>Z. \\<Gamma>,{}\\<turnstile>\\<^bsub>/UNIV\\<^esub> (P Z) p (Q Z),(A Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Z.\n       \\<Gamma>,{}\n          \\<turnstile>\\<^bsub>/F \\<^esub>(P Z) p (Q Z),\n   (A Z) \\<Longrightarrow>\n    \\<forall>Z.\n       \\<Gamma>,{}\\<turnstile>\\<^bsub>/UNIV \\<^esub>(P Z) p (Q Z),(A Z)", "by (blast intro: augment_Faults)"], ["", "lemma PostConjI [trans]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c (Q \\<inter> R),(A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c R,B\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c (Q \\<inter> R),\n                  (A \\<inter> B)", "by (rule PostConjI)"], ["", "lemma PostConjI' :\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c (Q \\<inter> R),(A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A \\<Longrightarrow>\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c R,B\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c (Q \\<inter> R),\n                  (A \\<inter> B)", "by (rule PostConjI) iprover+"], ["", "lemma PostConjE [consumes 1]:\n  assumes conj: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c (Q \\<inter> R),(A \\<inter> B)\"\n  assumes E: \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\\<rbrakk> \\<Longrightarrow> S\"\n  shows \"S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S", "from conj"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P c (Q \\<inter> R),(A \\<inter> B)", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P c (Q \\<inter> R),(A \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "by (rule conseqPost) blast+"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\n\ngoal (1 subgoal):\n 1. S", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\n\ngoal (1 subgoal):\n 1. S", "from conj"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P c (Q \\<inter> R),(A \\<inter> B)", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c R,B\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P c (Q \\<inter> R),(A \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c R,B", "by (rule conseqPost) blast+"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c R,B\n\ngoal (1 subgoal):\n 1. S", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c R,B", "show \"S\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c R,B\n\ngoal (1 subgoal):\n 1. S", "by (rule E)"], ["proof (state)\nthis:\n  S\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Rules for Single-Step Proof \\label{sec:hoare-isar}\\<close>"], ["", "text \\<open>\n We are now ready to introduce a set of Hoare rules to be used in\n single-step structured proofs in Isabelle/Isar.\n\n \\medskip Assertions of Hoare Logic may be manipulated in\n calculational proofs, with the inclusion expressed in terms of sets\n or predicates.  Reversed order is supported as well.\n\\<close>"], ["", "lemma annotateI [trans]:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P anno Q,A; c = anno\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P anno Q,A;\n     c = anno\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "by simp"], ["", "lemma annotate_normI:\n  assumes deriv_anno: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P anno Q,A\"\n  assumes norm_eq: \"normalize c = normalize anno\"\n  shows \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "from NormalizeI [OF deriv_anno] norm_eq"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Language.normalize anno Q,A\n  Language.normalize c = Language.normalize anno", "have \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P normalize c Q,A\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\n     \\<turnstile>\\<^bsub>/F \\<^esub>P Language.normalize anno Q,A\n  Language.normalize c = Language.normalize anno\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P Language.normalize c Q,A", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Language.normalize c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "from NormalizeD [OF this]"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A", "."], ["proof (state)\nthis:\n  \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma annotateWhile:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b I V c) Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (while gs b c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoG gs b I V c Q,\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P while gs b c Q,A", "by (simp add: whileAnnoG_def)"], ["", "lemma reannotateWhile:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b I V c) Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnnoG gs b J V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoG gs b I V c Q,\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnnoG gs b J V c Q,A", "by (simp add: whileAnnoG_def)"], ["", "lemma reannotateWhileNoGuard:\n\"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b I V c) Q,A\\<rbrakk> \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b J V c) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b I V c Q,\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b J V c Q,A", "by (simp add: whileAnno_def)"], ["", "lemma [trans] : \"P' \\<subseteq> P \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P' c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P' \\<subseteq> P;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P' c Q,A", "by (rule conseqPre)"], ["", "lemma [trans]: \"Q \\<subseteq> Q' \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q',A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<subseteq> Q';\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c Q',A", "by (rule conseqPost) blast+"], ["", "lemma [trans]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} c Q,A \\<Longrightarrow> (\\<And>s. P' s \\<longrightarrow> P s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P' s} c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>{s. P s} c Q,A;\n     \\<And>s. P' s \\<longrightarrow> P s\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>{s. P' s} c Q,A", "by (rule conseqPre) auto"], ["", "lemma [trans]:\n    \"(\\<And>s. P' s \\<longrightarrow> P s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} c Q,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P' s} c Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s. P' s \\<longrightarrow> P s;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>{s. P s} c Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>{s. P' s} c Q,A", "by (rule conseqPre) auto"], ["", "lemma [trans]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q s},A \\<Longrightarrow> (\\<And>s. Q s \\<longrightarrow> Q' s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q' s},A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c {s. Q s},A;\n     \\<And>s. Q s \\<longrightarrow> Q' s\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c {s. Q' s},A", "by (rule conseqPost) auto"], ["", "lemma [trans]:\n    \"(\\<And>s. Q s \\<longrightarrow> Q' s) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q s},A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>P c {s. Q' s},A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s. Q s \\<longrightarrow> Q' s;\n     \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P c {s. Q s},A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P c {s. Q' s},A", "by (rule conseqPost) auto"], ["", "lemma [intro?]: \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P Skip P,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F \\<^esub>P Skip P,A", "by (rule Skip) auto"], ["", "lemma CondInt [trans,intro?]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> - b) c2 Q,A\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (Cond b c1 c2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> b) c1 Q,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> - b) c2 Q,A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>P Cond b c1 c2 Q,A", "by (rule Cond) auto"], ["", "lemma CondConj [trans, intro?]:\n  \"\\<lbrakk>\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> b s} c1 Q,A; \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> \\<not> b s} c2 Q,A\\<rbrakk>\n   \\<Longrightarrow>\n   \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} (Cond {s. b s} c1 c2) Q,A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<Theta>\n                \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s \\<and> b s} c1 Q,A;\n     \\<Gamma>,\\<Theta>\n        \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s \\<and> \\<not> b s} c2 Q,\n A\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<Theta>\n                         \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s}\n                  Cond {s. b s} c1 c2 Q,A", "by (rule Cond) auto"], ["", "lemma WhileInvInt [intro?]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) c P,A \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b P V c) (P \\<inter> -b),A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> b) c P,A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b P V c (P \\<inter> - b),A", "by (rule While) auto"], ["", "lemma WhileInt [intro?]:\n    \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) c P,A\n    \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P (whileAnno b {s. undefined} V c) (P \\<inter> -b),A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>(P \\<inter> b) c P,A \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>P whileAnno b {s. undefined} V c\n(P \\<inter> - b),A", "by (unfold whileAnno_def)\n     (rule HoarePartialDef.While [THEN conseqPrePost],auto)"], ["", "lemma WhileInvConj [intro?]:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> b s} c {s. P s},A\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} (whileAnno {s. b s} {s. P s} V c) {s. P s \\<and> \\<not> b s},A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s \\<and> b s} c {s. P s},\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s}\nwhileAnno {s. b s} {s. P s} V c {s. P s \\<and> \\<not> b s},A", "by (simp add: While Collect_conj_eq Collect_neg_eq)"], ["", "lemma WhileConj [intro?]:\n  \"\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s \\<and> b s} c {s. P s},A\n    \\<Longrightarrow>\n\\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> {s. P s} (whileAnno {s. b s} {s. undefined} V c) {s. P s \\<and> \\<not> b s},A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s \\<and> b s} c {s. P s},\nA \\<Longrightarrow>\n    \\<Gamma>,\\<Theta>\n       \\<turnstile>\\<^bsub>/F \\<^esub>{s. P s}\nwhileAnno {s. b s} {s. undefined} V c {s. P s \\<and> \\<not> b s},A", "by (unfold whileAnno_def)\n     (simp add: HoarePartialDef.While [THEN conseqPrePost]\n      Collect_conj_eq Collect_neg_eq)"], ["", "(* FIXME: Add rules for guarded while *)"], ["", "end"]]}