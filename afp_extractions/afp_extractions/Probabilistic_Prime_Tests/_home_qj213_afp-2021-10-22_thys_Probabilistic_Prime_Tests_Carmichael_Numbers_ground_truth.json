{"file_name": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Prime_Tests/Carmichael_Numbers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Prime_Tests", "problem_names": ["lemma Carmichael_number_0[simp, intro]: \"\\<not>Carmichael_number 0\"", "lemma Carmichael_number_1[simp, intro]: \"\\<not>Carmichael_number 1\"", "lemma Carmichael_number_Suc_0[simp, intro]: \"\\<not>Carmichael_number (Suc 0)\"", "lemma Carmichael_number_not_prime: \"Carmichael_number n \\<Longrightarrow> \\<not>prime n\"", "lemma Carmichael_number_gt_3: \"Carmichael_number n \\<Longrightarrow> n > 3\"", "lemma Carmichael_number_imp_squarefree_aux:\n  assumes \"Carmichael_number n\"\n  assumes n: \"n = p^r * l\" and \"prime p\" \"\\<not>p dvd l\"\n  assumes \"r > 1\"\n  shows False", "theorem Carmichael_number_imp_squarefree:\n  assumes \"Carmichael_number n\"\n  shows \"squarefree n\"", "lemma Carmichael_number_imp_squarefree_alt_weak:\n  assumes \"Carmichael_number n\"\n  shows \"\\<exists>p l. (n = p * l) \\<and> prime p \\<and> \\<not>p dvd l\"", "theorem Carmichael_number_odd:\n  assumes \"Carmichael_number n\"\n  shows   \"odd n\"", "lemma Carmichael_number_imp_squarefree_alt:\n  assumes \"Carmichael_number n\"\n  shows \"\\<exists>p l. (n = p * l) \\<and> prime p \\<and> \\<not>p dvd l \\<and> 2 < l\"", "lemma Carmichael_number_imp_dvd:\n  fixes n :: nat\n  assumes Carmichael_number: \"Carmichael_number n\" and \"prime p\" \"p dvd n\"\n  shows \"p - 1 dvd n - 1\"", "lemma Carmichael_numberI:\n  fixes n :: nat\n  assumes \"\\<not> prime n\" \"squarefree n\" \"1 < n\" and\n          DIV: \"\\<And>p. p \\<in> prime_factors n \\<Longrightarrow> p - 1 dvd n - 1\"\n  shows   \"Carmichael_number n\"", "theorem Carmichael_number_iff:\n  \"Carmichael_number n \\<longleftrightarrow>\n     n \\<noteq> 1 \\<and> \\<not>prime n \\<and> squarefree n \\<and> (\\<forall>p\\<in>prime_factors n. p - 1 dvd n - 1)\"", "theorem Carmichael_number_card_prime_factors:\n  assumes \"Carmichael_number n\"\n  shows   \"card (prime_factors n) \\<ge> 3\"", "lemma Carmichael_number_iff':\n  fixes n :: nat\n  defines \"P \\<equiv> prime_factorization n\"\n  shows \"Carmichael_number n \\<longleftrightarrow>\n           n > 1 \\<and> size P \\<noteq> 1 \\<and> (\\<forall>p\\<in>#P. count P p = 1 \\<and> p - 1 dvd n - 1)\"", "lemma Carmichael_number_561: \"Carmichael_number 561\" (is \"Carmichael_number ?n\")"], "translations": [["", "lemma Carmichael_number_0[simp, intro]: \"\\<not>Carmichael_number 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Carmichael_number 0", "unfolding Carmichael_number_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (1 < 0 \\<and>\n            \\<not> prime 0 \\<and>\n            (\\<forall>a.\n                coprime a 0 \\<longrightarrow> [a ^ (0 - 1) = 1] (mod 0)))", "by simp"], ["", "lemma Carmichael_number_1[simp, intro]: \"\\<not>Carmichael_number 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Carmichael_number 1", "by (auto simp: Carmichael_number_def)"], ["", "lemma Carmichael_number_Suc_0[simp, intro]: \"\\<not>Carmichael_number (Suc 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Carmichael_number (Suc 0)", "by (auto simp: Carmichael_number_def)"], ["", "lemma Carmichael_number_not_prime: \"Carmichael_number n \\<Longrightarrow> \\<not>prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> \\<not> prime n", "by (auto simp: Carmichael_number_def)"], ["", "lemma Carmichael_number_gt_3: \"Carmichael_number n \\<Longrightarrow> n > 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "assume *: \"Carmichael_number n\""], ["proof (state)\nthis:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "hence \"n > 1\""], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. 1 < n", "by (auto simp: Carmichael_number_def)"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "{"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "assume \"\\<not>(n > 3)\""], ["proof (state)\nthis:\n  \\<not> 3 < n\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "with \\<open>n > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < n\n  \\<not> 3 < n", "have \"n = 2 \\<or> n = 3\""], ["proof (prove)\nusing this:\n  1 < n\n  \\<not> 3 < n\n\ngoal (1 subgoal):\n 1. n = 2 \\<or> n = 3", "by auto"], ["proof (state)\nthis:\n  n = 2 \\<or> n = 3\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "with * and Carmichael_number_not_prime[of n]"], ["proof (chain)\npicking this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> \\<not> prime n\n  n = 2 \\<or> n = 3", "have False"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> \\<not> prime n\n  n = 2 \\<or> n = 3\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "}"], ["proof (state)\nthis:\n  \\<not> 3 < n \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Carmichael_number n \\<Longrightarrow> 3 < n", "thus \"n > 3\""], ["proof (prove)\nusing this:\n  \\<not> 3 < n \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. 3 < n", "by auto"], ["proof (state)\nthis:\n  3 < n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The proofs are inspired by \\cite{Carmichael_numbers, Carmichael_number_square_free}.\n\\<close>"], ["", "lemma Carmichael_number_imp_squarefree_aux:\n  assumes \"Carmichael_number n\"\n  assumes n: \"n = p^r * l\" and \"prime p\" \"\\<not>p dvd l\"\n  assumes \"r > 1\"\n  shows False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"\\<not> prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prime n", "using \\<open>Carmichael_number n\\<close>"], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. \\<not> prime n", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n\ngoal (1 subgoal):\n 1. \\<not> prime n", "by blast"], ["proof (state)\nthis:\n  \\<not> prime n\n\ngoal (1 subgoal):\n 1. False", "have * : \"[a^(n-1) = 1] (mod n)\" if \"coprime a n\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "using \\<open>Carmichael_number n\\<close> that"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  coprime a n\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n  coprime a n\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "by blast"], ["proof (state)\nthis:\n  coprime ?a n \\<Longrightarrow> [?a ^ (n - 1) = 1] (mod n)\n\ngoal (1 subgoal):\n 1. False", "have \"1 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> n", "unfolding n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> p ^ r * l", "using \\<open>prime p\\<close> \\<open>\\<not> p dvd l\\<close>"], ["proof (prove)\nusing this:\n  prime p\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. 1 \\<le> p ^ r * l", "by (auto intro: gre1I_nat)"], ["proof (state)\nthis:\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. False", "have \"2 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> n", "proof(cases \"n = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 1 \\<Longrightarrow> 2 \\<le> n\n 2. n \\<noteq> 1 \\<Longrightarrow> 2 \\<le> n", "case True"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. n = 1 \\<Longrightarrow> 2 \\<le> n\n 2. n \\<noteq> 1 \\<Longrightarrow> 2 \\<le> n", "then"], ["proof (chain)\npicking this:\n  n = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> n", "unfolding n"], ["proof (prove)\nusing this:\n  p ^ r * l = 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> p ^ r * l", "using \\<open>1 < r\\<close> prime_gt_1_nat[OF \\<open>prime p\\<close>]"], ["proof (prove)\nusing this:\n  p ^ r * l = 1\n  1 < r\n  1 < p\n\ngoal (1 subgoal):\n 1. 2 \\<le> p ^ r * l", "by simp"], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> 2 \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> 2 \\<le> n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> 2 \\<le> n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> n", "using \\<open>1 \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  n \\<noteq> 1\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. 2 \\<le> n", "by linarith"], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. False", "have \"p < p^r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p < p ^ r", "using prime_gt_1_nat[OF \\<open>prime p\\<close>] \\<open>1 < r\\<close>"], ["proof (prove)\nusing this:\n  1 < p\n  1 < r\n\ngoal (1 subgoal):\n 1. p < p ^ r", "by (metis power_one_right power_strict_increasing_iff)"], ["proof (state)\nthis:\n  p < p ^ r\n\ngoal (1 subgoal):\n 1. False", "hence \"p < n\""], ["proof (prove)\nusing this:\n  p < p ^ r\n\ngoal (1 subgoal):\n 1. p < n", "using \\<open>1 \\<le> n\\<close> less_le_trans n"], ["proof (prove)\nusing this:\n  p < p ^ r\n  1 \\<le> n\n  \\<lbrakk>?x < ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n  n = p ^ r * l\n\ngoal (1 subgoal):\n 1. p < n", "by fastforce"], ["proof (state)\nthis:\n  p < n\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  p < n", "have [simp]: \"{..n} - {0..Suc 0} = {2..n}\""], ["proof (prove)\nusing this:\n  p < n\n\ngoal (1 subgoal):\n 1. {..n} - {0..Suc 0} = {2..n}", "by auto"], ["proof (state)\nthis:\n  {..n} - {0..Suc 0} = {2..n}\n\ngoal (1 subgoal):\n 1. False", "obtain a where a: \"[a = p + 1] (mod p^r)\" \"[a = 1] (mod l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>[a = p + 1] (mod p ^ r); [a = 1] (mod l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using binary_chinese_remainder_nat[of \"p^r\" l \"p + 1\" 1] \n    and \\<open>prime p\\<close> prime_imp_coprime_nat coprime_power_left_iff \\<open>\\<not>p dvd l\\<close>"], ["proof (prove)\nusing this:\n  coprime (p ^ r) l \\<Longrightarrow>\n  \\<exists>x. [x = p + 1] (mod p ^ r) \\<and> [x = 1] (mod l)\n  prime p\n  \\<lbrakk>prime ?p; \\<not> ?p dvd ?n\\<rbrakk>\n  \\<Longrightarrow> coprime ?p ?n\n  coprime (?a ^ ?n) ?b = (coprime ?a ?b \\<or> ?n = 0)\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>[a = p + 1] (mod p ^ r); [a = 1] (mod l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  [a = p + 1] (mod p ^ r)\n  [a = 1] (mod l)\n\ngoal (1 subgoal):\n 1. False", "hence \"coprime a n\""], ["proof (prove)\nusing this:\n  [a = p + 1] (mod p ^ r)\n  [a = 1] (mod l)\n\ngoal (1 subgoal):\n 1. coprime a n", "using lucas_coprime_lemma[of 1 a l] cong_imp_coprime[of \"p+1\" a \"p^r\"] \n      and coprime_add_one_left cong_sym"], ["proof (prove)\nusing this:\n  [a = p + 1] (mod p ^ r)\n  [a = 1] (mod l)\n  \\<lbrakk>1 \\<noteq> 0; [a ^ 1 = 1] (mod l)\\<rbrakk>\n  \\<Longrightarrow> coprime a l\n  \\<lbrakk>[p + 1 = a] (mod p ^ r); coprime (p + 1) (p ^ r)\\<rbrakk>\n  \\<Longrightarrow> coprime a (p ^ r)\n  coprime (?a + (1::?'a)) ?a\n  [?b = ?c] (mod ?a) \\<Longrightarrow> [?c = ?b] (mod ?a)\n\ngoal (1 subgoal):\n 1. coprime a n", "unfolding \\<open>n = p ^ r * l\\<close> coprime_mult_right_iff coprime_power_right_iff power_one_right"], ["proof (prove)\nusing this:\n  [a = p + 1] (mod p ^ r)\n  [a = 1] (mod l)\n  \\<lbrakk>1 \\<noteq> 0; [a = 1] (mod l)\\<rbrakk>\n  \\<Longrightarrow> coprime a l\n  \\<lbrakk>[p + 1 = a] (mod p ^ r); coprime (p + 1) p \\<or> r = 0\\<rbrakk>\n  \\<Longrightarrow> coprime a p \\<or> r = 0\n  coprime (?a + (1::?'a)) ?a\n  [?b = ?c] (mod ?a) \\<Longrightarrow> [?c = ?b] (mod ?a)\n\ngoal (1 subgoal):\n 1. (coprime a p \\<or> r = 0) \\<and> coprime a l", "by blast"], ["proof (state)\nthis:\n  coprime a n\n\ngoal (1 subgoal):\n 1. False", "hence \"[a ^ (n - 1) = 1] (mod n)\""], ["proof (prove)\nusing this:\n  coprime a n\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "using *"], ["proof (prove)\nusing this:\n  coprime a n\n  coprime ?a n \\<Longrightarrow> [?a ^ (n - 1) = 1] (mod n)\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "by blast"], ["proof (state)\nthis:\n  [a ^ (n - 1) = 1] (mod n)\n\ngoal (1 subgoal):\n 1. False", "hence \"[a ^ (n - 1) = 1] (mod p^r)\""], ["proof (prove)\nusing this:\n  [a ^ (n - 1) = 1] (mod n)\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod p ^ r)", "using n cong_modulus_mult_nat"], ["proof (prove)\nusing this:\n  [a ^ (n - 1) = 1] (mod n)\n  n = p ^ r * l\n  [?x = ?y] (mod ?m * ?n) \\<Longrightarrow> [?x = ?y] (mod ?m)\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod p ^ r)", "by blast"], ["proof (state)\nthis:\n  [a ^ (n - 1) = 1] (mod p ^ r)\n\ngoal (1 subgoal):\n 1. False", "hence A: \"[a ^ n = a] (mod p^r)\""], ["proof (prove)\nusing this:\n  [a ^ (n - 1) = 1] (mod p ^ r)\n\ngoal (1 subgoal):\n 1. [a ^ n = a] (mod p ^ r)", "using cong_scalar_right[of \"a^(n-1)\" 1 \"p^r\" a] \\<open>1 \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  [a ^ (n - 1) = 1] (mod p ^ r)\n  [a ^ (n - 1) = 1] (mod p ^ r) \\<Longrightarrow>\n  [a ^ (n - 1) * a = 1 * a] (mod p ^ r)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. [a ^ n = a] (mod p ^ r)", "unfolding power_Suc2[symmetric]"], ["proof (prove)\nusing this:\n  [a ^ (n - 1) = 1] (mod p ^ r)\n  [a ^ (n - 1) = 1] (mod p ^ r) \\<Longrightarrow>\n  [a ^ Suc (n - 1) = 1 * a] (mod p ^ r)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. [a ^ n = a] (mod p ^ r)", "by simp"], ["proof (state)\nthis:\n  [a ^ n = a] (mod p ^ r)\n\ngoal (1 subgoal):\n 1. False", "have \"r = Suc (Suc (r - 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = Suc (Suc (r - 2))", "using \\<open>1 < r\\<close>"], ["proof (prove)\nusing this:\n  1 < r\n\ngoal (1 subgoal):\n 1. r = Suc (Suc (r - 2))", "by linarith"], ["proof (state)\nthis:\n  r = Suc (Suc (r - 2))\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  r = Suc (Suc (r - 2))", "have \"p^r = p^2 * p^(r-2)\""], ["proof (prove)\nusing this:\n  r = Suc (Suc (r - 2))\n\ngoal (1 subgoal):\n 1. p ^ r = p\\<^sup>2 * p ^ (r - 2)", "by (simp add: algebra_simps flip: power_add power_Suc)"], ["proof (state)\nthis:\n  p ^ r = p\\<^sup>2 * p ^ (r - 2)\n\ngoal (1 subgoal):\n 1. False", "hence \"[a ^ n = a] (mod p^2)\" \"[a = p + 1] (mod p^2)\""], ["proof (prove)\nusing this:\n  p ^ r = p\\<^sup>2 * p ^ (r - 2)\n\ngoal (1 subgoal):\n 1. [a ^ n = a] (mod p\\<^sup>2) &&& [a = p + 1] (mod p\\<^sup>2)", "using \\<open>1 < r\\<close> A cong_modulus_mult_nat \\<open>[a = p + 1] (mod p^r)\\<close>"], ["proof (prove)\nusing this:\n  p ^ r = p\\<^sup>2 * p ^ (r - 2)\n  1 < r\n  [a ^ n = a] (mod p ^ r)\n  [?x = ?y] (mod ?m * ?n) \\<Longrightarrow> [?x = ?y] (mod ?m)\n  [a = p + 1] (mod p ^ r)\n\ngoal (1 subgoal):\n 1. [a ^ n = a] (mod p\\<^sup>2) &&& [a = p + 1] (mod p\\<^sup>2)", "by algebra+"], ["proof (state)\nthis:\n  [a ^ n = a] (mod p\\<^sup>2)\n  [a = p + 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "hence 1: \"[(p + 1) ^ n = (p + 1)] (mod p^2)\""], ["proof (prove)\nusing this:\n  [a ^ n = a] (mod p\\<^sup>2)\n  [a = p + 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. [(p + 1) ^ n = p + 1] (mod p\\<^sup>2)", "by (metis (mono_tags) cong_def power_mod)"], ["proof (state)\nthis:\n  [(p + 1) ^ n = p + 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "have \"[(p + 1) ^ n = (\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k))] (mod p^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [(p + 1) ^\n     n = \\<Sum>k\\<le>n.\n            of_nat (n choose k) * p ^ k * 1 ^ (n - k)] (mod p\\<^sup>2)", "using binomial[of p 1 n]"], ["proof (prove)\nusing this:\n  (p + 1) ^ n = (\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k))\n\ngoal (1 subgoal):\n 1. [(p + 1) ^\n     n = \\<Sum>k\\<le>n.\n            of_nat (n choose k) * p ^ k * 1 ^ (n - k)] (mod p\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  [(p + 1) ^\n   n = \\<Sum>k\\<le>n.\n          of_nat (n choose k) * p ^ k * 1 ^ (n - k)] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "also"], ["proof (state)\nthis:\n  [(p + 1) ^\n   n = \\<Sum>k\\<le>n.\n          of_nat (n choose k) * p ^ k * 1 ^ (n - k)] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "have \"(\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k)) =\n             (\\<Sum>k = 0..1. (n choose k) * p ^ k) + (\\<Sum>k\\<in> {2..n}. of_nat (n choose k) * p ^ k * 1 ^ (n - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k)) =\n    (\\<Sum>k = 0..1. (n choose k) * p ^ k) +\n    (\\<Sum>k = 2..n. of_nat (n choose k) * p ^ k * 1 ^ (n - k))", "using \\<open>2 \\<le> n\\<close> finite_atMost[of n]"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  finite {..n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k)) =\n    (\\<Sum>k = 0..1. (n choose k) * p ^ k) +\n    (\\<Sum>k = 2..n. of_nat (n choose k) * p ^ k * 1 ^ (n - k))", "by (subst sum.subset_diff[where B = \"{0..1}\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k)) =\n  (\\<Sum>k = 0..1. (n choose k) * p ^ k) +\n  (\\<Sum>k = 2..n. of_nat (n choose k) * p ^ k * 1 ^ (n - k))\n\ngoal (1 subgoal):\n 1. False", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>n. of_nat (n choose k) * p ^ k * 1 ^ (n - k)) =\n  (\\<Sum>k = 0..1. (n choose k) * p ^ k) +\n  (\\<Sum>k = 2..n. of_nat (n choose k) * p ^ k * 1 ^ (n - k))\n\ngoal (1 subgoal):\n 1. False", "have \"[(\\<Sum>k = 0..1. (n choose k) * p ^ k) = 1] (mod p^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<Sum>k = 0..1. (n choose k) * p ^ k = 1] (mod p\\<^sup>2)", "by (simp add: cong_altdef_nat \\<open>p ^ r = p\\<^sup>2 * p ^ (r - 2)\\<close> n)"], ["proof (state)\nthis:\n  [\\<Sum>k = 0..1. (n choose k) * p ^ k = 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "also"], ["proof (state)\nthis:\n  [\\<Sum>k = 0..1. (n choose k) * p ^ k = 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "have \"[(\\<Sum>k\\<in> {2..n}. of_nat (n choose k) * p ^ k * 1 ^ (n - k)) = 0] (mod p^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<Sum>k = 2..n.\n        of_nat (n choose k) * p ^ k * 1 ^ (n - k) = 0] (mod p\\<^sup>2)", "by (rule cong_eq_0_I) (clarsimp simp: cong_0_iff le_imp_power_dvd)"], ["proof (state)\nthis:\n  [\\<Sum>k = 2..n.\n      of_nat (n choose k) * p ^ k * 1 ^ (n - k) = 0] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "finally"], ["proof (chain)\npicking this:\n  [(p + 1) ^ n = 1 + 0] (mod p\\<^sup>2)", "have 2: \"[(p + 1) ^ n = 1] (mod p^2)\""], ["proof (prove)\nusing this:\n  [(p + 1) ^ n = 1 + 0] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. [(p + 1) ^ n = 1] (mod p\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  [(p + 1) ^ n = 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "from cong_trans[OF cong_sym[OF 1] 2]"], ["proof (chain)\npicking this:\n  [p + 1 = 1] (mod p\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  [p + 1 = 1] (mod p\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "using prime_gt_1_nat[OF \\<open>prime p\\<close>]"], ["proof (prove)\nusing this:\n  [p + 1 = 1] (mod p\\<^sup>2)\n  1 < p\n\ngoal (1 subgoal):\n 1. False", "by (auto dest: residue_one_dvd[unfolded One_nat_def] simp add: cong_def numeral_2_eq_2)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Carmichael_number_imp_squarefree:\n  assumes \"Carmichael_number n\"\n  shows \"squarefree n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree n", "proof(rule squarefreeI, rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "fix x :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"x\\<^sup>2 dvd n\""], ["proof (state)\nthis:\n  x\\<^sup>2 dvd n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  Carmichael_number n", "have \"n > 0\""], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. 0 < n", "using Carmichael_number_gt_3[of n]"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> 3 < n\n\ngoal (1 subgoal):\n 1. 0 < n", "by auto"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>x\\<^sup>2 dvd n\\<close> and \\<open>0 < n\\<close>"], ["proof (chain)\npicking this:\n  x\\<^sup>2 dvd n\n  0 < n", "have \"0 < x\""], ["proof (prove)\nusing this:\n  x\\<^sup>2 dvd n\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < x", "by auto"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"\\<not> is_unit x\""], ["proof (state)\nthis:\n  \\<not> is_unit x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> is_unit x", "obtain p where \"prime p\" \"p dvd x\""], ["proof (prove)\nusing this:\n  \\<not> is_unit x\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; p dvd x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prime_divisor_exists[of x] \\<open>0 < x\\<close>"], ["proof (prove)\nusing this:\n  \\<not> is_unit x\n  \\<lbrakk>x \\<noteq> 0; \\<not> is_unit x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b. b dvd x \\<and> prime b\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; p dvd x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  prime p\n  p dvd x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>x\\<^sup>2 dvd n\\<close>"], ["proof (chain)\npicking this:\n  x\\<^sup>2 dvd n\n  prime p\n  p dvd x", "have \"p^2 dvd n\""], ["proof (prove)\nusing this:\n  x\\<^sup>2 dvd n\n  prime p\n  p dvd x\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 dvd n", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 dvd n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "obtain l where n: \"n = p ^ multiplicity p n * l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        n = p ^ multiplicity p n * l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using multiplicity_dvd[of p n]"], ["proof (prove)\nusing this:\n  p ^ multiplicity p n dvd n\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        n = p ^ multiplicity p n * l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = p ^ multiplicity p n * l\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  n = p ^ multiplicity p n * l", "have \"\\<not> p dvd l\""], ["proof (prove)\nusing this:\n  n = p ^ multiplicity p n * l\n\ngoal (1 subgoal):\n 1. \\<not> p dvd l", "using multiplicity_decompose'[where x = n and p = p]"], ["proof (prove)\nusing this:\n  n = p ^ multiplicity p n * l\n  \\<lbrakk>n \\<noteq> 0; \\<not> is_unit p;\n   \\<And>y.\n      \\<lbrakk>n = p ^ multiplicity p n * y; \\<not> p dvd y\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<not> p dvd l", "using \\<open>prime p\\<close> \\<open>0 < n\\<close>"], ["proof (prove)\nusing this:\n  n = p ^ multiplicity p n * l\n  \\<lbrakk>n \\<noteq> 0; \\<not> is_unit p;\n   \\<And>y.\n      \\<lbrakk>n = p ^ multiplicity p n * y; \\<not> p dvd y\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  prime p\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<not> p dvd l", "by (metis nat_dvd_1_iff_1 nat_mult_eq_cancel1 neq0_conv prime_prime_factor_sqrt zero_less_power)"], ["proof (state)\nthis:\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "have \"2 \\<le> multiplicity p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> multiplicity p n", "using \\<open>p\\<^sup>2 dvd n\\<close> \\<open>0 < n\\<close> prime_gt_1_nat[OF \\<open>prime p\\<close>]"], ["proof (prove)\nusing this:\n  p\\<^sup>2 dvd n\n  0 < n\n  1 < p\n\ngoal (1 subgoal):\n 1. 2 \\<le> multiplicity p n", "by (auto intro!: multiplicity_geI simp: power2_eq_square)"], ["proof (state)\nthis:\n  2 \\<le> multiplicity p n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x\\<^sup>2 dvd n; \\<not> is_unit x\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  2 \\<le> multiplicity p n", "show False"], ["proof (prove)\nusing this:\n  2 \\<le> multiplicity p n\n\ngoal (1 subgoal):\n 1. False", "using Carmichael_number_imp_squarefree_aux[OF \\<open>Carmichael_number n\\<close> n] \\<open>prime p\\<close> \\<open>\\<not> p dvd l\\<close>"], ["proof (prove)\nusing this:\n  2 \\<le> multiplicity p n\n  \\<lbrakk>prime p; \\<not> p dvd l; 1 < multiplicity p n\\<rbrakk>\n  \\<Longrightarrow> False\n  prime p\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Carmichael_not_primepow:\n  assumes \"Carmichael_number n\"\n  shows   \"\\<not>primepow n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> primepow n", "using Carmichael_number_imp_squarefree[of n] Carmichael_number_not_prime[of n] assms\n        primepow_gt_0_nat[of n]"], ["proof (prove)\nusing this:\n  Carmichael_number n \\<Longrightarrow> squarefree n\n  Carmichael_number n \\<Longrightarrow> \\<not> prime n\n  Carmichael_number n\n  primepow n \\<Longrightarrow> 0 < n\n\ngoal (1 subgoal):\n 1. \\<not> primepow n", "by (auto simp: not_squarefree_primepow)"], ["", "lemma Carmichael_number_imp_squarefree_alt_weak:\n  assumes \"Carmichael_number n\"\n  shows \"\\<exists>p l. (n = p * l) \\<and> prime p \\<and> \\<not>p dvd l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "from assms"], ["proof (chain)\npicking this:\n  Carmichael_number n", "have \"n > 1\""], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. 1 < n", "using Carmichael_number_gt_3[of n]"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> 3 < n\n\ngoal (1 subgoal):\n 1. 1 < n", "by simp"], ["proof (state)\nthis:\n  1 < n\n\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "have \"squarefree n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree n", "using Carmichael_number_imp_squarefree assms"], ["proof (prove)\nusing this:\n  Carmichael_number ?n \\<Longrightarrow> squarefree ?n\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. squarefree n", "by blast"], ["proof (state)\nthis:\n  squarefree n\n\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "obtain p l where \"p * l = n\" \"prime p\" \"1 < p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p l.\n        \\<lbrakk>p * l = n; prime p; 1 < p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms prime_divisor_exists_strong_nat prime_gt_1_nat"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  \\<lbrakk>1 < ?m; \\<not> prime ?m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p k.\n                       ?m = p * k \\<and>\n                       1 < p \\<and>\n                       p < ?m \\<and> 1 < k \\<and> k < ?m \\<and> prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. (\\<And>p l.\n        \\<lbrakk>p * l = n; prime p; 1 < p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n  \\<lbrakk>1 < ?m; \\<not> prime ?m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p k.\n                       ?m = p * k \\<and>\n                       1 < p \\<and>\n                       p < ?m \\<and> 1 < k \\<and> k < ?m \\<and> prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. (\\<And>p l.\n        \\<lbrakk>p * l = n; prime p; 1 < p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p * l = n\n  prime p\n  1 < p\n\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "then"], ["proof (chain)\npicking this:\n  p * l = n\n  prime p\n  1 < p", "have \"multiplicity p n = 1\""], ["proof (prove)\nusing this:\n  p * l = n\n  prime p\n  1 < p\n\ngoal (1 subgoal):\n 1. multiplicity p n = 1", "using \\<open>1 < n\\<close> \\<open>squarefree n\\<close> and multiplicity_eq_zero_iff[of n p] squarefree_factorial_semiring''[of n]"], ["proof (prove)\nusing this:\n  p * l = n\n  prime p\n  1 < p\n  1 < n\n  squarefree n\n  \\<lbrakk>n \\<noteq> 0; \\<not> is_unit p\\<rbrakk>\n  \\<Longrightarrow> (multiplicity p n = 0) = (\\<not> p dvd n)\n  n \\<noteq> 0 \\<Longrightarrow>\n  squarefree n =\n  (\\<forall>p. prime p \\<longrightarrow> multiplicity p n \\<le> 1)\n\ngoal (1 subgoal):\n 1. multiplicity p n = 1", "by auto"], ["proof (state)\nthis:\n  multiplicity p n = 1\n\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "then"], ["proof (chain)\npicking this:\n  multiplicity p n = 1", "have \"\\<not>p dvd l\""], ["proof (prove)\nusing this:\n  multiplicity p n = 1\n\ngoal (1 subgoal):\n 1. \\<not> p dvd l", "using \\<open>1 < n\\<close> \\<open>prime p\\<close> \\<open>p * l = n\\<close> multiplicity_decompose'[of n p]"], ["proof (prove)\nusing this:\n  multiplicity p n = 1\n  1 < n\n  prime p\n  p * l = n\n  \\<lbrakk>n \\<noteq> 0; \\<not> is_unit p;\n   \\<And>y.\n      \\<lbrakk>n = p ^ multiplicity p n * y; \\<not> p dvd y\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<not> p dvd l", "by force"], ["proof (state)\nthis:\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "using \\<open>p * l = n\\<close> \\<open>prime p\\<close> \\<open>\\<not>p dvd l\\<close>"], ["proof (prove)\nusing this:\n  p * l = n\n  prime p\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l", "by blast"], ["proof (state)\nthis:\n  \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Carmichael_number_odd:\n  assumes \"Carmichael_number n\"\n  shows   \"odd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "assume \"\\<not> odd n\""], ["proof (state)\nthis:\n  \\<not> odd n\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "hence \"even n\""], ["proof (prove)\nusing this:\n  \\<not> odd n\n\ngoal (1 subgoal):\n 1. even n", "by simp"], ["proof (state)\nthis:\n  even n\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  Carmichael_number n", "have \"n \\<ge> 4\""], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. 4 \\<le> n", "using Carmichael_number_gt_3[of n]"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> 3 < n\n\ngoal (1 subgoal):\n 1. 4 \\<le> n", "by simp"], ["proof (state)\nthis:\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "have \"[(n - 1) ^ (n - 1) = n - 1] (mod n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [(n - 1) ^ (n - 1) = n - 1] (mod n)", "using \\<open>even n\\<close> and \\<open>n \\<ge> 4\\<close>"], ["proof (prove)\nusing this:\n  even n\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. [(n - 1) ^ (n - 1) = n - 1] (mod n)", "by (intro odd_pow_cong) auto"], ["proof (state)\nthis:\n  [(n - 1) ^ (n - 1) = n - 1] (mod n)\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  [(n - 1) ^ (n - 1) = n - 1] (mod n)", "have \"[(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\""], ["proof (prove)\nusing this:\n  [(n - 1) ^ (n - 1) = n - 1] (mod n)\n\ngoal (1 subgoal):\n 1. [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)", "using cong_trans[of 1 \"(n - 1) ^ (n - 1)\" n \"n-1\", OF cong_sym] \\<open>4 \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  [(n - 1) ^ (n - 1) = n - 1] (mod n)\n  \\<lbrakk>[(n - 1) ^ (n - 1) = 1] (mod n);\n   [(n - 1) ^ (n - 1) = n - 1] (mod n)\\<rbrakk>\n  \\<Longrightarrow> [1 = n - 1] (mod n)\n  4 \\<le> n\n\ngoal (1 subgoal):\n 1. [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)", "by (auto simp: cong_def)"], ["proof (state)\nthis:\n  [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "have \"coprime (n - 1) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (n - 1) n", "using \\<open>n \\<ge> 4\\<close> coprime_diff_one_left_nat[of n]"], ["proof (prove)\nusing this:\n  4 \\<le> n\n  0 < n \\<Longrightarrow> coprime (n - 1) n\n\ngoal (1 subgoal):\n 1. coprime (n - 1) n", "by auto"], ["proof (state)\nthis:\n  coprime (n - 1) n\n\ngoal (1 subgoal):\n 1. \\<not> odd n \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\n  coprime (n - 1) n", "show False"], ["proof (prove)\nusing this:\n  [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\n  coprime (n - 1) n\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\n  coprime (n - 1) n\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. False", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  [(n - 1) ^ (n - 1) \\<noteq> 1] (mod n)\n  coprime (n - 1) n\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Carmichael_number_imp_squarefree_alt:\n  assumes \"Carmichael_number n\"\n  shows \"\\<exists>p l. (n = p * l) \\<and> prime p \\<and> \\<not>p dvd l \\<and> 2 < l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "obtain p l where [simp]: \"(n = p * l)\" and \"prime p\" \"\\<not>p dvd l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p l.\n        \\<lbrakk>n = p * l; prime p; \\<not> p dvd l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Carmichael_number_imp_squarefree_alt_weak and assms"], ["proof (prove)\nusing this:\n  Carmichael_number ?n \\<Longrightarrow>\n  \\<exists>p l. ?n = p * l \\<and> prime p \\<and> \\<not> p dvd l\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. (\\<And>p l.\n        \\<lbrakk>n = p * l; prime p; \\<not> p dvd l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = p * l\n  prime p\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "moreover"], ["proof (state)\nthis:\n  n = p * l\n  prime p\n  \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "have \"odd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd n", "using Carmichael_number_odd and assms"], ["proof (prove)\nusing this:\n  Carmichael_number ?n \\<Longrightarrow> odd ?n\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. odd n", "by blast"], ["proof (state)\nthis:\n  odd n\n\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "consider \"l = 0 \\<or> l = 2\" | \"l = 1\" | \"2 < l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l = 0 \\<or> l = 2 \\<Longrightarrow> thesis;\n     l = 1 \\<Longrightarrow> thesis; 2 < l \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>l = 0 \\<or> l = 2 \\<Longrightarrow> ?thesis;\n   l = 1 \\<Longrightarrow> ?thesis; 2 < l \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>l = 0 \\<or> l = 2 \\<Longrightarrow> ?thesis;\n   l = 1 \\<Longrightarrow> ?thesis; 2 < l \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"2 < l\""], ["proof (prove)\nusing this:\n  \\<lbrakk>l = 0 \\<or> l = 2 \\<Longrightarrow> ?thesis;\n   l = 1 \\<Longrightarrow> ?thesis; 2 < l \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. 2 < l", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. l = 0 \\<or> l = 2 \\<Longrightarrow> 2 < l\n 2. l = 1 \\<Longrightarrow> 2 < l\n 3. 2 < l \\<Longrightarrow> 2 < l", "case 1"], ["proof (state)\nthis:\n  l = 0 \\<or> l = 2\n\ngoal (3 subgoals):\n 1. l = 0 \\<or> l = 2 \\<Longrightarrow> 2 < l\n 2. l = 1 \\<Longrightarrow> 2 < l\n 3. 2 < l \\<Longrightarrow> 2 < l", "then"], ["proof (chain)\npicking this:\n  l = 0 \\<or> l = 2", "show ?thesis"], ["proof (prove)\nusing this:\n  l = 0 \\<or> l = 2\n\ngoal (1 subgoal):\n 1. 2 < l", "using \\<open>odd n\\<close>"], ["proof (prove)\nusing this:\n  l = 0 \\<or> l = 2\n  odd n\n\ngoal (1 subgoal):\n 1. 2 < l", "by auto"], ["proof (state)\nthis:\n  2 < l\n\ngoal (2 subgoals):\n 1. l = 1 \\<Longrightarrow> 2 < l\n 2. 2 < l \\<Longrightarrow> 2 < l", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. l = 1 \\<Longrightarrow> 2 < l\n 2. 2 < l \\<Longrightarrow> 2 < l", "case 2"], ["proof (state)\nthis:\n  l = 1\n\ngoal (2 subgoals):\n 1. l = 1 \\<Longrightarrow> 2 < l\n 2. 2 < l \\<Longrightarrow> 2 < l", "then"], ["proof (chain)\npicking this:\n  l = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  l = 1\n\ngoal (1 subgoal):\n 1. 2 < l", "using \\<open>n = p * l\\<close> \\<open>prime p\\<close> \\<open>Carmichael_number n\\<close>"], ["proof (prove)\nusing this:\n  l = 1\n  n = p * l\n  prime p\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. 2 < l", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  l = 1\n  n = p * l\n  prime p\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n\ngoal (1 subgoal):\n 1. 2 < l", "by simp"], ["proof (state)\nthis:\n  2 < l\n\ngoal (1 subgoal):\n 1. 2 < l \\<Longrightarrow> 2 < l", "qed simp"], ["proof (state)\nthis:\n  2 < l\n\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "ultimately"], ["proof (chain)\npicking this:\n  n = p * l\n  prime p\n  \\<not> p dvd l\n  2 < l", "show ?thesis"], ["proof (prove)\nusing this:\n  n = p * l\n  prime p\n  \\<not> p dvd l\n  2 < l\n\ngoal (1 subgoal):\n 1. \\<exists>p l.\n       n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l", "by blast"], ["proof (state)\nthis:\n  \\<exists>p l. n = p * l \\<and> prime p \\<and> \\<not> p dvd l \\<and> 2 < l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Carmichael_number_imp_dvd:\n  fixes n :: nat\n  assumes Carmichael_number: \"Carmichael_number n\" and \"prime p\" \"p dvd n\"\n  shows \"p - 1 dvd n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"\\<not>prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prime n", "using Carmichael_number"], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. \\<not> prime n", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n\ngoal (1 subgoal):\n 1. \\<not> prime n", "by blast"], ["proof (state)\nthis:\n  \\<not> prime n\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "obtain u where \"n = p * u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u. n = p * u \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using \\<open>p dvd n\\<close>"], ["proof (prove)\nusing this:\n  p dvd n\n\ngoal (1 subgoal):\n 1. (\\<And>u. n = p * u \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  n = p * u\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"squarefree n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squarefree n", "using Carmichael_number_imp_squarefree assms"], ["proof (prove)\nusing this:\n  Carmichael_number ?n \\<Longrightarrow> squarefree ?n\n  Carmichael_number n\n  prime p\n  p dvd n\n\ngoal (1 subgoal):\n 1. squarefree n", "by blast"], ["proof (state)\nthis:\n  squarefree n\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "then"], ["proof (chain)\npicking this:\n  squarefree n", "have \"\\<not>p dvd u\""], ["proof (prove)\nusing this:\n  squarefree n\n\ngoal (1 subgoal):\n 1. \\<not> p dvd u", "using \\<open>prime p\\<close> not_prime_unit[of p]"], ["proof (prove)\nusing this:\n  squarefree n\n  prime p\n  is_unit p \\<Longrightarrow> \\<not> prime p\n\ngoal (1 subgoal):\n 1. \\<not> p dvd u", "unfolding power2_eq_square squarefree_def \\<open>n = p * u\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x. x * x dvd p * u \\<longrightarrow> is_unit x\n  prime p\n  is_unit p \\<Longrightarrow> \\<not> prime p\n\ngoal (1 subgoal):\n 1. \\<not> p dvd u", "by fastforce"], ["proof (state)\nthis:\n  \\<not> p dvd u\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "define R where \"R = Residues_nat p\""], ["proof (state)\nthis:\n  R = Residues_nat p\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "interpret residues_nat_prime p R"], ["proof (prove)\ngoal (1 subgoal):\n 1. residues_nat_prime p &&& R \\<equiv> Residues_nat p", "by unfold_locales (simp_all only: \\<open>prime p\\<close> R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "obtain a where a: \"a \\<in> {0<..<p}\" \"units.ord a = p - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> {0<..<p}; units.ord a = p - 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using residues_prime_cyclic' \\<open>prime p\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>{0<..<p}. units.ord x = p - 1\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> {0<..<p}; units.ord a = p - 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  a \\<in> {0<..<p}\n  units.ord a = p - 1\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "from a"], ["proof (chain)\npicking this:\n  a \\<in> {0<..<p}\n  units.ord a = p - 1", "have \"a \\<in> totatives p\""], ["proof (prove)\nusing this:\n  a \\<in> {0<..<p}\n  units.ord a = p - 1\n\ngoal (1 subgoal):\n 1. a \\<in> totatives p", "by (auto simp: totatives_prime \\<open>prime p\\<close>)"], ["proof (state)\nthis:\n  a \\<in> totatives p\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"coprime p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime p u", "using \\<open>prime p\\<close> \\<open>\\<not> p dvd u\\<close>"], ["proof (prove)\nusing this:\n  prime p\n  \\<not> p dvd u\n\ngoal (1 subgoal):\n 1. coprime p u", "by (simp add: prime_imp_coprime_nat)"], ["proof (state)\nthis:\n  coprime p u\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "then"], ["proof (chain)\npicking this:\n  coprime p u", "obtain x where \"[x = a] (mod p)\" \"[x = 1] (mod u)\""], ["proof (prove)\nusing this:\n  coprime p u\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>[x = a] (mod p); [x = 1] (mod u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using binary_chinese_remainder_nat[of p u a 1]"], ["proof (prove)\nusing this:\n  coprime p u\n  coprime p u \\<Longrightarrow>\n  \\<exists>x. [x = a] (mod p) \\<and> [x = 1] (mod u)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>[x = a] (mod p); [x = 1] (mod u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  [x = a] (mod p)\n  [x = 1] (mod u)\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"coprime x p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime x p", "using \\<open>a \\<in> totatives p\\<close> and cong_imp_coprime[OF cong_sym[OF \\<open>[x = a] (mod p)\\<close>]]"], ["proof (prove)\nusing this:\n  a \\<in> totatives p\n  coprime a p \\<Longrightarrow> coprime x p\n\ngoal (1 subgoal):\n 1. coprime x p", "by (simp add: coprime_commute totatives_def)"], ["proof (state)\nthis:\n  coprime x p\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "moreover"], ["proof (state)\nthis:\n  coprime x p\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"coprime x u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime x u", "using coprime_1_left and cong_imp_coprime[OF cong_sym[OF \\<open>[x = 1] (mod u)\\<close>]]"], ["proof (prove)\nusing this:\n  coprime (1::?'a) ?a\n  coprime 1 u \\<Longrightarrow> coprime x u\n\ngoal (1 subgoal):\n 1. coprime x u", "by blast"], ["proof (state)\nthis:\n  coprime x u\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "ultimately"], ["proof (chain)\npicking this:\n  coprime x p\n  coprime x u", "have \"coprime x n\""], ["proof (prove)\nusing this:\n  coprime x p\n  coprime x u\n\ngoal (1 subgoal):\n 1. coprime x n", "by (simp add: \\<open>n = p * u\\<close>)"], ["proof (state)\nthis:\n  coprime x n\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"[a ^ (n - 1) = x ^ (n - 1)] (mod p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = x ^ (n - 1)] (mod p)", "using \\<open>[x = a] (mod p)\\<close>"], ["proof (prove)\nusing this:\n  [x = a] (mod p)\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = x ^ (n - 1)] (mod p)", "by (intro cong_pow) (auto simp: cong_sym_eq)"], ["proof (state)\nthis:\n  [a ^ (n - 1) = x ^ (n - 1)] (mod p)\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "also"], ["proof (state)\nthis:\n  [a ^ (n - 1) = x ^ (n - 1)] (mod p)\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"[x ^ (n - 1) = 1] (mod n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [x ^ (n - 1) = 1] (mod n)", "using Carmichael_number \\<open>coprime x n\\<close>"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  coprime x n\n\ngoal (1 subgoal):\n 1. [x ^ (n - 1) = 1] (mod n)", "unfolding Carmichael_number_def"], ["proof (prove)\nusing this:\n  1 < n \\<and>\n  \\<not> prime n \\<and>\n  (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))\n  coprime x n\n\ngoal (1 subgoal):\n 1. [x ^ (n - 1) = 1] (mod n)", "by blast"], ["proof (state)\nthis:\n  [x ^ (n - 1) = 1] (mod n)\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "then"], ["proof (chain)\npicking this:\n  [x ^ (n - 1) = 1] (mod n)", "have \"[x ^ (n - 1) = 1] (mod p)\""], ["proof (prove)\nusing this:\n  [x ^ (n - 1) = 1] (mod n)\n\ngoal (1 subgoal):\n 1. [x ^ (n - 1) = 1] (mod p)", "using \\<open>n = p * u\\<close> cong_modulus_mult_nat"], ["proof (prove)\nusing this:\n  [x ^ (n - 1) = 1] (mod n)\n  n = p * u\n  [?x = ?y] (mod ?m * ?n) \\<Longrightarrow> [?x = ?y] (mod ?m)\n\ngoal (1 subgoal):\n 1. [x ^ (n - 1) = 1] (mod p)", "by blast"], ["proof (state)\nthis:\n  [x ^ (n - 1) = 1] (mod p)\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "finally"], ["proof (chain)\npicking this:\n  [a ^ (n - 1) = 1] (mod p)", "have \"ord p a dvd n - 1\""], ["proof (prove)\nusing this:\n  [a ^ (n - 1) = 1] (mod p)\n\ngoal (1 subgoal):\n 1. ord p a dvd n - 1", "by (simp add: ord_divides [symmetric])"], ["proof (state)\nthis:\n  ord p a dvd n - 1\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "also"], ["proof (state)\nthis:\n  ord p a dvd n - 1\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "have \"ord p a = p - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord p a = p - 1", "using a \\<open>a \\<in> totatives p\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> {0<..<p}\n  units.ord a = p - 1\n  a \\<in> totatives p\n\ngoal (1 subgoal):\n 1. ord p a = p - 1", "by (simp add: units.ord_residue_mult_group)"], ["proof (state)\nthis:\n  ord p a = p - 1\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "finally"], ["proof (chain)\npicking this:\n  p - 1 dvd n - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  p - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "."], ["proof (state)\nthis:\n  p - 1 dvd n - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following lemma is also called Korselt's criterion.\n\\<close>"], ["", "lemma Carmichael_numberI:\n  fixes n :: nat\n  assumes \"\\<not> prime n\" \"squarefree n\" \"1 < n\" and\n          DIV: \"\\<And>p. p \\<in> prime_factors n \\<Longrightarrow> p - 1 dvd n - 1\"\n  shows   \"Carmichael_number n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number n", "unfolding Carmichael_number_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < n \\<and>\n    \\<not> prime n \\<and>\n    (\\<forall>a. coprime a n \\<longrightarrow> [a ^ (n - 1) = 1] (mod n))", "proof (intro assms conjI allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "fix a :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "assume \"coprime a n\""], ["proof (state)\nthis:\n  coprime a n\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "have n: \"n = \\<Prod>(prime_factors n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = \\<Prod>(prime_factors n)", "using prime_factorization_nat and squarefree_factorial_semiring'[of n] \\<open>1 < n\\<close> \\<open>squarefree n\\<close>"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow>\n  ?n = (\\<Prod>p\\<in>prime_factors ?n. p ^ multiplicity p ?n)\n  n \\<noteq> 0 \\<Longrightarrow>\n  squarefree n =\n  (\\<forall>p\\<in>#prime_factorization n. multiplicity p n = 1)\n  1 < n\n  squarefree n\n\ngoal (1 subgoal):\n 1. n = \\<Prod>(prime_factors n)", "by fastforce"], ["proof (state)\nthis:\n  n = \\<Prod>(prime_factors n)\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "have \"x \\<in># prime_factorization n \\<Longrightarrow> y \\<in># prime_factorization n \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> coprime x y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in># prime_factorization n; y \\<in># prime_factorization n;\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> coprime x y", "using in_prime_factors_imp_prime primes_coprime"], ["proof (prove)\nusing this:\n  ?p \\<in># prime_factorization ?x \\<Longrightarrow> prime ?p\n  \\<lbrakk>prime ?p; prime ?q; ?p \\<noteq> ?q\\<rbrakk>\n  \\<Longrightarrow> coprime ?p ?q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in># prime_factorization n; y \\<in># prime_factorization n;\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> coprime x y", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in># prime_factorization n; ?y \\<in># prime_factorization n;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> coprime ?x ?y\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in># prime_factorization n; ?y \\<in># prime_factorization n;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> coprime ?x ?y\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in># prime_factorization n; ?y \\<in># prime_factorization n;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> coprime ?x ?y\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "assume p: \"p \\<in># prime_factorization n\""], ["proof (state)\nthis:\n  p \\<in># prime_factorization n\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "have \"\\<not>p dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p dvd a", "using \\<open>coprime a n\\<close> p coprime_common_divisor_nat[of a n p]"], ["proof (prove)\nusing this:\n  coprime a n\n  p \\<in># prime_factorization n\n  \\<lbrakk>coprime a n; p dvd a; p dvd n\\<rbrakk> \\<Longrightarrow> p = 1\n\ngoal (1 subgoal):\n 1. \\<not> p dvd a", "by (auto simp: in_prime_factors_iff)"], ["proof (state)\nthis:\n  \\<not> p dvd a\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "with p"], ["proof (chain)\npicking this:\n  p \\<in># prime_factorization n\n  \\<not> p dvd a", "have \"[a ^ (p - 1) = 1] (mod p)\""], ["proof (prove)\nusing this:\n  p \\<in># prime_factorization n\n  \\<not> p dvd a\n\ngoal (1 subgoal):\n 1. [a ^ (p - 1) = 1] (mod p)", "by (intro fermat_theorem) auto"], ["proof (state)\nthis:\n  [a ^ (p - 1) = 1] (mod p)\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "hence \"ord p a dvd p - 1\""], ["proof (prove)\nusing this:\n  [a ^ (p - 1) = 1] (mod p)\n\ngoal (1 subgoal):\n 1. ord p a dvd p - 1", "by (subst (asm) ord_divides)"], ["proof (state)\nthis:\n  ord p a dvd p - 1\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "also"], ["proof (state)\nthis:\n  ord p a dvd p - 1\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "from p"], ["proof (chain)\npicking this:\n  p \\<in># prime_factorization n", "have \"p - 1 dvd n - 1\""], ["proof (prove)\nusing this:\n  p \\<in># prime_factorization n\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1", "by (rule DIV)"], ["proof (state)\nthis:\n  p - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "finally"], ["proof (chain)\npicking this:\n  ord p a dvd n - 1", "have \"[a ^ (n - 1) = 1] (mod p)\""], ["proof (prove)\nusing this:\n  ord p a dvd n - 1\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod p)", "by (subst ord_divides)"], ["proof (state)\nthis:\n  [a ^ (n - 1) = 1] (mod p)\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "}"], ["proof (state)\nthis:\n  ?p2 \\<in># prime_factorization n \\<Longrightarrow>\n  [a ^ (n - 1) = 1] (mod ?p2)\n\ngoal (1 subgoal):\n 1. \\<And>a. coprime a n \\<Longrightarrow> [a ^ (n - 1) = 1] (mod n)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in># prime_factorization n; ?y \\<in># prime_factorization n;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> coprime ?x ?y\n  ?p2 \\<in># prime_factorization n \\<Longrightarrow>\n  [a ^ (n - 1) = 1] (mod ?p2)", "show \"[a ^ (n - 1) = 1] (mod n)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in># prime_factorization n; ?y \\<in># prime_factorization n;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> coprime ?x ?y\n  ?p2 \\<in># prime_factorization n \\<Longrightarrow>\n  [a ^ (n - 1) = 1] (mod ?p2)\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "using n coprime_cong_prod_nat"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in># prime_factorization n; ?y \\<in># prime_factorization n;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> coprime ?x ?y\n  ?p2 \\<in># prime_factorization n \\<Longrightarrow>\n  [a ^ (n - 1) = 1] (mod ?p2)\n  n = \\<Prod>(prime_factors n)\n  \\<lbrakk>\\<And>i j.\n              \\<lbrakk>i \\<in> ?A; j \\<in> ?A; i \\<noteq> j\\<rbrakk>\n              \\<Longrightarrow> coprime (?m i) (?m j);\n   \\<And>i. i \\<in> ?A \\<Longrightarrow> [?x = ?y] (mod ?m i)\\<rbrakk>\n  \\<Longrightarrow> [?x = ?y] (mod prod ?m ?A)\n\ngoal (1 subgoal):\n 1. [a ^ (n - 1) = 1] (mod n)", "by metis"], ["proof (state)\nthis:\n  [a ^ (n - 1) = 1] (mod n)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Carmichael_number_iff:\n  \"Carmichael_number n \\<longleftrightarrow>\n     n \\<noteq> 1 \\<and> \\<not>prime n \\<and> squarefree n \\<and> (\\<forall>p\\<in>prime_factors n. p - 1 dvd n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number n =\n    (n \\<noteq> 1 \\<and>\n     \\<not> prime n \\<and>\n     squarefree n \\<and>\n     (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Carmichael_number n =\n    (n \\<noteq> 1 \\<and>\n     \\<not> prime n \\<and>\n     squarefree n \\<and>\n     (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1))", "consider \"n = 0\" | \"n = 1\" | \"n > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = 0 \\<Longrightarrow> thesis; n = 1 \\<Longrightarrow> thesis;\n     1 < n \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Carmichael_number n =\n    (n \\<noteq> 1 \\<and>\n     \\<not> prime n \\<and>\n     squarefree n \\<and>\n     (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Carmichael_number n =\n    (n \\<noteq> 1 \\<and>\n     \\<not> prime n \\<and>\n     squarefree n \\<and>\n     (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1))", "using Carmichael_numberI[of n] Carmichael_number_imp_dvd[of n]"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 0 \\<Longrightarrow> ?thesis; n = 1 \\<Longrightarrow> ?thesis;\n   1 < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<not> prime n; squarefree n; 1 < n;\n   \\<And>p.\n      p \\<in># prime_factorization n \\<Longrightarrow>\n      p - 1 dvd n - 1\\<rbrakk>\n  \\<Longrightarrow> Carmichael_number n\n  \\<lbrakk>Carmichael_number n; prime ?p; ?p dvd n\\<rbrakk>\n  \\<Longrightarrow> ?p - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. Carmichael_number n =\n    (n \\<noteq> 1 \\<and>\n     \\<not> prime n \\<and>\n     squarefree n \\<and>\n     (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1))", "by cases (auto simp: Carmichael_number_not_prime Carmichael_number_imp_squarefree)"], ["proof (state)\nthis:\n  Carmichael_number n =\n  (n \\<noteq> 1 \\<and>\n   \\<not> prime n \\<and>\n   squarefree n \\<and>\n   (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Every Carmichael number has at least three distinct prime factors.\n\\<close>"], ["", "theorem Carmichael_number_card_prime_factors:\n  assumes \"Carmichael_number n\"\n  shows   \"card (prime_factors n) \\<ge> 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 \\<le> card (prime_factors n)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  Carmichael_number n", "have \"n > 3\""], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. 3 < n", "using Carmichael_number_gt_3[of n]"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> 3 < n\n\ngoal (1 subgoal):\n 1. 3 < n", "by simp"], ["proof (state)\nthis:\n  3 < n\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "assume \"\\<not>(card (prime_factors n) \\<ge> 3)\""], ["proof (state)\nthis:\n  \\<not> 3 \\<le> card (prime_factors n)\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> 3 \\<le> card (prime_factors n)\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "have \"card (prime_factors n) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (prime_factors n) \\<noteq> 0", "using assms Carmichael_number_gt_3[of n]"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  Carmichael_number n \\<Longrightarrow> 3 < n\n\ngoal (1 subgoal):\n 1. card (prime_factors n) \\<noteq> 0", "by (auto simp: prime_factorization_empty_iff)"], ["proof (state)\nthis:\n  card (prime_factors n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  card (prime_factors n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "have \"card (prime_factors n) \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (prime_factors n) \\<noteq> 1", "using assms"], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. card (prime_factors n) \\<noteq> 1", "by (auto simp: one_prime_factor_iff_primepow Carmichael_not_primepow)"], ["proof (state)\nthis:\n  card (prime_factors n) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> 3 \\<le> card (prime_factors n)\n  card (prime_factors n) \\<noteq> 0\n  card (prime_factors n) \\<noteq> 1", "have \"card (prime_factors n) = 2\""], ["proof (prove)\nusing this:\n  \\<not> 3 \\<le> card (prime_factors n)\n  card (prime_factors n) \\<noteq> 0\n  card (prime_factors n) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. card (prime_factors n) = 2", "by linarith"], ["proof (state)\nthis:\n  card (prime_factors n) = 2\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  card (prime_factors n) = 2", "obtain p q where pq: \"prime_factors n = {p, q}\" \"p \\<noteq> q\""], ["proof (prove)\nusing this:\n  card (prime_factors n) = 2\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>prime_factors n = {p, q}; p \\<noteq> q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: card_Suc_eq numeral_2_eq_2)"], ["proof (state)\nthis:\n  prime_factors n = {p, q}\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "hence \"prime p\" \"prime q\""], ["proof (prove)\nusing this:\n  prime_factors n = {p, q}\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. prime p &&& prime q", "by (auto simp: in_prime_factors_iff)"], ["proof (state)\nthis:\n  prime p\n  prime q\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "have \"n = \\<Prod>(prime_factors n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = \\<Prod>(prime_factors n)", "using assms"], ["proof (prove)\nusing this:\n  Carmichael_number n\n\ngoal (1 subgoal):\n 1. n = \\<Prod>(prime_factors n)", "by (subst squarefree_imp_prod_prime_factors_eq)\n                   (auto simp: Carmichael_number_imp_squarefree)"], ["proof (state)\nthis:\n  n = \\<Prod>(prime_factors n)\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "with pq"], ["proof (chain)\npicking this:\n  prime_factors n = {p, q}\n  p \\<noteq> q\n  n = \\<Prod>(prime_factors n)", "have n_eq: \"n = p * q\""], ["proof (prove)\nusing this:\n  prime_factors n = {p, q}\n  p \\<noteq> q\n  n = \\<Prod>(prime_factors n)\n\ngoal (1 subgoal):\n 1. n = p * q", "by simp"], ["proof (state)\nthis:\n  n = p * q\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "have \"p - 1 dvd n - 1\" and \"q - 1 dvd n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1 &&& q - 1 dvd n - 1", "using assms pq"], ["proof (prove)\nusing this:\n  Carmichael_number n\n  prime_factors n = {p, q}\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1 &&& q - 1 dvd n - 1", "unfolding Carmichael_number_iff"], ["proof (prove)\nusing this:\n  n \\<noteq> 1 \\<and>\n  \\<not> prime n \\<and>\n  squarefree n \\<and>\n  (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1)\n  prime_factors n = {p, q}\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. p - 1 dvd n - 1 &&& q - 1 dvd n - 1", "by blast+"], ["proof (state)\nthis:\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. \\<not> 3 \\<le> card (prime_factors n) \\<Longrightarrow> False", "with \\<open>prime p\\<close> \\<open>prime q\\<close> \\<open>n = p * q\\<close> \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  prime p\n  prime q\n  n = p * q\n  p \\<noteq> q\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1", "show False"], ["proof (prove)\nusing this:\n  prime p\n  prime q\n  n = p * q\n  p \\<noteq> q\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. False", "proof (induction p q rule: linorder_wlog)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "case (le p q)"], ["proof (state)\nthis:\n  p \\<le> q\n  prime p\n  prime q\n  n = p * q\n  p \\<noteq> q\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"p < q\""], ["proof (prove)\nusing this:\n  p \\<le> q\n  prime p\n  prime q\n  n = p * q\n  p \\<noteq> q\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. p < q", "by auto"], ["proof (state)\nthis:\n  p < q\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "have \"[q = 1] (mod q - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [q = 1] (mod q - 1)", "using prime_gt_1_nat[of q] \\<open>prime q\\<close>"], ["proof (prove)\nusing this:\n  prime q \\<Longrightarrow> 1 < q\n  prime q\n\ngoal (1 subgoal):\n 1. [q = 1] (mod q - 1)", "by (simp add: cong_def le_mod_geq)"], ["proof (state)\nthis:\n  [q = 1] (mod q - 1)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"[p * q - 1 = p * 1 - 1] (mod q - 1)\""], ["proof (prove)\nusing this:\n  [q = 1] (mod q - 1)\n\ngoal (1 subgoal):\n 1. [p * q - 1 = p * 1 - 1] (mod q - 1)", "using le prime_gt_1_nat[of p]"], ["proof (prove)\nusing this:\n  [q = 1] (mod q - 1)\n  p \\<le> q\n  prime p\n  prime q\n  n = p * q\n  p \\<noteq> q\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1\n  prime p \\<Longrightarrow> 1 < p\n\ngoal (1 subgoal):\n 1. [p * q - 1 = p * 1 - 1] (mod q - 1)", "by (intro cong_diff_nat cong_mult) auto"], ["proof (state)\nthis:\n  [p * q - 1 = p * 1 - 1] (mod q - 1)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"[p - 1 = n - 1] (mod q - 1)\""], ["proof (prove)\nusing this:\n  [p * q - 1 = p * 1 - 1] (mod q - 1)\n\ngoal (1 subgoal):\n 1. [p - 1 = n - 1] (mod q - 1)", "by (simp add: \\<open>n = p * q\\<close> cong_sym_eq)"], ["proof (state)\nthis:\n  [p - 1 = n - 1] (mod q - 1)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  [p - 1 = n - 1] (mod q - 1)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "have \"[n - 1 = 0] (mod q - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n - 1 = 0] (mod q - 1)", "using le"], ["proof (prove)\nusing this:\n  p \\<le> q\n  prime p\n  prime q\n  n = p * q\n  p \\<noteq> q\n  p - 1 dvd n - 1\n  q - 1 dvd n - 1\n\ngoal (1 subgoal):\n 1. [n - 1 = 0] (mod q - 1)", "by (simp add: cong_def)"], ["proof (state)\nthis:\n  [n - 1 = 0] (mod q - 1)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  [p - 1 = 0] (mod q - 1)", "have \"(p - 1) mod (q - 1) = 0\""], ["proof (prove)\nusing this:\n  [p - 1 = 0] (mod q - 1)\n\ngoal (1 subgoal):\n 1. (p - 1) mod (q - 1) = 0", "by (simp add: cong_def)"], ["proof (state)\nthis:\n  (p - 1) mod (q - 1) = 0\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (p - 1) mod (q - 1) = 0\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "have \"(p - 1) mod (q - 1) = p - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p - 1) mod (q - 1) = p - 1", "using prime_gt_1_nat[of p] \\<open>prime p\\<close> \\<open>p < q\\<close>"], ["proof (prove)\nusing this:\n  prime p \\<Longrightarrow> 1 < p\n  prime p\n  p < q\n\ngoal (1 subgoal):\n 1. (p - 1) mod (q - 1) = p - 1", "by (intro mod_less) auto"], ["proof (state)\nthis:\n  (p - 1) mod (q - 1) = p - 1\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<le> b; prime a; prime b; n = a * b; a \\<noteq> b;\n        a - 1 dvd n - 1; b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  p - 1 = 0", "show False"], ["proof (prove)\nusing this:\n  p - 1 = 0\n\ngoal (1 subgoal):\n 1. False", "using prime_gt_1_nat[of p] \\<open>prime p\\<close>"], ["proof (prove)\nusing this:\n  p - 1 = 0\n  prime p \\<Longrightarrow> 1 < p\n  prime p\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>prime b; prime a; n = b * a; b \\<noteq> a;\n                 b - 1 dvd n - 1; a - 1 dvd n - 1\\<rbrakk>\n                \\<Longrightarrow> False;\n        prime a; prime b; n = a * b; a \\<noteq> b; a - 1 dvd n - 1;\n        b - 1 dvd n - 1\\<rbrakk>\n       \\<Longrightarrow> False", "qed (simp_all add: mult.commute)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Carmichael_number_iff':\n  fixes n :: nat\n  defines \"P \\<equiv> prime_factorization n\"\n  shows \"Carmichael_number n \\<longleftrightarrow>\n           n > 1 \\<and> size P \\<noteq> 1 \\<and> (\\<forall>p\\<in>#P. count P p = 1 \\<and> p - 1 dvd n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number n =\n    (1 < n \\<and>\n     size P \\<noteq> 1 \\<and>\n     (\\<forall>p\\<in>#P. count P p = 1 \\<and> p - 1 dvd n - 1))", "unfolding Carmichael_number_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n \\<noteq> 1 \\<and>\n     \\<not> prime n \\<and>\n     squarefree n \\<and>\n     (\\<forall>p\\<in>#prime_factorization n. p - 1 dvd n - 1)) =\n    (1 < n \\<and>\n     size P \\<noteq> 1 \\<and>\n     (\\<forall>p\\<in>#P. count P p = 1 \\<and> p - 1 dvd n - 1))", "by (cases \"n = 0\") (auto simp: P_def squarefree_factorial_semiring' count_prime_factorization)"], ["", "text \\<open>\n  The smallest Carmichael number is 561, and it was found and proven so by\n  Carmichael in 1910~\\cite{carmichael1910note}.\n\\<close>"], ["", "lemma Carmichael_number_561: \"Carmichael_number 561\" (is \"Carmichael_number ?n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number 561", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Carmichael_number 561", "have [simp]: \"prime_factorization (561 :: nat) = {#3, 11, 17#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_factorization 561 = {#3, 11, 17#}", "by (rule prime_factorization_eqI) auto"], ["proof (state)\nthis:\n  prime_factorization 561 = {#3, 11, 17#}\n\ngoal (1 subgoal):\n 1. Carmichael_number 561", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Carmichael_number 561", "by (subst Carmichael_number_iff') auto"], ["proof (state)\nthis:\n  Carmichael_number 561\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}