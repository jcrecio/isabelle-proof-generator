{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic/HMLSL.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic", "problem_names": ["lemma hchop_weaken1: \" \\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<phi> \\<^bold>\\<frown> \\<^bold>\\<top>) \"", "lemma hchop_weaken2: \" \\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<frown> \\<phi>) \"", "lemma hchop_weaken: \" \\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<frown> \\<phi> \\<^bold>\\<frown> \\<^bold>\\<top>)\"", "lemma hchop_neg1:\"\\<Turnstile> \\<^bold>\\<not> (\\<phi> \\<^bold>\\<frown> \\<^bold>\\<top>) \\<^bold>\\<rightarrow> ((\\<^bold>\\<not> \\<phi>) \\<^bold>\\<frown> \\<^bold>\\<top>)\"", "lemma hchop_neg2:\"\\<Turnstile> \\<^bold>\\<not> (\\<^bold>\\<top>\\<^bold>\\<frown>\\<phi> ) \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<frown> \\<^bold>\\<not> \\<phi>)\"", "lemma hchop_disj_distr1:\"\\<Turnstile> ((\\<phi> \\<^bold>\\<frown> (\\<psi> \\<^bold>\\<or> \\<chi>)) \\<^bold>\\<leftrightarrow> ((\\<phi> \\<^bold>\\<frown> \\<psi>)\\<^bold>\\<or>(\\<phi> \\<^bold>\\<frown> \\<chi>)))\"", "lemma hchop_disj_distr2:\"\\<Turnstile> (((\\<psi> \\<^bold>\\<or> \\<chi>)\\<^bold>\\<frown>\\<phi>) \\<^bold>\\<leftrightarrow> ((\\<psi> \\<^bold>\\<frown> \\<phi>)\\<^bold>\\<or>(\\<chi> \\<^bold>\\<frown> \\<phi>)))\"", "lemma hchop_assoc:\"\\<Turnstile>\\<phi> \\<^bold>\\<frown> (\\<psi> \\<^bold>\\<frown> \\<chi>) \\<^bold>\\<leftrightarrow> (\\<phi> \\<^bold>\\<frown> \\<psi>) \\<^bold>\\<frown> \\<chi>\"", "lemma v_chop_weaken1:\"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> (\\<phi> \\<^bold>\\<smile> \\<^bold>\\<top>))\"", "lemma v_chop_weaken2:\"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<smile> \\<phi>))\"", "lemma v_chop_assoc:\"\\<Turnstile>(\\<phi> \\<^bold>\\<smile> (\\<psi> \\<^bold>\\<smile> \\<chi>)) \\<^bold>\\<leftrightarrow> ((\\<phi> \\<^bold>\\<smile> \\<psi>) \\<^bold>\\<smile> \\<chi>)\"", "lemma vchop_disj_distr1:\"\\<Turnstile> ((\\<phi> \\<^bold>\\<smile> (\\<psi> \\<^bold>\\<or> \\<chi>)) \\<^bold>\\<leftrightarrow> ((\\<phi> \\<^bold>\\<smile> \\<psi>)\\<^bold>\\<or>(\\<phi> \\<^bold>\\<smile> \\<chi>)))\"", "lemma vchop_disj_distr2:\"\\<Turnstile> (((\\<psi> \\<^bold>\\<or> \\<chi>) \\<^bold>\\<smile> \\<phi> ) \\<^bold>\\<leftrightarrow> ((\\<psi> \\<^bold>\\<smile> \\<phi>)\\<^bold>\\<or>(\\<chi> \\<^bold>\\<smile> \\<phi>)))\"", "lemma at_exists :\"\\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<exists> c. \\<^bold>@c \\<phi>)\"", "lemma at_conj_distr:\"\\<Turnstile>(\\<^bold>@c ( \\<phi> \\<^bold>\\<and> \\<psi>)) \\<^bold>\\<leftrightarrow> ((\\<^bold>@c \\<phi>) \\<^bold>\\<and> (\\<^bold>@c \\<psi>))\"", "lemma at_disj_dist:\"\\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<or> \\<psi>)) \\<^bold>\\<leftrightarrow> ((\\<^bold>@c \\<phi> )  \\<^bold>\\<or> ( \\<^bold>@c \\<psi> ))\"", "lemma at_hchop_dist1:\"\\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>)) \\<^bold>\\<rightarrow> ((\\<^bold>@c \\<phi>) \\<^bold>\\<frown> (\\<^bold>@c \\<psi>))\"", "lemma at_hchop_dist2:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<frown> (\\<^bold>@c \\<psi>)) \\<^bold>\\<rightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>))  \"", "lemma at_hchop_dist:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<frown>  (\\<^bold>@c \\<psi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>))  \"", "lemma at_vchop_dist1:\"\\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>)) \\<^bold>\\<rightarrow> ( (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>))\"", "lemma at_vchop_dist2:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>)) \\<^bold>\\<rightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>))  \"", "lemma at_vchop_dist:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>))  \"", "lemma at_eq:\"\\<Turnstile>(\\<^bold>@e c \\<^bold>= d) \\<^bold>\\<leftrightarrow> (c \\<^bold>= d)\"", "lemma at_neg1:\"\\<Turnstile>(\\<^bold>@c \\<^bold>\\<not> \\<phi>) \\<^bold>\\<rightarrow> \\<^bold>\\<not> (\\<^bold>@c \\<phi>)\"", "lemma at_neg2:\"\\<Turnstile>\\<^bold>\\<not> (\\<^bold>@c \\<phi> ) \\<^bold>\\<rightarrow> ( (\\<^bold>@c \\<^bold>\\<not> \\<phi>))\"", "lemma at_neg :\"\\<Turnstile>(\\<^bold>@c( \\<^bold>\\<not> \\<phi>)) \\<^bold>\\<leftrightarrow> \\<^bold>\\<not> (\\<^bold>@c \\<phi>)\"", "lemma at_neg':\"ts,v \\<Turnstile> \\<^bold>\\<not> (\\<^bold>@c \\<phi>) \\<^bold>\\<leftrightarrow> (\\<^bold>@c( \\<^bold>\\<not> \\<phi>))\"", "lemma at_neg_neg1:\"\\<Turnstile>(\\<^bold>@c \\<phi>) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>@c \\<^bold>\\<not> \\<phi>)\"", "lemma at_neg_neg2:\"\\<Turnstile>\\<^bold>\\<not>(\\<^bold>@c \\<^bold>\\<not> \\<phi>) \\<^bold>\\<rightarrow> (\\<^bold>@c  \\<phi>)\"", "lemma at_neg_neg:\"\\<Turnstile> (\\<^bold>@c \\<phi>) \\<^bold>\\<leftrightarrow> \\<^bold>\\<not>(\\<^bold>@c \\<^bold>\\<not> \\<phi>)\"", "lemma globally_all_iff:\"\\<Turnstile> (\\<^bold>G(\\<^bold>\\<forall>c. \\<phi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>\\<forall>c.( \\<^bold>G \\<phi>))\"", "lemma globally_all_iff':\"ts,v\\<Turnstile> (\\<^bold>G(\\<^bold>\\<forall>c. \\<phi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>\\<forall>c.( \\<^bold>G \\<phi>))\"", "lemma globally_refl:\" \\<Turnstile>(\\<^bold>G \\<phi>) \\<^bold>\\<rightarrow> \\<phi>\"", "lemma globally_4: \"\\<Turnstile> (\\<^bold>G  \\<phi>) \\<^bold>\\<rightarrow> \\<^bold>G \\<^bold>G \\<phi>\"", "lemma spatial_weaken: \"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> \\<^bold>\\<langle>\\<phi>\\<^bold>\\<rangle>)\"", "lemma spatial_weaken2:\"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> \\<psi>) \\<^bold>\\<rightarrow> (\\<phi> \\<^bold>\\<rightarrow> \\<^bold>\\<langle>\\<psi>\\<^bold>\\<rangle>)\"", "lemma somewhere_distr: \"\\<Turnstile> \\<^bold>\\<langle>\\<phi>\\<^bold>\\<or>\\<psi>\\<^bold>\\<rangle> \\<^bold>\\<leftrightarrow> \\<^bold>\\<langle>\\<phi>\\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle>\\<psi>\\<^bold>\\<rangle>\"", "lemma somewhere_and:\"\\<Turnstile> \\<^bold>\\<langle>\\<phi> \\<^bold>\\<and> \\<psi>\\<^bold>\\<rangle> \\<^bold>\\<rightarrow>  \\<^bold>\\<langle>\\<phi>\\<^bold>\\<rangle> \\<^bold>\\<and> \\<^bold>\\<langle>\\<psi>\\<^bold>\\<rangle>\"", "lemma somewhere_and_or_distr :\"\\<Turnstile>(\\<^bold>\\<langle> \\<chi> \\<^bold>\\<and> (\\<phi> \\<^bold>\\<or> \\<psi>) \\<^bold>\\<rangle> \\<^bold>\\<leftrightarrow> \\<^bold>\\<langle> \\<chi> \\<^bold>\\<and>  \\<phi> \\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle> \\<chi> \\<^bold>\\<and> \\<psi> \\<^bold>\\<rangle>)\"", "lemma width_add1:\"\\<Turnstile>((\\<^bold>\\<omega> = x) \\<^bold>\\<smile> (\\<^bold>\\<omega> = y) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = x+y)\"", "lemma width_add2:\"\\<Turnstile>((\\<^bold>\\<omega> = x+y) \\<^bold>\\<rightarrow>  (\\<^bold>\\<omega> = x) \\<^bold>\\<smile> \\<^bold>\\<omega> = y)\"", "lemma width_hchop_stable: \"\\<Turnstile>((\\<^bold>\\<omega> = x) \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<omega> = x) \\<^bold>\\<frown> (\\<^bold>\\<omega>=x)))\"", "lemma length_geq_zero:\"\\<Turnstile> (\\<^bold>\\<l> \\<ge> 0)\"", "lemma length_split: \"\\<Turnstile>((\\<^bold>\\<l> > 0) \\<^bold>\\<rightarrow> (\\<^bold>\\<l> > 0) \\<^bold>\\<frown> (\\<^bold>\\<l> > 0))\"", "lemma length_meld: \"\\<Turnstile>((\\<^bold>\\<l> > 0) \\<^bold>\\<frown> (\\<^bold>\\<l> > 0) \\<^bold>\\<rightarrow> (\\<^bold>\\<l> > 0))\"", "lemma length_dense:\"\\<Turnstile>((\\<^bold>\\<l> > 0) \\<^bold>\\<leftrightarrow> (\\<^bold>\\<l> > 0) \\<^bold>\\<frown> (\\<^bold>\\<l> > 0))\"", "lemma length_add1:\"\\<Turnstile>((\\<^bold>\\<l>=x) \\<^bold>\\<frown> (\\<^bold>\\<l>= y)) \\<^bold>\\<rightarrow> (\\<^bold>\\<l>= x+y)\"", "lemma length_add2:\"\\<Turnstile> (x \\<^bold>\\<ge> 0 \\<^bold>\\<and> y \\<^bold>\\<ge> 0) \\<^bold>\\<rightarrow> ( (\\<^bold>\\<l>=x+y) \\<^bold>\\<rightarrow> ((\\<^bold>\\<l>=x) \\<^bold>\\<frown> (\\<^bold>\\<l>=y)))\"", "lemma length_add:\"\\<Turnstile> (x \\<^bold>\\<ge> 0 \\<^bold>\\<and> y \\<^bold>\\<ge> 0) \\<^bold>\\<rightarrow> ( (\\<^bold>\\<l>=x+y) \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<l>=x) \\<^bold>\\<frown> (\\<^bold>\\<l>=y)))\"", "lemma length_vchop_stable:\"\\<Turnstile>(\\<^bold>\\<l> = x) \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<l> = x) \\<^bold>\\<smile> ( \\<^bold>\\<l> = x))\"", "lemma res_ge_zero:\"\\<Turnstile>(re(c) \\<^bold>\\<rightarrow> \\<^bold>\\<l>>0)\"", "lemma clm_ge_zero:\"\\<Turnstile>(cl(c) \\<^bold>\\<rightarrow> \\<^bold>\\<l>>0)\"", "lemma free_ge_zero:\"\\<Turnstile>free \\<^bold>\\<rightarrow> \\<^bold>\\<l>>0\"", "lemma width_res:\"\\<Turnstile>(re(c) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 1)\"", "lemma width_clm:\"\\<Turnstile>(cl(c) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 1)\"", "lemma width_free:\"\\<Turnstile>(free \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 1)\"", "lemma width_somewhere_res:\"\\<Turnstile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<rightarrow> (\\<^bold>\\<omega> \\<ge> 1)\"", "lemma clm_disj_res:\"\\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(c) \\<^bold>\\<rangle>\"", "lemma width_ge:\"\\<Turnstile> (\\<^bold>\\<omega>> 0) \\<^bold>\\<rightarrow> (\\<^bold>\\<exists> x. (\\<^bold>\\<omega> = x) \\<^bold>\\<and> (x \\<^bold>> 0))\"", "lemma two_res_width: \"\\<Turnstile>((re(c) \\<^bold>\\<smile> re(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 2)\"", "lemma res_at_most_two:\"\\<Turnstile>\\<^bold>\\<not> (re(c) \\<^bold>\\<smile>  re(c)  \\<^bold>\\<smile>  re(c) )\"", "lemma res_at_most_two2:\"\\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(c) \\<^bold>\\<smile>  re(c)  \\<^bold>\\<smile>  re(c)\\<^bold>\\<rangle>\"", "lemma res_at_most_somewhere:\"\\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \"", "lemma res_adj:\"\\<Turnstile>\\<^bold>\\<not>  (re(c) \\<^bold>\\<smile> (\\<^bold>\\<omega> > 0) \\<^bold>\\<smile> re(c)) \"", "lemma clm_sing:\"\\<Turnstile>\\<^bold>\\<not>  (cl(c) \\<^bold>\\<smile> cl(c)) \"", "lemma clm_sing_somewhere:\"\\<Turnstile>\\<^bold>\\<not>  \\<^bold>\\<langle>cl(c) \\<^bold>\\<smile> cl(c)\\<^bold>\\<rangle> \"", "lemma clm_sing_not_interrupted:\"\\<Turnstile> \\<^bold>\\<not>(cl(c) \\<^bold>\\<smile> \\<^bold>\\<top> \\<^bold>\\<smile> cl(c))\"", "lemma clm_sing_somewhere2:\"\\<Turnstile>\\<^bold>\\<not>  (\\<^bold>\\<top> \\<^bold>\\<smile> cl(c) \\<^bold>\\<smile> \\<^bold>\\<top> \\<^bold>\\<smile>  cl(c) \\<^bold>\\<smile> \\<^bold>\\<top>) \"", "lemma clm_sing_somewhere3:\"\\<Turnstile>\\<^bold>\\<not>  \\<^bold>\\<langle>(\\<^bold>\\<top> \\<^bold>\\<smile> cl(c) \\<^bold>\\<smile> \\<^bold>\\<top> \\<^bold>\\<smile>  cl(c) \\<^bold>\\<smile> \\<^bold>\\<top>)\\<^bold>\\<rangle> \"", "lemma clm_at_most_somewhere:\"\\<Turnstile>\\<^bold>\\<not> (\\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle>)\"", "lemma res_decompose: \"\\<Turnstile>(re(c)  \\<^bold>\\<rightarrow> re(c) \\<^bold>\\<frown> re(c))\"", "lemma res_compose: \"\\<Turnstile>(re(c) \\<^bold>\\<frown> re(c)  \\<^bold>\\<rightarrow> re(c))\"", "lemma res_dense:\"\\<Turnstile>re(c) \\<^bold>\\<leftrightarrow> re(c) \\<^bold>\\<frown> re(c)\"", "lemma res_continuous :\"\\<Turnstile>(re(c)) \\<^bold>\\<rightarrow> (\\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown> ( \\<^bold>\\<not>re(c) \\<^bold>\\<and> \\<^bold>\\<l> > 0) \\<^bold>\\<frown> \\<^bold>\\<top>))\"", "lemma no_clm_before_res:\"\\<Turnstile>\\<^bold>\\<not>(cl(c) \\<^bold>\\<frown> re(c))\"", "lemma no_clm_before_res2:\"\\<Turnstile>\\<^bold>\\<not> (cl(c) \\<^bold>\\<frown> \\<^bold>\\<top> \\<^bold>\\<frown> re(c))\"", "lemma clm_decompose: \"\\<Turnstile>(cl(c)  \\<^bold>\\<rightarrow> cl(c) \\<^bold>\\<frown> cl(c))\"", "lemma clm_compose: \"\\<Turnstile>(cl(c) \\<^bold>\\<frown> cl(c)  \\<^bold>\\<rightarrow> cl(c))\"", "lemma clm_dense:\"\\<Turnstile>cl(c) \\<^bold>\\<leftrightarrow> cl(c) \\<^bold>\\<frown> cl(c)\"", "lemma clm_continuous :\"\\<Turnstile>(cl(c)) \\<^bold>\\<rightarrow> (\\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( \\<^bold>\\<not>cl(c) \\<^bold>\\<and> \\<^bold>\\<l> > 0) \\<^bold>\\<frown> \\<^bold>\\<top>))\"", "lemma res_not_free: \"\\<Turnstile>(\\<^bold>\\<exists> c. re(c) \\<^bold>\\<rightarrow> \\<^bold>\\<not>free)\"", "lemma clm_not_free: \"\\<Turnstile>(\\<^bold>\\<exists> c. cl(c) \\<^bold>\\<rightarrow> \\<^bold>\\<not>free)\"", "lemma free_no_res:\"\\<Turnstile>(free \\<^bold>\\<rightarrow>  \\<^bold>\\<not>(\\<^bold>\\<exists> c. re(c)))\"", "lemma free_no_clm:\"\\<Turnstile>(free \\<^bold>\\<rightarrow>  \\<^bold>\\<not>(\\<^bold>\\<exists> c. cl(c)))\"", "lemma free_decompose:\"\\<Turnstile>free \\<^bold>\\<rightarrow> ( free \\<^bold>\\<frown> free)\"", "lemma free_compose:\"\\<Turnstile>(free \\<^bold>\\<frown> free) \\<^bold>\\<rightarrow> free\"", "lemma free_dense:\"\\<Turnstile>free \\<^bold>\\<leftrightarrow> (free \\<^bold>\\<frown> free)\"", "lemma free_dense2:\"\\<Turnstile>free \\<^bold>\\<rightarrow> \\<^bold>\\<top> \\<^bold>\\<frown> free \\<^bold>\\<frown> \\<^bold>\\<top>\"", "lemma no_cars_means_free:\n  \"\\<Turnstile>((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>))) \\<^bold>\\<rightarrow> free\"", "lemma free_means_no_cars:\n  \"\\<Turnstile>free \\<^bold>\\<rightarrow> ((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\"", "lemma free_eq_no_cars:\n  \"\\<Turnstile>free \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\"", "lemma free_nowhere_res:\"\\<Turnstile>free \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<top> \\<^bold>\\<frown> (re(c)) \\<^bold>\\<frown> \\<^bold>\\<top>)\"", "lemma two_res_not_res: \"\\<Turnstile>((re(c) \\<^bold>\\<smile> re(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<not>re(c))\"", "lemma two_clm_width: \"\\<Turnstile>((cl(c) \\<^bold>\\<smile> cl(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 2)\"", "lemma two_res_no_car: \"\\<Turnstile>(re(c) \\<^bold>\\<smile> re(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<exists> c. ( cl(c) \\<^bold>\\<or> re(c)) )\"", "lemma two_lanes_no_car:\"\\<Turnstile>(\\<^bold>\\<not> \\<^bold>\\<omega>= 1) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<exists> c.(cl(c) \\<^bold>\\<or> re(c)))\"", "lemma empty_no_car:\"\\<Turnstile>( \\<^bold>\\<l> = 0) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<exists> c.(cl(c) \\<^bold>\\<or> re(c)))\"", "lemma car_one_lane_non_empty: \"\\<Turnstile>(\\<^bold>\\<exists> c.(cl(c) \\<^bold>\\<or> re(c))) \\<^bold>\\<rightarrow> ((\\<^bold>\\<omega> =1) \\<^bold>\\<and> (\\<^bold>\\<l> > 0))\"", "lemma one_lane_notfree:\n  \"\\<Turnstile>(\\<^bold>\\<omega> =1) \\<^bold>\\<and>(\\<^bold>\\<l>> 0) \\<^bold>\\<and> (\\<^bold>\\<not> free) \\<^bold>\\<rightarrow> ( (\\<^bold>\\<top> \\<^bold>\\<frown> (\\<^bold>\\<exists> c. (re(c) \\<^bold>\\<or> cl(c))) \\<^bold>\\<frown> \\<^bold>\\<top> ))\"", "lemma one_lane_empty_or_car:\n  \"\\<Turnstile>(\\<^bold>\\<omega> =1) \\<^bold>\\<and>(\\<^bold>\\<l>> 0) \\<^bold>\\<rightarrow> (free \\<^bold>\\<or> (\\<^bold>\\<top> \\<^bold>\\<frown> (\\<^bold>\\<exists> c. (re(c) \\<^bold>\\<or> cl(c))) \\<^bold>\\<frown> \\<^bold>\\<top> ))\""], "translations": [["", "lemma hchop_weaken1: \" \\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<phi> \\<^bold>\\<frown> \\<^bold>\\<top>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va\\<parallel>u \\<and> \\<phi> ts va \\<and> True)", "using horizontal_chop_empty_right"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=v\\<parallel>u\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va\\<parallel>u \\<and> \\<phi> ts va \\<and> True)", "by fastforce"], ["", "lemma hchop_weaken2: \" \\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<frown> \\<phi>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va\\<parallel>u \\<and> True \\<and> \\<phi> ts u)", "using horizontal_chop_empty_left"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=u\\<parallel>v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va\\<parallel>u \\<and> True \\<and> \\<phi> ts u)", "by fastforce"], ["", "lemma hchop_weaken: \" \\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<frown> \\<phi> \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua. u=v\\<parallel>ua \\<and> \\<phi> ts v \\<and> True))", "using hchop_weaken1 hchop_weaken2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     ?\\<phi> ts v \\<longrightarrow>\n     (\\<exists>va u. v=va\\<parallel>u \\<and> ?\\<phi> ts va \\<and> True)\n  \\<forall>ts v.\n     ?\\<phi> ts v \\<longrightarrow>\n     (\\<exists>va u. v=va\\<parallel>u \\<and> True \\<and> ?\\<phi> ts u)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua. u=v\\<parallel>ua \\<and> \\<phi> ts v \\<and> True))", "by metis"], ["", "lemma hchop_neg1:\"\\<Turnstile> \\<^bold>\\<not> (\\<phi> \\<^bold>\\<frown> \\<^bold>\\<top>) \\<^bold>\\<rightarrow> ((\\<^bold>\\<not> \\<phi>) \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<phi> ts va \\<and> True) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and> \\<not> \\<phi> ts va \\<and> True)", "using horizontal_chop1"], ["proof (prove)\nusing this:\n  \\<exists>u w. ?v=u\\<parallel>w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<phi> ts va \\<and> True) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and> \\<not> \\<phi> ts va \\<and> True)", "by fastforce"], ["", "lemma hchop_neg2:\"\\<Turnstile> \\<^bold>\\<not> (\\<^bold>\\<top>\\<^bold>\\<frown>\\<phi> ) \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<frown> \\<^bold>\\<not> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and> \\<phi> ts u) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and> True \\<and> \\<not> \\<phi> ts u)", "using horizontal_chop1"], ["proof (prove)\nusing this:\n  \\<exists>u w. ?v=u\\<parallel>w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and> \\<phi> ts u) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and> True \\<and> \\<not> \\<phi> ts u)", "by fastforce"], ["", "lemma hchop_disj_distr1:\"\\<Turnstile> ((\\<phi> \\<^bold>\\<frown> (\\<psi> \\<^bold>\\<or> \\<chi>)) \\<^bold>\\<leftrightarrow> ((\\<phi> \\<^bold>\\<frown> \\<psi>)\\<^bold>\\<or>(\\<phi> \\<^bold>\\<frown> \\<chi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<phi> ts va \\<and> (\\<psi> ts u \\<or> \\<chi> ts u)) =\n       ((\\<exists>va u.\n            v=va\\<parallel>u \\<and> \\<phi> ts va \\<and> \\<psi> ts u) \\<or>\n        (\\<exists>va u.\n            v=va\\<parallel>u \\<and> \\<phi> ts va \\<and> \\<chi> ts u))", "by blast"], ["", "lemma hchop_disj_distr2:\"\\<Turnstile> (((\\<psi> \\<^bold>\\<or> \\<chi>)\\<^bold>\\<frown>\\<phi>) \\<^bold>\\<leftrightarrow> ((\\<psi> \\<^bold>\\<frown> \\<phi>)\\<^bold>\\<or>(\\<chi> \\<^bold>\\<frown> \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<psi> ts va \\<or> \\<chi> ts va) \\<and> \\<phi> ts u) =\n       ((\\<exists>va u.\n            v=va\\<parallel>u \\<and> \\<psi> ts va \\<and> \\<phi> ts u) \\<or>\n        (\\<exists>va u.\n            v=va\\<parallel>u \\<and> \\<chi> ts va \\<and> \\<phi> ts u))", "by blast"], ["", "lemma hchop_assoc:\"\\<Turnstile>\\<phi> \\<^bold>\\<frown> (\\<psi> \\<^bold>\\<frown> \\<chi>) \\<^bold>\\<leftrightarrow> (\\<phi> \\<^bold>\\<frown> \\<psi>) \\<^bold>\\<frown> \\<chi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<phi> ts va \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and> \\<psi> ts v \\<and> \\<chi> ts ua)) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<exists>v u.\n               va=v\\<parallel>u \\<and>\n               \\<phi> ts v \\<and> \\<psi> ts u) \\<and>\n           \\<chi> ts u)", "using horizontal_chop_assoc1 horizontal_chop_assoc2"], ["proof (prove)\nusing this:\n  ?v=?v1.0\\<parallel>?v2.0 \\<and>\n  ?v2.0=?v3.0\\<parallel>?v4.0 \\<longrightarrow>\n  (\\<exists>v'. ?v=v'\\<parallel>?v4.0 \\<and> v'=?v1.0\\<parallel>?v3.0)\n  ?v=?v1.0\\<parallel>?v2.0 \\<and>\n  ?v1.0=?v3.0\\<parallel>?v4.0 \\<longrightarrow>\n  (\\<exists>v'. ?v=?v3.0\\<parallel>v' \\<and> v'=?v4.0\\<parallel>?v2.0)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<phi> ts va \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and> \\<psi> ts v \\<and> \\<chi> ts ua)) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<exists>v u.\n               va=v\\<parallel>u \\<and>\n               \\<phi> ts v \\<and> \\<psi> ts u) \\<and>\n           \\<chi> ts u)", "by fastforce"], ["", "lemma v_chop_weaken1:\"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> (\\<phi> \\<^bold>\\<smile> \\<^bold>\\<top>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va--u \\<and> \\<phi> ts va \\<and> True)", "using vertical_chop_empty_down"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=v--u\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va--u \\<and> \\<phi> ts va \\<and> True)", "by fastforce"], ["", "lemma v_chop_weaken2:\"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<top> \\<^bold>\\<smile> \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va--u \\<and> True \\<and> \\<phi> ts u)", "using vertical_chop_empty_up"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=u--v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u. v=va--u \\<and> True \\<and> \\<phi> ts u)", "by fastforce"], ["", "lemma v_chop_assoc:\"\\<Turnstile>(\\<phi> \\<^bold>\\<smile> (\\<psi> \\<^bold>\\<smile> \\<chi>)) \\<^bold>\\<leftrightarrow> ((\\<phi> \\<^bold>\\<smile> \\<psi>) \\<^bold>\\<smile> \\<chi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           \\<phi> ts va \\<and>\n           (\\<exists>v ua.\n               u=v--ua \\<and> \\<psi> ts v \\<and> \\<chi> ts ua)) =\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<exists>v u.\n               va=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u) \\<and>\n           \\<chi> ts u)", "using vertical_chop_assoc1 vertical_chop_assoc2"], ["proof (prove)\nusing this:\n  ?v=?v1.0--?v2.0 \\<and> ?v2.0=?v3.0--?v4.0 \\<longrightarrow>\n  (\\<exists>v'. ?v=v'--?v4.0 \\<and> v'=?v1.0--?v3.0)\n  ?v=?v1.0--?v2.0 \\<and> ?v1.0=?v3.0--?v4.0 \\<longrightarrow>\n  (\\<exists>v'. ?v=?v3.0--v' \\<and> v'=?v4.0--?v2.0)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           \\<phi> ts va \\<and>\n           (\\<exists>v ua.\n               u=v--ua \\<and> \\<psi> ts v \\<and> \\<chi> ts ua)) =\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<exists>v u.\n               va=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u) \\<and>\n           \\<chi> ts u)", "by fastforce"], ["", "lemma vchop_disj_distr1:\"\\<Turnstile> ((\\<phi> \\<^bold>\\<smile> (\\<psi> \\<^bold>\\<or> \\<chi>)) \\<^bold>\\<leftrightarrow> ((\\<phi> \\<^bold>\\<smile> \\<psi>)\\<^bold>\\<or>(\\<phi> \\<^bold>\\<smile> \\<chi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           \\<phi> ts va \\<and> (\\<psi> ts u \\<or> \\<chi> ts u)) =\n       ((\\<exists>va u.\n            v=va--u \\<and> \\<phi> ts va \\<and> \\<psi> ts u) \\<or>\n        (\\<exists>va u. v=va--u \\<and> \\<phi> ts va \\<and> \\<chi> ts u))", "by blast"], ["", "lemma vchop_disj_distr2:\"\\<Turnstile> (((\\<psi> \\<^bold>\\<or> \\<chi>) \\<^bold>\\<smile> \\<phi> ) \\<^bold>\\<leftrightarrow> ((\\<psi> \\<^bold>\\<smile> \\<phi>)\\<^bold>\\<or>(\\<chi> \\<^bold>\\<smile> \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<psi> ts va \\<or> \\<chi> ts va) \\<and> \\<phi> ts u) =\n       ((\\<exists>va u.\n            v=va--u \\<and> \\<psi> ts va \\<and> \\<phi> ts u) \\<or>\n        (\\<exists>va u. v=va--u \\<and> \\<chi> ts va \\<and> \\<phi> ts u))", "by blast"], ["", "lemma at_exists :\"\\<Turnstile> \\<phi> \\<^bold>\\<rightarrow> (\\<^bold>\\<exists> c. \\<^bold>@c \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v')", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<phi> ts v \\<Longrightarrow>\n       \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<phi> ts v \\<Longrightarrow>\n       \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'", "assume assm:\"ts,v \\<Turnstile>\\<phi>\""], ["proof (state)\nthis:\n  \\<phi> ts v\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<phi> ts v \\<Longrightarrow>\n       \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'", "obtain d where d_def:\"d=own v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d. d = own v \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  d = own v\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<phi> ts v \\<Longrightarrow>\n       \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'", "then"], ["proof (chain)\npicking this:\n  d = own v", "have \"ts,v \\<Turnstile> \\<^bold>@d \\<phi>\""], ["proof (prove)\nusing this:\n  d = own v\n\ngoal (1 subgoal):\n 1. \\<forall>v'. v = d > v' \\<longrightarrow> \\<phi> ts v'", "using assm switch_refl switch_unique"], ["proof (prove)\nusing this:\n  d = own v\n  \\<phi> ts v\n  ?v = own ?v > ?v\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'. v = d > v' \\<longrightarrow> \\<phi> ts v'", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>v'. v = d > v' \\<longrightarrow> \\<phi> ts v'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<phi> ts v \\<Longrightarrow>\n       \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'", "thus \"ts,v \\<Turnstile> (\\<^bold>\\<exists> c. \\<^bold>@c \\<phi>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'. v = d > v' \\<longrightarrow> \\<phi> ts v'\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'", ".."], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>v'. v = x > v' \\<longrightarrow> \\<phi> ts v'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma at_conj_distr:\"\\<Turnstile>(\\<^bold>@c ( \\<phi> \\<^bold>\\<and> \\<psi>)) \\<^bold>\\<leftrightarrow> ((\\<^bold>@c \\<phi>) \\<^bold>\\<and> (\\<^bold>@c \\<psi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow> \\<phi> ts v' \\<and> \\<psi> ts v') =\n       ((\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n        (\\<forall>v'. v = c > v' \\<longrightarrow> \\<psi> ts v'))", "using switch_unique"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow> \\<phi> ts v' \\<and> \\<psi> ts v') =\n       ((\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n        (\\<forall>v'. v = c > v' \\<longrightarrow> \\<psi> ts v'))", "by blast"], ["", "lemma at_disj_dist:\"\\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<or> \\<psi>)) \\<^bold>\\<leftrightarrow> ((\\<^bold>@c \\<phi> )  \\<^bold>\\<or> ( \\<^bold>@c \\<psi> ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow> \\<phi> ts v' \\<or> \\<psi> ts v') =\n       ((\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v') \\<or>\n        (\\<forall>v'. v = c > v' \\<longrightarrow> \\<psi> ts v'))", "using switch_unique"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow> \\<phi> ts v' \\<or> \\<psi> ts v') =\n       ((\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v') \\<or>\n        (\\<forall>v'. v = c > v' \\<longrightarrow> \\<psi> ts v'))", "by fastforce"], ["", "lemma at_hchop_dist1:\"\\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>)) \\<^bold>\\<rightarrow> ((\\<^bold>@c \\<phi>) \\<^bold>\\<frown> (\\<^bold>@c \\<psi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u.\n               v'=v\\<parallel>u \\<and>\n               \\<phi> ts v \\<and> \\<psi> ts u)) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v'))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "assume assm:\"ts, v \\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>))\""], ["proof (state)\nthis:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     (\\<exists>v u. v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "obtain v' where v':\"v=c>v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v'. v = c > v' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>v'. v = c > v' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  v = c > v'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "with assm"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     (\\<exists>v u. v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u)\n  v = c > v'", "obtain v1' and v2'\n    where chop:\"(v'=v1'\\<parallel>v2') \\<and> (ts,v1' \\<Turnstile> \\<phi>) \\<and> (ts,v2'\\<Turnstile>\\<psi>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     (\\<exists>v u. v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u)\n  v = c > v'\n\ngoal (1 subgoal):\n 1. (\\<And>v1' v2'.\n        v'=v1'\\<parallel>v2' \\<and>\n        \\<phi> ts v1' \\<and> \\<psi> ts v2' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v'=v1'\\<parallel>v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "from chop and v'"], ["proof (chain)\npicking this:\n  v'=v1'\\<parallel>v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n  v = c > v'", "obtain v1 and v2 \n    where origin:\"(v1=c>v1') \\<and> (v2=c>v2') \\<and> (v=v1\\<parallel>v2)\""], ["proof (prove)\nusing this:\n  v'=v1'\\<parallel>v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n  v = c > v'\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v1 = c > v1' \\<and>\n        v2 = c > v2' \\<and> v=v1\\<parallel>v2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_hchop2"], ["proof (prove)\nusing this:\n  v'=v1'\\<parallel>v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n  v = c > v'\n  ?v'=?v1'\\<parallel>?v2' \\<and> ?v = ?c > ?v' \\<longrightarrow>\n  (\\<exists>v1 v2.\n      v1 = ?c > ?v1' \\<and> v2 = ?c > ?v2' \\<and> ?v=v1\\<parallel>v2)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v1 = c > v1' \\<and>\n        v2 = c > v2' \\<and> v=v1\\<parallel>v2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1\\<parallel>v2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "hence v1:\"ts,v1 \\<Turnstile> (\\<^bold>@c \\<phi>)\" and v2:\"ts,v2 \\<Turnstile> (\\<^bold>@c \\<psi>)\""], ["proof (prove)\nusing this:\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1\\<parallel>v2\n\ngoal (1 subgoal):\n 1. \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v' &&&\n    \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'", "using switch_unique chop"], ["proof (prove)\nusing this:\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1\\<parallel>v2\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n  v'=v1'\\<parallel>v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n\ngoal (1 subgoal):\n 1. \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v' &&&\n    \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v'\n  \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "from v1 and v2 and origin"], ["proof (chain)\npicking this:\n  \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v'\n  \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1\\<parallel>v2", "show \"ts,v \\<Turnstile>(\\<^bold>@c \\<phi>) \\<^bold>\\<frown> (\\<^bold>@c \\<psi>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v'\n  \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1\\<parallel>v2\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n       (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n     (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma at_hchop_dist2:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<frown> (\\<^bold>@c \\<psi>)) \\<^bold>\\<rightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>))  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'.\n               u = c > v' \\<longrightarrow> \\<psi> ts v')) \\<longrightarrow>\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u.\n               v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "using switch_unique switch_hchop1 switch_def"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n  ?v=?v1.0\\<parallel>?v2.0 \\<and> ?v = ?c > ?v' \\<longrightarrow>\n  (\\<exists>v1' v2'.\n      ?v1.0 = ?c > v1' \\<and> ?v2.0 = ?c > v2' \\<and> ?v'=v1'\\<parallel>v2')\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'.\n               u = c > v' \\<longrightarrow> \\<psi> ts v')) \\<longrightarrow>\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u.\n               v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "by metis"], ["", "lemma at_hchop_dist:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<frown>  (\\<^bold>@c \\<psi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<frown> \\<psi>))  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')) =\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u.\n               v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "using at_hchop_dist1 at_hchop_dist2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow>\n         (\\<exists>v u.\n             v'=v\\<parallel>u \\<and>\n             ?\\<phi> ts v \\<and> ?\\<psi> ts u)) \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (\\<forall>v'. va = ?c > v' \\<longrightarrow> ?\\<phi> ts v') \\<and>\n         (\\<forall>v'. u = ?c > v' \\<longrightarrow> ?\\<psi> ts v'))\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (\\<forall>v'. va = ?c > v' \\<longrightarrow> ?\\<phi> ts v') \\<and>\n         (\\<forall>v'.\n             u = ?c > v' \\<longrightarrow> ?\\<psi> ts v')) \\<longrightarrow>\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow>\n         (\\<exists>v u.\n             v'=v\\<parallel>u \\<and> ?\\<phi> ts v \\<and> ?\\<psi> ts u))\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')) =\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u.\n               v'=v\\<parallel>u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "by blast"], ["", "lemma at_vchop_dist1:\"\\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>)) \\<^bold>\\<rightarrow> ( (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u.\n               v'=v--u \\<and>\n               \\<phi> ts v \\<and> \\<psi> ts u)) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v'))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "assume assm:\"ts, v \\<Turnstile>(\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>))\""], ["proof (state)\nthis:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "obtain v' where v':\"v=c>v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v'. v = c > v' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>v'. v = c > v' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  v = c > v'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "with assm"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u)\n  v = c > v'", "obtain v1' and v2' \n    where chop:\"(v'=v1'--v2') \\<and> (ts,v1' \\<Turnstile> \\<phi>) \\<and> (ts,v2'\\<Turnstile>\\<psi>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u)\n  v = c > v'\n\ngoal (1 subgoal):\n 1. (\\<And>v1' v2'.\n        v'=v1'--v2' \\<and>\n        \\<phi> ts v1' \\<and> \\<psi> ts v2' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v'=v1'--v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "from chop and v'"], ["proof (chain)\npicking this:\n  v'=v1'--v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n  v = c > v'", "obtain v1 and v2 \n    where origin:\"(v1=c>v1') \\<and> (v2=c>v2') \\<and> (v=v1--v2)\""], ["proof (prove)\nusing this:\n  v'=v1'--v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n  v = c > v'\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_vchop2"], ["proof (prove)\nusing this:\n  v'=v1'--v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n  v = c > v'\n  ?v'=?v1'--?v2' \\<and> ?v = ?c > ?v' \\<longrightarrow>\n  (\\<exists>v1 v2. v1 = ?c > ?v1' \\<and> v2 = ?c > ?v2' \\<and> ?v=v1--v2)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "hence v1:\"ts,v1 \\<Turnstile> (\\<^bold>@c \\<phi>)\" and v2:\"ts,v2 \\<Turnstile> (\\<^bold>@c \\<psi>)\""], ["proof (prove)\nusing this:\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2\n\ngoal (1 subgoal):\n 1. \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v' &&&\n    \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'", "using switch_unique chop"], ["proof (prove)\nusing this:\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n  v'=v1'--v2' \\<and> \\<phi> ts v1' \\<and> \\<psi> ts v2'\n\ngoal (1 subgoal):\n 1. \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v' &&&\n    \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v'\n  \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<forall>v'.\n          v = c > v' \\<longrightarrow>\n          (\\<exists>v u.\n              v'=v--u \\<and>\n              \\<phi> ts v \\<and> \\<psi> ts u) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n          (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "from v1 and v2 and origin"], ["proof (chain)\npicking this:\n  \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v'\n  \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2", "show \"ts,v \\<Turnstile> (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'. v1 = c > v' \\<longrightarrow> \\<phi> ts v'\n  \\<forall>v'. v2 = c > v' \\<longrightarrow> \\<psi> ts v'\n  v1 = c > v1' \\<and> v2 = c > v2' \\<and> v=v1--v2\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va--u \\<and>\n       (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n       (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n     (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma at_vchop_dist2:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>)) \\<^bold>\\<rightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>))  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'.\n               u = c > v' \\<longrightarrow> \\<psi> ts v')) \\<longrightarrow>\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "using switch_unique switch_vchop1 switch_def"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n  ?v=?v1.0--?v2.0 \\<and> ?v = ?c > ?v' \\<longrightarrow>\n  (\\<exists>v1' v2'.\n      ?v1.0 = ?c > v1' \\<and> ?v2.0 = ?c > v2' \\<and> ?v'=v1'--v2')\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'.\n               u = c > v' \\<longrightarrow> \\<psi> ts v')) \\<longrightarrow>\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "by metis"], ["", "lemma at_vchop_dist:\"\\<Turnstile>( (\\<^bold>@c \\<phi>) \\<^bold>\\<smile> (\\<^bold>@c \\<psi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>@c (\\<phi> \\<^bold>\\<smile> \\<psi>))  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')) =\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "using at_vchop_dist1 at_vchop_dist2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow>\n         (\\<exists>v u.\n             v'=v--u \\<and>\n             ?\\<phi> ts v \\<and> ?\\<psi> ts u)) \\<longrightarrow>\n     (\\<exists>va u.\n         v=va--u \\<and>\n         (\\<forall>v'. va = ?c > v' \\<longrightarrow> ?\\<phi> ts v') \\<and>\n         (\\<forall>v'. u = ?c > v' \\<longrightarrow> ?\\<psi> ts v'))\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va--u \\<and>\n         (\\<forall>v'. va = ?c > v' \\<longrightarrow> ?\\<phi> ts v') \\<and>\n         (\\<forall>v'.\n             u = ?c > v' \\<longrightarrow> ?\\<psi> ts v')) \\<longrightarrow>\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow>\n         (\\<exists>v u. v'=v--u \\<and> ?\\<phi> ts v \\<and> ?\\<psi> ts u))\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (\\<forall>v'. va = c > v' \\<longrightarrow> \\<phi> ts v') \\<and>\n           (\\<forall>v'. u = c > v' \\<longrightarrow> \\<psi> ts v')) =\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           (\\<exists>v u. v'=v--u \\<and> \\<phi> ts v \\<and> \\<psi> ts u))", "by blast"], ["", "lemma at_eq:\"\\<Turnstile>(\\<^bold>@e c \\<^bold>= d) \\<^bold>\\<leftrightarrow> (c \\<^bold>= d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'. v = e > v' \\<longrightarrow> c = d) = (c = d)", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'. v = e > v' \\<longrightarrow> c = d) = (c = d)", "by (metis )"], ["", "lemma at_neg1:\"\\<Turnstile>(\\<^bold>@c \\<^bold>\\<not> \\<phi>) \\<^bold>\\<rightarrow> \\<^bold>\\<not> (\\<^bold>@c \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           \\<not> \\<phi> ts v') \\<longrightarrow>\n       \\<not> (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v')", "using switch_unique"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow>\n           \\<not> \\<phi> ts v') \\<longrightarrow>\n       \\<not> (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v')", "by (metis select_convs switch_def)"], ["", "lemma at_neg2:\"\\<Turnstile>\\<^bold>\\<not> (\\<^bold>@c \\<phi> ) \\<^bold>\\<rightarrow> ( (\\<^bold>@c \\<^bold>\\<not> \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<not> (\\<forall>v'.\n                  v = c > v' \\<longrightarrow>\n                  \\<phi> ts v') \\<longrightarrow>\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v')", "using switch_unique"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<not> (\\<forall>v'.\n                  v = c > v' \\<longrightarrow>\n                  \\<phi> ts v') \\<longrightarrow>\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v')", "by fastforce"], ["", "lemma at_neg :\"\\<Turnstile>(\\<^bold>@c( \\<^bold>\\<not> \\<phi>)) \\<^bold>\\<leftrightarrow> \\<^bold>\\<not> (\\<^bold>@c \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v') =\n       (\\<not> (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v'))", "using at_neg1 at_neg2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow>\n         \\<not> ?\\<phi> ts v') \\<longrightarrow>\n     \\<not> (\\<forall>v'. v = ?c > v' \\<longrightarrow> ?\\<phi> ts v')\n  \\<forall>ts v.\n     \\<not> (\\<forall>v'.\n                v = ?c > v' \\<longrightarrow>\n                ?\\<phi> ts v') \\<longrightarrow>\n     (\\<forall>v'. v = ?c > v' \\<longrightarrow> \\<not> ?\\<phi> ts v')\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v') =\n       (\\<not> (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v'))", "by metis"], ["", "lemma at_neg':\"ts,v \\<Turnstile> \\<^bold>\\<not> (\\<^bold>@c \\<phi>) \\<^bold>\\<leftrightarrow> (\\<^bold>@c( \\<^bold>\\<not> \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v')) =\n    (\\<forall>v'. v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v')", "using at_neg"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<forall>v'. v = ?c > v' \\<longrightarrow> \\<not> ?\\<phi> ts v') =\n     (\\<not> (\\<forall>v'. v = ?c > v' \\<longrightarrow> ?\\<phi> ts v'))\n\ngoal (1 subgoal):\n 1. (\\<not> (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v')) =\n    (\\<forall>v'. v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v')", "by simp"], ["", "lemma at_neg_neg1:\"\\<Turnstile>(\\<^bold>@c \\<phi>) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>@c \\<^bold>\\<not> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow> \\<phi> ts v') \\<longrightarrow>\n       \\<not> (\\<forall>v'.\n                  v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v')", "using switch_unique switch_def switch_refl"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n  ?v = own ?v > ?v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'.\n           v = c > v' \\<longrightarrow> \\<phi> ts v') \\<longrightarrow>\n       \\<not> (\\<forall>v'.\n                  v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v')", "by (metis select_convs switch_def)"], ["", "lemma at_neg_neg2:\"\\<Turnstile>\\<^bold>\\<not>(\\<^bold>@c \\<^bold>\\<not> \\<phi>) \\<^bold>\\<rightarrow> (\\<^bold>@c  \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<not> (\\<forall>v'.\n                  v = c > v' \\<longrightarrow>\n                  \\<not> \\<phi> ts v') \\<longrightarrow>\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v')", "using switch_unique switch_def switch_refl"], ["proof (prove)\nusing this:\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n  ?v = own ?v > ?v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<not> (\\<forall>v'.\n                  v = c > v' \\<longrightarrow>\n                  \\<not> \\<phi> ts v') \\<longrightarrow>\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v')", "by metis"], ["", "lemma at_neg_neg:\"\\<Turnstile> (\\<^bold>@c \\<phi>) \\<^bold>\\<leftrightarrow> \\<^bold>\\<not>(\\<^bold>@c \\<^bold>\\<not> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v') =\n       (\\<not> (\\<forall>v'.\n                   v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v'))", "using at_neg_neg1 at_neg_neg2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow> ?\\<phi> ts v') \\<longrightarrow>\n     \\<not> (\\<forall>v'.\n                v = ?c > v' \\<longrightarrow> \\<not> ?\\<phi> ts v')\n  \\<forall>ts v.\n     \\<not> (\\<forall>v'.\n                v = ?c > v' \\<longrightarrow>\n                \\<not> ?\\<phi> ts v') \\<longrightarrow>\n     (\\<forall>v'. v = ?c > v' \\<longrightarrow> ?\\<phi> ts v')\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>v'. v = c > v' \\<longrightarrow> \\<phi> ts v') =\n       (\\<not> (\\<forall>v'.\n                   v = c > v' \\<longrightarrow> \\<not> \\<phi> ts v'))", "by metis"], ["", "lemma globally_all_iff:\"\\<Turnstile> (\\<^bold>G(\\<^bold>\\<forall>c. \\<phi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>\\<forall>c.( \\<^bold>G \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x. \\<phi> ts' (move ts ts' v))) =\n       (\\<forall>x ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           \\<phi> ts' (move ts ts' v))", "by simp"], ["", "lemma globally_all_iff':\"ts,v\\<Turnstile> (\\<^bold>G(\\<^bold>\\<forall>c. \\<phi>)) \\<^bold>\\<leftrightarrow> (\\<^bold>\\<forall>c.( \\<^bold>G \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>ts'.\n        ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n        (\\<forall>x. \\<phi> ts' (move ts ts' v))) =\n    (\\<forall>x ts'.\n        ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n        \\<phi> ts' (move ts ts' v))", "by simp"], ["", "lemma globally_refl:\" \\<Turnstile>(\\<^bold>G \\<phi>) \\<^bold>\\<rightarrow> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           \\<phi> ts' (move ts ts' v)) \\<longrightarrow>\n       \\<phi> ts v", "using traffic.abstract.refl traffic.move_nothing"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<Rightarrow> ?ts\n  move ?ts ?ts ?v = ?v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           \\<phi> ts' (move ts ts' v)) \\<longrightarrow>\n       \\<phi> ts v", "by fastforce"], ["", "lemma globally_4: \"\\<Turnstile> (\\<^bold>G  \\<phi>) \\<^bold>\\<rightarrow> \\<^bold>G \\<^bold>G \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           \\<phi> ts' (move ts ts' v)) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>ts'a.\n               ts' \\<^bold>\\<Rightarrow> ts'a \\<longrightarrow>\n               \\<phi> ts'a (move ts' ts'a (move ts ts' v))))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' ts'a.\n       \\<lbrakk>\\<forall>ts'.\n                   ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                   \\<phi> ts' (move ts ts' v);\n        ts \\<^bold>\\<Rightarrow> ts';\n        ts' \\<^bold>\\<Rightarrow> ts'a\\<rbrakk>\n       \\<Longrightarrow> \\<phi> ts'a (move ts' ts'a (move ts ts' v))", "fix ts v ts' ts''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' ts'a.\n       \\<lbrakk>\\<forall>ts'.\n                   ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                   \\<phi> ts' (move ts ts' v);\n        ts \\<^bold>\\<Rightarrow> ts';\n        ts' \\<^bold>\\<Rightarrow> ts'a\\<rbrakk>\n       \\<Longrightarrow> \\<phi> ts'a (move ts' ts'a (move ts ts' v))", "assume 1:\"ts \\<^bold>\\<Rightarrow> ts'\" and 2:\"ts' \\<^bold>\\<Rightarrow> ts''\" and 3:\"ts,v \\<Turnstile> \\<^bold>G \\<phi>\""], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<Rightarrow> ts''\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     \\<phi> ts' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' ts'a.\n       \\<lbrakk>\\<forall>ts'.\n                   ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                   \\<phi> ts' (move ts ts' v);\n        ts \\<^bold>\\<Rightarrow> ts';\n        ts' \\<^bold>\\<Rightarrow> ts'a\\<rbrakk>\n       \\<Longrightarrow> \\<phi> ts'a (move ts' ts'a (move ts ts' v))", "from 2 and 1"], ["proof (chain)\npicking this:\n  ts' \\<^bold>\\<Rightarrow> ts''\n  ts \\<^bold>\\<Rightarrow> ts'", "have \"ts \\<^bold>\\<Rightarrow> ts''\""], ["proof (prove)\nusing this:\n  ts' \\<^bold>\\<Rightarrow> ts''\n  ts \\<^bold>\\<Rightarrow> ts'\n\ngoal (1 subgoal):\n 1. ts \\<^bold>\\<Rightarrow> ts''", "using traffic.abs_trans"], ["proof (prove)\nusing this:\n  ts' \\<^bold>\\<Rightarrow> ts''\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<lbrakk>?ts1.0 \\<^bold>\\<Rightarrow> ?ts2.0;\n   ?ts0.0 \\<^bold>\\<Rightarrow> ?ts1.0\\<rbrakk>\n  \\<Longrightarrow> ?ts0.0 \\<^bold>\\<Rightarrow> ?ts2.0\n\ngoal (1 subgoal):\n 1. ts \\<^bold>\\<Rightarrow> ts''", "by blast"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' ts'a.\n       \\<lbrakk>\\<forall>ts'.\n                   ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                   \\<phi> ts' (move ts ts' v);\n        ts \\<^bold>\\<Rightarrow> ts';\n        ts' \\<^bold>\\<Rightarrow> ts'a\\<rbrakk>\n       \\<Longrightarrow> \\<phi> ts'a (move ts' ts'a (move ts ts' v))", "moreover"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' ts'a.\n       \\<lbrakk>\\<forall>ts'.\n                   ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                   \\<phi> ts' (move ts ts' v);\n        ts \\<^bold>\\<Rightarrow> ts';\n        ts' \\<^bold>\\<Rightarrow> ts'a\\<rbrakk>\n       \\<Longrightarrow> \\<phi> ts'a (move ts' ts'a (move ts ts' v))", "from 1 and 2"], ["proof (chain)\npicking this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<Rightarrow> ts''", "have \"move ts' ts'' (move ts ts' v) = move ts ts'' v\""], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<Rightarrow> ts''\n\ngoal (1 subgoal):\n 1. move ts' ts'' (move ts ts' v) = move ts ts'' v", "using traffic.move_trans"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<Rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts' ts'' (move ts ts' v) = move ts ts'' v", "by blast"], ["proof (state)\nthis:\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' ts'a.\n       \\<lbrakk>\\<forall>ts'.\n                   ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                   \\<phi> ts' (move ts ts' v);\n        ts \\<^bold>\\<Rightarrow> ts';\n        ts' \\<^bold>\\<Rightarrow> ts'a\\<rbrakk>\n       \\<Longrightarrow> \\<phi> ts'a (move ts' ts'a (move ts ts' v))", "with 3"], ["proof (chain)\npicking this:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     \\<phi> ts' (move ts ts' v)\n  move ts' ts'' (move ts ts' v) = move ts ts'' v", "show \"ts'', move ts' ts'' (move ts ts' v)  \\<Turnstile>\\<phi>\""], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     \\<phi> ts' (move ts ts' v)\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<phi> ts'' (move ts' ts'' (move ts ts' v))", "using calculation"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     \\<phi> ts' (move ts ts' v)\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n  ts \\<^bold>\\<Rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<phi> ts'' (move ts' ts'' (move ts ts' v))", "by simp"], ["proof (state)\nthis:\n  \\<phi> ts'' (move ts' ts'' (move ts ts' v))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma spatial_weaken: \"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> \\<^bold>\\<langle>\\<phi>\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and> \\<phi> ts v \\<and> True)) \\<and>\n               True))", "using horizontal_chop_empty_left horizontal_chop_empty_right vertical_chop_empty_down\n    vertical_chop_empty_up"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=u\\<parallel>v\n  \\<forall>v. \\<exists>u. v=v\\<parallel>u\n  \\<forall>v. \\<exists>u. v=v--u\n  \\<forall>v. \\<exists>u. v=u--v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and> \\<phi> ts v \\<and> True)) \\<and>\n               True))", "by fastforce"], ["", "lemma spatial_weaken2:\"\\<Turnstile> (\\<phi> \\<^bold>\\<rightarrow> \\<psi>) \\<^bold>\\<rightarrow> (\\<phi> \\<^bold>\\<rightarrow> \\<^bold>\\<langle>\\<psi>\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<phi> ts v \\<longrightarrow> \\<psi> ts v) \\<longrightarrow>\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and> \\<psi> ts v \\<and> True)) \\<and>\n               True))", "using spatial_weaken horizontal_chop_empty_left horizontal_chop_empty_right \n    vertical_chop_empty_down vertical_chop_empty_up"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     ?\\<phi> ts v \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and> ?\\<phi> ts v \\<and> True)) \\<and>\n             True))\n  \\<forall>v. \\<exists>u. v=u\\<parallel>v\n  \\<forall>v. \\<exists>u. v=v\\<parallel>u\n  \\<forall>v. \\<exists>u. v=v--u\n  \\<forall>v. \\<exists>u. v=u--v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<phi> ts v \\<longrightarrow> \\<psi> ts v) \\<longrightarrow>\n       \\<phi> ts v \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and> \\<psi> ts v \\<and> True)) \\<and>\n               True))", "by blast"], ["", "lemma somewhere_distr: \"\\<Turnstile> \\<^bold>\\<langle>\\<phi>\\<^bold>\\<or>\\<psi>\\<^bold>\\<rangle> \\<^bold>\\<leftrightarrow> \\<^bold>\\<langle>\\<phi>\\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle>\\<psi>\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (\\<phi> ts v \\<or> \\<psi> ts v) \\<and> True)) \\<and>\n               True)) =\n       ((\\<exists>va u.\n            v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and> \\<phi> ts v \\<and> True)) \\<and>\n                True)) \\<or>\n        (\\<exists>va u.\n            v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and> \\<psi> ts v \\<and> True)) \\<and>\n                True)))", "by blast"], ["", "lemma somewhere_and:\"\\<Turnstile> \\<^bold>\\<langle>\\<phi> \\<^bold>\\<and> \\<psi>\\<^bold>\\<rangle> \\<^bold>\\<rightarrow>  \\<^bold>\\<langle>\\<phi>\\<^bold>\\<rangle> \\<^bold>\\<and> \\<^bold>\\<langle>\\<psi>\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (\\<phi> ts v \\<and> \\<psi> ts v) \\<and> True)) \\<and>\n               True)) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and> \\<phi> ts v \\<and> True)) \\<and>\n               True)) \\<and>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and> \\<psi> ts v \\<and> True)) \\<and>\n               True))", "by blast"], ["", "lemma somewhere_and_or_distr :\"\\<Turnstile>(\\<^bold>\\<langle> \\<chi> \\<^bold>\\<and> (\\<phi> \\<^bold>\\<or> \\<psi>) \\<^bold>\\<rangle> \\<^bold>\\<leftrightarrow> \\<^bold>\\<langle> \\<chi> \\<^bold>\\<and>  \\<phi> \\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle> \\<chi> \\<^bold>\\<and> \\<psi> \\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (\\<chi> ts v \\<and>\n                        (\\<phi> ts v \\<or> \\<psi> ts v)) \\<and>\n                       True)) \\<and>\n               True)) =\n       ((\\<exists>va u.\n            v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (\\<chi> ts v \\<and> \\<phi> ts v) \\<and>\n                        True)) \\<and>\n                True)) \\<or>\n        (\\<exists>va u.\n            v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (\\<chi> ts v \\<and> \\<psi> ts v) \\<and>\n                        True)) \\<and>\n                True)))", "by blast"], ["", "lemma width_add1:\"\\<Turnstile>((\\<^bold>\\<omega> = x) \\<^bold>\\<smile> (\\<^bold>\\<omega> = y) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and> |lan va| = x \\<and> |lan u| = y) \\<longrightarrow>\n       |lan v| = x + y", "using vertical_chop_add1"], ["proof (prove)\nusing this:\n  ?v=?u--?w \\<longrightarrow> |lan ?v| = |lan ?u| + |lan ?w|\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and> |lan va| = x \\<and> |lan u| = y) \\<longrightarrow>\n       |lan v| = x + y", "by fastforce"], ["", "lemma width_add2:\"\\<Turnstile>((\\<^bold>\\<omega> = x+y) \\<^bold>\\<rightarrow>  (\\<^bold>\\<omega> = x) \\<^bold>\\<smile> \\<^bold>\\<omega> = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       |lan v| = x + y \\<longrightarrow>\n       (\\<exists>va u. v=va--u \\<and> |lan va| = x \\<and> |lan u| = y)", "using vertical_chop_add2"], ["proof (prove)\nusing this:\n  |lan ?v| = ?x + ?y \\<longrightarrow>\n  (\\<exists>u w. ?v=u--w \\<and> |lan u| = ?x \\<and> |lan w| = ?y)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       |lan v| = x + y \\<longrightarrow>\n       (\\<exists>va u. v=va--u \\<and> |lan va| = x \\<and> |lan u| = y)", "by fastforce"], ["", "lemma width_hchop_stable: \"\\<Turnstile>((\\<^bold>\\<omega> = x) \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<omega> = x) \\<^bold>\\<frown> (\\<^bold>\\<omega>=x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (|lan v| = x) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and> |lan va| = x \\<and> |lan u| = x)", "using hchop_def horizontal_chop1"], ["proof (prove)\nusing this:\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  \\<exists>u w. ?v=u\\<parallel>w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (|lan v| = x) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and> |lan va| = x \\<and> |lan u| = x)", "by force"], ["", "lemma length_geq_zero:\"\\<Turnstile> (\\<^bold>\\<l> \\<ge> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<parallel>ext v\\<parallel> = 0 \\<or> 0 < \\<parallel>ext v\\<parallel>", "by (metis order.not_eq_order_implies_strict real_int.length_ge_zero)"], ["", "lemma length_split: \"\\<Turnstile>((\\<^bold>\\<l> > 0) \\<^bold>\\<rightarrow> (\\<^bold>\\<l> > 0) \\<^bold>\\<frown> (\\<^bold>\\<l> > 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           0 < \\<parallel>ext va\\<parallel> \\<and>\n           0 < \\<parallel>ext u\\<parallel>)", "using horizontal_chop_non_empty"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext ?v\\<parallel> \\<longrightarrow>\n  (\\<exists>u w.\n      ?v=u\\<parallel>w \\<and>\n      0 < \\<parallel>ext u\\<parallel> \\<and>\n      0 < \\<parallel>ext w\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           0 < \\<parallel>ext va\\<parallel> \\<and>\n           0 < \\<parallel>ext u\\<parallel>)", "by fastforce"], ["", "lemma length_meld: \"\\<Turnstile>((\\<^bold>\\<l> > 0) \\<^bold>\\<frown> (\\<^bold>\\<l> > 0) \\<^bold>\\<rightarrow> (\\<^bold>\\<l> > 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           0 < \\<parallel>ext va\\<parallel> \\<and>\n           0 < \\<parallel>ext u\\<parallel>) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel>", "using hchop_def real_int.chop_add_length_ge_0"], ["proof (prove)\nusing this:\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  R_Chop(?r,?s,?t) \\<and>\n  0 < \\<parallel>?s\\<parallel> \\<and>\n  0 < \\<parallel>?t\\<parallel> \\<longrightarrow>\n  0 < \\<parallel>?r\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           0 < \\<parallel>ext va\\<parallel> \\<and>\n           0 < \\<parallel>ext u\\<parallel>) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel>", "by (metis (no_types, lifting))"], ["", "lemma length_dense:\"\\<Turnstile>((\\<^bold>\\<l> > 0) \\<^bold>\\<leftrightarrow> (\\<^bold>\\<l> > 0) \\<^bold>\\<frown> (\\<^bold>\\<l> > 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel>) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           0 < \\<parallel>ext va\\<parallel> \\<and>\n           0 < \\<parallel>ext u\\<parallel>)", "using length_meld length_split"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel>\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel>) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           0 < \\<parallel>ext va\\<parallel> \\<and>\n           0 < \\<parallel>ext u\\<parallel>)", "by blast"], ["", "lemma length_add1:\"\\<Turnstile>((\\<^bold>\\<l>=x) \\<^bold>\\<frown> (\\<^bold>\\<l>= y)) \\<^bold>\\<rightarrow> (\\<^bold>\\<l>= x+y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = y) \\<longrightarrow>\n       \\<parallel>ext v\\<parallel> = x + y", "using hchop_def real_int.rchop_def real_int.length_def"], ["proof (prove)\nusing this:\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  R_Chop(?r,?s,?t) \\<equiv>\n  left ?r = left ?s \\<and> right ?s = left ?t \\<and> right ?r = right ?t\n  \\<parallel>?r\\<parallel> \\<equiv> right ?r - left ?r\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = y) \\<longrightarrow>\n       \\<parallel>ext v\\<parallel> = x + y", "by fastforce"], ["", "lemma length_add2:\"\\<Turnstile> (x \\<^bold>\\<ge> 0 \\<^bold>\\<and> y \\<^bold>\\<ge> 0) \\<^bold>\\<rightarrow> ( (\\<^bold>\\<l>=x+y) \\<^bold>\\<rightarrow> ((\\<^bold>\\<l>=x) \\<^bold>\\<frown> (\\<^bold>\\<l>=y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 \\<le> x \\<and> 0 \\<le> y \\<longrightarrow>\n       \\<parallel>ext v\\<parallel> = x + y \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = y)", "using horizontal_chop_split_add"], ["proof (prove)\nusing this:\n  0 \\<le> ?x \\<and> 0 \\<le> ?y \\<longrightarrow>\n  \\<parallel>ext ?v\\<parallel> = ?x + ?y \\<longrightarrow>\n  (\\<exists>u w.\n      ?v=u\\<parallel>w \\<and>\n      \\<parallel>ext u\\<parallel> = ?x \\<and>\n      \\<parallel>ext w\\<parallel> = ?y)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 \\<le> x \\<and> 0 \\<le> y \\<longrightarrow>\n       \\<parallel>ext v\\<parallel> = x + y \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = y)", "by fastforce"], ["", "lemma length_add:\"\\<Turnstile> (x \\<^bold>\\<ge> 0 \\<^bold>\\<and> y \\<^bold>\\<ge> 0) \\<^bold>\\<rightarrow> ( (\\<^bold>\\<l>=x+y) \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<l>=x) \\<^bold>\\<frown> (\\<^bold>\\<l>=y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 \\<le> x \\<and> 0 \\<le> y \\<longrightarrow>\n       (\\<parallel>ext v\\<parallel> = x + y) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = y)", "using length_add1 length_add2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         \\<parallel>ext va\\<parallel> = ?x \\<and>\n         \\<parallel>ext u\\<parallel> = ?y) \\<longrightarrow>\n     \\<parallel>ext v\\<parallel> = ?x + ?y\n  \\<forall>ts v.\n     0 \\<le> ?x \\<and> 0 \\<le> ?y \\<longrightarrow>\n     \\<parallel>ext v\\<parallel> = ?x + ?y \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         \\<parallel>ext va\\<parallel> = ?x \\<and>\n         \\<parallel>ext u\\<parallel> = ?y)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 \\<le> x \\<and> 0 \\<le> y \\<longrightarrow>\n       (\\<parallel>ext v\\<parallel> = x + y) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = y)", "by blast"], ["", "lemma length_vchop_stable:\"\\<Turnstile>(\\<^bold>\\<l> = x) \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<l> = x) \\<^bold>\\<smile> ( \\<^bold>\\<l> = x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<parallel>ext v\\<parallel> = x) =\n       (\\<exists>va u.\n           v=va--u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = x)", "using vchop_def vertical_chop1"], ["proof (prove)\nusing this:\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  \\<forall>v. \\<exists>u w. v=u--w\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<parallel>ext v\\<parallel> = x) =\n       (\\<exists>va u.\n           v=va--u \\<and>\n           \\<parallel>ext va\\<parallel> = x \\<and>\n           \\<parallel>ext u\\<parallel> = x)", "by fastforce"], ["", "lemma res_ge_zero:\"\\<Turnstile>(re(c) \\<^bold>\\<rightarrow> \\<^bold>\\<l>>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel>", "by blast"], ["", "lemma clm_ge_zero:\"\\<Turnstile>(cl(c) \\<^bold>\\<rightarrow> \\<^bold>\\<l>>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel>", "by blast"], ["", "lemma free_ge_zero:\"\\<Turnstile>free \\<^bold>\\<rightarrow> \\<^bold>\\<l>>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel>", "by blast"], ["", "lemma width_res:\"\\<Turnstile>(re(c) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       |lan v| = 1", "by auto"], ["", "lemma width_clm:\"\\<Turnstile>(cl(c) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       |lan v| = 1", "by simp"], ["", "lemma width_free:\"\\<Turnstile>(free \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       |lan v| = 1", "by simp"], ["", "lemma width_somewhere_res:\"\\<Turnstile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<rightarrow> (\\<^bold>\\<omega> \\<ge> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (res ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)) \\<longrightarrow>\n       1 \\<le> |lan v|", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       1 \\<le> |lan v|", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       1 \\<le> |lan v|", "assume \"ts,v \\<Turnstile>  \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       1 \\<le> |lan v|", "then"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "show \"ts,v \\<Turnstile> (\\<^bold>\\<omega> \\<ge> 1)\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. 1 \\<le> |lan v|", "using view.hchop_def view.vertical_chop_width_mon"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  ?v=?v1.0--?v2.0 \\<and>\n  ?v2.0=?v3.0--?v4.0 \\<and> |lan ?v3.0| = ?x \\<longrightarrow>\n  ?x \\<le> |lan ?v|\n\ngoal (1 subgoal):\n 1. 1 \\<le> |lan v|", "by fastforce"], ["proof (state)\nthis:\n  1 \\<le> |lan v|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma clm_disj_res:\"\\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(c) \\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (clm ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True)", "proof (rule allI|rule notI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (clm ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       False", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (clm ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       False", "assume \"ts,v \\<Turnstile>\\<^bold>\\<langle>cl(c) \\<^bold>\\<and> re(c)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (clm ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "obtain v' where \"v' \\<le> v \\<and> (ts,v' \\<Turnstile> cl(c) \\<^bold>\\<and> re(c))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts c = ext v \\<and>\n                  restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts c = ext v' \\<and>\n         restrict v' (clm ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts c = ext v' \\<and>\n        restrict v' (res ts) c = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson view.somewhere_leq)"], ["proof (state)\nthis:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (clm ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts c = ext v' \\<and>\n  restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (clm ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (res ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (clm ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts c = ext v' \\<and>\n  restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1", "show False"], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (clm ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts c = ext v' \\<and>\n  restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. False", "using disjoint"], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (clm ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts c = ext v' \\<and>\n  restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1\n  res ?ts ?c \\<sqinter> clm ?ts ?c = bot\n\ngoal (1 subgoal):\n 1. False", "by (metis card_non_empty_geq_one inf.idem restriction.restriction_clm_leq_one\n        restriction.restriction_clm_res_disjoint)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma width_ge:\"\\<Turnstile> (\\<^bold>\\<omega>> 0) \\<^bold>\\<rightarrow> (\\<^bold>\\<exists> x. (\\<^bold>\\<omega> = x) \\<^bold>\\<and> (x \\<^bold>> 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<longrightarrow>\n       (\\<exists>x. |lan v| = x \\<and> 0 < x)", "using  vertical_chop_add1  add_gr_0 zero_less_one"], ["proof (prove)\nusing this:\n  ?v=?u--?w \\<longrightarrow> |lan ?v| = |lan ?u| + |lan ?w|\n  (0 < ?m + ?n) = (0 < ?m \\<or> 0 < ?n)\n  (0::?'a) < (1::?'a)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<longrightarrow>\n       (\\<exists>x. |lan v| = x \\<and> 0 < x)", "by auto"], ["", "lemma two_res_width: \"\\<Turnstile>((re(c) \\<^bold>\\<smile> re(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       |lan v| = 2", "by (metis one_add_one width_add1)"], ["", "lemma res_at_most_two:\"\\<Turnstile>\\<^bold>\\<not> (re(c) \\<^bold>\\<smile>  re(c)  \\<^bold>\\<smile>  re(c) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)", "proof(rule allI| rule notI )+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "assume \"ts, v \\<Turnstile> (re(c) \\<^bold>\\<smile>  re(c)  \\<^bold>\\<smile>  re(c) )\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)", "obtain v' and v1 and v2 and v3  \n    where \"v = v1--v'\" and \"v'=v2--v3\" \n    and \"ts,v1 \\<Turnstile>re(c)\" and \"ts,v2 \\<Turnstile>re(c)\" and \"ts,v3 \\<Turnstile>re(c)\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v' v2 v3.\n        \\<lbrakk>v=v1--v'; v'=v2--v3;\n         0 < \\<parallel>ext v1\\<parallel> \\<and>\n         len v1 ts c = ext v1 \\<and>\n         restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1;\n         0 < \\<parallel>ext v2\\<parallel> \\<and>\n         len v2 ts c = ext v2 \\<and>\n         restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1;\n         0 < \\<parallel>ext v3\\<parallel> \\<and>\n         len v3 ts c = ext v3 \\<and>\n         restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1--v'\n  v'=v2--v3\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  v=v1--v'\n  v'=v2--v3\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1", "show False"], ["proof (prove)\nusing this:\n  v=v1--v'\n  v'=v2--v3\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\n\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>v=v1--v'; v'=v2--v3;\n     0 < \\<parallel>ext v1\\<parallel> \\<and>\n     len v1 ts c = ext v1 \\<and>\n     restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1;\n     0 < \\<parallel>ext v2\\<parallel> \\<and>\n     len v2 ts c = ext v2 \\<and>\n     restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1;\n     0 < \\<parallel>ext v3\\<parallel> \\<and>\n     len v3 ts c = ext v3 \\<and>\n     restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\\<rbrakk>\n    \\<Longrightarrow> False", "have \"|restrict v' (res ts) c| < |restrict v (res ts) c|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v' (res ts) c| < |restrict v (res ts) c|", "using \\<open>ts,v1 \\<Turnstile>re(c)\\<close> \\<open>v=v1--v'\\<close> restriction.restriction_add_res"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n  v=v1--v'\n  ?v=?u--?w \\<longrightarrow>\n  |restrict ?v (res ?ts) ?c| =\n  |restrict ?u (res ?ts) ?c| + |restrict ?w (res ?ts) ?c|\n\ngoal (1 subgoal):\n 1. |restrict v' (res ts) c| < |restrict v (res ts) c|", "by auto"], ["proof (state)\nthis:\n  |restrict v' (res ts) c| < |restrict v (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v=v1--v'; v'=v2--v3;\n     0 < \\<parallel>ext v1\\<parallel> \\<and>\n     len v1 ts c = ext v1 \\<and>\n     restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1;\n     0 < \\<parallel>ext v2\\<parallel> \\<and>\n     len v2 ts c = ext v2 \\<and>\n     restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1;\n     0 < \\<parallel>ext v3\\<parallel> \\<and>\n     len v3 ts c = ext v3 \\<and>\n     restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  |restrict v' (res ts) c| < |restrict v (res ts) c|", "show ?thesis"], ["proof (prove)\nusing this:\n  |restrict v' (res ts) c| < |restrict v (res ts) c|\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types) \\<open>ts,v2 \\<Turnstile> re(c)\\<close> \\<open>ts,v3 \\<Turnstile>re(c)\\<close> \\<open>v'=v2--v3\\<close> not_less \n          one_add_one restriction_add_res restriction_res_leq_two)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma res_at_most_two2:\"\\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(c) \\<^bold>\\<smile>  re(c)  \\<^bold>\\<smile>  re(c)\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          (0 < \\<parallel>ext va\\<parallel> \\<and>\n                           len va ts c = ext va \\<and>\n                           restrict va (res ts) c = lan va \\<and>\n                           |lan va| = 1) \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext ua\\<parallel> \\<and>\n                              len ua ts c = ext ua \\<and>\n                              restrict ua (res ts) c = lan ua \\<and>\n                              |lan ua| = 1)) \\<and>\n                      True)) \\<and>\n              True)", "using res_at_most_two"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     \\<nexists>va u.\n        v=va--u \\<and>\n        (0 < \\<parallel>ext va\\<parallel> \\<and>\n         len va ts ?c = ext va \\<and>\n         restrict va (res ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n        (\\<exists>v ua.\n            u=v--ua \\<and>\n            (0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts ?c = ext v \\<and>\n             restrict v (res ts) ?c = lan v \\<and> |lan v| = 1) \\<and>\n            0 < \\<parallel>ext ua\\<parallel> \\<and>\n            len ua ts ?c = ext ua \\<and>\n            restrict ua (res ts) ?c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          (0 < \\<parallel>ext va\\<parallel> \\<and>\n                           len va ts c = ext va \\<and>\n                           restrict va (res ts) c = lan va \\<and>\n                           |lan va| = 1) \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext ua\\<parallel> \\<and>\n                              len ua ts c = ext ua \\<and>\n                              restrict ua (res ts) c = lan ua \\<and>\n                              |lan ua| = 1)) \\<and>\n                      True)) \\<and>\n              True)", "by blast"], ["", "lemma res_at_most_somewhere:\"\\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)))", "proof (rule allI|rule notI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "assume assm:\"ts,v \\<Turnstile>  (\\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> )\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (\\<exists>v u.\n         va=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (res ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True)) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (\\<exists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts c = ext v \\<and>\n                          restrict v (res ts) c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)) \\<and>\n         (\\<exists>v u.\n             ua=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts c = ext v \\<and>\n                          restrict v (res ts) c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "obtain vu and v1 and vm and vd \n    where chops:\"(v=vu--v1) \\<and> (v1 = vm--vd)\\<and> (ts,vu \\<Turnstile>\\<^bold>\\<langle>re(c)\\<^bold>\\<rangle>) \n                 \\<and> (ts,vm \\<Turnstile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle> ) \\<and>( ts,vd \\<Turnstile> \\<^bold>\\<langle> re(c)\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>vu v1 vm vd.\n        v=vu--v1 \\<and>\n        v1=vm--vd \\<and>\n        (\\<exists>v u.\n            vu=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (res ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<and>\n        (\\<exists>v u.\n            vm=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (res ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<and>\n        (\\<exists>v u.\n            vd=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (res ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assm"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (\\<exists>v u.\n         va=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (res ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True)) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (\\<exists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts c = ext v \\<and>\n                          restrict v (res ts) c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)) \\<and>\n         (\\<exists>v u.\n             ua=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts c = ext v \\<and>\n                          restrict v (res ts) c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. (\\<And>vu v1 vm vd.\n        v=vu--v1 \\<and>\n        v1=vm--vd \\<and>\n        (\\<exists>v u.\n            vu=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (res ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<and>\n        (\\<exists>v u.\n            vm=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (res ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<and>\n        (\\<exists>v u.\n            vd=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (res ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have res_vu:\"|restrict vu (res ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict vu (res ts) c|", "by (metis restriction_card_somewhere_mon)"], ["proof (state)\nthis:\n  1 \\<le> |restrict vu (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have res_vm:\"|restrict vm (res ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict vm (res ts) c|", "by (metis restriction_card_somewhere_mon)"], ["proof (state)\nthis:\n  1 \\<le> |restrict vm (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have res_vd:\"|restrict vd (res ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict vd (res ts) c|", "by (metis restriction_card_somewhere_mon)"], ["proof (state)\nthis:\n  1 \\<le> |restrict vd (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \n    \"|restrict v (res ts) c | = \n     |restrict vu (res ts) c|+ |restrict vm (res ts) c| + |restrict vd (res ts) c| \""], ["proof (prove)\nusing this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| =\n    |restrict vu (res ts) c| + |restrict vm (res ts) c| +\n    |restrict vd (res ts) c|", "using restriction_add_res"], ["proof (prove)\nusing this:\n  v=vu--v1 \\<and>\n  v1=vm--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vm=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  ?v=?u--?w \\<longrightarrow>\n  |restrict ?v (res ?ts) ?c| =\n  |restrict ?u (res ?ts) ?c| + |restrict ?w (res ?ts) ?c|\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| =\n    |restrict vu (res ts) c| + |restrict vm (res ts) c| +\n    |restrict vd (res ts) c|", "by force"], ["proof (state)\nthis:\n  |restrict v (res ts) c| =\n  |restrict vu (res ts) c| + |restrict vm (res ts) c| +\n  |restrict vd (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "with res_vu and res_vd res_vm"], ["proof (chain)\npicking this:\n  1 \\<le> |restrict vu (res ts) c|\n  1 \\<le> |restrict vd (res ts) c|\n  1 \\<le> |restrict vm (res ts) c|\n  |restrict v (res ts) c| =\n  |restrict vu (res ts) c| + |restrict vm (res ts) c| +\n  |restrict vd (res ts) c|", "have \"|restrict v (res ts) c | \\<ge> 3\""], ["proof (prove)\nusing this:\n  1 \\<le> |restrict vu (res ts) c|\n  1 \\<le> |restrict vd (res ts) c|\n  1 \\<le> |restrict vm (res ts) c|\n  |restrict v (res ts) c| =\n  |restrict vu (res ts) c| + |restrict vm (res ts) c| +\n  |restrict vd (res ts) c|\n\ngoal (1 subgoal):\n 1. 3 \\<le> |restrict v (res ts) c|", "by linarith"], ["proof (state)\nthis:\n  3 \\<le> |restrict v (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (res ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True)) \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (res ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<Longrightarrow>\n       False", "with restriction_res_leq_two"], ["proof (chain)\npicking this:\n  |restrict ?v (res ?ts) ?c| \\<le> 2\n  3 \\<le> |restrict v (res ts) c|", "show False"], ["proof (prove)\nusing this:\n  |restrict ?v (res ?ts) ?c| \\<le> 2\n  3 \\<le> |restrict v (res ts) c|\n\ngoal (1 subgoal):\n 1. False", "by (metis not_less_eq_eq numeral_2_eq_2 numeral_3_eq_3)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma res_adj:\"\\<Turnstile>\\<^bold>\\<not>  (re(c) \\<^bold>\\<smile> (\\<^bold>\\<omega> > 0) \\<^bold>\\<smile> re(c)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)", "proof (rule allI|rule notI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "assume \"ts,v \\<Turnstile> (re(c) \\<^bold>\\<smile> (\\<^bold>\\<omega> > 0) \\<^bold>\\<smile> re(c)) \""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (\\<exists>va u. v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (\\<exists>va u. v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)", "obtain v1 and v' and v2 and vn  \n    where chop:\"(v=v1--v') \\<and> (v'=vn--v2) \\<and> (ts,v1\\<Turnstile>re(c)) \n                \\<and> (ts,vn \\<Turnstile> \\<^bold>\\<omega> > 0) \\<and> (ts,v2\\<Turnstile>re(c))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v--ua \\<and>\n         (\\<exists>va u. v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v' vn v2.\n        v=v1--v' \\<and>\n        v'=vn--v2 \\<and>\n        (0 < \\<parallel>ext v1\\<parallel> \\<and>\n         len v1 ts c = ext v1 \\<and>\n         restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n        (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n        0 < \\<parallel>ext v2\\<parallel> \\<and>\n        len v2 ts c = ext v2 \\<and>\n        restrict v2 (res ts) c = lan v2 \\<and>\n        |lan v2| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence res1:\"|restrict v1 (res ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict v1 (res ts) c|", "by (simp add: le_numeral_extra(4))"], ["proof (state)\nthis:\n  1 \\<le> |restrict v1 (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "from chop"], ["proof (chain)\npicking this:\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1", "have res2: \"|restrict v2 (res ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict v2 (res ts) c|", "by (simp add: le_numeral_extra(4))"], ["proof (state)\nthis:\n  1 \\<le> |restrict v2 (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "from res1 and res2"], ["proof (chain)\npicking this:\n  1 \\<le> |restrict v1 (res ts) c|\n  1 \\<le> |restrict v2 (res ts) c|", "have \"|restrict v (res ts) c| \\<ge> 2\""], ["proof (prove)\nusing this:\n  1 \\<le> |restrict v1 (res ts) c|\n  1 \\<le> |restrict v2 (res ts) c|\n\ngoal (1 subgoal):\n 1. 2 \\<le> |restrict v (res ts) c|", "using chop restriction.restriction_add_res"], ["proof (prove)\nusing this:\n  1 \\<le> |restrict v1 (res ts) c|\n  1 \\<le> |restrict v2 (res ts) c|\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  ?v=?u--?w \\<longrightarrow>\n  |restrict ?v (res ?ts) ?c| =\n  |restrict ?u (res ?ts) ?c| + |restrict ?w (res ?ts) ?c|\n\ngoal (1 subgoal):\n 1. 2 \\<le> |restrict v (res ts) c|", "by auto"], ["proof (state)\nthis:\n  2 \\<le> |restrict v (res ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  2 \\<le> |restrict v (res ts) c|", "have resv:\"|restrict v (res ts) c| = 2\""], ["proof (prove)\nusing this:\n  2 \\<le> |restrict v (res ts) c|\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| = 2", "using dual_order.antisym restriction.restriction_res_leq_two"], ["proof (prove)\nusing this:\n  2 \\<le> |restrict v (res ts) c|\n  \\<lbrakk>?b \\<le> ?a; ?a \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  |restrict ?v (res ?ts) ?c| \\<le> 2\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| = 2", "by blast"], ["proof (state)\nthis:\n  |restrict v (res ts) c| = 2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence res_two_lanes:\"|res ts c| =2\""], ["proof (prove)\nusing this:\n  |restrict v (res ts) c| = 2\n\ngoal (1 subgoal):\n 1. |res ts c| = 2", "using atMostTwoRes restrict_res"], ["proof (prove)\nusing this:\n  |restrict v (res ts) c| = 2\n  |res ?ts ?c| \\<le> 2\n  restrict ?v (res ?ts) ?c \\<le> res ?ts ?c\n\ngoal (1 subgoal):\n 1. |res ts c| = 2", "by (metis (no_types, lifting) nat_int.card_subset_le dual_order.antisym)"], ["proof (state)\nthis:\n  |res ts c| = 2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "from this"], ["proof (chain)\npicking this:\n  |res ts c| = 2", "obtain p where p_def:\"Rep_nat_int (res ts c) = {p, p+1}\""], ["proof (prove)\nusing this:\n  |res ts c| = 2\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        Rep_nat_int (res ts c) = {p, p + 1} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using consecutiveRes"], ["proof (prove)\nusing this:\n  |res ts c| = 2\n  |res ?ts ?c| = 2 \\<longrightarrow>\n  (\\<exists>n. Rep_nat_int (res ?ts ?c) = {n, n + 1})\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        Rep_nat_int (res ts c) = {p, p + 1} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  Rep_nat_int (res ts c) = {p, p + 1}\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have \"Abs_nat_int {p,p+1} \\<sqsubseteq> lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_nat_int {p, p + 1} \\<le> lan v", "by (metis Rep_nat_int_inverse atMostTwoRes card_seteq finite_atLeastAtMost\n        insert_not_empty nat_int.card'.rep_eq nat_int.card_seq less_eq_nat_int.rep_eq\n        p_def resv restrict_res restrict_view)"], ["proof (state)\nthis:\n  Abs_nat_int {p, p + 1} \\<le> lan v\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have vn_not_e:\"lan vn \\<noteq> \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lan vn \\<noteq> bot", "using chop"], ["proof (prove)\nusing this:\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. lan vn \\<noteq> bot", "by (metis nat_int.card_empty_zero less_irrefl width_ge)"], ["proof (state)\nthis:\n  lan vn \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence consec_vn_v2:\"nat_int.consec (lan vn) (lan v2)\""], ["proof (prove)\nusing this:\n  lan vn \\<noteq> bot\n\ngoal (1 subgoal):\n 1. consec (lan vn) (lan v2)", "using nat_int.card_empty_zero chop nat_int.nchop_def one_neq_zero vchop_def"], ["proof (prove)\nusing this:\n  lan vn \\<noteq> bot\n  |bot| = 0\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  N_Chop(?i,?j,?k) \\<equiv>\n  ?i = ?j \\<squnion> ?k \\<and> (?j = bot \\<or> ?k = bot \\<or> consec ?j ?k)\n  (1::?'a) \\<noteq> (0::?'a)\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. consec (lan vn) (lan v2)", "by auto"], ["proof (state)\nthis:\n  consec (lan vn) (lan v2)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have v'_not_e:\"lan v' \\<noteq> \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lan v' \\<noteq> bot", "using chop"], ["proof (prove)\nusing this:\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. lan v' \\<noteq> bot", "by (metis less_irrefl nat_int.card_empty_zero view.vertical_chop_assoc2 width_ge)"], ["proof (state)\nthis:\n  lan v' \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence consec_v1_v':\"nat_int.consec (lan v1) (lan v')\""], ["proof (prove)\nusing this:\n  lan v' \\<noteq> bot\n\ngoal (1 subgoal):\n 1. consec (lan v1) (lan v')", "by (metis (no_types, lifting) nat_int.card_empty_zero chop nat_int.nchop_def\n        one_neq_zero vchop_def)"], ["proof (state)\nthis:\n  consec (lan v1) (lan v')\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence consec_v1_vn:\"nat_int.consec (lan v1) (lan vn)\""], ["proof (prove)\nusing this:\n  consec (lan v1) (lan v')\n\ngoal (1 subgoal):\n 1. consec (lan v1) (lan vn)", "by (metis (no_types, lifting) chop consec_vn_v2 nat_int.consec_def \n        nat_int.chop_min vchop_def)"], ["proof (state)\nthis:\n  consec (lan v1) (lan vn)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence lesser_con:\"\\<forall>n m. (n \\<^bold>\\<in> (lan v1) \\<and> m \\<^bold>\\<in> (lan v2) \\<longrightarrow> n < m)\""], ["proof (prove)\nusing this:\n  consec (lan v1) (lan vn)\n\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<^bold>\\<in> lan v1 \\<and>\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n       n < m", "using consec_v1_vn consec_vn_v2 nat_int.consec_trans_lesser"], ["proof (prove)\nusing this:\n  consec (lan v1) (lan vn)\n  consec (lan v1) (lan vn)\n  consec (lan vn) (lan v2)\n  consec ?i ?j \\<and> consec ?j ?k \\<longrightarrow>\n  (\\<forall>n m.\n      n \\<^bold>\\<in> ?i \\<and> m \\<^bold>\\<in> ?k \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<^bold>\\<in> lan v1 \\<and>\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n       n < m", "by auto"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have p_in_v1:\"p \\<^bold>\\<in> lan v1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> lan v1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "assume \"\\<not> p \\<^bold>\\<in> lan v1\""], ["proof (state)\nthis:\n  \\<not> p \\<^bold>\\<in> lan v1\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> p \\<^bold>\\<in> lan v1", "have \"p \\<^bold>\\<notin> lan v1\""], ["proof (prove)\nusing this:\n  \\<not> p \\<^bold>\\<in> lan v1\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v1", "by (simp )"], ["proof (state)\nthis:\n  p \\<^bold>\\<notin> lan v1\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "hence \"p \\<^bold>\\<notin> restrict v1 (res ts) c\""], ["proof (prove)\nusing this:\n  p \\<^bold>\\<notin> lan v1\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> restrict v1 (res ts) c", "using chop"], ["proof (prove)\nusing this:\n  p \\<^bold>\\<notin> lan v1\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> restrict v1 (res ts) c", "by (simp add: chop )"], ["proof (state)\nthis:\n  p \\<^bold>\\<notin> restrict v1 (res ts) c\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p \\<^bold>\\<notin> restrict v1 (res ts) c", "have \"p+1 \\<^bold>\\<in> restrict v1 (res ts) c\""], ["proof (prove)\nusing this:\n  p \\<^bold>\\<notin> restrict v1 (res ts) c\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> restrict v1 (res ts) c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> restrict v1 (res ts) c \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v1 (res ts) c", "have \"{p, p + 1} \\<inter> (Rep_nat_int (res ts c) \\<inter> Rep_nat_int (lan v1)) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p, p + 1} \\<inter>\n    (Rep_nat_int (res ts c) \\<inter> Rep_nat_int (lan v1)) \\<noteq>\n    {}", "by (metis chop Rep_nat_int_inject bot_nat_int.rep_eq consec_v1_v' \n             inf_nat_int.rep_eq nat_int.consec_def p_def restriction.restrict_def)"], ["proof (state)\nthis:\n  {p, p + 1} \\<inter>\n  (Rep_nat_int (res ts c) \\<inter> Rep_nat_int (lan v1)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> restrict v1 (res ts) c \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v1 (res ts) c", "then"], ["proof (chain)\npicking this:\n  {p, p + 1} \\<inter>\n  (Rep_nat_int (res ts c) \\<inter> Rep_nat_int (lan v1)) \\<noteq>\n  {}", "have \"p + 1 \\<in> Rep_nat_int (lan v1)\""], ["proof (prove)\nusing this:\n  {p, p + 1} \\<inter>\n  (Rep_nat_int (res ts c) \\<inter> Rep_nat_int (lan v1)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. p + 1 \\<in> Rep_nat_int (lan v1)", "using \\<open>p \\<^bold>\\<notin> restrict v1 (res ts) c\\<close> inf_nat_int.rep_eq not_in.rep_eq\n          restriction.restrict_def"], ["proof (prove)\nusing this:\n  {p, p + 1} \\<inter>\n  (Rep_nat_int (res ts c) \\<inter> Rep_nat_int (lan v1)) \\<noteq>\n  {}\n  p \\<^bold>\\<notin> restrict v1 (res ts) c\n  Rep_nat_int (?x \\<sqinter> ?xa) = Rep_nat_int ?x \\<inter> Rep_nat_int ?xa\n  (?x \\<^bold>\\<notin> ?xa) = (?x \\<notin> Rep_nat_int ?xa)\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. p + 1 \\<in> Rep_nat_int (lan v1)", "by force"], ["proof (state)\nthis:\n  p + 1 \\<in> Rep_nat_int (lan v1)\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> restrict v1 (res ts) c \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v1 (res ts) c", "then"], ["proof (chain)\npicking this:\n  p + 1 \\<in> Rep_nat_int (lan v1)", "show ?thesis"], ["proof (prove)\nusing this:\n  p + 1 \\<in> Rep_nat_int (lan v1)\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> restrict v1 (res ts) c", "using chop el.rep_eq"], ["proof (prove)\nusing this:\n  p + 1 \\<in> Rep_nat_int (lan v1)\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> restrict v1 (res ts) c", "by presburger"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<in> restrict v1 (res ts) c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<in> restrict v1 (res ts) c\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "hence suc_p:\"p+1 \\<^bold>\\<in> lan v1\""], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> restrict v1 (res ts) c\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> lan v1", "using chop"], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> restrict v1 (res ts) c\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> lan v1", "by (simp add: chop)"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<in> lan v1\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "hence \"p+1 \\<^bold>\\<notin> lan v2\""], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> lan v1\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2", "using p_def restrict_def"], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> lan v1\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2", "using lesser_con nat_int.el.rep_eq\n        nat_int.not_in.rep_eq"], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> lan v1\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  (?x \\<^bold>\\<notin> ?xa) = (?x \\<notin> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2", "by auto"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<notin> lan v2\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p + 1 \\<^bold>\\<notin> lan v2", "have \"p \\<^bold>\\<in> restrict v2 (res ts) c\""], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<notin> lan v2\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> restrict v2 (res ts) c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p \\<^bold>\\<in> restrict v2 (res ts) c", "have f1: \"minimum (lan v2) \\<in> Rep_nat_int (lan v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimum (lan v2) \\<in> Rep_nat_int (lan v2)", "using consec_vn_v2 el.rep_eq minimum_in nat_int.consec_def"], ["proof (prove)\nusing this:\n  consec (lan vn) (lan v2)\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  ?i \\<noteq> bot \\<longrightarrow> minimum ?i \\<^bold>\\<in> ?i\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n\ngoal (1 subgoal):\n 1. minimum (lan v2) \\<in> Rep_nat_int (lan v2)", "by simp"], ["proof (state)\nthis:\n  minimum (lan v2) \\<in> Rep_nat_int (lan v2)\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p \\<^bold>\\<in> restrict v2 (res ts) c", "have \"lan v2 \\<sqsubseteq> res ts c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lan v2 \\<le> res ts c", "by (metis (no_types) chop restriction.restrict_res)"], ["proof (state)\nthis:\n  lan v2 \\<le> res ts c\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p \\<^bold>\\<in> restrict v2 (res ts) c", "then"], ["proof (chain)\npicking this:\n  lan v2 \\<le> res ts c", "have \"minimum (lan v2) = p\""], ["proof (prove)\nusing this:\n  lan v2 \\<le> res ts c\n\ngoal (1 subgoal):\n 1. minimum (lan v2) = p", "using \\<open>p + 1 \\<^bold>\\<notin> lan v2\\<close> f1 less_eq_nat_int.rep_eq not_in.rep_eq p_def"], ["proof (prove)\nusing this:\n  lan v2 \\<le> res ts c\n  p + 1 \\<^bold>\\<notin> lan v2\n  minimum (lan v2) \\<in> Rep_nat_int (lan v2)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  (?x \\<^bold>\\<notin> ?xa) = (?x \\<notin> Rep_nat_int ?xa)\n  Rep_nat_int (res ts c) = {p, p + 1}\n\ngoal (1 subgoal):\n 1. minimum (lan v2) = p", "by auto"], ["proof (state)\nthis:\n  minimum (lan v2) = p\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p \\<^bold>\\<in> restrict v2 (res ts) c", "then"], ["proof (chain)\npicking this:\n  minimum (lan v2) = p", "show ?thesis"], ["proof (prove)\nusing this:\n  minimum (lan v2) = p\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> restrict v2 (res ts) c", "using f1"], ["proof (prove)\nusing this:\n  minimum (lan v2) = p\n  minimum (lan v2) \\<in> Rep_nat_int (lan v2)\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> restrict v2 (res ts) c", "by (metis chop el.rep_eq)"], ["proof (state)\nthis:\n  p \\<^bold>\\<in> restrict v2 (res ts) c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<^bold>\\<in> restrict v2 (res ts) c\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "hence p:\"p \\<^bold>\\<in> lan v2\""], ["proof (prove)\nusing this:\n  p \\<^bold>\\<in> restrict v2 (res ts) c\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> lan v2", "using p_def restrict_def"], ["proof (prove)\nusing this:\n  p \\<^bold>\\<in> restrict v2 (res ts) c\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> lan v2", "using chop"], ["proof (prove)\nusing this:\n  p \\<^bold>\\<in> restrict v2 (res ts) c\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<in> lan v2", "by auto"], ["proof (state)\nthis:\n  p \\<^bold>\\<in> lan v2\n\ngoal (1 subgoal):\n 1. \\<not> p \\<^bold>\\<in> lan v1 \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using lesser_con suc_p p"], ["proof (prove)\nusing this:\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m\n  p + 1 \\<^bold>\\<in> lan v1\n  p \\<^bold>\\<in> lan v2\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<^bold>\\<in> lan v1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence p_not_in_v2:\"p \\<^bold>\\<notin> lan v2\""], ["proof (prove)\nusing this:\n  p \\<^bold>\\<in> lan v1\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v2", "using p_def restrict_def lesser_con \n      nat_int.el.rep_eq nat_int.not_in.rep_eq"], ["proof (prove)\nusing this:\n  p \\<^bold>\\<in> lan v1\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  (?x \\<^bold>\\<notin> ?xa) = (?x \\<notin> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v2", "by auto"], ["proof (state)\nthis:\n  p \\<^bold>\\<notin> lan v2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "then"], ["proof (chain)\npicking this:\n  p \\<^bold>\\<notin> lan v2", "have \"p+1 \\<^bold>\\<in> restrict v2 (res ts) c\""], ["proof (prove)\nusing this:\n  p \\<^bold>\\<notin> lan v2\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "have f1: \"minimum (lan v2) \\<^bold>\\<in> lan v2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. minimum (lan v2) \\<^bold>\\<in> lan v2", "using consec_vn_v2 minimum_in nat_int.consec_def"], ["proof (prove)\nusing this:\n  consec (lan vn) (lan v2)\n  ?i \\<noteq> bot \\<longrightarrow> minimum ?i \\<^bold>\\<in> ?i\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n\ngoal (1 subgoal):\n 1. minimum (lan v2) \\<^bold>\\<in> lan v2", "by simp"], ["proof (state)\nthis:\n  minimum (lan v2) \\<^bold>\\<in> lan v2\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "obtain x where mini:\"x = minimum (lan v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x = minimum (lan v2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = minimum (lan v2)\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "have \"x = p + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = p + 1", "by (metis IntD1 p_not_in_v2  chop el.rep_eq f1 inf_nat_int.rep_eq insertE mini\n          not_in.rep_eq p_def restriction.restrict_def singletonD)"], ["proof (state)\nthis:\n  x = p + 1\n\ngoal (1 subgoal):\n 1. p \\<^bold>\\<notin> lan v2 \\<Longrightarrow>\n    p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "then"], ["proof (chain)\npicking this:\n  x = p + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  x = p + 1\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "using chop f1 mini"], ["proof (prove)\nusing this:\n  x = p + 1\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n  minimum (lan v2) \\<^bold>\\<in> lan v2\n  x = minimum (lan v2)\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> restrict v2 (res ts) c", "by auto"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<in> restrict v2 (res ts) c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<in> restrict v2 (res ts) c\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence suc_p_in_v2:\"p+1 \\<^bold>\\<in> lan v2\""], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> restrict v2 (res ts) c\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> lan v2", "using p_def restrict_def"], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> restrict v2 (res ts) c\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> lan v2", "using chop"], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> restrict v2 (res ts) c\n  Rep_nat_int (res ts c) = {p, p + 1}\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  v=v1--v' \\<and>\n  v'=vn--v2 \\<and>\n  (0 < \\<parallel>ext v1\\<parallel> \\<and>\n   len v1 ts c = ext v1 \\<and>\n   restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1) \\<and>\n  (\\<exists>v u. vn=v--u \\<and> |lan v| = 0 + 1 \\<and> True) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. p + 1 \\<^bold>\\<in> lan v2", "by auto"], ["proof (state)\nthis:\n  p + 1 \\<^bold>\\<in> lan v2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have \"\\<forall>n m. (n \\<^bold>\\<in> (lan v1) \\<and> m \\<^bold>\\<in> (lan vn) \\<longrightarrow> n < m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<^bold>\\<in> lan v1 \\<and>\n       m \\<^bold>\\<in> lan vn \\<longrightarrow>\n       n < m", "using consec_v1_vn nat_int.consec_lesser"], ["proof (prove)\nusing this:\n  consec (lan v1) (lan vn)\n  consec ?i ?j \\<longrightarrow>\n  (\\<forall>n m.\n      n \\<^bold>\\<in> ?i \\<and> m \\<^bold>\\<in> ?j \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<^bold>\\<in> lan v1 \\<and>\n       m \\<^bold>\\<in> lan vn \\<longrightarrow>\n       n < m", "by auto"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan vn \\<longrightarrow>\n     n < m\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "with p_in_v1"], ["proof (chain)\npicking this:\n  p \\<^bold>\\<in> lan v1\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan vn \\<longrightarrow>\n     n < m", "have ge_p:\"\\<forall>m. (m \\<^bold>\\<in> lan vn \\<longrightarrow> p < m)\""], ["proof (prove)\nusing this:\n  p \\<^bold>\\<in> lan v1\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan v1 \\<and> m \\<^bold>\\<in> lan vn \\<longrightarrow>\n     n < m\n\ngoal (1 subgoal):\n 1. \\<forall>m. m \\<^bold>\\<in> lan vn \\<longrightarrow> p < m", "by blast"], ["proof (state)\nthis:\n  \\<forall>m. m \\<^bold>\\<in> lan vn \\<longrightarrow> p < m\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have \"\\<forall>n m. (n \\<^bold>\\<in> (lan vn) \\<and> m \\<^bold>\\<in> (lan v2) \\<longrightarrow> n < m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<^bold>\\<in> lan vn \\<and>\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n       n < m", "using consec_vn_v2 nat_int.consec_lesser"], ["proof (prove)\nusing this:\n  consec (lan vn) (lan v2)\n  consec ?i ?j \\<longrightarrow>\n  (\\<forall>n m.\n      n \\<^bold>\\<in> ?i \\<and> m \\<^bold>\\<in> ?j \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       n \\<^bold>\\<in> lan vn \\<and>\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n       n < m", "by auto"], ["proof (state)\nthis:\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan vn \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "with suc_p_in_v2"], ["proof (chain)\npicking this:\n  p + 1 \\<^bold>\\<in> lan v2\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan vn \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m", "have less_suc_p:\"\\<forall>m. (m \\<^bold>\\<in> lan vn \\<longrightarrow>  m< p+1)\""], ["proof (prove)\nusing this:\n  p + 1 \\<^bold>\\<in> lan v2\n  \\<forall>n m.\n     n \\<^bold>\\<in> lan vn \\<and> m \\<^bold>\\<in> lan v2 \\<longrightarrow>\n     n < m\n\ngoal (1 subgoal):\n 1. \\<forall>m. m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1", "by blast"], ["proof (state)\nthis:\n  \\<forall>m. m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "have \"\\<forall>m. (m \\<^bold>\\<in> lan vn \\<longrightarrow>  (m< p+1 \\<and> m > p) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1 \\<and> p < m", "using ge_p less_suc_p"], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan vn \\<longrightarrow> p < m\n  \\<forall>m. m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1 \\<and> p < m", "by auto"], ["proof (state)\nthis:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1 \\<and> p < m\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence \"\\<not>(\\<exists>m. (m \\<^bold>\\<in> lan vn))\""], ["proof (prove)\nusing this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan vn \\<longrightarrow> m < p + 1 \\<and> p < m\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<^bold>\\<in> lan vn", "by (metis One_nat_def Suc_leI add.right_neutral add_Suc_right linorder_not_less)"], ["proof (state)\nthis:\n  \\<nexists>m. m \\<^bold>\\<in> lan vn\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "hence \"lan vn = \\<emptyset>\""], ["proof (prove)\nusing this:\n  \\<nexists>m. m \\<^bold>\\<in> lan vn\n\ngoal (1 subgoal):\n 1. lan vn = bot", "using nat_int.non_empty_elem_in"], ["proof (prove)\nusing this:\n  \\<nexists>m. m \\<^bold>\\<in> lan vn\n  (?i \\<noteq> bot) = (\\<exists>n. n \\<^bold>\\<in> ?i)\n\ngoal (1 subgoal):\n 1. lan vn = bot", "by auto"], ["proof (state)\nthis:\n  lan vn = bot\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and> |lan va| = 0 + 1 \\<and> True) \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and>\n              |lan ua| = 1) \\<Longrightarrow>\n       False", "with vn_not_e"], ["proof (chain)\npicking this:\n  lan vn \\<noteq> bot\n  lan vn = bot", "show False"], ["proof (prove)\nusing this:\n  lan vn \\<noteq> bot\n  lan vn = bot\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma clm_sing:\"\\<Turnstile>\\<^bold>\\<not>  (cl(c) \\<^bold>\\<smile> cl(c)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "using atMostOneClm  restriction_add_clm vchop_def restriction_clm_leq_one"], ["proof (prove)\nusing this:\n  |clm ?ts ?c| \\<le> 1\n  ?v=?u--?w \\<longrightarrow>\n  |restrict ?v (clm ?ts) ?c| =\n  |restrict ?u (clm ?ts) ?c| + |restrict ?w (clm ?ts) ?c|\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  |restrict ?v (clm ?ts) ?c| \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "by (metis (no_types, hide_lams) add_eq_self_zero le_add1 le_antisym one_neq_zero)"], ["", "lemma clm_sing_somewhere:\"\\<Turnstile>\\<^bold>\\<not>  \\<^bold>\\<langle>cl(c) \\<^bold>\\<smile> cl(c)\\<^bold>\\<rangle> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          (0 < \\<parallel>ext va\\<parallel> \\<and>\n                           len va ts c = ext va \\<and>\n                           restrict va (clm ts) c = lan va \\<and>\n                           |lan va| = 1) \\<and>\n                          0 < \\<parallel>ext u\\<parallel> \\<and>\n                          len u ts c = ext u \\<and>\n                          restrict u (clm ts) c = lan u \\<and>\n                          |lan u| = 1) \\<and>\n                      True)) \\<and>\n              True)", "using clm_sing"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     \\<nexists>va u.\n        v=va--u \\<and>\n        (0 < \\<parallel>ext va\\<parallel> \\<and>\n         len va ts ?c = ext va \\<and>\n         restrict va (clm ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n        0 < \\<parallel>ext u\\<parallel> \\<and>\n        len u ts ?c = ext u \\<and>\n        restrict u (clm ts) ?c = lan u \\<and> |lan u| = 1\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          (0 < \\<parallel>ext va\\<parallel> \\<and>\n                           len va ts c = ext va \\<and>\n                           restrict va (clm ts) c = lan va \\<and>\n                           |lan va| = 1) \\<and>\n                          0 < \\<parallel>ext u\\<parallel> \\<and>\n                          len u ts c = ext u \\<and>\n                          restrict u (clm ts) c = lan u \\<and>\n                          |lan u| = 1) \\<and>\n                      True)) \\<and>\n              True)", "by blast"], ["", "lemma clm_sing_not_interrupted:\"\\<Turnstile> \\<^bold>\\<not>(cl(c) \\<^bold>\\<smile> \\<^bold>\\<top> \\<^bold>\\<smile> cl(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              True \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (clm ts) c = lan ua \\<and> |lan ua| = 1)", "using atMostOneClm  restriction_add_clm vchop_def restriction_clm_leq_one clm_sing"], ["proof (prove)\nusing this:\n  |clm ?ts ?c| \\<le> 1\n  ?v=?u--?w \\<longrightarrow>\n  |restrict ?v (clm ?ts) ?c| =\n  |restrict ?u (clm ?ts) ?c| + |restrict ?w (clm ?ts) ?c|\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  |restrict ?v (clm ?ts) ?c| \\<le> 1\n  \\<forall>ts v.\n     \\<nexists>va u.\n        v=va--u \\<and>\n        (0 < \\<parallel>ext va\\<parallel> \\<and>\n         len va ts ?c = ext va \\<and>\n         restrict va (clm ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n        0 < \\<parallel>ext u\\<parallel> \\<and>\n        len u ts ?c = ext u \\<and>\n        restrict u (clm ts) ?c = lan u \\<and> |lan u| = 1\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              True \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (clm ts) c = lan ua \\<and> |lan ua| = 1)", "by (metis (no_types, hide_lams) add.commute add_eq_self_zero dual_order.antisym\n      le_add1 one_neq_zero)"], ["", "lemma clm_sing_somewhere2:\"\\<Turnstile>\\<^bold>\\<not>  (\\<^bold>\\<top> \\<^bold>\\<smile> cl(c) \\<^bold>\\<smile> \\<^bold>\\<top> \\<^bold>\\<smile>  cl(c) \\<^bold>\\<smile> \\<^bold>\\<top>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              (\\<exists>v u.\n                  ua=v--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (clm ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)))", "using clm_sing_not_interrupted vertical_chop_assoc1"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     \\<nexists>va u.\n        v=va--u \\<and>\n        (0 < \\<parallel>ext va\\<parallel> \\<and>\n         len va ts ?c = ext va \\<and>\n         restrict va (clm ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n        (\\<exists>v ua.\n            u=v--ua \\<and>\n            True \\<and>\n            0 < \\<parallel>ext ua\\<parallel> \\<and>\n            len ua ts ?c = ext ua \\<and>\n            restrict ua (clm ts) ?c = lan ua \\<and> |lan ua| = 1)\n  ?v=?v1.0--?v2.0 \\<and> ?v2.0=?v3.0--?v4.0 \\<longrightarrow>\n  (\\<exists>v'. ?v=v'--?v4.0 \\<and> v'=?v1.0--?v3.0)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v--ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n              (\\<exists>v u.\n                  ua=v--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts c = ext v \\<and>\n                       restrict v (clm ts) c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)))", "by meson"], ["", "lemma clm_sing_somewhere3:\"\\<Turnstile>\\<^bold>\\<not>  \\<^bold>\\<langle>(\\<^bold>\\<top> \\<^bold>\\<smile> cl(c) \\<^bold>\\<smile> \\<^bold>\\<top> \\<^bold>\\<smile>  cl(c) \\<^bold>\\<smile> \\<^bold>\\<top>)\\<^bold>\\<rangle> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts c = ext v \\<and>\n                               restrict v (clm ts) c = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (\\<exists>v u.\n                                  ua=v--u \\<and>\n                                  True \\<and>\n                                  (\\<exists>v ua.\nu=v--ua \\<and>\n(0 < \\<parallel>ext v\\<parallel> \\<and>\n len v ts c = ext v \\<and>\n restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\nTrue)))) \\<and>\n                      True)) \\<and>\n              True)", "by (meson clm_sing_not_interrupted view.vertical_chop_assoc1)"], ["", "lemma clm_at_most_somewhere:\"\\<Turnstile>\\<^bold>\\<not> (\\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "proof (rule allI| rule notI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "assume assm:\"ts,v \\<Turnstile>  (\\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle> \\<^bold>\\<smile> \\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle>)\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (\\<exists>v u.\n         va=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (clm ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True)) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         (\\<exists>v u.\n             ua=v\\<parallel>u \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (clm ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "obtain vu and vd \n    where chops:\"(v=vu--vd)\\<and> (ts,vu \\<Turnstile>\\<^bold>\\<langle>cl(c)\\<^bold>\\<rangle>) \\<and> ( ts,vd \\<Turnstile> \\<^bold>\\<langle> cl(c)\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>vu vd.\n        v=vu--vd \\<and>\n        (\\<exists>v u.\n            vu=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (clm ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<and>\n        (\\<exists>v u.\n            vd=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (clm ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assm"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va--u \\<and>\n     (\\<exists>v u.\n         va=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (clm ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True)) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         (\\<exists>v u.\n             ua=v\\<parallel>u \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (clm ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<And>vu vd.\n        v=vu--vd \\<and>\n        (\\<exists>v u.\n            vu=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (clm ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<and>\n        (\\<exists>v u.\n            vd=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts c = ext v \\<and>\n                         restrict v (clm ts) c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have clm_vu:\"|restrict vu (clm ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict vu (clm ts) c|", "by (metis restriction_card_somewhere_mon)"], ["proof (state)\nthis:\n  1 \\<le> |restrict vu (clm ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have clm_vd:\"|restrict vd (clm ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict vd (clm ts) c|", "by (metis restriction_card_somewhere_mon)"], ["proof (state)\nthis:\n  1 \\<le> |restrict vd (clm ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "from chops"], ["proof (chain)\npicking this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have clm_add:\n    \"|restrict v (clm ts) c | = |restrict vu (clm ts) c| + |restrict vd (clm ts) c|\""], ["proof (prove)\nusing this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict vu (clm ts) c| + |restrict vd (clm ts) c|", "using restriction_add_clm"], ["proof (prove)\nusing this:\n  v=vu--vd \\<and>\n  (\\<exists>v u.\n      vu=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<and>\n  (\\<exists>v u.\n      vd=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (clm ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  ?v=?u--?w \\<longrightarrow>\n  |restrict ?v (clm ?ts) ?c| =\n  |restrict ?u (clm ?ts) ?c| + |restrict ?w (clm ?ts) ?c|\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict vu (clm ts) c| + |restrict vd (clm ts) c|", "by auto"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| =\n  |restrict vu (clm ts) c| + |restrict vd (clm ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "with clm_vu and clm_vd"], ["proof (chain)\npicking this:\n  1 \\<le> |restrict vu (clm ts) c|\n  1 \\<le> |restrict vd (clm ts) c|\n  |restrict v (clm ts) c| =\n  |restrict vu (clm ts) c| + |restrict vd (clm ts) c|", "have \"|restrict v (clm ts) c | \\<ge> 2\""], ["proof (prove)\nusing this:\n  1 \\<le> |restrict vu (clm ts) c|\n  1 \\<le> |restrict vd (clm ts) c|\n  |restrict v (clm ts) c| =\n  |restrict vu (clm ts) c| + |restrict vd (clm ts) c|\n\ngoal (1 subgoal):\n 1. 2 \\<le> |restrict v (clm ts) c|", "using add.commute add_eq_self_zero dual_order.antisym le_add1 less_one not_le\n      restriction_res_leq_two"], ["proof (prove)\nusing this:\n  1 \\<le> |restrict vu (clm ts) c|\n  1 \\<le> |restrict vd (clm ts) c|\n  |restrict v (clm ts) c| =\n  |restrict vu (clm ts) c| + |restrict vd (clm ts) c|\n  ?a + ?b = ?b + ?a\n  ?m + ?n = ?m \\<Longrightarrow> ?n = 0\n  \\<lbrakk>?b \\<le> ?a; ?a \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  ?n \\<le> ?n + ?m\n  (?n < 1) = (?n = 0)\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n  |restrict ?v (res ?ts) ?c| \\<le> 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> |restrict v (clm ts) c|", "by linarith"], ["proof (state)\nthis:\n  2 \\<le> |restrict v (clm ts) c|\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va--u \\<and>\n          (\\<exists>v u.\n              va=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              (\\<exists>v u.\n                  ua=v\\<parallel>u \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts c = ext v \\<and>\n                           restrict v (clm ts) c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<Longrightarrow>\n       False", "with restriction_clm_leq_one"], ["proof (chain)\npicking this:\n  |restrict ?v (clm ?ts) ?c| \\<le> 1\n  2 \\<le> |restrict v (clm ts) c|", "show False"], ["proof (prove)\nusing this:\n  |restrict ?v (clm ?ts) ?c| \\<le> 1\n  2 \\<le> |restrict v (clm ts) c|\n\ngoal (1 subgoal):\n 1. False", "by (metis One_nat_def not_less_eq_eq numeral_2_eq_2)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma res_decompose: \"\\<Turnstile>(re(c)  \\<^bold>\\<rightarrow> re(c) \\<^bold>\\<frown> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and> |lan u| = 1)", "proof (rule allI| rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "assume assm:\"ts,v \\<Turnstile>re(c)\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "then"], ["proof (chain)\npicking this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1", "obtain v1 and v2 \n    where 1:\"v=v1\\<parallel>v2\" and 2:\"\\<parallel>ext v1\\<parallel> > 0\" and 3:\"\\<parallel>ext v2\\<parallel> > 0\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        \\<lbrakk>v=v1\\<parallel>v2; 0 < \\<parallel>ext v1\\<parallel>;\n         0 < \\<parallel>ext v2\\<parallel>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using  view.horizontal_chop_non_empty"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1\n  0 < \\<parallel>ext ?v\\<parallel> \\<longrightarrow>\n  (\\<exists>u w.\n      ?v=u\\<parallel>w \\<and>\n      0 < \\<parallel>ext u\\<parallel> \\<and>\n      0 < \\<parallel>ext w\\<parallel>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        \\<lbrakk>v=v1\\<parallel>v2; 0 < \\<parallel>ext v1\\<parallel>;\n         0 < \\<parallel>ext v2\\<parallel>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v2\n  0 < \\<parallel>ext v1\\<parallel>\n  0 < \\<parallel>ext v2\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "then"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2\n  0 < \\<parallel>ext v1\\<parallel>\n  0 < \\<parallel>ext v2\\<parallel>", "have 4:\"|lan v1| = 1\" and 5:\"|lan v2| = 1\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  0 < \\<parallel>ext v1\\<parallel>\n  0 < \\<parallel>ext v2\\<parallel>\n\ngoal (1 subgoal):\n 1. |lan v1| = 1 &&& |lan v2| = 1", "using assm view.hchop_def"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  0 < \\<parallel>ext v1\\<parallel>\n  0 < \\<parallel>ext v2\\<parallel>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. |lan v1| = 1 &&& |lan v2| = 1", "by auto"], ["proof (state)\nthis:\n  |lan v1| = 1\n  |lan v2| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "then"], ["proof (chain)\npicking this:\n  |lan v1| = 1\n  |lan v2| = 1", "have 6:\"ts,v1 \\<Turnstile>re(c)\""], ["proof (prove)\nusing this:\n  |lan v1| = 1\n  |lan v2| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v1\\<parallel> \\<and>\n    len v1 ts c = ext v1 \\<and>\n    restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1", "by (metis 2 1  assm len_view_hchop_left  restriction.restrict_eq_lan_subs\n        restriction.restrict_view restriction.restriction_stable1)"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "from 5"], ["proof (chain)\npicking this:\n  |lan v2| = 1", "have 7:\"ts,v2 \\<Turnstile>re(c)\""], ["proof (prove)\nusing this:\n  |lan v2| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v2\\<parallel> \\<and>\n    len v2 ts c = ext v2 \\<and>\n    restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1", "by (metis \"1\" \"3\" \"6\" assm len_view_hchop_right restriction.restrict_eq_lan_subs\n        restriction.restrict_view restriction.restriction_stable)"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "from 1 and 6 and 7"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1", "show \"ts,v \\<Turnstile>re(c) \\<^bold>\\<frown> re(c)\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  len v1 ts c = ext v1 \\<and>\n  restrict v1 (res ts) c = lan v1 \\<and> |lan v1| = 1\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  len v2 ts c = ext v2 \\<and>\n  restrict v2 (res ts) c = lan v2 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       (0 < \\<parallel>ext va\\<parallel> \\<and>\n        len va ts c = ext va \\<and>\n        restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n       0 < \\<parallel>ext u\\<parallel> \\<and>\n       len u ts c = ext u \\<and>\n       restrict u (res ts) c = lan u \\<and> |lan u| = 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     0 < \\<parallel>ext u\\<parallel> \\<and>\n     len u ts c = ext u \\<and>\n     restrict u (res ts) c = lan u \\<and> |lan u| = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma res_compose: \"\\<Turnstile>(re(c) \\<^bold>\\<frown> re(c)  \\<^bold>\\<rightarrow> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1", "using  real_int.chop_dense len_compose_hchop hchop_def length_dense restrict_def"], ["proof (prove)\nusing this:\n  0 < \\<parallel>?r\\<parallel> \\<longrightarrow>\n  (\\<exists>s t.\n      R_Chop(?r,s,t) \\<and>\n      0 < \\<parallel>s\\<parallel> \\<and> 0 < \\<parallel>t\\<parallel>)\n  ?v=?v1.0\\<parallel>?v2.0 \\<and>\n  len ?v1.0 ?ts ?c = ext ?v1.0 \\<and>\n  len ?v2.0 ?ts ?c = ext ?v2.0 \\<longrightarrow>\n  len ?v ?ts ?c = ext ?v\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  \\<forall>ts v.\n     (0 < \\<parallel>ext v\\<parallel>) =\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>)\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1", "by (metis (no_types, lifting))"], ["", "lemma res_dense:\"\\<Turnstile>re(c) \\<^bold>\\<leftrightarrow> re(c) \\<^bold>\\<frown> re(c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (res ts) c = lan v \\<and> |lan v| = 1) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and> |lan u| = 1)", "using res_decompose res_compose"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (res ts) ?c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (0 < \\<parallel>ext va\\<parallel> \\<and>\n          len va ts ?c = ext va \\<and>\n          restrict va (res ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n         0 < \\<parallel>ext u\\<parallel> \\<and>\n         len u ts ?c = ext u \\<and>\n         restrict u (res ts) ?c = lan u \\<and> |lan u| = 1)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (0 < \\<parallel>ext va\\<parallel> \\<and>\n          len va ts ?c = ext va \\<and>\n          restrict va (res ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n         0 < \\<parallel>ext u\\<parallel> \\<and>\n         len u ts ?c = ext u \\<and>\n         restrict u (res ts) ?c = lan u \\<and>\n         |lan u| = 1) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (res ts) ?c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (res ts) c = lan v \\<and> |lan v| = 1) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and> |lan u| = 1)", "by blast"], ["", "lemma res_continuous :\"\\<Turnstile>(re(c)) \\<^bold>\\<rightarrow> (\\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown> ( \\<^bold>\\<not>re(c) \\<^bold>\\<and> \\<^bold>\\<l> > 0) \\<^bold>\\<frown> \\<^bold>\\<top>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (res ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                0 < \\<parallel>ext v\\<parallel>) \\<and>\n               True))", "by (metis (no_types, lifting) hchop_def len_view_hchop_left len_view_hchop_right\n      restrict_def)"], ["", "lemma no_clm_before_res:\"\\<Turnstile>\\<^bold>\\<not>(cl(c) \\<^bold>\\<frown> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (res ts) c = lan u \\<and> |lan u| = 1", "by (metis (no_types, lifting) nat_int.card_empty_zero nat_int.card_subset_le\n      disjoint hchop_def inf_assoc inf_le1 not_one_le_zero restrict_def)"], ["", "lemma no_clm_before_res2:\"\\<Turnstile>\\<^bold>\\<not> (cl(c) \\<^bold>\\<frown> \\<^bold>\\<top> \\<^bold>\\<frown> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              True \\<and>\n              0 < \\<parallel>ext ua\\<parallel> \\<and>\n              len ua ts c = ext ua \\<and>\n              restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>ts v.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  (0 < \\<parallel>ext va\\<parallel> \\<and>\n                   len va ts c = ext va \\<and>\n                   restrict va (clm ts) c = lan va \\<and>\n                   |lan va| = 1) \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      True \\<and>\n                      0 < \\<parallel>ext ua\\<parallel> \\<and>\n                      len ua ts c = ext ua \\<and>\n                      restrict ua (res ts) c = lan ua \\<and>\n                      |lan ua| = 1)) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<Turnstile> \\<^bold>\\<not> (cl(c) \\<^bold>\\<frown> \\<^bold>\\<top> \\<^bold>\\<frown> re(c)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>ts v.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                (0 < \\<parallel>ext va\\<parallel> \\<and>\n                 len va ts c = ext va \\<and>\n                 restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    True \\<and>\n                    0 < \\<parallel>ext ua\\<parallel> \\<and>\n                    len ua ts c = ext ua \\<and>\n                    restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>ts v.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  (0 < \\<parallel>ext va\\<parallel> \\<and>\n                   len va ts c = ext va \\<and>\n                   restrict va (clm ts) c = lan va \\<and>\n                   |lan va| = 1) \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      True \\<and>\n                      0 < \\<parallel>ext ua\\<parallel> \\<and>\n                      len ua ts c = ext ua \\<and>\n                      restrict ua (res ts) c = lan ua \\<and>\n                      |lan ua| = 1)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>ts v.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                (0 < \\<parallel>ext va\\<parallel> \\<and>\n                 len va ts c = ext va \\<and>\n                 restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    True \\<and>\n                    0 < \\<parallel>ext ua\\<parallel> \\<and>\n                    len ua ts c = ext ua \\<and>\n                    restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1))", "obtain ts and v where assm:\"ts,v \\<Turnstile> (cl(c) \\<^bold>\\<frown> \\<^bold>\\<top> \\<^bold>\\<frown> re(c))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>ts v.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                (0 < \\<parallel>ext va\\<parallel> \\<and>\n                 len va ts c = ext va \\<and>\n                 restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    True \\<and>\n                    0 < \\<parallel>ext ua\\<parallel> \\<and>\n                    len ua ts c = ext ua \\<and>\n                    restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1))\n\ngoal (1 subgoal):\n 1. (\\<And>v ts.\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               True \\<and>\n               0 < \\<parallel>ext ua\\<parallel> \\<and>\n               len ua ts c = ext ua \\<and>\n               restrict ua (res ts) c = lan ua \\<and>\n               |lan ua| = 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>ts v.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  (0 < \\<parallel>ext va\\<parallel> \\<and>\n                   len va ts c = ext va \\<and>\n                   restrict va (clm ts) c = lan va \\<and>\n                   |lan va| = 1) \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      True \\<and>\n                      0 < \\<parallel>ext ua\\<parallel> \\<and>\n                      len ua ts c = ext ua \\<and>\n                      restrict ua (res ts) c = lan ua \\<and>\n                      |lan ua| = 1)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)", "have clm_subs:\"restrict v (clm ts) c = restrict v (res ts) c\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = restrict v (res ts) c", "using restriction_stable"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?u ?f ?c = restrict ?w ?f ?c\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = restrict v (res ts) c", "by (metis (no_types, lifting) hchop_def restrict_def)"], ["proof (state)\nthis:\n  restrict v (clm ts) c = restrict v (res ts) c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>ts v.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  (0 < \\<parallel>ext va\\<parallel> \\<and>\n                   len va ts c = ext va \\<and>\n                   restrict va (clm ts) c = lan va \\<and>\n                   |lan va| = 1) \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      True \\<and>\n                      0 < \\<parallel>ext ua\\<parallel> \\<and>\n                      len ua ts c = ext ua \\<and>\n                      restrict ua (res ts) c = lan ua \\<and>\n                      |lan ua| = 1)) \\<Longrightarrow>\n    False", "have \"restrict v (clm ts )c \\<noteq> \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot", "using assm nat_int.card_non_empty_geq_one restriction_stable1"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         True \\<and>\n         0 < \\<parallel>ext ua\\<parallel> \\<and>\n         len ua ts c = ext ua \\<and>\n         restrict ua (res ts) c = lan ua \\<and> |lan ua| = 1)\n  (?i \\<noteq> bot) = (1 \\<le> |?i|)\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?u ?f ?c\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot", "by auto"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>ts v.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  (0 < \\<parallel>ext va\\<parallel> \\<and>\n                   len va ts c = ext va \\<and>\n                   restrict va (clm ts) c = lan va \\<and>\n                   |lan va| = 1) \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      True \\<and>\n                      0 < \\<parallel>ext ua\\<parallel> \\<and>\n                      len ua ts c = ext ua \\<and>\n                      restrict ua (res ts) c = lan ua \\<and>\n                      |lan ua| = 1)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  restrict v (clm ts) c \\<noteq> bot", "have res_in_neq:\"restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq>\\<emptyset>\""], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq> bot", "using clm_subs inf_absorb1"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot\n  restrict v (clm ts) c = restrict v (res ts) c\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<sqinter> ?y = ?x\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq> bot", "by (simp )"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>ts v.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  (0 < \\<parallel>ext va\\<parallel> \\<and>\n                   len va ts c = ext va \\<and>\n                   restrict va (clm ts) c = lan va \\<and>\n                   |lan va| = 1) \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      True \\<and>\n                      0 < \\<parallel>ext ua\\<parallel> \\<and>\n                      len ua ts c = ext ua \\<and>\n                      restrict ua (res ts) c = lan ua \\<and>\n                      |lan ua| = 1)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq> bot", "show False"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "using restriction_clm_res_disjoint"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<sqinter> restrict v (res ts) c \\<noteq> bot\n  restrict ?v (res ?ts) ?c \\<sqinter> restrict ?v (clm ?ts) ?c = bot\n\ngoal (1 subgoal):\n 1. False", "by (metis inf_commute restriction.restriction_clm_res_disjoint)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma clm_decompose: \"\\<Turnstile>(cl(c)  \\<^bold>\\<rightarrow> cl(c) \\<^bold>\\<frown> cl(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (clm ts) c = lan u \\<and> |lan u| = 1)", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "assume assm: \"ts,v \\<Turnstile> cl(c)\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "have restr:\"restrict v (clm ts) c = lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = lan v", "using assm"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = lan v", "by simp"], ["proof (state)\nthis:\n  restrict v (clm ts) c = lan v\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "have len_ge_zero:\"\\<parallel>len v ts c\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v ts c\\<parallel>", "using assm"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v ts c\\<parallel>", "by simp"], ["proof (state)\nthis:\n  0 < \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "have len:\"len v ts c = ext v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len v ts c = ext v", "using assm"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. len v ts c = ext v", "by simp"], ["proof (state)\nthis:\n  len v ts c = ext v\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "obtain v1 v2 where chop:\"(v=v1\\<parallel>v2) \\<and> \\<parallel>ext v1\\<parallel> > 0 \\<and> \\<parallel>ext v2\\<parallel> > 0 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v=v1\\<parallel>v2 \\<and>\n        0 < \\<parallel>ext v1\\<parallel> \\<and>\n        0 < \\<parallel>ext v2\\<parallel> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assm view.horizontal_chop_non_empty"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n  0 < \\<parallel>ext ?v\\<parallel> \\<longrightarrow>\n  (\\<exists>u w.\n      ?v=u\\<parallel>w \\<and>\n      0 < \\<parallel>ext u\\<parallel> \\<and>\n      0 < \\<parallel>ext w\\<parallel>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v=v1\\<parallel>v2 \\<and>\n        0 < \\<parallel>ext v1\\<parallel> \\<and>\n        0 < \\<parallel>ext v2\\<parallel> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using length_split"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n  0 < \\<parallel>ext ?v\\<parallel> \\<longrightarrow>\n  (\\<exists>u w.\n      ?v=u\\<parallel>w \\<and>\n      0 < \\<parallel>ext u\\<parallel> \\<and>\n      0 < \\<parallel>ext w\\<parallel>)\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v=v1\\<parallel>v2 \\<and>\n        0 < \\<parallel>ext v1\\<parallel> \\<and>\n        0 < \\<parallel>ext v2\\<parallel> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "from chop and len"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v ts c = ext v", "have len_v1:\"len v1 ts c = ext v1\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v ts c = ext v\n\ngoal (1 subgoal):\n 1. len v1 ts c = ext v1", "using len_view_hchop_left"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v ts c = ext v\n  len ?v ?ts ?c = ext ?v \\<and> ?v=?v1.0\\<parallel>?v2.0 \\<longrightarrow>\n  len ?v1.0 ?ts ?c = ext ?v1.0\n\ngoal (1 subgoal):\n 1. len v1 ts c = ext v1", "by blast"], ["proof (state)\nthis:\n  len v1 ts c = ext v1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "from chop and len"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v ts c = ext v", "have len_v2:\"len v2 ts c = ext v2\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v ts c = ext v\n\ngoal (1 subgoal):\n 1. len v2 ts c = ext v2", "using len_view_hchop_right"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v ts c = ext v\n  len ?v ?ts ?c = ext ?v \\<and> ?v=?v1.0\\<parallel>?v2.0 \\<longrightarrow>\n  len ?v2.0 ?ts ?c = ext ?v2.0\n\ngoal (1 subgoal):\n 1. len v2 ts c = ext v2", "by blast"], ["proof (state)\nthis:\n  len v2 ts c = ext v2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "from chop and restr"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  restrict v (clm ts) c = lan v", "have restr_v1:\"restrict v1 (clm ts) c = lan v1\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  restrict v (clm ts) c = lan v\n\ngoal (1 subgoal):\n 1. restrict v1 (clm ts) c = lan v1", "by (metis (no_types, lifting) hchop_def restriction.restriction_stable1)"], ["proof (state)\nthis:\n  restrict v1 (clm ts) c = lan v1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "from chop and restr"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  restrict v (clm ts) c = lan v", "have restr_v2:\"restrict v2 (clm ts) c = lan v2\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  restrict v (clm ts) c = lan v\n\ngoal (1 subgoal):\n 1. restrict v2 (clm ts) c = lan v2", "by (metis (no_types, lifting) hchop_def restriction.restriction_stable2)"], ["proof (state)\nthis:\n  restrict v2 (clm ts) c = lan v2\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           len va ts c = ext va \\<and>\n           restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          len u ts c = ext u \\<and>\n          restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "from chop and len_v1 len_v2 restr_v1 restr_v2"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v1 ts c = ext v1\n  len v2 ts c = ext v2\n  restrict v1 (clm ts) c = lan v1\n  restrict v2 (clm ts) c = lan v2", "show \"ts,v \\<Turnstile>cl(c) \\<^bold>\\<frown> cl(c)\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v1 ts c = ext v1\n  len v2 ts c = ext v2\n  restrict v1 (clm ts) c = lan v1\n  restrict v2 (clm ts) c = lan v2\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       (0 < \\<parallel>ext va\\<parallel> \\<and>\n        len va ts c = ext va \\<and>\n        restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n       0 < \\<parallel>ext u\\<parallel> \\<and>\n       len u ts c = ext u \\<and>\n       restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "using hchop_def assm"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  len v1 ts c = ext v1\n  len v2 ts c = ext v2\n  restrict v1 (clm ts) c = lan v1\n  restrict v2 (clm ts) c = lan v2\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       (0 < \\<parallel>ext va\\<parallel> \\<and>\n        len va ts c = ext va \\<and>\n        restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n       0 < \\<parallel>ext u\\<parallel> \\<and>\n       len u ts c = ext u \\<and>\n       restrict u (clm ts) c = lan u \\<and> |lan u| = 1", "by force"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      len va ts c = ext va \\<and>\n      restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n     0 < \\<parallel>ext u\\<parallel> \\<and>\n     len u ts c = ext u \\<and>\n     restrict u (clm ts) c = lan u \\<and> |lan u| = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma clm_compose: \"\\<Turnstile>(cl(c) \\<^bold>\\<frown> cl(c)  \\<^bold>\\<rightarrow> cl(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (clm ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "using  real_int.chop_dense len_compose_hchop hchop_def length_dense restrict_def"], ["proof (prove)\nusing this:\n  0 < \\<parallel>?r\\<parallel> \\<longrightarrow>\n  (\\<exists>s t.\n      R_Chop(?r,s,t) \\<and>\n      0 < \\<parallel>s\\<parallel> \\<and> 0 < \\<parallel>t\\<parallel>)\n  ?v=?v1.0\\<parallel>?v2.0 \\<and>\n  len ?v1.0 ?ts ?c = ext ?v1.0 \\<and>\n  len ?v2.0 ?ts ?c = ext ?v2.0 \\<longrightarrow>\n  len ?v ?ts ?c = ext ?v\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  \\<forall>ts v.\n     (0 < \\<parallel>ext v\\<parallel>) =\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>)\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (clm ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "by (metis (no_types, lifting))"], ["", "lemma clm_dense:\"\\<Turnstile>cl(c) \\<^bold>\\<leftrightarrow> cl(c) \\<^bold>\\<frown> cl(c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (clm ts) c = lan v \\<and> |lan v| = 1) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (clm ts) c = lan u \\<and> |lan u| = 1)", "using clm_decompose clm_compose"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (clm ts) ?c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (0 < \\<parallel>ext va\\<parallel> \\<and>\n          len va ts ?c = ext va \\<and>\n          restrict va (clm ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n         0 < \\<parallel>ext u\\<parallel> \\<and>\n         len u ts ?c = ext u \\<and>\n         restrict u (clm ts) ?c = lan u \\<and> |lan u| = 1)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (0 < \\<parallel>ext va\\<parallel> \\<and>\n          len va ts ?c = ext va \\<and>\n          restrict va (clm ts) ?c = lan va \\<and> |lan va| = 1) \\<and>\n         0 < \\<parallel>ext u\\<parallel> \\<and>\n         len u ts ?c = ext u \\<and>\n         restrict u (clm ts) ?c = lan u \\<and>\n         |lan u| = 1) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (clm ts) ?c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (clm ts) c = lan v \\<and> |lan v| = 1) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (clm ts) c = lan u \\<and> |lan u| = 1)", "by blast"], ["", "lemma clm_continuous :\"\\<Turnstile>(cl(c)) \\<^bold>\\<rightarrow> (\\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( \\<^bold>\\<not>cl(c) \\<^bold>\\<and> \\<^bold>\\<l> > 0) \\<^bold>\\<frown> \\<^bold>\\<top>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts c = ext v \\<and>\n                        restrict v (clm ts) c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                0 < \\<parallel>ext v\\<parallel>) \\<and>\n               True))", "by (metis (no_types, lifting) hchop_def len_view_hchop_left len_view_hchop_right\n      restrict_def)"], ["", "lemma res_not_free: \"\\<Turnstile>(\\<^bold>\\<exists> c. re(c) \\<^bold>\\<rightarrow> \\<^bold>\\<not>free)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<exists>x.\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n          \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  |lan v| = 1 \\<and>\n                  (\\<forall>c.\n                      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                      restrict v (clm ts) c = bot \\<and>\n                      restrict v (res ts) c = bot))", "using nat_int.card_empty_zero one_neq_zero"], ["proof (prove)\nusing this:\n  |bot| = 0\n  (1::?'a) \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<exists>x.\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n          \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  |lan v| = 1 \\<and>\n                  (\\<forall>c.\n                      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                      restrict v (clm ts) c = bot \\<and>\n                      restrict v (res ts) c = bot))", "by auto"], ["", "lemma clm_not_free: \"\\<Turnstile>(\\<^bold>\\<exists> c. cl(c) \\<^bold>\\<rightarrow> \\<^bold>\\<not>free)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<exists>x.\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n          \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  |lan v| = 1 \\<and>\n                  (\\<forall>c.\n                      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                      restrict v (clm ts) c = bot \\<and>\n                      restrict v (res ts) c = bot))", "using nat_int.card_empty_zero"], ["proof (prove)\nusing this:\n  |bot| = 0\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<exists>x.\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n          \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  |lan v| = 1 \\<and>\n                  (\\<forall>c.\n                      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                      restrict v (clm ts) c = bot \\<and>\n                      restrict v (res ts) c = bot))", "by auto"], ["", "lemma free_no_res:\"\\<Turnstile>(free \\<^bold>\\<rightarrow>  \\<^bold>\\<not>(\\<^bold>\\<exists> c. re(c)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (res ts) x = lan v \\<and> |lan v| = 1)", "using nat_int.card_empty_zero one_neq_zero"], ["proof (prove)\nusing this:\n  |bot| = 0\n  (1::?'a) \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (res ts) x = lan v \\<and> |lan v| = 1)", "by (metis less_irrefl)"], ["", "lemma free_no_clm:\"\\<Turnstile>(free \\<^bold>\\<rightarrow>  \\<^bold>\\<not>(\\<^bold>\\<exists> c. cl(c)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (clm ts) x = lan v \\<and> |lan v| = 1)", "using nat_int.card_empty_zero one_neq_zero"], ["proof (prove)\nusing this:\n  |bot| = 0\n  (1::?'a) \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (clm ts) x = lan v \\<and> |lan v| = 1)", "by (metis less_irrefl)"], ["", "lemma free_decompose:\"\\<Turnstile>free \\<^bold>\\<rightarrow> ( free \\<^bold>\\<frown> free)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            |lan va| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n                restrict va (clm ts) c = bot \\<and>\n                restrict va (res ts) c = bot)) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           |lan u| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n               restrict u (clm ts) c = bot \\<and>\n               restrict u (res ts) c = bot))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "assume assm:\"ts,v \\<Turnstile>free\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "obtain v1 and v2 \n    where non_empty_v1_v2:\"(v=v1\\<parallel>v2) \\<and> \\<parallel>ext v1\\<parallel> > 0 \\<and> \\<parallel>ext v2\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v=v1\\<parallel>v2 \\<and>\n        0 < \\<parallel>ext v1\\<parallel> \\<and>\n        0 < \\<parallel>ext v2\\<parallel> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assm length_dense"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n  \\<forall>ts v.\n     (0 < \\<parallel>ext v\\<parallel>) =\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2.\n        v=v1\\<parallel>v2 \\<and>\n        0 < \\<parallel>ext v1\\<parallel> \\<and>\n        0 < \\<parallel>ext v2\\<parallel> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "have one_lane:\"|lan v1| = 1 \\<and> |lan v2| = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |lan v1| = 1 \\<and> |lan v2| = 1", "using assm hchop_def non_empty_v1_v2"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n\ngoal (1 subgoal):\n 1. |lan v1| = 1 \\<and> |lan v2| = 1", "by auto"], ["proof (state)\nthis:\n  |lan v1| = 1 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "have nothing_on_v1:\n    \" (\\<forall>c. \\<parallel>len v1 ts c\\<parallel> = 0 \n        \\<or> (restrict v1 (clm ts) c = \\<emptyset> \\<and> restrict v1 (res ts) c = \\<emptyset>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n       restrict v1 (clm ts) c = bot \\<and> restrict v1 (res ts) c = bot", "by (metis (no_types, lifting) assm len_empty_on_subview1 non_empty_v1_v2\n        restriction_stable1)"], ["proof (state)\nthis:\n  \\<forall>c.\n     \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n     restrict v1 (clm ts) c = bot \\<and> restrict v1 (res ts) c = bot\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "have nothing_on_v2:\n    \" (\\<forall>c. \\<parallel>len v2 ts c\\<parallel> = 0 \n        \\<or> (restrict v2 (clm ts) c = \\<emptyset> \\<and> restrict v2 (res ts) c = \\<emptyset>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n       restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot", "by (metis (no_types, lifting) assm len_empty_on_subview2 non_empty_v1_v2\n        restriction_stable2)"], ["proof (state)\nthis:\n  \\<forall>c.\n     \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n     restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "have  \n    \"(v=v1\\<parallel>v2) \n    \\<and> 0 < \\<parallel>ext v1\\<parallel> \\<and> |lan v1| = 1 \n    \\<and> (\\<forall>c. \\<parallel>len v1 ts c\\<parallel> = 0 \n        \\<or>( restrict v1 (clm ts) c = \\<emptyset> \\<and> restrict v1 (res ts) c = \\<emptyset>))\n    \\<and> 0 < \\<parallel>ext v2\\<parallel> \\<and> |lan v2| = 1\n    \\<and> (\\<forall>c. \\<parallel>len v2 ts c\\<parallel> = 0 \n        \\<or>( restrict v2 (clm ts) c = \\<emptyset> \\<and> restrict v2 (res ts) c = \\<emptyset>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=v1\\<parallel>v2 \\<and>\n    0 < \\<parallel>ext v1\\<parallel> \\<and>\n    |lan v1| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n        restrict v1 (clm ts) c = bot \\<and>\n        restrict v1 (res ts) c = bot) \\<and>\n    0 < \\<parallel>ext v2\\<parallel> \\<and>\n    |lan v2| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n        restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot)", "using non_empty_v1_v2 nothing_on_v1 nothing_on_v2 one_lane"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and> 0 < \\<parallel>ext v2\\<parallel>\n  \\<forall>c.\n     \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n     restrict v1 (clm ts) c = bot \\<and> restrict v1 (res ts) c = bot\n  \\<forall>c.\n     \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n     restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot\n  |lan v1| = 1 \\<and> |lan v2| = 1\n\ngoal (1 subgoal):\n 1. v=v1\\<parallel>v2 \\<and>\n    0 < \\<parallel>ext v1\\<parallel> \\<and>\n    |lan v1| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n        restrict v1 (clm ts) c = bot \\<and>\n        restrict v1 (res ts) c = bot) \\<and>\n    0 < \\<parallel>ext v2\\<parallel> \\<and>\n    |lan v2| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n        restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot)", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  |lan v1| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n      restrict v1 (clm ts) c = bot \\<and>\n      restrict v1 (res ts) c = bot) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  |lan v2| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n      restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot)", "then"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  |lan v1| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n      restrict v1 (clm ts) c = bot \\<and>\n      restrict v1 (res ts) c = bot) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  |lan v2| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n      restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot)", "show \"ts,v \\<Turnstile>(free \\<^bold>\\<frown> free)\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2 \\<and>\n  0 < \\<parallel>ext v1\\<parallel> \\<and>\n  |lan v1| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v1 ts c\\<parallel> = 0 \\<or>\n      restrict v1 (clm ts) c = bot \\<and>\n      restrict v1 (res ts) c = bot) \\<and>\n  0 < \\<parallel>ext v2\\<parallel> \\<and>\n  |lan v2| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v2 ts c\\<parallel> = 0 \\<or>\n      restrict v2 (clm ts) c = bot \\<and> restrict v2 (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       (0 < \\<parallel>ext va\\<parallel> \\<and>\n        |lan va| = 1 \\<and>\n        (\\<forall>c.\n            \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n            restrict va (clm ts) c = bot \\<and>\n            restrict va (res ts) c = bot)) \\<and>\n       0 < \\<parallel>ext u\\<parallel> \\<and>\n       |lan u| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n           restrict u (clm ts) c = bot \\<and> restrict u (res ts) c = bot)", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      |lan va| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n          restrict va (clm ts) c = bot \\<and>\n          restrict va (res ts) c = bot)) \\<and>\n     0 < \\<parallel>ext u\\<parallel> \\<and>\n     |lan u| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n         restrict u (clm ts) c = bot \\<and> restrict u (res ts) c = bot)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma free_compose:\"\\<Turnstile>(free \\<^bold>\\<frown> free) \\<^bold>\\<rightarrow> free\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            |lan va| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n                restrict va (clm ts) c = bot \\<and>\n                restrict va (res ts) c = bot)) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           |lan u| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n               restrict u (clm ts) c = bot \\<and>\n               restrict u (res ts) c = bot)) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "assume assm:\"ts,v \\<Turnstile>free \\<^bold>\\<frown> free\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      |lan va| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n          restrict va (clm ts) c = bot \\<and>\n          restrict va (res ts) c = bot)) \\<and>\n     0 < \\<parallel>ext u\\<parallel> \\<and>\n     |lan u| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n         restrict u (clm ts) c = bot \\<and> restrict u (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "have len_ge_0:\"\\<parallel>ext v\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel>", "using assm length_meld"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      |lan va| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n          restrict va (clm ts) c = bot \\<and>\n          restrict va (res ts) c = bot)) \\<and>\n     0 < \\<parallel>ext u\\<parallel> \\<and>\n     |lan u| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n         restrict u (clm ts) c = bot \\<and> restrict u (res ts) c = bot)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         0 < \\<parallel>ext va\\<parallel> \\<and>\n         0 < \\<parallel>ext u\\<parallel>) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel>\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel>", "by blast"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "have widt_one:\"|lan v| = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |lan v| = 1", "using assm"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     (0 < \\<parallel>ext va\\<parallel> \\<and>\n      |lan va| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n          restrict va (clm ts) c = bot \\<and>\n          restrict va (res ts) c = bot)) \\<and>\n     0 < \\<parallel>ext u\\<parallel> \\<and>\n     |lan u| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n         restrict u (clm ts) c = bot \\<and> restrict u (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. |lan v| = 1", "by (metis horizontal_chop_width_stable)"], ["proof (state)\nthis:\n  |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "have no_car:\n    \"(\\<forall>c. \\<parallel>len v ts c\\<parallel> = 0 \\<or> restrict v (clm ts) c = \\<emptyset> \\<and> restrict v (res ts) c = \\<emptyset>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n       restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot) \\<Longrightarrow>\n    False", "assume \n      \"\\<not>(\\<forall>c. \\<parallel>len v ts c\\<parallel> = 0 \n           \\<or> (restrict v (clm ts) c = \\<emptyset> \\<and> restrict v (res ts) c = \\<emptyset>))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>c.\n             \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n             restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>c.\n             \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n             restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "obtain c \n      where ex:\n        \"\\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and> (restrict v (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict v (res ts) c \\<noteq> \\<emptyset>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>c.\n             \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n             restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and>\n        (restrict v (clm ts) c \\<noteq> bot \\<or>\n         restrict v (res ts) c \\<noteq> bot) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot) \\<Longrightarrow>\n    False", "from ex"], ["proof (chain)\npicking this:\n  \\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)", "have 1:\"\\<parallel>len v ts c\\<parallel> > 0\""], ["proof (prove)\nusing this:\n  \\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v ts c\\<parallel>", "using less_eq_real_def real_int.length_ge_zero"], ["proof (prove)\nusing this:\n  \\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n  0 \\<le> \\<parallel>?r\\<parallel>\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v ts c\\<parallel>", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot) \\<Longrightarrow>\n    False", "have \"(restrict v (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict v (res ts) c \\<noteq> \\<emptyset>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot \\<or>\n    restrict v (res ts) c \\<noteq> bot", "using ex"], ["proof (prove)\nusing this:\n  \\<parallel>len v ts c\\<parallel> \\<noteq> 0 \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot \\<or>\n    restrict v (res ts) c \\<noteq> bot", ".."], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot", "show False"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "assume \"restrict v (clm ts) c \\<noteq> \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  restrict v (clm ts) c \\<noteq> bot", "show False"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, hide_lams) assm add.left_neutral ex len_hchop_add\n            restriction.restrict_def view.hchop_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "assume \"restrict v (res ts) c \\<noteq> \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  restrict v (res ts) c \\<noteq> bot", "show False"], ["proof (prove)\nusing this:\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, hide_lams) assm add.left_neutral ex len_hchop_add \n            restriction.restrict_def view.hchop_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>c.\n     \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n     restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          (0 < \\<parallel>ext va\\<parallel> \\<and>\n           |lan va| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n               restrict va (clm ts) c = bot \\<and>\n               restrict va (res ts) c = bot)) \\<and>\n          0 < \\<parallel>ext u\\<parallel> \\<and>\n          |lan u| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n              restrict u (clm ts) c = bot \\<and>\n              restrict u (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "show \"ts,v \\<Turnstile>free\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    |lan v| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n        restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "using len_ge_0 widt_one no_car"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel>\n  |lan v| = 1\n  \\<forall>c.\n     \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n     restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    |lan v| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n        restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "by blast"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma free_dense:\"\\<Turnstile>free \\<^bold>\\<leftrightarrow> (free \\<^bold>\\<frown> free)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        |lan v| = 1 \\<and>\n        (\\<forall>c.\n            \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n            restrict v (clm ts) c = bot \\<and>\n            restrict v (res ts) c = bot)) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            |lan va| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n                restrict va (clm ts) c = bot \\<and>\n                restrict va (res ts) c = bot)) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           |lan u| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n               restrict u (clm ts) c = bot \\<and>\n               restrict u (res ts) c = bot))", "using free_decompose free_compose"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     |lan v| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n         restrict v (clm ts) c = bot \\<and>\n         restrict v (res ts) c = bot) \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (0 < \\<parallel>ext va\\<parallel> \\<and>\n          |lan va| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n              restrict va (clm ts) c = bot \\<and>\n              restrict va (res ts) c = bot)) \\<and>\n         0 < \\<parallel>ext u\\<parallel> \\<and>\n         |lan u| = 1 \\<and>\n         (\\<forall>c.\n             \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n             restrict u (clm ts) c = bot \\<and>\n             restrict u (res ts) c = bot))\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         (0 < \\<parallel>ext va\\<parallel> \\<and>\n          |lan va| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n              restrict va (clm ts) c = bot \\<and>\n              restrict va (res ts) c = bot)) \\<and>\n         0 < \\<parallel>ext u\\<parallel> \\<and>\n         |lan u| = 1 \\<and>\n         (\\<forall>c.\n             \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n             restrict u (clm ts) c = bot \\<and>\n             restrict u (res ts) c = bot)) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     |lan v| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n         restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        |lan v| = 1 \\<and>\n        (\\<forall>c.\n            \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n            restrict v (clm ts) c = bot \\<and>\n            restrict v (res ts) c = bot)) =\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            |lan va| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len va ts c\\<parallel> = 0 \\<or>\n                restrict va (clm ts) c = bot \\<and>\n                restrict va (res ts) c = bot)) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           |lan u| = 1 \\<and>\n           (\\<forall>c.\n               \\<parallel>len u ts c\\<parallel> = 0 \\<or>\n               restrict u (clm ts) c = bot \\<and>\n               restrict u (res ts) c = bot))", "by blast"], ["", "lemma free_dense2:\"\\<Turnstile>free \\<^bold>\\<rightarrow> \\<^bold>\\<top> \\<^bold>\\<frown> free \\<^bold>\\<frown> \\<^bold>\\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                |lan v| = 1 \\<and>\n                (\\<forall>c.\n                    \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                    restrict v (clm ts) c = bot \\<and>\n                    restrict v (res ts) c = bot)) \\<and>\n               True))", "using horizontal_chop_empty_left horizontal_chop_empty_right"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=u\\<parallel>v\n  \\<forall>v. \\<exists>u. v=v\\<parallel>u\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                |lan v| = 1 \\<and>\n                (\\<forall>c.\n                    \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                    restrict v (clm ts) c = bot \\<and>\n                    restrict v (res ts) c = bot)) \\<and>\n               True))", "by fastforce"], ["", "text \\<open>\nThe next lemmas show the connection between the spatial. In particular,\nif the view consists of one lane and a non-zero extension, where neither\na reservation nor a car resides, the view satisfies free (and vice versa). \n\\<close>"], ["", "lemma no_cars_means_free:\n  \"\\<Turnstile>((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>))) \\<^bold>\\<rightarrow> free\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "assume assm:\n    \"ts,v \\<Turnstile> ((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>x.\n      \\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n              0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "have ge_0:\"ts,v \\<Turnstile> \\<^bold>\\<l> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel>", "using assm"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>x.\n      \\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n              0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel>", "by best"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "have one_lane:\"ts,v \\<Turnstile>\\<^bold>\\<omega> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |lan v| = 1", "using assm"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>x.\n      \\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n              0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. |lan v| = 1", "by best"], ["proof (state)\nthis:\n  |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "show \"ts,v \\<Turnstile> free\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    |lan v| = 1 \\<and>\n    (\\<forall>c.\n        \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n        restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "have no_car: \"ts,v \\<Turnstile>\\<^bold>\\<not>( \\<^bold>\\<exists> c.  (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>x va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "using assm"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>x.\n      \\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n              0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<nexists>x va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by best"], ["proof (state)\nthis:\n  \\<nexists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "assume \"ts,v \\<Turnstile> \\<^bold>\\<not> free\""], ["proof (state)\nthis:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "hence contra:\n      \"\\<not>(\\<forall>c. \\<parallel>len v ts c\\<parallel> = 0 \\<or> restrict v (clm ts) c = \\<emptyset> \\<and> restrict v (res ts) c = \\<emptyset>)\""], ["proof (prove)\nusing this:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot)", "using ge_0 one_lane"], ["proof (prove)\nusing this:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n  0 < \\<parallel>ext v\\<parallel>\n  |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>c.\n               \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n               restrict v (clm ts) c = bot \\<and>\n               restrict v (res ts) c = bot)", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<forall>c.\n             \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n             restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "hence ex_car:\n      \"\\<exists>c. \\<parallel>len v ts c\\<parallel> > 0 \\<and> (restrict v (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict v (res ts) c \\<noteq> \\<emptyset>)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>c.\n             \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n             restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       0 < \\<parallel>len v ts c\\<parallel> \\<and>\n       (restrict v (clm ts) c \\<noteq> bot \\<or>\n        restrict v (res ts) c \\<noteq> bot)", "using real_int.length_ge_zero dual_order.antisym not_le"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>c.\n             \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n             restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n  0 \\<le> \\<parallel>?r\\<parallel>\n  \\<lbrakk>?b \\<le> ?a; ?a \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>c.\n       0 < \\<parallel>len v ts c\\<parallel> \\<and>\n       (restrict v (clm ts) c \\<noteq> bot \\<or>\n        restrict v (res ts) c \\<noteq> bot)", "by metis"], ["proof (state)\nthis:\n  \\<exists>c.\n     0 < \\<parallel>len v ts c\\<parallel> \\<and>\n     (restrict v (clm ts) c \\<noteq> bot \\<or>\n      restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "obtain c where c_def:\n      \"\\<parallel>len v ts c\\<parallel> > 0 \\<and> (restrict v (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict v (res ts) c \\<noteq> \\<emptyset>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        0 < \\<parallel>len v ts c\\<parallel> \\<and>\n        (restrict v (clm ts) c \\<noteq> bot \\<or>\n         restrict v (res ts) c \\<noteq> bot) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_car"], ["proof (prove)\nusing this:\n  \\<exists>c.\n     0 < \\<parallel>len v ts c\\<parallel> \\<and>\n     (restrict v (clm ts) c \\<noteq> bot \\<or>\n      restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        0 < \\<parallel>len v ts c\\<parallel> \\<and>\n        (restrict v (clm ts) c \\<noteq> bot \\<or>\n         restrict v (res ts) c \\<noteq> bot) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "hence \"(restrict v (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict v (res ts) c \\<noteq> \\<emptyset>)\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot \\<or>\n    restrict v (res ts) c \\<noteq> bot", "by best"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot)) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "assume \"restrict v (clm ts) c \\<noteq> \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "with one_lane"], ["proof (chain)\npicking this:\n  |lan v| = 1\n  restrict v (clm ts) c \\<noteq> bot", "have clm_one:\"|restrict v (clm ts) c| = 1\""], ["proof (prove)\nusing this:\n  |lan v| = 1\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| = 1", "using el_in_restriction_clm_singleton"], ["proof (prove)\nusing this:\n  |lan v| = 1\n  restrict v (clm ts) c \\<noteq> bot\n  ?n \\<^bold>\\<in> restrict ?v (clm ?ts) ?c \\<longrightarrow>\n  clm ?ts ?c = Abs_nat_int {?n}\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| = 1", "by (metis card_non_empty_geq_one dual_order.antisym restriction.restriction_clm_leq_one)"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| = 1\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "obtain v1 and v2 and v3 and v4 \n        where \"v=v1\\<parallel>v2\" and \"v2=v3\\<parallel>v4\" \n          and len_eq:\"len v3 ts c = ext v3 \\<and> \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v1 v2 v3 v4.\n        \\<lbrakk>v=v1\\<parallel>v2; v2=v3\\<parallel>v4;\n         len v3 ts c = ext v3 \\<and>\n         \\<parallel>len v3 ts c\\<parallel> =\n         \\<parallel>len v ts c\\<parallel>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using horizontal_chop_empty_left horizontal_chop_empty_right \n          len_fills_subview c_def"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=u\\<parallel>v\n  \\<forall>v. \\<exists>u. v=v\\<parallel>u\n  0 < \\<parallel>len ?v ?ts ?c\\<parallel> \\<longrightarrow>\n  (\\<exists>v1 v2 v3 v'.\n      ?v=v1\\<parallel>v2 \\<and>\n      v2=v'\\<parallel>v3 \\<and>\n      len v' ?ts ?c = ext v' \\<and>\n      \\<parallel>len v' ?ts ?c\\<parallel> =\n      \\<parallel>len ?v ?ts ?c\\<parallel>)\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2 v3 v4.\n        \\<lbrakk>v=v1\\<parallel>v2; v2=v3\\<parallel>v4;\n         len v3 ts c = ext v3 \\<and>\n         \\<parallel>len v3 ts c\\<parallel> =\n         \\<parallel>len v ts c\\<parallel>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>", "have res_non_empty:\"restrict v3 (clm ts) c \\<noteq> \\<emptyset>\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> bot", "using \\<open>restrict v (clm ts) c \\<noteq> \\<emptyset>\\<close> restriction_stable restriction_stable1"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n  restrict v (clm ts) c \\<noteq> bot\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?u ?f ?c = restrict ?w ?f ?c\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?u ?f ?c\n\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> bot", "by auto"], ["proof (state)\nthis:\n  restrict v3 (clm ts) c \\<noteq> bot\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have len_non_empty:\"\\<parallel>len v3 ts c\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v3 ts c\\<parallel>", "using len_eq c_def"], ["proof (prove)\nusing this:\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v3 ts c\\<parallel>", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>len v3 ts c\\<parallel>\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"|restrict v3 (clm ts) c| =1 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v3 (clm ts) c| = 1", "using \\<open>v2=v3\\<parallel>v4\\<close> \\<open>v=v1\\<parallel>v2\\<close> clm_one restriction_stable restriction_stable1"], ["proof (prove)\nusing this:\n  v2=v3\\<parallel>v4\n  v=v1\\<parallel>v2\n  |restrict v (clm ts) c| = 1\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?u ?f ?c = restrict ?w ?f ?c\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?u ?f ?c\n\ngoal (1 subgoal):\n 1. |restrict v3 (clm ts) c| = 1", "by auto"], ["proof (state)\nthis:\n  |restrict v3 (clm ts) c| = 1\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have v3_one_lane:\"|lan v3| = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |lan v3| = 1", "using \\<open>v2=v3\\<parallel>v4\\<close> \\<open>v=v1\\<parallel>v2\\<close> hchop_def one_lane"], ["proof (prove)\nusing this:\n  v2=v3\\<parallel>v4\n  v=v1\\<parallel>v2\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  |lan v| = 1\n\ngoal (1 subgoal):\n 1. |lan v3| = 1", "by auto"], ["proof (state)\nthis:\n  |lan v3| = 1\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have clm_fills_v3:\"restrict v3 (clm ts) c = lan v3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c = lan v3", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "assume  aux:\"restrict v3 (clm ts) c \\<noteq> lan v3\""], ["proof (state)\nthis:\n  restrict v3 (clm ts) c \\<noteq> lan v3\n\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "have \"restrict v3 (clm ts) c \\<sqsubseteq> lan v3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<le> lan v3", "by (simp add: restrict_view)"], ["proof (state)\nthis:\n  restrict v3 (clm ts) c \\<le> lan v3\n\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "hence \"\\<exists>n. n \\<^bold>\\<notin> restrict v3 (clm ts) c \\<and> n \\<^bold>\\<in> lan v3\""], ["proof (prove)\nusing this:\n  restrict v3 (clm ts) c \\<le> lan v3\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       n \\<^bold>\\<notin> restrict v3 (clm ts) c \\<and>\n       n \\<^bold>\\<in> lan v3", "using aux \\<open>|restrict v3 (clm ts) c| = 1\\<close> \n            restriction.restrict_eq_lan_subs v3_one_lane"], ["proof (prove)\nusing this:\n  restrict v3 (clm ts) c \\<le> lan v3\n  restrict v3 (clm ts) c \\<noteq> lan v3\n  |restrict v3 (clm ts) c| = 1\n  |restrict ?v ?f ?c| = |lan ?v| \\<and>\n  restrict ?v ?f ?c \\<le> lan ?v \\<longrightarrow>\n  restrict ?v ?f ?c = lan ?v\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       n \\<^bold>\\<notin> restrict v3 (clm ts) c \\<and>\n       n \\<^bold>\\<in> lan v3", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     n \\<^bold>\\<notin> restrict v3 (clm ts) c \\<and> n \\<^bold>\\<in> lan v3\n\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "hence \"|lan v3| > 1\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     n \\<^bold>\\<notin> restrict v3 (clm ts) c \\<and> n \\<^bold>\\<in> lan v3\n\ngoal (1 subgoal):\n 1. 1 < |lan v3|", "using \\<open>| (restrict v3 (clm ts) c)| = 1\\<close> \\<open>restrict v3 (clm ts) c \\<le> lan v3\\<close> aux\n            restriction.restrict_eq_lan_subs v3_one_lane"], ["proof (prove)\nusing this:\n  \\<exists>n.\n     n \\<^bold>\\<notin> restrict v3 (clm ts) c \\<and> n \\<^bold>\\<in> lan v3\n  |restrict v3 (clm ts) c| = 1\n  restrict v3 (clm ts) c \\<le> lan v3\n  restrict v3 (clm ts) c \\<noteq> lan v3\n  |restrict ?v ?f ?c| = |lan ?v| \\<and>\n  restrict ?v ?f ?c \\<le> lan ?v \\<longrightarrow>\n  restrict ?v ?f ?c = lan ?v\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. 1 < |lan v3|", "by auto"], ["proof (state)\nthis:\n  1 < |lan v3|\n\ngoal (1 subgoal):\n 1. restrict v3 (clm ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  1 < |lan v3|\n\ngoal (1 subgoal):\n 1. False", "using v3_one_lane"], ["proof (prove)\nusing this:\n  1 < |lan v3|\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v3 (clm ts) c = lan v3\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"\\<parallel>ext v3\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel>", "using c_def len_eq"], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel>", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v3\\<parallel>\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"ts, v3 \\<Turnstile> cl(c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel> \\<and>\n    len v3 ts c = ext v3 \\<and>\n    restrict v3 (clm ts) c = lan v3 \\<and> |lan v3| = 1", "using clm_one len_eq c_def clm_fills_v3 v3_one_lane"], ["proof (prove)\nusing this:\n  |restrict v (clm ts) c| = 1\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n  restrict v3 (clm ts) c = lan v3\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel> \\<and>\n    len v3 ts c = ext v3 \\<and>\n    restrict v3 (clm ts) c = lan v3 \\<and> |lan v3| = 1", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (clm ts) c = lan v3 \\<and> |lan v3| = 1\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "hence \"ts,v \\<Turnstile>  (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (clm ts) c = lan v3 \\<and> |lan v3| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "using \\<open>v2=v3\\<parallel>v4\\<close> \\<open>v=v1\\<parallel>v2\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (clm ts) c = lan v3 \\<and> |lan v3| = 1\n  v2=v3\\<parallel>v4\n  v=v1\\<parallel>v2\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "hence \"ts,v \\<Turnstile>\\<^bold>\\<exists> c. (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>x va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. restrict v (clm ts) c \\<noteq> bot \\<Longrightarrow> False\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using no_car"], ["proof (prove)\nusing this:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n  \\<nexists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "by best"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "assume \"restrict v (res ts) c \\<noteq> \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "with one_lane"], ["proof (chain)\npicking this:\n  |lan v| = 1\n  restrict v (res ts) c \\<noteq> bot", "have clm_one:\"|restrict v (res ts) c| = 1\""], ["proof (prove)\nusing this:\n  |lan v| = 1\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| = 1", "using el_in_restriction_clm_singleton"], ["proof (prove)\nusing this:\n  |lan v| = 1\n  restrict v (res ts) c \\<noteq> bot\n  ?n \\<^bold>\\<in> restrict ?v (clm ?ts) ?c \\<longrightarrow>\n  clm ?ts ?c = Abs_nat_int {?n}\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| = 1", "by (metis nat_int.card_non_empty_geq_one nat_int.card_subset_le \n            dual_order.antisym restrict_view)"], ["proof (state)\nthis:\n  |restrict v (res ts) c| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "obtain v1 and v2 and v3 and v4 \n        where \"v=v1\\<parallel>v2\" and \"v2=v3\\<parallel>v4\" \n          and len_eq:\"len v3 ts c = ext v3 \\<and> \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v1 v2 v3 v4.\n        \\<lbrakk>v=v1\\<parallel>v2; v2=v3\\<parallel>v4;\n         len v3 ts c = ext v3 \\<and>\n         \\<parallel>len v3 ts c\\<parallel> =\n         \\<parallel>len v ts c\\<parallel>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using horizontal_chop_empty_left horizontal_chop_empty_right \n          len_fills_subview c_def"], ["proof (prove)\nusing this:\n  \\<forall>v. \\<exists>u. v=u\\<parallel>v\n  \\<forall>v. \\<exists>u. v=v\\<parallel>u\n  0 < \\<parallel>len ?v ?ts ?c\\<parallel> \\<longrightarrow>\n  (\\<exists>v1 v2 v3 v'.\n      ?v=v1\\<parallel>v2 \\<and>\n      v2=v'\\<parallel>v3 \\<and>\n      len v' ?ts ?c = ext v' \\<and>\n      \\<parallel>len v' ?ts ?c\\<parallel> =\n      \\<parallel>len ?v ?ts ?c\\<parallel>)\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v2 v3 v4.\n        \\<lbrakk>v=v1\\<parallel>v2; v2=v3\\<parallel>v4;\n         len v3 ts c = ext v3 \\<and>\n         \\<parallel>len v3 ts c\\<parallel> =\n         \\<parallel>len v ts c\\<parallel>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>", "have res_non_empty:\"restrict v3 (res ts) c \\<noteq> \\<emptyset>\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> bot", "using \\<open>restrict v (res ts) c \\<noteq> \\<emptyset>\\<close> restriction_stable restriction_stable1"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v2\n  v2=v3\\<parallel>v4\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n  restrict v (res ts) c \\<noteq> bot\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?u ?f ?c = restrict ?w ?f ?c\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?u ?f ?c\n\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> bot", "by auto"], ["proof (state)\nthis:\n  restrict v3 (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have len_non_empty:\"\\<parallel>len v3 ts c\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v3 ts c\\<parallel>", "using len_eq c_def"], ["proof (prove)\nusing this:\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v3 ts c\\<parallel>", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>len v3 ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"|restrict v3 (res ts) c| =1 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v3 (res ts) c| = 1", "using \\<open>v2=v3\\<parallel>v4\\<close> \\<open>v=v1\\<parallel>v2\\<close> clm_one restriction_stable restriction_stable1"], ["proof (prove)\nusing this:\n  v2=v3\\<parallel>v4\n  v=v1\\<parallel>v2\n  |restrict v (res ts) c| = 1\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?u ?f ?c = restrict ?w ?f ?c\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?u ?f ?c\n\ngoal (1 subgoal):\n 1. |restrict v3 (res ts) c| = 1", "by auto"], ["proof (state)\nthis:\n  |restrict v3 (res ts) c| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have v3_one_lane:\"|lan v3| = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |lan v3| = 1", "using \\<open>v2=v3\\<parallel>v4\\<close> \\<open>v=v1\\<parallel>v2\\<close> hchop_def one_lane"], ["proof (prove)\nusing this:\n  v2=v3\\<parallel>v4\n  v=v1\\<parallel>v2\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  |lan v| = 1\n\ngoal (1 subgoal):\n 1. |lan v3| = 1", "by auto"], ["proof (state)\nthis:\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"restrict v3 (res ts) c = lan v3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c = lan v3", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "assume  aux:\"restrict v3 (res ts) c \\<noteq> lan v3\""], ["proof (state)\nthis:\n  restrict v3 (res ts) c \\<noteq> lan v3\n\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "have \"restrict v3 (res ts) c \\<sqsubseteq> lan v3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<le> lan v3", "by (simp add: restrict_view)"], ["proof (state)\nthis:\n  restrict v3 (res ts) c \\<le> lan v3\n\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "hence \"\\<exists>n. n \\<^bold>\\<notin> restrict v3 (res ts) c \\<and> n \\<^bold>\\<in> lan v3\""], ["proof (prove)\nusing this:\n  restrict v3 (res ts) c \\<le> lan v3\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       n \\<^bold>\\<notin> restrict v3 (res ts) c \\<and>\n       n \\<^bold>\\<in> lan v3", "using aux \\<open>|restrict v3 (res ts) c| = 1\\<close> restriction.restrict_eq_lan_subs v3_one_lane"], ["proof (prove)\nusing this:\n  restrict v3 (res ts) c \\<le> lan v3\n  restrict v3 (res ts) c \\<noteq> lan v3\n  |restrict v3 (res ts) c| = 1\n  |restrict ?v ?f ?c| = |lan ?v| \\<and>\n  restrict ?v ?f ?c \\<le> lan ?v \\<longrightarrow>\n  restrict ?v ?f ?c = lan ?v\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       n \\<^bold>\\<notin> restrict v3 (res ts) c \\<and>\n       n \\<^bold>\\<in> lan v3", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     n \\<^bold>\\<notin> restrict v3 (res ts) c \\<and> n \\<^bold>\\<in> lan v3\n\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "hence \"|lan v3| > 1\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     n \\<^bold>\\<notin> restrict v3 (res ts) c \\<and> n \\<^bold>\\<in> lan v3\n\ngoal (1 subgoal):\n 1. 1 < |lan v3|", "using \\<open>| (restrict v3 (res ts) c)| = 1\\<close> \\<open>restrict v3 (res ts) c \\<le> lan v3\\<close> aux\n            restriction.restrict_eq_lan_subs v3_one_lane"], ["proof (prove)\nusing this:\n  \\<exists>n.\n     n \\<^bold>\\<notin> restrict v3 (res ts) c \\<and> n \\<^bold>\\<in> lan v3\n  |restrict v3 (res ts) c| = 1\n  restrict v3 (res ts) c \\<le> lan v3\n  restrict v3 (res ts) c \\<noteq> lan v3\n  |restrict ?v ?f ?c| = |lan ?v| \\<and>\n  restrict ?v ?f ?c \\<le> lan ?v \\<longrightarrow>\n  restrict ?v ?f ?c = lan ?v\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. 1 < |lan v3|", "by auto"], ["proof (state)\nthis:\n  1 < |lan v3|\n\ngoal (1 subgoal):\n 1. restrict v3 (res ts) c \\<noteq> lan v3 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  1 < |lan v3|\n\ngoal (1 subgoal):\n 1. False", "using v3_one_lane"], ["proof (prove)\nusing this:\n  1 < |lan v3|\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v3 (res ts) c = lan v3\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"\\<parallel>ext v3\\<parallel> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel>", "using c_def len_eq"], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel>", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v3\\<parallel>\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have \"ts, v3 \\<Turnstile> re(c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel> \\<and>\n    len v3 ts c = ext v3 \\<and>\n    restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1", "using clm_one len_eq c_def \\<open>restrict v3 (res ts) c = lan v3\\<close> v3_one_lane"], ["proof (prove)\nusing this:\n  |restrict v (res ts) c| = 1\n  len v3 ts c = ext v3 \\<and>\n  \\<parallel>len v3 ts c\\<parallel> = \\<parallel>len v ts c\\<parallel>\n  0 < \\<parallel>len v ts c\\<parallel> \\<and>\n  (restrict v (clm ts) c \\<noteq> bot \\<or>\n   restrict v (res ts) c \\<noteq> bot)\n  restrict v3 (res ts) c = lan v3\n  |lan v3| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v3\\<parallel> \\<and>\n    len v3 ts c = ext v3 \\<and>\n    restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "hence \"ts,v \\<Turnstile>  (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "using \\<open>v2=v3\\<parallel>v4\\<close> \\<open>v=v1\\<parallel>v2\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v3\\<parallel> \\<and>\n  len v3 ts c = ext v3 \\<and>\n  restrict v3 (res ts) c = lan v3 \\<and> |lan v3| = 1\n  v2=v3\\<parallel>v4\n  v=v1\\<parallel>v2\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts c = ext v \\<and>\n            restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "hence \"ts,v \\<Turnstile>\\<^bold>\\<exists> c. (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts c = ext v \\<and>\n          restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>x va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using no_car"], ["proof (prove)\nusing this:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n  \\<nexists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "by best"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma free_means_no_cars:\n  \"\\<Turnstile>free \\<^bold>\\<rightarrow> ((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True))", "proof (rule allI | rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True))", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True))", "assume assm:\"ts,v \\<Turnstile> free\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True))", "have no_car:\"ts,v \\<Turnstile>(\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts x = ext v \\<and>\n               restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n               0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts x = ext v \\<and>\n               restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "assume \"\\<not> (ts,v \\<Turnstile>(\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>x.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (res ts) x = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "hence contra:\"ts,v \\<Turnstile> \\<^bold>\\<exists> c. \\<^bold>\\<top> \\<^bold>\\<frown> (cl(c) \\<^bold>\\<or> re(c)) \\<^bold>\\<frown> \\<^bold>\\<top>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (res ts) x = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True))\n\ngoal (1 subgoal):\n 1. \\<exists>x va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts x = ext v \\<and>\n            restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)", "obtain c and v1 and v' and v2 and vc where \n      vc_def:\"(v=v1\\<parallel>v') \\<and> (v'=vc\\<parallel>v2) \\<and> (ts,vc \\<Turnstile> cl(c) \\<^bold>\\<or> re(c))\""], ["proof (prove)\nusing this:\n  \\<exists>x va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n          0 < \\<parallel>ext v\\<parallel> \\<and>\n          len v ts x = ext v \\<and>\n          restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<And>v1 v' vc v2 c.\n        v=v1\\<parallel>v' \\<and>\n        v'=vc\\<parallel>v2 \\<and>\n        (0 < \\<parallel>ext vc\\<parallel> \\<and>\n         len vc ts c = ext vc \\<and>\n         restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n         0 < \\<parallel>ext vc\\<parallel> \\<and>\n         len vc ts c = ext vc \\<and>\n         restrict vc (res ts) c = lan vc \\<and>\n         |lan vc| = 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v=v1\\<parallel>v' \\<and>\n  v'=vc\\<parallel>v2 \\<and>\n  (0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n   0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (res ts) c = lan vc \\<and> |lan vc| = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "hence len_ge_zero:\"\\<parallel>len v ts c\\<parallel> > 0\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v' \\<and>\n  v'=vc\\<parallel>v2 \\<and>\n  (0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n   0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (res ts) c = lan vc \\<and> |lan vc| = 1)\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v ts c\\<parallel>", "by (metis len_empty_on_subview1 len_empty_on_subview2 less_eq_real_def\n          real_int.length_ge_zero)"], ["proof (state)\nthis:\n  0 < \\<parallel>len v ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "from vc_def"], ["proof (chain)\npicking this:\n  v=v1\\<parallel>v' \\<and>\n  v'=vc\\<parallel>v2 \\<and>\n  (0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n   0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (res ts) c = lan vc \\<and> |lan vc| = 1)", "have vc_ex_car:\n      \"restrict vc (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict vc (res ts) c \\<noteq>\\<emptyset>\""], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v' \\<and>\n  v'=vc\\<parallel>v2 \\<and>\n  (0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n   0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (res ts) c = lan vc \\<and> |lan vc| = 1)\n\ngoal (1 subgoal):\n 1. restrict vc (clm ts) c \\<noteq> bot \\<or>\n    restrict vc (res ts) c \\<noteq> bot", "using nat_int.card_empty_zero one_neq_zero"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v' \\<and>\n  v'=vc\\<parallel>v2 \\<and>\n  (0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n   0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (res ts) c = lan vc \\<and> |lan vc| = 1)\n  |bot| = 0\n  (1::?'a) \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. restrict vc (clm ts) c \\<noteq> bot \\<or>\n    restrict vc (res ts) c \\<noteq> bot", "by auto"], ["proof (state)\nthis:\n  restrict vc (clm ts) c \\<noteq> bot \\<or>\n  restrict vc (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "have eq_lan:\"lan v = lan vc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lan v = lan vc", "using vc_def hchop_def"], ["proof (prove)\nusing this:\n  v=v1\\<parallel>v' \\<and>\n  v'=vc\\<parallel>v2 \\<and>\n  (0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (clm ts) c = lan vc \\<and> |lan vc| = 1 \\<or>\n   0 < \\<parallel>ext vc\\<parallel> \\<and>\n   len vc ts c = ext vc \\<and>\n   restrict vc (res ts) c = lan vc \\<and> |lan vc| = 1)\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. lan v = lan vc", "by auto"], ["proof (state)\nthis:\n  lan v = lan vc\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "hence v_ex_car:\"restrict v (clm ts) c \\<noteq> \\<emptyset> \\<or> restrict v (res ts) c \\<noteq>\\<emptyset>\""], ["proof (prove)\nusing this:\n  lan v = lan vc\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot \\<or>\n    restrict v (res ts) c \\<noteq> bot", "using vc_ex_car"], ["proof (prove)\nusing this:\n  lan v = lan vc\n  restrict vc (clm ts) c \\<noteq> bot \\<or>\n  restrict vc (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot \\<or>\n    restrict v (res ts) c \\<noteq> bot", "by (simp add: restrict_def)"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<Longrightarrow>\n    False", "from len_ge_zero and v_ex_car and assm"], ["proof (chain)\npicking this:\n  0 < \\<parallel>len v ts c\\<parallel>\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)", "show False"], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v ts c\\<parallel>\n  restrict v (clm ts) c \\<noteq> bot \\<or>\n  restrict v (res ts) c \\<noteq> bot\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x.\n     \\<nexists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n             0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n            True)\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<Longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>x.\n           \\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                  True))", "with assm"], ["proof (chain)\npicking this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n  \\<forall>x.\n     \\<nexists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n             0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n            True)", "show \n    \"ts,v \\<Turnstile>((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>c.\n      \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n      restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n  \\<forall>x.\n     \\<nexists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n             0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n            True)\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    |lan v| = 1 \\<and>\n    (\\<forall>x.\n        \\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts x = ext v \\<and>\n                restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts x = ext v \\<and>\n                restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  |lan v| = 1 \\<and>\n  (\\<forall>x.\n      \\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n              0 < \\<parallel>ext v\\<parallel> \\<and>\n              len v ts x = ext v \\<and>\n              restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n             True))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma free_eq_no_cars:\n  \"\\<Turnstile>free \\<^bold>\\<leftrightarrow> ((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        |lan v| = 1 \\<and>\n        (\\<forall>c.\n            \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n            restrict v (clm ts) c = bot \\<and>\n            restrict v (res ts) c = bot)) =\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        |lan v| = 1 \\<and>\n        (\\<forall>x.\n            \\<nexists>va u.\n               v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)))", "using no_cars_means_free free_means_no_cars"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     |lan v| = 1 \\<and>\n     (\\<forall>x.\n         \\<nexists>va u.\n            v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                 len v ts x = ext v \\<and>\n                 restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                 len v ts x = ext v \\<and>\n                 restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                True)) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     |lan v| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n         restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     |lan v| = 1 \\<and>\n     (\\<forall>c.\n         \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n         restrict v (clm ts) c = bot \\<and>\n         restrict v (res ts) c = bot) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     |lan v| = 1 \\<and>\n     (\\<forall>x.\n         \\<nexists>va u.\n            v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                 len v ts x = ext v \\<and>\n                 restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                 len v ts x = ext v \\<and>\n                 restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                True))\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        |lan v| = 1 \\<and>\n        (\\<forall>c.\n            \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n            restrict v (clm ts) c = bot \\<and>\n            restrict v (res ts) c = bot)) =\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        |lan v| = 1 \\<and>\n        (\\<forall>x.\n            \\<nexists>va u.\n               v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)))", "by blast"], ["", "lemma free_nowhere_res:\"\\<Turnstile>free \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<top> \\<^bold>\\<frown> (re(c)) \\<^bold>\\<frown> \\<^bold>\\<top>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n               True))", "using free_eq_no_cars"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (0 < \\<parallel>ext v\\<parallel> \\<and>\n      |lan v| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n          restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)) =\n     (0 < \\<parallel>ext v\\<parallel> \\<and>\n      |lan v| = 1 \\<and>\n      (\\<forall>x.\n          \\<nexists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n               True))", "by blast"], ["", "lemma two_res_not_res: \"\\<Turnstile>((re(c) \\<^bold>\\<smile> re(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<not>re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts c = ext v \\<and>\n               restrict v (res ts) c = lan v \\<and> |lan v| = 1)", "by (metis add_eq_self_zero one_neq_zero width_add1)"], ["", "lemma two_clm_width: \"\\<Turnstile>((cl(c) \\<^bold>\\<smile> cl(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<omega> = 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (clm ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (clm ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       |lan v| = 2", "by (metis one_add_one width_add1)"], ["", "lemma two_res_no_car: \"\\<Turnstile>(re(c) \\<^bold>\\<smile> re(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<exists> c. ( cl(c) \\<^bold>\\<or> re(c)) )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>va u.\n           v=va--u \\<and>\n           (0 < \\<parallel>ext va\\<parallel> \\<and>\n            len va ts c = ext va \\<and>\n            restrict va (res ts) c = lan va \\<and> |lan va| = 1) \\<and>\n           0 < \\<parallel>ext u\\<parallel> \\<and>\n           len u ts c = ext u \\<and>\n           restrict u (res ts) c = lan u \\<and>\n           |lan u| = 1) \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (res ts) x = lan v \\<and> |lan v| = 1)", "by (metis add_eq_self_zero one_neq_zero width_add1)"], ["", "lemma two_lanes_no_car:\"\\<Turnstile>(\\<^bold>\\<not> \\<^bold>\\<omega>= 1) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<exists> c.(cl(c) \\<^bold>\\<or> re(c)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       |lan v| \\<noteq> 1 \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (res ts) x = lan v \\<and> |lan v| = 1)", "by simp"], ["", "lemma empty_no_car:\"\\<Turnstile>( \\<^bold>\\<l> = 0) \\<^bold>\\<rightarrow> \\<^bold>\\<not>(\\<^bold>\\<exists> c.(cl(c) \\<^bold>\\<or> re(c)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       \\<parallel>ext v\\<parallel> = 0 \\<longrightarrow>\n       (\\<nexists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (res ts) x = lan v \\<and> |lan v| = 1)", "by simp"], ["", "lemma car_one_lane_non_empty: \"\\<Turnstile>(\\<^bold>\\<exists> c.(cl(c) \\<^bold>\\<or> re(c))) \\<^bold>\\<rightarrow> ((\\<^bold>\\<omega> =1) \\<^bold>\\<and> (\\<^bold>\\<l> > 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<exists>x.\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts x = ext v \\<and>\n           restrict v (res ts) x = lan v \\<and>\n           |lan v| = 1) \\<longrightarrow>\n       |lan v| = 1 \\<and> 0 < \\<parallel>ext v\\<parallel>", "by blast"], ["", "lemma one_lane_notfree:\n  \"\\<Turnstile>(\\<^bold>\\<omega> =1) \\<^bold>\\<and>(\\<^bold>\\<l>> 0) \\<^bold>\\<and> (\\<^bold>\\<not> free) \\<^bold>\\<rightarrow> ( (\\<^bold>\\<top> \\<^bold>\\<frown> (\\<^bold>\\<exists> c. (re(c) \\<^bold>\\<or> cl(c))) \\<^bold>\\<frown> \\<^bold>\\<top> ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<longrightarrow>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>x.\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n               True))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>x.\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "fix ts v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>x.\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "assume assm:\"ts,v \\<Turnstile>(\\<^bold>\\<omega> =1) \\<^bold>\\<and>(\\<^bold>\\<l>> 0) \\<^bold>\\<and> (\\<^bold>\\<not> free)\""], ["proof (state)\nthis:\n  |lan v| = 1 \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>x.\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "hence not_free:\"ts,v \\<Turnstile>\\<^bold>\\<not> free\""], ["proof (prove)\nusing this:\n  |lan v| = 1 \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>c.\n                \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                restrict v (clm ts) c = bot \\<and>\n                restrict v (res ts) c = bot))", "by blast"], ["proof (state)\nthis:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>x.\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "with free_eq_no_cars"], ["proof (chain)\npicking this:\n  \\<forall>ts v.\n     (0 < \\<parallel>ext v\\<parallel> \\<and>\n      |lan v| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n          restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)) =\n     (0 < \\<parallel>ext v\\<parallel> \\<and>\n      |lan v| = 1 \\<and>\n      (\\<forall>x.\n          \\<nexists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)))\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))", "have \n    \"ts,v \\<Turnstile>\\<^bold>\\<not> ((\\<^bold>\\<l>>0) \\<^bold>\\<and> (\\<^bold>\\<omega> = 1) \\<^bold>\\<and> (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>)))\""], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     (0 < \\<parallel>ext v\\<parallel> \\<and>\n      |lan v| = 1 \\<and>\n      (\\<forall>c.\n          \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n          restrict v (clm ts) c = bot \\<and> restrict v (res ts) c = bot)) =\n     (0 < \\<parallel>ext v\\<parallel> \\<and>\n      |lan v| = 1 \\<and>\n      (\\<forall>x.\n          \\<nexists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)))\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n            |lan v| = 1 \\<and>\n            (\\<forall>x.\n                \\<nexists>va u.\n                   v=va\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts x = ext v \\<and>\n                        restrict v (clm ts) x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts x = ext v \\<and>\n                        restrict v (res ts) x = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)))", "by blast"], ["proof (state)\nthis:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>x.\n              \\<nexists>va u.\n                 v=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>x.\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "hence \"ts,v \\<Turnstile> \\<^bold>\\<not>  (\\<^bold>\\<forall>c. \\<^bold>\\<not> (\\<^bold>\\<top> \\<^bold>\\<frown>  ( cl(c) \\<^bold>\\<or> re(c) ) \\<^bold>\\<frown> \\<^bold>\\<top>))\""], ["proof (prove)\nusing this:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>x.\n              \\<nexists>va u.\n                 v=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True))", "using assm"], ["proof (prove)\nusing this:\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>x.\n              \\<nexists>va u.\n                 v=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)))\n  |lan v| = 1 \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n          |lan v| = 1 \\<and>\n          (\\<forall>c.\n              \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n              restrict v (clm ts) c = bot \\<and>\n              restrict v (res ts) c = bot))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               \\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (clm ts) x = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True))", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<forall>x.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (res ts) x = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True))\n\ngoal (1 subgoal):\n 1. \\<And>ts v.\n       |lan v| = 1 \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n               |lan v| = 1 \\<and>\n               (\\<forall>c.\n                   \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                   restrict v (clm ts) c = bot \\<and>\n                   restrict v (res ts) c = bot)) \\<Longrightarrow>\n       \\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>x.\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n              True)", "thus \"ts,v \\<Turnstile>(\\<^bold>\\<top> \\<^bold>\\<frown> (\\<^bold>\\<exists> c. (re(c) \\<^bold>\\<or> cl(c))) \\<^bold>\\<frown> \\<^bold>\\<top> )\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             \\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (clm ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts x = ext v \\<and>\n                     restrict v (res ts) x = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>x.\n               0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts x = ext v \\<and>\n               restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n               0 < \\<parallel>ext v\\<parallel> \\<and>\n               len v ts x = ext v \\<and>\n               restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>x.\n             0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n             0 < \\<parallel>ext v\\<parallel> \\<and>\n             len v ts x = ext v \\<and>\n             restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_lane_empty_or_car:\n  \"\\<Turnstile>(\\<^bold>\\<omega> =1) \\<^bold>\\<and>(\\<^bold>\\<l>> 0) \\<^bold>\\<rightarrow> (free \\<^bold>\\<or> (\\<^bold>\\<top> \\<^bold>\\<frown> (\\<^bold>\\<exists> c. (re(c) \\<^bold>\\<or> cl(c))) \\<^bold>\\<frown> \\<^bold>\\<top> ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       |lan v| = 1 \\<and> 0 < \\<parallel>ext v\\<parallel> \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<or>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>x.\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n               True))", "using one_lane_notfree"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     |lan v| = 1 \\<and>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     \\<not> (0 < \\<parallel>ext v\\<parallel> \\<and>\n             |lan v| = 1 \\<and>\n             (\\<forall>c.\n                 \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n                 restrict v (clm ts) c = bot \\<and>\n                 restrict v (res ts) c = bot)) \\<longrightarrow>\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>x.\n                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                 len v ts x = ext v \\<and>\n                 restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                 len v ts x = ext v \\<and>\n                 restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       |lan v| = 1 \\<and> 0 < \\<parallel>ext v\\<parallel> \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       |lan v| = 1 \\<and>\n       (\\<forall>c.\n           \\<parallel>len v ts c\\<parallel> = 0 \\<or>\n           restrict v (clm ts) c = bot \\<and>\n           restrict v (res ts) c = bot) \\<or>\n       (\\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>x.\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts x = ext v \\<and>\n                   restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n               True))", "by blast"], ["", "end"], ["", "end"]]}