{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic/regular/Safety_Regular.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic", "problem_names": ["theorem safety_flawed:\"\\<Turnstile>( \\<^bold>\\<forall>e. safe e ) \\<^bold>\\<and> DC \\<^bold>\\<and> LC \\<^bold>\\<rightarrow> \\<^bold>G (\\<^bold>\\<forall> e. safe e)\"", "lemma safety_not_invariant_switch:\n  \"\\<exists>ts v. (ts,v \\<Turnstile> \\<^bold>\\<forall>e. safe(e) \\<^bold>\\<and> ( \\<^bold>\\<exists> c. \\<^bold>@c  \\<^bold>\\<not>( \\<^bold>\\<forall>e. safe(e))))\"", "theorem safety:\"\\<Turnstile> (\\<^bold>\\<forall>e. \\<^bold>@e ( safe e ) ) \\<^bold>\\<and> DC' \\<^bold>\\<and> LC' \\<^bold>\\<rightarrow>  \\<^bold>G(\\<^bold>\\<forall> e.  \\<^bold>@ e (safe e))\""], "translations": [["", "theorem safety_flawed:\"\\<Turnstile>( \\<^bold>\\<forall>e. safe e ) \\<^bold>\\<and> DC \\<^bold>\\<and> LC \\<^bold>\\<rightarrow> \\<^bold>G (\\<^bold>\\<forall> e. safe e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>va u.\n               v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))) \\<and>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x xa.\n               x \\<noteq> xa \\<longrightarrow>\n               (\\<nexists>va u.\n                   move ts ts' v=va\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)) \\<longrightarrow>\n               (\\<forall>ts'a.\n                   ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                   (\\<nexists>va u.\n                       move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'a x = ext v \\<and>\n                                     restrict v (res ts'a) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a xa = ext v \\<and>\n                                    restrict v (res ts'a) xa = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))))) \\<and>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x.\n               (\\<exists>xa.\n                   xa \\<noteq> x \\<and>\n                   (\\<exists>va u.\n                       move ts ts' v=va\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' x = ext v \\<and>\n                                     restrict v (clm ts') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (res ts') xa = lan v \\<and>\n                                     |lan v| = 1 \\<or>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (clm ts') xa = lan v \\<and>\n                                     |lan v| = 1)) \\<and>\n                                   True)) \\<and>\n                           True))) \\<longrightarrow>\n               (\\<forall>ts'a.\n                   ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                   False))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x xa.\n               xa \\<noteq> x \\<longrightarrow>\n               (\\<nexists>va u.\n                   move ts ts' v=va\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (res ts') xa = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True))))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "fix ts v ts'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "fix e c:: cars"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "assume assm:\"ts,v \\<Turnstile> ( \\<^bold>\\<forall>e. safe e ) \\<^bold>\\<and> DC \\<^bold>\\<and> LC\""], ["proof (state)\nthis:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "assume abs:\"(ts \\<^bold>\\<Rightarrow> ts')\""], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "assume neg:\"ts,v \\<Turnstile>\\<^bold>\\<not>(c \\<^bold>= e)\""], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "from assm"], ["proof (chain)\npicking this:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))", "have init:\"ts,v \\<Turnstile> ( \\<^bold>\\<forall>e. safe e )\""], ["proof (prove)\nusing this:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       xa \\<noteq> x \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts xa = ext v \\<and>\n                         restrict v (res ts) xa = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts x = ext v \\<and>\n                        restrict v (res ts) x = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by simp"], ["proof (state)\nthis:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "from assm"], ["proof (chain)\npicking this:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))", "have DC :\"ts,v \\<Turnstile> DC\""], ["proof (prove)\nusing this:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n       (\\<forall>x xa.\n           x \\<noteq> xa \\<longrightarrow>\n           (\\<nexists>va u.\n               move ts ts' v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' xa = ext v \\<and>\n                            restrict v (res ts') xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)) \\<longrightarrow>\n           (\\<forall>ts'a.\n               ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n               (\\<nexists>va u.\n                   move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'a x = ext v \\<and>\n                                 restrict v (res ts'a) x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a xa = ext v \\<and>\n                                restrict v (res ts'a) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True))))", "by simp"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x xa.\n         x \\<noteq> xa \\<longrightarrow>\n         (\\<nexists>va u.\n             move ts ts' v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' xa = ext v \\<and>\n                          restrict v (res ts') xa = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n             (\\<nexists>va u.\n                 move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a x = ext v \\<and>\n                               restrict v (res ts'a) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'a xa = ext v \\<and>\n                              restrict v (res ts'a) xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True))))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "from assm"], ["proof (chain)\npicking this:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))", "have LC: \"ts,v \\<Turnstile> LC\""], ["proof (prove)\nusing this:\n  (\\<forall>x xa.\n      xa \\<noteq> x \\<longrightarrow>\n      (\\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<nexists>va u.\n              move ts ts' v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<nexists>va u.\n                  move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts'a x = ext v \\<and>\n                                restrict v (res ts'a) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a xa = ext v \\<and>\n                               restrict v (res ts'a) xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              xa \\<noteq> x \\<and>\n              (\\<exists>va u.\n                  move ts ts' v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (clm ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1 \\<or>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (clm ts') xa = lan v \\<and>\n                                |lan v| = 1)) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n       (\\<forall>x.\n           (\\<exists>xa.\n               xa \\<noteq> x \\<and>\n               (\\<exists>va u.\n                   move ts ts' v=va\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (clm ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (res ts') xa = lan v \\<and>\n                                 |lan v| = 1 \\<or>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (clm ts') xa = lan v \\<and>\n                                 |lan v| = 1)) \\<and>\n                               True)) \\<and>\n                       True))) \\<longrightarrow>\n           (\\<forall>ts'a.\n               ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n               False))", "by simp"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x.\n         (\\<exists>xa.\n             xa \\<noteq> x \\<and>\n             (\\<exists>va u.\n                 move ts ts' v=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True))) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n             False))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x xa.\n       \\<lbrakk>(\\<forall>x xa.\n                    xa \\<noteq> x \\<longrightarrow>\n                    (\\<nexists>va u.\n                        v=va\\<parallel>u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v\\<parallel>ua \\<and>\n                            (\\<exists>va u.\n                                v=va--u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v--ua \\<and>\n                                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts xa = ext v \\<and>\nrestrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts x = ext v \\<and>\n                                     restrict v (res ts) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    True)) \\<and>\n                            True))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' x = ext v \\<and>\n    restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<nexists>va u.\n                                move ts' ts'a\n                                 (move ts ts' v)=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts'a x = ext v \\<and>\n        restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts'a xa = ext v \\<and>\n       restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            xa \\<noteq> x \\<and>\n                            (\\<exists>va u.\n                                move ts ts' v=va\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' xa = ext v \\<and>\n        restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' xa = ext v \\<and>\n    restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "show \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using abs"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (induction)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<nexists>va u.\n       move ts ts v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts e = ext v \\<and>\n                    restrict v (res ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 6. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "case (refl )"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<nexists>va u.\n       move ts ts v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts e = ext v \\<and>\n                    restrict v (res ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 6. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have \"move ts ts v = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts v = v", "using move_nothing"], ["proof (prove)\nusing this:\n  move ?ts ?ts ?v = ?v\n\ngoal (1 subgoal):\n 1. move ts ts v = v", "by simp"], ["proof (state)\nthis:\n  move ts ts v = v\n\ngoal (6 subgoals):\n 1. \\<nexists>va u.\n       move ts ts v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts e = ext v \\<and>\n                    restrict v (res ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 6. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "thus ?case"], ["proof (prove)\nusing this:\n  move ts ts v = v\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts e = ext v \\<and>\n                    restrict v (res ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using init move_nothing neg"], ["proof (prove)\nusing this:\n  move ts ts v = v\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  move ?ts ?ts ?v = ?v\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts e = ext v \\<and>\n                    restrict v (res ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by simp"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (res ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "case (evolve ts' ts'' )"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have local_DC:\n      \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<forall> c d. \\<^bold>\\<not>(c \\<^bold>= d) \\<^bold>\\<rightarrow> \n                            \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle> \\<^bold>\\<rightarrow> \\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       x \\<noteq> xa \\<longrightarrow>\n       (\\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' x = ext v \\<and>\n                         restrict v (res ts') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' xa = ext v \\<and>\n                        restrict v (res ts') xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n           (\\<nexists>va u.\n               move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' xa = ext v \\<and>\n                            restrict v (res ts') xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "using evolve.hyps DC"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x xa.\n         x \\<noteq> xa \\<longrightarrow>\n         (\\<nexists>va u.\n             move ts ts' v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' xa = ext v \\<and>\n                          restrict v (res ts') xa = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n             (\\<nexists>va u.\n                 move ts' ts'a (move ts ts' v)=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'a x = ext v \\<and>\n                               restrict v (res ts'a) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'a xa = ext v \\<and>\n                              restrict v (res ts'a) xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True))))\n\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       x \\<noteq> xa \\<longrightarrow>\n       (\\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' x = ext v \\<and>\n                         restrict v (res ts') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' xa = ext v \\<and>\n                        restrict v (res ts') xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n           (\\<nexists>va u.\n               move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' xa = ext v \\<and>\n                            restrict v (res ts') xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "by simp"], ["proof (state)\nthis:\n  \\<forall>x xa.\n     x \\<noteq> xa \\<longrightarrow>\n     (\\<nexists>va u.\n         move ts ts' v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' x = ext v \\<and>\n                       restrict v (res ts') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' xa = ext v \\<and>\n                      restrict v (res ts') xa = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True)) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n         (\\<nexists>va u.\n             move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' xa = ext v \\<and>\n                          restrict v (res ts') xa = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (rule )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume e_def: \" (ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from evolve.IH  and e_def and neg"], ["proof (chain)\npicking this:\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e", "have \n        ts'_safe:\"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<nexists>va u.\n        move ts ts' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<nexists>va u.\n      move ts ts' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence no_coll_after_evol:\"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<nexists>va u.\n      move ts ts' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n       (\\<nexists>va u.\n           move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "using local_DC"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<nexists>va u.\n      move ts ts' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  \\<forall>x xa.\n     x \\<noteq> xa \\<longrightarrow>\n     (\\<nexists>va u.\n         move ts ts' v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' x = ext v \\<and>\n                       restrict v (res ts') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' xa = ext v \\<and>\n                      restrict v (res ts') xa = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True)) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n         (\\<nexists>va u.\n             move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' xa = ext v \\<and>\n                          restrict v (res ts') xa = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n       (\\<nexists>va u.\n           move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n     (\\<nexists>va u.\n         move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have move_eq:\"move ts' ts'' (move ts ts' v) = move ts ts'' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts' ts'' (move ts ts' v) = move ts ts'' v", "using \"evolve.hyps\" abstract.evolve abstract.refl move_trans"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n  \\<lbrakk>?ts \\<^bold>\\<Rightarrow> ?ts';\n   ?ts' \\<^bold>\\<leadsto> ?ts''\\<rbrakk>\n  \\<Longrightarrow> ?ts \\<^bold>\\<Rightarrow> ?ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts' ts'' (move ts ts' v) = move ts ts'' v", "by (meson traffic.abstract.evolve traffic.abstract.refl traffic.move_trans)"], ["proof (state)\nthis:\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from no_coll_after_evol and evolve.hyps"], ["proof (chain)\npicking this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n     (\\<nexists>va u.\n         move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''", "have \n        \"ts'',move ts' ts'' (move ts ts' v) \\<Turnstile>  \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n     (\\<nexists>va u.\n         move ts' ts' (move ts ts' v)=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts' ts'' (move ts ts' v)=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts' ts'' (move ts ts' v)=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts' ts'' (move ts ts' v)=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using e_def"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts' ts'' (move ts ts' v)=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using  move_eq"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts' ts'' (move ts ts' v)=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "case (cr_res ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have local_LC: \"ts',move ts ts' v \\<Turnstile>( \\<^bold>\\<forall>d.( \\<^bold>\\<exists> c. pcc c d) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(d) \\<^bold>\\<bottom>)  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>xa.\n           xa \\<noteq> x \\<and>\n           (\\<exists>va u.\n               move ts ts' v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (clm ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            (0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' xa = ext v \\<and>\n                             restrict v (res ts') xa = lan v \\<and>\n                             |lan v| = 1 \\<or>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' xa = ext v \\<and>\n                             restrict v (clm ts') xa = lan v \\<and>\n                             |lan v| = 1)) \\<and>\n                           True)) \\<and>\n                   True))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           False)", "using LC cr_res.hyps"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x.\n         (\\<exists>xa.\n             xa \\<noteq> x \\<and>\n             (\\<exists>va u.\n                 move ts ts' v=va\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True))) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n             False))\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>xa.\n           xa \\<noteq> x \\<and>\n           (\\<exists>va u.\n               move ts ts' v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (clm ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            (0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' xa = ext v \\<and>\n                             restrict v (res ts') xa = lan v \\<and>\n                             |lan v| = 1 \\<or>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' xa = ext v \\<and>\n                             restrict v (clm ts') xa = lan v \\<and>\n                             |lan v| = 1)) \\<and>\n                           True)) \\<and>\n                   True))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           False)", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     (\\<exists>xa.\n         xa \\<noteq> x \\<and>\n         (\\<exists>va u.\n             move ts ts' v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (clm ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1 \\<or>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (clm ts') xa = lan v \\<and>\n                           |lan v| = 1)) \\<and>\n                         True)) \\<and>\n                 True))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         False)\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_res cr_res.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "using cr_res.hyps local.create_reservation_def local.move_def"], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<equiv>\n  pos ?ts' = pos ?ts \\<and>\n  res ?ts' = (res ?ts)(?c := res ?ts ?c \\<squnion> clm ?ts ?c) \\<and>\n  dyn ?ts' = dyn ?ts \\<and>\n  clm ?ts' = (clm ?ts)(?c := bot) \\<and>\n  physical_size ?ts' = physical_size ?ts \\<and>\n  braking_distance ?ts' = braking_distance ?ts\n  move ?ts ?ts' ?v =\n  \\<lparr>ext =  shift ext ?v pos ?ts' (own ?v) - pos ?ts (own ?v),\n     lan = lan ?v, own = own ?v\\<rparr>\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume e_def:\" (ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "obtain d where d_def: \"ts' \\<^bold>\\<midarrow>r(d) \\<^bold>\\<rightarrow> ts''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using cr_res.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"d = e \\<or> d \\<noteq> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d = e \\<or> d \\<noteq> e", "by simp"], ["proof (state)\nthis:\n  d = e \\<or> d \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  d = e \\<or> d \\<noteq> e\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "assume eq:\"d = e\""], ["proof (state)\nthis:\n  d = e\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence e_trans:\"ts' \\<^bold>\\<midarrow>r(e) \\<^bold>\\<rightarrow> ts''\""], ["proof (prove)\nusing this:\n  d = e\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''", "using d_def"], ["proof (prove)\nusing this:\n  d = e\n  ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''", "by simp"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "from e_def"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by meson"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n          \"(v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> move ts ts'' v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "with backwards_res_act"], ["proof (chain)\npicking this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \"ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e))\""], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "using e_def  backwards_res_stab neg"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "by (metis (no_types, lifting) d_def eq)"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e)))\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "using  v'_def"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "by blast"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"ts',move ts ts'' v \\<Turnstile>\\<^bold>\\<langle> re(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e)) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1)) \\<and>\n                   True)) \\<and>\n           True)", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1)) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and>\n                   |lan v| = 1)) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"ts',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> cl(e)\\<^bold>\\<rangle> \""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and>\n                   |lan v| = 1)) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using hmlsl.somewhere_and_or_distr"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and>\n                   |lan v| = 1)) \\<and>\n                 True)) \\<and>\n         True)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (?\\<chi> ts v \\<and>\n                      (?\\<phi> ts v \\<or> ?\\<psi> ts v)) \\<and>\n                     True)) \\<and>\n             True)) =\n     ((\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<phi> ts v) \\<and>\n                      True)) \\<and>\n              True)) \\<or>\n      (\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<psi> ts v) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> e", "using neg"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (2 subgoals):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. False", "using assm' cr_res.IH e_def move_stab"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> cl(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> cl(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using neg"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by force"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile>\\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> cl(e) \\<^bold>\\<and> (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence pcc:\"ts',move ts ts'' v \\<Turnstile> pcc c e\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"ts',move ts ts'' v \\<Turnstile>( \\<^bold>\\<exists> c. pcc c e) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(e) \\<^bold>\\<bottom>  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        x \\<noteq> e \\<and>\n        (\\<exists>va u.\n            move ts ts'' v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (clm ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (res ts') x = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (clm ts') x = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "using local_LC move_stab"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>xa.\n         xa \\<noteq> x \\<and>\n         (\\<exists>va u.\n             move ts ts' v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (clm ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1 \\<or>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (clm ts') xa = lan v \\<and>\n                           |lan v| = 1)) \\<and>\n                         True)) \\<and>\n                 True))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         False)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        x \\<noteq> e \\<and>\n        (\\<exists>va u.\n            move ts ts'' v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (clm ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (res ts') x = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (clm ts') x = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "by fastforce"], ["proof (state)\nthis:\n  (\\<exists>x.\n      x \\<noteq> e \\<and>\n      (\\<exists>va u.\n          move ts ts'' v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (res ts') x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (clm ts') x = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<box>r(e) \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      x \\<noteq> e \\<and>\n      (\\<exists>va u.\n          move ts ts'' v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (res ts') x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (clm ts') x = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n       False", "using pcc"], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      x \\<noteq> e \\<and>\n      (\\<exists>va u.\n          move ts ts'' v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (res ts') x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (clm ts') x = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n       False", "by blast"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n\ngoal (1 subgoal):\n 1. False", "using e_trans"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n  ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "assume neq:\"d \\<noteq> e\""], ["proof (state)\nthis:\n  d \\<noteq> e\n\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "have \"c=d \\<or> c \\<noteq> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = d \\<or> c \\<noteq> d", "by simp"], ["proof (state)\nthis:\n  c = d \\<or> c \\<noteq> d\n\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  c = d \\<or> c \\<noteq> d\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "assume neq2:\"c \\<noteq> d\""], ["proof (state)\nthis:\n  c \\<noteq> d\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "from e_def"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by meson"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n            \"(v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> move ts ts'' v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "with backwards_res_stab"], ["proof (chain)\npicking this:\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have overlap: \"ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> (re(e))\""], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using e_def  backwards_res_stab neg neq2"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  c \\<noteq> e\n  c \\<noteq> d\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by (metis (no_types, lifting) d_def neq)"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "hence unsafe2:\"ts',move ts ts'' v \\<Turnstile>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using   somewhere_leq v'_def"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "from cr_res.IH"], ["proof (chain)\npicking this:\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using move_stab"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by force"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using unsafe2"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "by best"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "assume eq2:\"c = d\""], ["proof (state)\nthis:\n  c = d\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence e_trans:\"ts' \\<^bold>\\<midarrow>r(c) \\<^bold>\\<rightarrow> ts''\""], ["proof (prove)\nusing this:\n  c = d\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''", "using d_def"], ["proof (prove)\nusing this:\n  c = d\n  ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''", "by simp"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "from e_def"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by meson"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n            \"(v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> move ts ts'' v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "with backwards_res_act"], ["proof (chain)\npicking this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \"ts',v' \\<Turnstile>   (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<and> (re(e) )\""], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using e_def  backwards_res_stab neg"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by (metis (no_types, lifting) d_def eq2)"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts',v' \\<Turnstile> (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<and> (re(e)))\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts' e = ext v' \\<and>\n       restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using v'_def"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts' e = ext v' \\<and>\n       restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"ts',move ts ts'' v \\<Turnstile>\\<^bold>\\<langle> (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<and> (re(e) ) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"ts',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> \""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using hmlsl.somewhere_and_or_distr"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (?\\<chi> ts v \\<and>\n                      (?\\<phi> ts v \\<or> ?\\<psi> ts v)) \\<and>\n                     True)) \\<and>\n             True)) =\n     ((\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<phi> ts v) \\<and>\n                      True)) \\<and>\n              True)) \\<or>\n      (\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<psi> ts v) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> e", "using neg"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (2 subgoals):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. False", "using assm' cr_res.IH e_def move_stab"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using neg"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile>\\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e))\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence pcc:\"ts',move ts ts'' v \\<Turnstile> pcc e c\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. e \\<noteq> c \\<and>\n    (\\<exists>va u.\n        move ts ts'' v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  e \\<noteq> c \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"ts',move ts ts'' v \\<Turnstile>( \\<^bold>\\<exists> d. pcc d c) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(c) \\<^bold>\\<bottom>  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        x \\<noteq> c \\<and>\n        (\\<exists>va u.\n            move ts ts'' v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (clm ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (res ts') x = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (clm ts') x = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "using local_LC move_stab"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>xa.\n         xa \\<noteq> x \\<and>\n         (\\<exists>va u.\n             move ts ts' v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (clm ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          (0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (res ts') xa = lan v \\<and>\n                           |lan v| = 1 \\<or>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' xa = ext v \\<and>\n                           restrict v (clm ts') xa = lan v \\<and>\n                           |lan v| = 1)) \\<and>\n                         True)) \\<and>\n                 True))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         False)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        x \\<noteq> c \\<and>\n        (\\<exists>va u.\n            move ts ts'' v=va\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (clm ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (res ts') x = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' x = ext v \\<and>\n                          restrict v (clm ts') x = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "by fastforce"], ["proof (state)\nthis:\n  (\\<exists>x.\n      x \\<noteq> c \\<and>\n      (\\<exists>va u.\n          move ts ts'' v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (res ts') x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (clm ts') x = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<box>r(c) \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      x \\<noteq> c \\<and>\n      (\\<exists>va u.\n          move ts ts'' v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (res ts') x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (clm ts') x = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n       False", "using pcc"], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      x \\<noteq> c \\<and>\n      (\\<exists>va u.\n          move ts ts'' v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (res ts') x = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' x = ext v \\<and>\n                        restrict v (clm ts') x = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n  e \\<noteq> c \\<and>\n  (\\<exists>va u.\n      move ts ts'' v=va\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n       False", "by blast"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n\ngoal (1 subgoal):\n 1. False", "using e_trans"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n  ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "case (cr_clm ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n. ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_clm cr_clm.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>c( ?c, ?n ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n. ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps cr_clm.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume e_def: \"(ts'',move ts ts'' v \\<Turnstile>  \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "obtain d where d_def: \"\\<exists>n. (ts' \\<^bold>\\<midarrow>c(d,n) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<exists>n.\n           ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using cr_clm.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n. ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<exists>n.\n           ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''", "obtain n where n_def:\" (ts' \\<^bold>\\<midarrow>c(d,n) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\nusing this:\n  \\<exists>n. ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from e_def"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n        \"(v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> move ts ts'' v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \" (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using n_def backwards_c_res_stab"], ["proof (prove)\nusing this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''\n  (?ts \\<^bold>\\<midarrow>c( ?d, ?n ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and>re(e) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using e_def v'_def somewhere_leq"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using cr_clm.IH move_stab"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "case (wd_res ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n.\n     ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_wdr wd_res.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>wdr( ?c, ?n ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n.\n     ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps wd_res.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume e_def:\" (ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "obtain d and n where n_def:\" (ts' \\<^bold>\\<midarrow>wdr(d,n) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wd_res.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n.\n     ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from e_def"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n        \"(v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> move ts ts'' v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \" (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using n_def backwards_wdr_res_stab"], ["proof (prove)\nusing this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts''\n  (?ts \\<^bold>\\<midarrow>wdr( ?d, ?n ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile>\\<^bold>\\<langle>re(c) \\<^bold>\\<and>re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using\n          v'_def somewhere_leq"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using wd_res.IH move_stab"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "case (wd_clm ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_wdc wd_clm.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>wdc( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps wd_clm.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<nexists>va u.\n           move ts ts' v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True);\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>va u.\n                            move ts ts'' v=va\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts'' c = ext v \\<and>\n    restrict v (res ts'') c = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'' e = ext v \\<and>\n   restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume e_def: \" (ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "obtain d where d_def: \" (ts' \\<^bold>\\<midarrow>wdc(d) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wd_clm.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from e_def"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"\\<exists>v'. (v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>move ts ts'' v.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n        \"(v' \\<le> move ts ts'' v) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>move ts ts'' v.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> move ts ts'' v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \" (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using d_def backwards_wdc_res_stab"], ["proof (prove)\nusing this:\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts''\n  (?ts \\<^bold>\\<midarrow>wdc( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts'' v \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using  v'_def somewhere_leq"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  v' \\<le> move ts ts'' v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       move ts ts'' v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using wd_clm.IH move_stab"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts'' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     move ts ts' v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\nAs stated above, the flawed safety theorem does not ensure safety for \nthe perspective of each car.\nIn particular, we can construct a traffic snapshot and a view, such that\nit satisfies our safety predicate for each car, but if we switch the\nperspective of the view to another car, the situation is unsafe. A\nvisualisation of this situation can be found in the publication\nof this work at iFM 2017 \\cite{Linker2017}.\n\\<close>"], ["", "lemma safety_not_invariant_switch:\n  \"\\<exists>ts v. (ts,v \\<Turnstile> \\<^bold>\\<forall>e. safe(e) \\<^bold>\\<and> ( \\<^bold>\\<exists> c. \\<^bold>@c  \\<^bold>\\<not>( \\<^bold>\\<forall>e. safe(e))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain d c ::cars where assumption:\"d \\<noteq>c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d c. d \\<noteq> c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using cars.at_least_two_cars_exists"], ["proof (prove)\nusing this:\n  \\<exists>c d. c \\<noteq> d\n\ngoal (1 subgoal):\n 1. (\\<And>d c. d \\<noteq> c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  d \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain pos' where  pos'_def:\"\\<forall>(c::cars). (pos' c) = (5::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pos'.\n        \\<forall>c. pos' c = 5 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  \\<forall>c. pos' c = 5\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain po where pos_def:\"po = (pos'(c:=0))(d:=2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>po.\n        po = pos'(c := 0, d := 2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  po = pos'(c := 0, d := 2)\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain re where res_def:\"\\<forall>(c::cars). re c = Abs_nat_int{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>re.\n        \\<forall>c. re c = Abs_nat_int {0} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  \\<forall>c. re c = Abs_nat_int {0}\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain cl where clm_def:\"\\<forall>(c::cars). cl c= \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cl.\n        \\<forall>c. cl c = bot \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  \\<forall>c. cl c = bot\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain dy where dyn_def:\"\\<forall>c::cars. \\<forall>x::real . (dy c) x  = (0::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>dy.\n        \\<forall>c x. dy c x = 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  \\<forall>c x. dy c x = 0\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain sd where sd_def:\"\\<forall>(c::cars). sd c = (2::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>sd.\n        \\<forall>c. sd c = 2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  \\<forall>c. sd c = 2\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain ps where ps_def:\"\\<forall>(c::cars). ps c = (1::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        \\<forall>c. ps c = 1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  \\<forall>c. ps c = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain ts_rep where ts_rep_def:\"ts_rep= (po, re, cl, dy, ps, sd)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ts_rep.\n        ts_rep = (po, re, cl, dy, ps, sd) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  ts_rep = (po, re, cl, dy, ps, sd)\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have disj:\"\\<forall>c .((re c) \\<sqinter> (cl c) = \\<emptyset>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. re c \\<sqinter> cl c = bot", "by (simp add: clm_def nat_int.inter_empty1)"], ["proof (state)\nthis:\n  \\<forall>c. re c \\<sqinter> cl c = bot\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have re_geq_one:\"\\<forall>c. |re c| \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. 1 \\<le> |re c|", "by (simp add: Abs_nat_int_inverse nat_int.card'_def res_def)"], ["proof (state)\nthis:\n  \\<forall>c. 1 \\<le> |re c|\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have re_leq_two:\"\\<forall>c. |re c| \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. |re c| \\<le> 2", "using nat_int.card'.rep_eq res_def nat_int.rep_single"], ["proof (prove)\nusing this:\n  |?x| = card (Rep_nat_int ?x)\n  \\<forall>c. re c = Abs_nat_int {0}\n  Rep_nat_int (Abs_nat_int {?m..?m}) = {?m}\n\ngoal (1 subgoal):\n 1. \\<forall>c. |re c| \\<le> 2", "by auto"], ["proof (state)\nthis:\n  \\<forall>c. |re c| \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have cl_leq_one:\"\\<forall>c. |cl c| \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. |cl c| \\<le> 1", "using nat_int.card_empty_zero clm_def"], ["proof (prove)\nusing this:\n  |bot| = 0\n  \\<forall>c. cl c = bot\n\ngoal (1 subgoal):\n 1. \\<forall>c. |cl c| \\<le> 1", "by (simp )"], ["proof (state)\nthis:\n  \\<forall>c. |cl c| \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have add_leq_two:\"\\<forall>c . |re c| + |cl c| \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. |re c| + |cl c| \\<le> 2", "using nat_int.card_empty_zero clm_def re_leq_two"], ["proof (prove)\nusing this:\n  |bot| = 0\n  \\<forall>c. cl c = bot\n  \\<forall>c. |re c| \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<forall>c. |re c| + |cl c| \\<le> 2", "by (simp )"], ["proof (state)\nthis:\n  \\<forall>c. |re c| + |cl c| \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have  clNextRe : \n    \"\\<forall>c. ((cl c) \\<noteq> \\<emptyset> \\<longrightarrow> (\\<exists> n. Rep_nat_int (re c) \\<union> Rep_nat_int (cl c) = {n, n+1}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       cl c \\<noteq> bot \\<longrightarrow>\n       (\\<exists>n.\n           Rep_nat_int (re c) \\<union> Rep_nat_int (cl c) = {n, n + 1})", "by (simp add: clm_def)"], ["proof (state)\nthis:\n  \\<forall>c.\n     cl c \\<noteq> bot \\<longrightarrow>\n     (\\<exists>n.\n         Rep_nat_int (re c) \\<union> Rep_nat_int (cl c) = {n, n + 1})\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "from dyn_def"], ["proof (chain)\npicking this:\n  \\<forall>c x. dy c x = 0", "have dyn_geq_zero:\"\\<forall>c. \\<forall>x. (dy c x) \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<forall>c x. dy c x = 0\n\ngoal (1 subgoal):\n 1. \\<forall>c x. 0 \\<le> dy c x", "by auto"], ["proof (state)\nthis:\n  \\<forall>c x. 0 \\<le> dy c x\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "from ps_def"], ["proof (chain)\npicking this:\n  \\<forall>c. ps c = 1", "have ps_ge_zero :\"\\<forall>c. ps c> 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. ps c = 1\n\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < ps c", "by auto"], ["proof (state)\nthis:\n  \\<forall>c. 0 < ps c\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "from sd_def"], ["proof (chain)\npicking this:\n  \\<forall>c. sd c = 2", "have sd_ge_zero: \"\\<forall>c. sd c > 0\""], ["proof (prove)\nusing this:\n  \\<forall>c. sd c = 2\n\ngoal (1 subgoal):\n 1. \\<forall>c. 0 < sd c", "by auto"], ["proof (state)\nthis:\n  \\<forall>c. 0 < sd c\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have ts_in_type: \" ts_rep \\<in> \n  {ts :: (cars\\<Rightarrow>real)*(cars\\<Rightarrow>lanes)*(cars\\<Rightarrow>lanes)*(cars\\<Rightarrow>real\\<Rightarrow>real)*(cars\\<Rightarrow>real)*(cars\\<Rightarrow>real).\n    (\\<forall>c. ((fst (snd ts))) c \\<sqinter> ((fst (snd (snd ts)))) c = \\<emptyset> )  \\<and>\n    (\\<forall>c. |(fst (snd ts)) c| \\<ge> 1) \\<and>\n    (\\<forall>c. |(fst (snd ts)) c| \\<le> 2) \\<and>\n    (\\<forall>c. |(fst (snd (snd ts)) c)| \\<le> 1) \\<and>\n    (\\<forall>c. |(fst (snd ts)) c| + |(fst (snd (snd ts))) c| \\<le> 2) \\<and>\n    (\\<forall>c. (fst(snd(snd (ts)))) c \\<noteq> \\<emptyset> \\<longrightarrow> \n      (\\<exists> n. Rep_nat_int ((fst (snd ts)) c) \\<union> Rep_nat_int ((fst (snd (snd ts))) c) \n        = {n, n+1})) \\<and>\n    (\\<forall>c . fst (snd (snd (snd (snd (ts))))) c > 0) \\<and>\n    (\\<forall>c.  snd (snd (snd (snd (snd (ts))))) c > 0)\n } \""], ["proof (prove)\ngoal (1 subgoal):\n 1. ts_rep\n    \\<in> {ts.\n           (\\<forall>c.\n               fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n           (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n           (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n           (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n           (\\<forall>c.\n               |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n           (\\<forall>c.\n               fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n               (\\<exists>n.\n                   Rep_nat_int (fst (snd ts) c) \\<union>\n                   Rep_nat_int (fst (snd (snd ts)) c) =\n                   {n, n + 1})) \\<and>\n           (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n           (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}", "using pos_def res_def clm_def disj re_geq_one re_leq_two cl_leq_one add_leq_two\n      ps_ge_zero sd_ge_zero ts_rep_def"], ["proof (prove)\nusing this:\n  po = pos'(c := 0, d := 2)\n  \\<forall>c. re c = Abs_nat_int {0}\n  \\<forall>c. cl c = bot\n  \\<forall>c. re c \\<sqinter> cl c = bot\n  \\<forall>c. 1 \\<le> |re c|\n  \\<forall>c. |re c| \\<le> 2\n  \\<forall>c. |cl c| \\<le> 1\n  \\<forall>c. |re c| + |cl c| \\<le> 2\n  \\<forall>c. 0 < ps c\n  \\<forall>c. 0 < sd c\n  ts_rep = (po, re, cl, dy, ps, sd)\n\ngoal (1 subgoal):\n 1. ts_rep\n    \\<in> {ts.\n           (\\<forall>c.\n               fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n           (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n           (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n           (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n           (\\<forall>c.\n               |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n           (\\<forall>c.\n               fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n               (\\<exists>n.\n                   Rep_nat_int (fst (snd ts) c) \\<union>\n                   Rep_nat_int (fst (snd (snd ts)) c) =\n                   {n, n + 1})) \\<and>\n           (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n           (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}", "by auto"], ["proof (state)\nthis:\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain v where v_def:\n    \"v=\\<lparr>ext = Abs_real_int (0,3), lan = Abs_nat_int{0}, own = d\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        v =\n        \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0},\n           own = d\\<rparr> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "obtain ts where ts_def:\"ts=Abs_traffic ts_rep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ts.\n        ts = Abs_traffic ts_rep \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts = Abs_traffic ts_rep\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have size:\"\\<forall>c. physical_size ts c = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c. physical_size ts c = 1", "using ps_def physical_size_def ts_rep_def\n      ts_in_type ts_def ps_ge_zero"], ["proof (prove)\nusing this:\n  \\<forall>c. ps c = 1\n  physical_size ?ts \\<equiv> fst (snd (snd (snd (snd (Rep_traffic ?ts)))))\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ts = Abs_traffic ts_rep\n  \\<forall>c. 0 < ps c\n\ngoal (1 subgoal):\n 1. \\<forall>c. physical_size ts c = 1", "using Abs_traffic_inverse"], ["proof (prove)\nusing this:\n  \\<forall>c. ps c = 1\n  physical_size ?ts \\<equiv> fst (snd (snd (snd (snd (Rep_traffic ?ts)))))\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ts = Abs_traffic ts_rep\n  \\<forall>c. 0 < ps c\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n\ngoal (1 subgoal):\n 1. \\<forall>c. physical_size ts c = 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>c. physical_size ts c = 1\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have safe:\" ts,v \\<Turnstile> \\<^bold>\\<forall>e. safe(e) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       xa \\<noteq> x \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts xa = ext v \\<and>\n                         restrict v (res ts) xa = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts x = ext v \\<and>\n                        restrict v (res ts) x = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have other_len_zero:\"\\<forall>e. e \\<noteq>c \\<and> e \\<noteq>d \\<longrightarrow> \\<parallel> len v ts e\\<parallel> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "assume e_def:\" e \\<noteq>c \\<and> e \\<noteq>d\""], ["proof (state)\nthis:\n  e \\<noteq> c \\<and> e \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "have position:\"pos ts e = 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pos ts e = 5", "using e_def ts_def ts_rep_def ts_in_type ts_def\n          Abs_traffic_inverse pos_def fun_upd_apply pos'_def traffic.pos_def"], ["proof (prove)\nusing this:\n  e \\<noteq> c \\<and> e \\<noteq> d\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ts = Abs_traffic ts_rep\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  po = pos'(c := 0, d := 2)\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n  \\<forall>c. pos' c = 5\n  pos ?ts \\<equiv> fst (Rep_traffic ?ts)\n\ngoal (1 subgoal):\n 1. pos ts e = 5", "by auto"], ["proof (state)\nthis:\n  pos ts e = 5\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "have \"regular (own v) ts e = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (own v) ts e = 1", "using e_def v_def sensors_def ps_def ts_def size regular_def"], ["proof (prove)\nusing this:\n  e \\<noteq> c \\<and> e \\<noteq> d\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  sensors ?sensors \\<equiv> \\<forall>e ts c. 0 < ?sensors e ts c\n  \\<forall>c. ps c = 1\n  ts = Abs_traffic ts_rep\n  \\<forall>c. physical_size ts c = 1\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n\ngoal (1 subgoal):\n 1. regular (own v) ts e = 1", "by auto"], ["proof (state)\nthis:\n  regular (own v) ts e = 1\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "then"], ["proof (chain)\npicking this:\n  regular (own v) ts e = 1", "have space:\"space ts v e = Abs_real_int (5,6)\""], ["proof (prove)\nusing this:\n  regular (own v) ts e = 1\n\ngoal (1 subgoal):\n 1. space ts v e = Abs_real_int (5, 6)", "using e_def pos_def position hmlsl.space_def"], ["proof (prove)\nusing this:\n  regular (own v) ts e = 1\n  e \\<noteq> c \\<and> e \\<noteq> d\n  po = pos'(c := 0, d := 2)\n  pos ts e = 5\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n\ngoal (1 subgoal):\n 1. space ts v e = Abs_real_int (5, 6)", "by auto"], ["proof (state)\nthis:\n  space ts v e = Abs_real_int (5, 6)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "have \"left (space ts v e) > right (ext v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (ext v) < left (space ts v e)", "using space v_def Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts v e = Abs_real_int (5, 6)\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (ext v) < left (space ts v e)", "by auto"], ["proof (state)\nthis:\n  right (ext v) < left (space ts v e)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<Longrightarrow>\n       \\<parallel>len v ts e\\<parallel> = 0", "thus \"\\<parallel> len v ts e\\<parallel> = 0\""], ["proof (prove)\nusing this:\n  right (ext v) < left (space ts v e)\n\ngoal (1 subgoal):\n 1. \\<parallel>len v ts e\\<parallel> = 0", "using hmlsl.len_def real_int.length_def Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  right (ext v) < left (space ts v e)\n  len ?v ?ts ?c \\<equiv>\n  if right (ext ?v) < left (space ?ts ?v ?c)\n  then Abs_real_int (right (ext ?v), right (ext ?v))\n  else if right (space ?ts ?v ?c) < left (ext ?v)\n       then Abs_real_int (left (ext ?v), left (ext ?v))\n       else Abs_real_int\n             (max (left (ext ?v)) (left (space ?ts ?v ?c)),\n              min (right (ext ?v)) (right (space ?ts ?v ?c)))\n  \\<parallel>?r\\<parallel> \\<equiv> right ?r - left ?r\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. \\<parallel>len v ts e\\<parallel> = 0", "by auto"], ["proof (state)\nthis:\n  \\<parallel>len v ts e\\<parallel> = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     \\<parallel>len v ts e\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have no_cars:\"\\<forall>e. e \\<noteq>c \\<and> e \\<noteq>d \\<longrightarrow> (ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(e) \\<^bold>\\<or> cl(e) \\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e.\n       e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "proof (rule allI|rule impI|rule notI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "assume neq:\"e \\<noteq>c \\<and> e \\<noteq>d\""], ["proof (state)\nthis:\n  e \\<noteq> c \\<and> e \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "assume contra:\"ts,v \\<Turnstile> \\<^bold>\\<langle> re(e) \\<^bold>\\<or> cl(e) \\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (clm ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "from other_len_zero"], ["proof (chain)\npicking this:\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     \\<parallel>len v ts e\\<parallel> = 0", "have len_e:\"\\<parallel>len v ts e\\<parallel> = 0\""], ["proof (prove)\nusing this:\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     \\<parallel>len v ts e\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. \\<parallel>len v ts e\\<parallel> = 0", "using neq"], ["proof (prove)\nusing this:\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     \\<parallel>len v ts e\\<parallel> = 0\n  e \\<noteq> c \\<and> e \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<parallel>len v ts e\\<parallel> = 0", "by auto"], ["proof (state)\nthis:\n  \\<parallel>len v ts e\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "from contra"], ["proof (chain)\npicking this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (clm ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "obtain v' where v'_def:\"v' \\<le> v \\<and> (ts,v' \\<Turnstile>re(e) \\<^bold>\\<or> cl(e))\""], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (clm ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts e = ext v' \\<and>\n         restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n         0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts e = ext v' \\<and>\n         restrict v' (clm ts) e = lan v' \\<and>\n         |lan v'| = 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts e = ext v \\<and>\n                  restrict v (clm ts) e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts e = ext v' \\<and>\n         restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n         0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts e = ext v' \\<and>\n         restrict v' (clm ts) e = lan v' \\<and>\n         |lan v'| = 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1)\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "from v'_def and len_e"], ["proof (chain)\npicking this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1)\n  \\<parallel>len v ts e\\<parallel> = 0", "have len_v':\"\\<parallel>len v' ts e\\<parallel> = 0\""], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1)\n  \\<parallel>len v ts e\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. \\<parallel>len v' ts e\\<parallel> = 0", "using hmlsl.len_empty_subview"], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1)\n  \\<parallel>len v ts e\\<parallel> = 0\n  \\<parallel>len ?v ?ts ?c\\<parallel> = 0 \\<and>\n  ?v' \\<le> ?v \\<longrightarrow>\n  \\<parallel>len ?v' ?ts ?c\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. \\<parallel>len v' ts e\\<parallel> = 0", "by blast"], ["proof (state)\nthis:\n  \\<parallel>len v' ts e\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "from v'_def"], ["proof (chain)\npicking this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1)", "have \"ts,v' \\<Turnstile>re(e) \\<^bold>\\<or> cl(e)\""], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts e = ext v' \\<and>\n   restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1)\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts e = ext v' \\<and>\n    restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts e = ext v' \\<and>\n    restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts e = ext v' \\<and>\n  restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts e = ext v' \\<and>\n  restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>e \\<noteq> c \\<and> e \\<noteq> d;\n        \\<exists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (res ts) e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts e = ext v \\<and>\n                        restrict v (clm ts) e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True)\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts e = ext v' \\<and>\n  restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts e = ext v' \\<and>\n  restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. False", "using len_v'"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts e = ext v' \\<and>\n  restrict v' (res ts) e = lan v' \\<and> |lan v'| = 1 \\<or>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts e = ext v' \\<and>\n  restrict v' (clm ts) e = lan v' \\<and> |lan v'| = 1\n  \\<parallel>len v' ts e\\<parallel> = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (clm ts) e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have sensors_c:\"regular (own v) ts c = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (own v) ts c = 1", "using v_def regular_def ps_def ts_def size assumption"], ["proof (prove)\nusing this:\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n  \\<forall>c. ps c = 1\n  ts = Abs_traffic ts_rep\n  \\<forall>c. physical_size ts c = 1\n  d \\<noteq> c\n\ngoal (1 subgoal):\n 1. regular (own v) ts c = 1", "by auto"], ["proof (state)\nthis:\n  regular (own v) ts c = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have space_c:\"space ts v c = Abs_real_int (0,1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space ts v c = Abs_real_int (0, 1)", "using pos_def ts_def ts_rep_def ts_in_type Abs_traffic_inverse\n        fun_upd_apply sensors_c  assumption hmlsl.space_def traffic.pos_def"], ["proof (prove)\nusing this:\n  po = pos'(c := 0, d := 2)\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n  regular (own v) ts c = 1\n  d \\<noteq> c\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n  pos ?ts \\<equiv> fst (Rep_traffic ?ts)\n\ngoal (1 subgoal):\n 1. space ts v c = Abs_real_int (0, 1)", "by auto"], ["proof (state)\nthis:\n  space ts v c = Abs_real_int (0, 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have lc:\"left (space ts v c) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (space ts v c) = 0", "using space_c Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts v c = Abs_real_int (0, 1)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (space ts v c) = 0", "by auto"], ["proof (state)\nthis:\n  left (space ts v c) = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have rv:\"right (ext v) = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (ext v) = 3", "using v_def Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (ext v) = 3", "by auto"], ["proof (state)\nthis:\n  right (ext v) = 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have lv:\"left (ext v) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (ext v) = 0", "using v_def Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (ext v) = 0", "by auto"], ["proof (state)\nthis:\n  left (ext v) = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have rc:\"right (space ts v c) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (space ts v c) = 1", "using space_c Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts v c = Abs_real_int (0, 1)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (space ts v c) = 1", "by auto"], ["proof (state)\nthis:\n  right (space ts v c) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have len_c:\"len v ts c = Abs_real_int(0,1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len v ts c = Abs_real_int (0, 1)", "using space_c v_def hmlsl.len_def lc lv rv rc"], ["proof (prove)\nusing this:\n  space ts v c = Abs_real_int (0, 1)\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  len ?v ?ts ?c \\<equiv>\n  if right (ext ?v) < left (space ?ts ?v ?c)\n  then Abs_real_int (right (ext ?v), right (ext ?v))\n  else if right (space ?ts ?v ?c) < left (ext ?v)\n       then Abs_real_int (left (ext ?v), left (ext ?v))\n       else Abs_real_int\n             (max (left (ext ?v)) (left (space ?ts ?v ?c)),\n              min (right (ext ?v)) (right (space ?ts ?v ?c)))\n  left (space ts v c) = 0\n  left (ext v) = 0\n  right (ext v) = 3\n  right (space ts v c) = 1\n\ngoal (1 subgoal):\n 1. len v ts c = Abs_real_int (0, 1)", "by auto"], ["proof (state)\nthis:\n  len v ts c = Abs_real_int (0, 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have sensors_d:\"regular (own v) ts d = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (own v) ts d = 3", "using v_def regular_def braking_distance_def ts_def size sd_def\n        Abs_traffic_inverse ts_in_type ts_rep_def"], ["proof (prove)\nusing this:\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n  braking_distance ?ts \\<equiv>\n  snd (snd (snd (snd (snd (Rep_traffic ?ts)))))\n  ts = Abs_traffic ts_rep\n  \\<forall>c. physical_size ts c = 1\n  \\<forall>c. sd c = 2\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ts_rep = (po, re, cl, dy, ps, sd)\n\ngoal (1 subgoal):\n 1. regular (own v) ts d = 3", "by auto"], ["proof (state)\nthis:\n  regular (own v) ts d = 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have space_d:\"space ts v d = Abs_real_int(2,5)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space ts v d = Abs_real_int (2, 5)", "using pos_def ts_def ts_rep_def ts_in_type Abs_traffic_inverse\n        fun_upd_apply sensors_d assumption hmlsl.space_def traffic.pos_def"], ["proof (prove)\nusing this:\n  po = pos'(c := 0, d := 2)\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n  regular (own v) ts d = 3\n  d \\<noteq> c\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n  pos ?ts \\<equiv> fst (Rep_traffic ?ts)\n\ngoal (1 subgoal):\n 1. space ts v d = Abs_real_int (2, 5)", "by auto"], ["proof (state)\nthis:\n  space ts v d = Abs_real_int (2, 5)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have ld:\"left (space ts v d) = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (space ts v d) = 2", "using space_d Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts v d = Abs_real_int (2, 5)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (space ts v d) = 2", "by auto"], ["proof (state)\nthis:\n  left (space ts v d) = 2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have rd: \"right (space ts v d) = 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (space ts v d) = 5", "using space_d Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts v d = Abs_real_int (2, 5)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (space ts v d) = 5", "by auto"], ["proof (state)\nthis:\n  right (space ts v d) = 5\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have len_d :\"len v ts d = Abs_real_int(2,3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len v ts d = Abs_real_int (2, 3)", "using space_d v_def hmlsl.len_def ld rd lv rv"], ["proof (prove)\nusing this:\n  space ts v d = Abs_real_int (2, 5)\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  len ?v ?ts ?c \\<equiv>\n  if right (ext ?v) < left (space ?ts ?v ?c)\n  then Abs_real_int (right (ext ?v), right (ext ?v))\n  else if right (space ?ts ?v ?c) < left (ext ?v)\n       then Abs_real_int (left (ext ?v), left (ext ?v))\n       else Abs_real_int\n             (max (left (ext ?v)) (left (space ?ts ?v ?c)),\n              min (right (ext ?v)) (right (space ?ts ?v ?c)))\n  left (space ts v d) = 2\n  right (space ts v d) = 5\n  left (ext v) = 0\n  right (ext v) = 3\n\ngoal (1 subgoal):\n 1. len v ts d = Abs_real_int (2, 3)", "by auto"], ["proof (state)\nthis:\n  len v ts d = Abs_real_int (2, 3)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "have no_overlap_c_d:\"ts,v \\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume contra:\"ts,v \\<Turnstile>  \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "obtain v' where v'_def:\"(v' \\<le> v) \\<and> (ts,v' \\<Turnstile>re(c) \\<^bold>\\<and> re(d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts c = ext v' \\<and>\n         restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts d = ext v' \\<and>\n        restrict v' (res ts) d = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using somewhere_leq contra"], ["proof (prove)\nusing this:\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n  \\<exists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> v \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts c = ext v' \\<and>\n         restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts d = ext v' \\<and>\n        restrict v' (res ts) d = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence len_eq:\"len v' ts c = len v' ts d\""], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. len v' ts c = len v' ts d", "by simp"], ["proof (state)\nthis:\n  len v' ts c = len v' ts d\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from v'_def"], ["proof (chain)\npicking this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1", "have v'_c:\"\\<parallel>len v' ts c\\<parallel> > 0\" \n                   and  v'_d:\"\\<parallel>len v' ts d\\<parallel> > 0\""], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>len v' ts c\\<parallel> &&&\n    0 < \\<parallel>len v' ts d\\<parallel>", "by simp+"], ["proof (state)\nthis:\n  0 < \\<parallel>len v' ts c\\<parallel>\n  0 < \\<parallel>len v' ts d\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from v'_c"], ["proof (chain)\npicking this:\n  0 < \\<parallel>len v' ts c\\<parallel>", "have v'_rel_c:\n        \"left (space ts v' c) < right (ext v') \\<and> right (space ts v' c) > left (ext v')\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v' ts c\\<parallel>\n\ngoal (1 subgoal):\n 1. left (space ts v' c) < right (ext v') \\<and>\n    left (ext v') < right (space ts v' c)", "using hmlsl.len_non_empty_inside"], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v' ts c\\<parallel>\n  0 < \\<parallel>len ?v ?ts ?c\\<parallel> \\<longrightarrow>\n  left (space ?ts ?v ?c) < right (ext ?v) \\<and>\n  left (ext ?v) < right (space ?ts ?v ?c)\n\ngoal (1 subgoal):\n 1. left (space ts v' c) < right (ext v') \\<and>\n    left (ext v') < right (space ts v' c)", "by blast"], ["proof (state)\nthis:\n  left (space ts v' c) < right (ext v') \\<and>\n  left (ext v') < right (space ts v' c)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "from v'_d"], ["proof (chain)\npicking this:\n  0 < \\<parallel>len v' ts d\\<parallel>", "have v'_rel_d:\n        \"left (space ts v' d) < right (ext v') \\<and> right (space ts v' d) > left (ext v')\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v' ts d\\<parallel>\n\ngoal (1 subgoal):\n 1. left (space ts v' d) < right (ext v') \\<and>\n    left (ext v') < right (space ts v' d)", "using hmlsl.len_non_empty_inside"], ["proof (prove)\nusing this:\n  0 < \\<parallel>len v' ts d\\<parallel>\n  0 < \\<parallel>len ?v ?ts ?c\\<parallel> \\<longrightarrow>\n  left (space ?ts ?v ?c) < right (ext ?v) \\<and>\n  left (ext ?v) < right (space ?ts ?v ?c)\n\ngoal (1 subgoal):\n 1. left (space ts v' d) < right (ext v') \\<and>\n    left (ext v') < right (space ts v' d)", "by blast"], ["proof (state)\nthis:\n  left (space ts v' d) < right (ext v') \\<and>\n  left (ext v') < right (space ts v' d)\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have less_len:\"len v' ts c \\<le> len v ts c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len v' ts c \\<le> len v ts c", "using hmlsl.view_leq_len_leq v'_c v'_def less_eq_view_ext_def"], ["proof (prove)\nusing this:\n  ext ?v \\<le> ext ?v' \\<and>\n  own ?v = own ?v' \\<and>\n  0 < \\<parallel>len ?v ?ts ?c\\<parallel> \\<longrightarrow>\n  len ?v ?ts ?c \\<le> len ?v' ?ts ?c\n  0 < \\<parallel>len v' ts c\\<parallel>\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n  ?V \\<le> ?V' \\<equiv>\n  ext ?V \\<le> ext ?V' \\<and>\n  lan ?V \\<le> lan ?V' \\<and> own ?V = own ?V' \\<and> more ?V \\<le> more ?V'\n\ngoal (1 subgoal):\n 1. len v' ts c \\<le> len v ts c", "by blast"], ["proof (state)\nthis:\n  len v' ts c \\<le> len v ts c\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have sp_eq_c:\"space ts v' c = space ts v c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space ts v' c = space ts v c", "using v'_def less_eq_view_ext_def regular_def hmlsl.space_def"], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n  ?V \\<le> ?V' \\<equiv>\n  ext ?V \\<le> ext ?V' \\<and>\n  lan ?V \\<le> lan ?V' \\<and> own ?V = own ?V' \\<and> more ?V \\<le> more ?V'\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n\ngoal (1 subgoal):\n 1. space ts v' c = space ts v c", "by auto"], ["proof (state)\nthis:\n  space ts v' c = space ts v c\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have sp_eq_d:\"space ts v' d = space ts v d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space ts v' d = space ts v d", "using v'_def less_eq_view_ext_def regular_def hmlsl.space_def"], ["proof (prove)\nusing this:\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n  ?V \\<le> ?V' \\<equiv>\n  ext ?V \\<le> ext ?V' \\<and>\n  lan ?V \\<le> lan ?V' \\<and> own ?V = own ?V' \\<and> more ?V \\<le> more ?V'\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n\ngoal (1 subgoal):\n 1. space ts v' d = space ts v d", "by auto"], ["proof (state)\nthis:\n  space ts v' d = space ts v d\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"right (ext v') > 0 \\<and> right (ext v') > 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < right (ext v') \\<and> 2 < right (ext v')", "using ld lc v'_rel_c v'_rel_d sp_eq_c sp_eq_d"], ["proof (prove)\nusing this:\n  left (space ts v d) = 2\n  left (space ts v c) = 0\n  left (space ts v' c) < right (ext v') \\<and>\n  left (ext v') < right (space ts v' c)\n  left (space ts v' d) < right (ext v') \\<and>\n  left (ext v') < right (space ts v' d)\n  space ts v' c = space ts v c\n  space ts v' d = space ts v d\n\ngoal (1 subgoal):\n 1. 0 < right (ext v') \\<and> 2 < right (ext v')", "by auto"], ["proof (state)\nthis:\n  0 < right (ext v') \\<and> 2 < right (ext v')\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence r_v':\"right (ext v') > 2\""], ["proof (prove)\nusing this:\n  0 < right (ext v') \\<and> 2 < right (ext v')\n\ngoal (1 subgoal):\n 1. 2 < right (ext v')", "by blast"], ["proof (state)\nthis:\n  2 < right (ext v')\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"left (ext v') < 1 \\<and> left (ext v') < 5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (ext v') < 1 \\<and> left (ext v') < 5", "using rd rc v'_rel_c v'_rel_d sp_eq_c sp_eq_d"], ["proof (prove)\nusing this:\n  right (space ts v d) = 5\n  right (space ts v c) = 1\n  left (space ts v' c) < right (ext v') \\<and>\n  left (ext v') < right (space ts v' c)\n  left (space ts v' d) < right (ext v') \\<and>\n  left (ext v') < right (space ts v' d)\n  space ts v' c = space ts v c\n  space ts v' d = space ts v d\n\ngoal (1 subgoal):\n 1. left (ext v') < 1 \\<and> left (ext v') < 5", "by auto"], ["proof (state)\nthis:\n  left (ext v') < 1 \\<and> left (ext v') < 5\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence l_v':\"left (ext v') < 1\""], ["proof (prove)\nusing this:\n  left (ext v') < 1 \\<and> left (ext v') < 5\n\ngoal (1 subgoal):\n 1. left (ext v') < 1", "by blast"], ["proof (state)\nthis:\n  left (ext v') < 1\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"len v' ts c \\<noteq> ext v'  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. len v' ts c \\<noteq> ext v'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. len v' ts c = ext v' \\<Longrightarrow> False", "assume \"len v' ts c = ext v'\""], ["proof (state)\nthis:\n  len v' ts c = ext v'\n\ngoal (1 subgoal):\n 1. len v' ts c = ext v' \\<Longrightarrow> False", "hence eq:\"right (len v' ts c) = right (ext v')\""], ["proof (prove)\nusing this:\n  len v' ts c = ext v'\n\ngoal (1 subgoal):\n 1. right (len v' ts c) = right (ext v')", "by simp"], ["proof (state)\nthis:\n  right (len v' ts c) = right (ext v')\n\ngoal (1 subgoal):\n 1. len v' ts c = ext v' \\<Longrightarrow> False", "from less_len"], ["proof (chain)\npicking this:\n  len v' ts c \\<le> len v ts c", "have \"right (len v' ts c) \\<le> right (len v ts c)\""], ["proof (prove)\nusing this:\n  len v' ts c \\<le> len v ts c\n\ngoal (1 subgoal):\n 1. right (len v' ts c) \\<le> right (len v ts c)", "by (simp add: less_eq_real_int_def)"], ["proof (state)\nthis:\n  right (len v' ts c) \\<le> right (len v ts c)\n\ngoal (1 subgoal):\n 1. len v' ts c = ext v' \\<Longrightarrow> False", "with len_c"], ["proof (chain)\npicking this:\n  len v ts c = Abs_real_int (0, 1)\n  right (len v' ts c) \\<le> right (len v ts c)", "have \"right (len v' ts c) \\<le> 1 \""], ["proof (prove)\nusing this:\n  len v ts c = Abs_real_int (0, 1)\n  right (len v' ts c) \\<le> right (len v ts c)\n\ngoal (1 subgoal):\n 1. right (len v' ts c) \\<le> 1", "using Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  len v ts c = Abs_real_int (0, 1)\n  right (len v' ts c) \\<le> right (len v ts c)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (len v' ts c) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  right (len v' ts c) \\<le> 1\n\ngoal (1 subgoal):\n 1. len v' ts c = ext v' \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  right (len v' ts c) \\<le> 1\n\ngoal (1 subgoal):\n 1. False", "using r_v' eq"], ["proof (prove)\nusing this:\n  right (len v' ts c) \\<le> 1\n  2 < right (ext v')\n  right (len v' ts c) = right (ext v')\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  len v' ts c \\<noteq> ext v'\n\ngoal (1 subgoal):\n 1. \\<exists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  len v' ts c \\<noteq> ext v'\n\ngoal (1 subgoal):\n 1. False", "using v'_def"], ["proof (prove)\nusing this:\n  len v' ts c \\<noteq> ext v'\n  v' \\<le> v \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts c = ext v' \\<and>\n   restrict v' (res ts) c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts d = ext v' \\<and>\n  restrict v' (res ts) d = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>va u.\n              v=va\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))", "show \"ts,v \\<Turnstile> safe(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       xa \\<noteq> x \\<longrightarrow>\n       (\\<nexists>va u.\n           v=va\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts xa = ext v \\<and>\n                         restrict v (res ts) xa = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts x = ext v \\<and>\n                        restrict v (res ts) x = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "proof (rule allI|rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<noteq> x \\<Longrightarrow>\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True)", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<noteq> x \\<Longrightarrow>\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True)", "assume x_neg_y: \"ts,v \\<Turnstile>  \\<^bold>\\<not>(y \\<^bold>= x)\""], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<noteq> x \\<Longrightarrow>\n       \\<nexists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts xa = ext v \\<and>\n                        restrict v (res ts) xa = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts x = ext v \\<and>\n                       restrict v (res ts) x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True)", "show \"ts,v \\<Turnstile>\\<^bold>\\<not>\\<^bold>\\<langle>re(y) \\<^bold>\\<and> re(x)\\<^bold>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (cases \"y \\<noteq>c \\<and> y \\<noteq>d\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<noteq> c \\<and> y \\<noteq> d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "assume \"y \\<noteq> c \\<and> y \\<noteq> d\""], ["proof (state)\nthis:\n  y \\<noteq> c \\<and> y \\<noteq> d\n\ngoal (2 subgoals):\n 1. y \\<noteq> c \\<and> y \\<noteq> d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "hence \"(ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(y) \\<^bold>\\<or> cl(y) \\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  y \\<noteq> c \\<and> y \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts y = ext v \\<and>\n                    restrict v (res ts) y = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts y = ext v \\<and>\n                    restrict v (clm ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using no_cars"], ["proof (prove)\nusing this:\n  y \\<noteq> c \\<and> y \\<noteq> d\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (clm ts) e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts y = ext v \\<and>\n                    restrict v (res ts) y = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts y = ext v \\<and>\n                    restrict v (clm ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (res ts) y = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (clm ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. y \\<noteq> c \\<and> y \\<noteq> d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "hence \"ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(y) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (res ts) y = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (clm ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts y = ext v \\<and>\n                    restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. y \\<noteq> c \\<and> y \\<noteq> d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "then"], ["proof (chain)\npicking this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts y = ext v \\<and>\n                  restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "assume \"\\<not>(y \\<noteq>c \\<and> y \\<noteq>d)\""], ["proof (state)\nthis:\n  \\<not> (y \\<noteq> c \\<and> y \\<noteq> d)\n\ngoal (1 subgoal):\n 1. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "hence \"y = c \\<or> y = d\""], ["proof (prove)\nusing this:\n  \\<not> (y \\<noteq> c \\<and> y \\<noteq> d)\n\ngoal (1 subgoal):\n 1. y = c \\<or> y = d", "by blast"], ["proof (state)\nthis:\n  y = c \\<or> y = d\n\ngoal (1 subgoal):\n 1. \\<not> (y \\<noteq> c \\<and> y \\<noteq> d) \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = c \\<or> y = d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. y = c \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. y = d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "assume y_eq_c:\"y=c\""], ["proof (state)\nthis:\n  y = c\n\ngoal (2 subgoals):\n 1. y = c \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)\n 2. y = d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = c\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (cases \"x=d\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>y = c; x = d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)\n 2. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "assume \"x=d\""], ["proof (state)\nthis:\n  x = d\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y = c; x = d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)\n 2. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "then"], ["proof (chain)\npicking this:\n  x = d", "show \"ts,v \\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(y) \\<^bold>\\<and> re(x)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  x = d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using no_overlap_c_d y_eq_c"], ["proof (prove)\nusing this:\n  x = d\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  y = c\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "assume x:\"x \\<noteq>d\""], ["proof (state)\nthis:\n  x \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "have x2:\"x \\<noteq>c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> c", "using y_eq_c x_neg_y"], ["proof (prove)\nusing this:\n  y = c\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. x \\<noteq> c", "by blast"], ["proof (state)\nthis:\n  x \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "hence \"(ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(x) \\<^bold>\\<or> cl(x) \\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using no_cars x"], ["proof (prove)\nusing this:\n  x \\<noteq> c\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (clm ts) e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  x \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "hence \"ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(x) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = c; x \\<noteq> d\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. y = d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y = d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "assume y_eq_c:\"y=d\""], ["proof (state)\nthis:\n  y = d\n\ngoal (1 subgoal):\n 1. y = d \\<Longrightarrow>\n    \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "proof (cases \"x=c\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>y = d; x = c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)\n 2. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "assume \"x=c\""], ["proof (state)\nthis:\n  x = c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y = d; x = c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)\n 2. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "thus \"ts,v \\<Turnstile>\\<^bold>\\<not> \\<^bold>\\<langle>re(y) \\<^bold>\\<and> re(x)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  x = c\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using no_overlap_c_d y_eq_c"], ["proof (prove)\nusing this:\n  x = c\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  y = d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "assume x:\"x \\<noteq>c\""], ["proof (state)\nthis:\n  x \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "have x2:\"x \\<noteq>d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> d", "using y_eq_c x_neg_y"], ["proof (prove)\nusing this:\n  y = d\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. x \\<noteq> d", "by blast"], ["proof (state)\nthis:\n  x \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "hence \"(ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(x) \\<^bold>\\<or> cl(x) \\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using no_cars x"], ["proof (prove)\nusing this:\n  x \\<noteq> d\n  \\<forall>e.\n     e \\<noteq> c \\<and> e \\<noteq> d \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (res ts) e = lan v \\<and> |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts e = ext v \\<and>\n                      restrict v (clm ts) e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  x \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "hence \"ts,v \\<Turnstile> \\<^bold>\\<not> \\<^bold>\\<langle> re(x) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1 \\<or>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (clm ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = d; x \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>va u.\n                         v=va\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts y = ext v \\<and>\n restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 (0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<nexists>va u.\n       v=va\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts y = ext v \\<and>\n                     restrict v (res ts) y = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts x = ext v \\<and>\n                    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>va u.\n     v=va\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts y = ext v \\<and>\n                   restrict v (res ts) y = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts x = ext v \\<and>\n                  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "have unsafe:\"ts,v \\<Turnstile> (\\<^bold>\\<exists> c. (\\<^bold>@c  \\<^bold>\\<not>( \\<^bold>\\<forall>e. safe(e))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>v'.\n          v = x > v' \\<longrightarrow>\n          \\<not> (\\<forall>x xa.\n                     xa \\<noteq> x \\<longrightarrow>\n                     (\\<nexists>v u.\n                         v'=v\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts xa = ext v \\<and>\n restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>v'.\n          v = x > v' \\<longrightarrow>\n          \\<not> (\\<forall>x xa.\n                     xa \\<noteq> x \\<longrightarrow>\n                     (\\<nexists>v u.\n                         v'=v\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts xa = ext v \\<and>\n restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)))", "have \"ts,v \\<Turnstile> (\\<^bold>@c  \\<^bold>\\<not>( \\<^bold>\\<forall>e. safe(e)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       v = c > v' \\<longrightarrow>\n       \\<not> (\\<forall>x xa.\n                  xa \\<noteq> x \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts xa = ext v \\<and>\n                                    restrict v (res ts) xa = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts x = ext v \\<and>\n                                   restrict v (res ts) x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "proof (rule allI|rule impI|rule notI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "fix vc"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "assume sw:\"( v=c>vc)\""], ["proof (state)\nthis:\n  v = c > vc\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have spatial_vc:\"ext v = ext vc \\<and> lan v = lan vc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ext v = ext vc \\<and> lan v = lan vc", "using switch_def sw"], ["proof (prove)\nusing this:\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n  v = c > vc\n\ngoal (1 subgoal):\n 1. ext v = ext vc \\<and> lan v = lan vc", "by blast"], ["proof (state)\nthis:\n  ext v = ext vc \\<and> lan v = lan vc\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "assume safe: \"ts,vc\\<Turnstile> ( \\<^bold>\\<forall>e. safe(e))\""], ["proof (state)\nthis:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>v u.\n         vc=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "obtain vc' where vc'_def:\n        \"vc'=\\<lparr>ext = Abs_real_int (2,3), lan = Abs_nat_int {0}, own = c\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>vc'.\n        vc' =\n        \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0},\n           own = c\\<rparr> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by best"], ["proof (state)\nthis:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have own_eq:\"own vc' = own vc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. own vc' = own vc", "using sw switch_def vc'_def"], ["proof (prove)\nusing this:\n  v = c > vc\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n\ngoal (1 subgoal):\n 1. own vc' = own vc", "by auto"], ["proof (state)\nthis:\n  own vc' = own vc\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have ext_vc:\"ext vc = Abs_real_int (0,3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ext vc = Abs_real_int (0, 3)", "using spatial_vc v_def"], ["proof (prove)\nusing this:\n  ext v = ext vc \\<and> lan v = lan vc\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n\ngoal (1 subgoal):\n 1. ext vc = Abs_real_int (0, 3)", "by force"], ["proof (state)\nthis:\n  ext vc = Abs_real_int (0, 3)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have right_ok:\"right (ext vc) \\<ge> right (ext vc')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (ext vc') \\<le> right (ext vc)", "using vc'_def ext_vc Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  ext vc = Abs_real_int (0, 3)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (ext vc') \\<le> right (ext vc)", "by auto"], ["proof (state)\nthis:\n  right (ext vc') \\<le> right (ext vc)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have left_ok:\"left (ext vc') \\<ge> left (ext vc)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (ext vc) \\<le> left (ext vc')", "using vc'_def ext_vc Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  ext vc = Abs_real_int (0, 3)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (ext vc) \\<le> left (ext vc')", "by auto"], ["proof (state)\nthis:\n  left (ext vc) \\<le> left (ext vc')\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "hence ext_leq: \"ext vc' \\<le> ext vc\""], ["proof (prove)\nusing this:\n  left (ext vc) \\<le> left (ext vc')\n\ngoal (1 subgoal):\n 1. ext vc' \\<le> ext vc", "using right_ok left_ok less_eq_real_int_def"], ["proof (prove)\nusing this:\n  left (ext vc) \\<le> left (ext vc')\n  right (ext vc') \\<le> right (ext vc)\n  left (ext vc) \\<le> left (ext vc')\n  ?r \\<le> ?s \\<equiv> left ?s \\<le> left ?r \\<and> right ?r \\<le> right ?s\n\ngoal (1 subgoal):\n 1. ext vc' \\<le> ext vc", "by auto"], ["proof (state)\nthis:\n  ext vc' \\<le> ext vc\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have \"lan vc = Abs_nat_int{0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lan vc = Abs_nat_int {0}", "using v_def switch_def sw"], ["proof (prove)\nusing this:\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n  v = c > vc\n\ngoal (1 subgoal):\n 1. lan vc = Abs_nat_int {0}", "by force"], ["proof (state)\nthis:\n  lan vc = Abs_nat_int {0}\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "hence lan_leq:\"lan vc' \\<sqsubseteq> lan vc\""], ["proof (prove)\nusing this:\n  lan vc = Abs_nat_int {0}\n\ngoal (1 subgoal):\n 1. lan vc' \\<le> lan vc", "using  vc'_def  order_refl"], ["proof (prove)\nusing this:\n  lan vc = Abs_nat_int {0}\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. lan vc' \\<le> lan vc", "by force"], ["proof (state)\nthis:\n  lan vc' \\<le> lan vc\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have leqvc:\"vc' \\<le> vc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc' \\<le> vc", "using ext_leq lan_leq own_eq less_eq_view_ext_def"], ["proof (prove)\nusing this:\n  ext vc' \\<le> ext vc\n  lan vc' \\<le> lan vc\n  own vc' = own vc\n  ?V \\<le> ?V' \\<equiv>\n  ext ?V \\<le> ext ?V' \\<and>\n  lan ?V \\<le> lan ?V' \\<and> own ?V = own ?V' \\<and> more ?V \\<le> more ?V'\n\ngoal (1 subgoal):\n 1. vc' \\<le> vc", "by force"], ["proof (state)\nthis:\n  vc' \\<le> vc\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have sensors_c:\"regular (own vc') ts c = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (own vc') ts c = 3", "using vc'_def regular_def ps_def traffic.braking_distance_def \n          ts_def sd_def size assumption Abs_traffic_inverse ts_in_type  ts_rep_def"], ["proof (prove)\nusing this:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n  \\<forall>c. ps c = 1\n  braking_distance ?ts \\<equiv>\n  snd (snd (snd (snd (snd (Rep_traffic ?ts)))))\n  ts = Abs_traffic ts_rep\n  \\<forall>c. sd c = 2\n  \\<forall>c. physical_size ts c = 1\n  d \\<noteq> c\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ts_rep = (po, re, cl, dy, ps, sd)\n\ngoal (1 subgoal):\n 1. regular (own vc') ts c = 3", "by auto"], ["proof (state)\nthis:\n  regular (own vc') ts c = 3\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have space_c:\"space ts vc' c = Abs_real_int (0,3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space ts vc' c = Abs_real_int (0, 3)", "using pos_def ts_def ts_rep_def ts_in_type Abs_traffic_inverse\n          fun_upd_apply sensors_c  assumption hmlsl.space_def traffic.pos_def"], ["proof (prove)\nusing this:\n  po = pos'(c := 0, d := 2)\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n  regular (own vc') ts c = 3\n  d \\<noteq> c\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n  pos ?ts \\<equiv> fst (Rep_traffic ?ts)\n\ngoal (1 subgoal):\n 1. space ts vc' c = Abs_real_int (0, 3)", "by auto"], ["proof (state)\nthis:\n  space ts vc' c = Abs_real_int (0, 3)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have lc:\"left (space ts vc' c) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (space ts vc' c) = 0", "using space_c Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts vc' c = Abs_real_int (0, 3)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (space ts vc' c) = 0", "by auto"], ["proof (state)\nthis:\n  left (space ts vc' c) = 0\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have rv:\"right (ext vc') = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (ext vc') = 3", "using vc'_def Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (ext vc') = 3", "by auto"], ["proof (state)\nthis:\n  right (ext vc') = 3\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have lv:\"left (ext vc') = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (ext vc') = 2", "using vc'_def Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (ext vc') = 2", "by auto"], ["proof (state)\nthis:\n  left (ext vc') = 2\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have rc:\"right (space ts vc' c) = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (space ts vc' c) = 3", "using space_c Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts vc' c = Abs_real_int (0, 3)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (space ts vc' c) = 3", "by auto"], ["proof (state)\nthis:\n  right (space ts vc' c) = 3\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have len_c:\"len vc' ts c = Abs_real_int(2,3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len vc' ts c = Abs_real_int (2, 3)", "using space_c v_def hmlsl.len_def lc lv rv rc"], ["proof (prove)\nusing this:\n  space ts vc' c = Abs_real_int (0, 3)\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  len ?v ?ts ?c \\<equiv>\n  if right (ext ?v) < left (space ?ts ?v ?c)\n  then Abs_real_int (right (ext ?v), right (ext ?v))\n  else if right (space ?ts ?v ?c) < left (ext ?v)\n       then Abs_real_int (left (ext ?v), left (ext ?v))\n       else Abs_real_int\n             (max (left (ext ?v)) (left (space ?ts ?v ?c)),\n              min (right (ext ?v)) (right (space ?ts ?v ?c)))\n  left (space ts vc' c) = 0\n  left (ext vc') = 2\n  right (ext vc') = 3\n  right (space ts vc' c) = 3\n\ngoal (1 subgoal):\n 1. len vc' ts c = Abs_real_int (2, 3)", "by auto"], ["proof (state)\nthis:\n  len vc' ts c = Abs_real_int (2, 3)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have res_c: \"restrict vc' (res ts) c = Abs_nat_int {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict vc' (res ts) c = Abs_nat_int {0}", "using ts_def ts_rep_def ts_in_type Abs_traffic_inverse res_def traffic.res_def\n          inf_idem restrict_def vc'_def"], ["proof (prove)\nusing this:\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  \\<forall>c. re c = Abs_nat_int {0}\n  res ?ts \\<equiv> fst (snd (Rep_traffic ?ts))\n  ?x \\<sqinter> ?x = ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n\ngoal (1 subgoal):\n 1. restrict vc' (res ts) c = Abs_nat_int {0}", "by force"], ["proof (state)\nthis:\n  restrict vc' (res ts) c = Abs_nat_int {0}\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have sensors_d:\"regular (own vc') ts d = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (own vc') ts d = 1", "using vc'_def regular_def ts_def size sd_def Abs_traffic_inverse ts_in_type\n          ts_rep_def assumption"], ["proof (prove)\nusing this:\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  regular ?e ?ts ?c \\<equiv>\n  if ?e = ?c then physical_size ?ts ?c + braking_distance ?ts ?c\n  else physical_size ?ts ?c\n  ts = Abs_traffic ts_rep\n  \\<forall>c. physical_size ts c = 1\n  \\<forall>c. sd c = 2\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ts_rep = (po, re, cl, dy, ps, sd)\n  d \\<noteq> c\n\ngoal (1 subgoal):\n 1. regular (own vc') ts d = 1", "by auto"], ["proof (state)\nthis:\n  regular (own vc') ts d = 1\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have space_d:\"space ts vc' d = Abs_real_int(2,3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space ts vc' d = Abs_real_int (2, 3)", "using pos_def ts_def ts_rep_def ts_in_type Abs_traffic_inverse\n          fun_upd_apply sensors_d assumption hmlsl.space_def traffic.pos_def"], ["proof (prove)\nusing this:\n  po = pos'(c := 0, d := 2)\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n  regular (own vc') ts d = 1\n  d \\<noteq> c\n  space ?ts ?v ?c \\<equiv>\n  Abs_real_int (pos ?ts ?c, pos ?ts ?c + regular (own ?v) ?ts ?c)\n  pos ?ts \\<equiv> fst (Rep_traffic ?ts)\n\ngoal (1 subgoal):\n 1. space ts vc' d = Abs_real_int (2, 3)", "by auto"], ["proof (state)\nthis:\n  space ts vc' d = Abs_real_int (2, 3)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have ld:\"left (space ts vc' d) = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left (space ts vc' d) = 2", "using space_d Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts vc' d = Abs_real_int (2, 3)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. left (space ts vc' d) = 2", "by auto"], ["proof (state)\nthis:\n  left (space ts vc' d) = 2\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have rd: \"right (space ts vc' d) = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right (space ts vc' d) = 3", "using space_d Abs_real_int_inverse"], ["proof (prove)\nusing this:\n  space ts vc' d = Abs_real_int (2, 3)\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. right (space ts vc' d) = 3", "by auto"], ["proof (state)\nthis:\n  right (space ts vc' d) = 3\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have len_d :\"len vc' ts d = Abs_real_int(2,3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len vc' ts d = Abs_real_int (2, 3)", "using space_d v_def hmlsl.len_def ld rd lv rv"], ["proof (prove)\nusing this:\n  space ts vc' d = Abs_real_int (2, 3)\n  v =\n  \\<lparr>ext = Abs_real_int (0, 3), lan = Abs_nat_int {0}, own = d\\<rparr>\n  len ?v ?ts ?c \\<equiv>\n  if right (ext ?v) < left (space ?ts ?v ?c)\n  then Abs_real_int (right (ext ?v), right (ext ?v))\n  else if right (space ?ts ?v ?c) < left (ext ?v)\n       then Abs_real_int (left (ext ?v), left (ext ?v))\n       else Abs_real_int\n             (max (left (ext ?v)) (left (space ?ts ?v ?c)),\n              min (right (ext ?v)) (right (space ?ts ?v ?c)))\n  left (space ts vc' d) = 2\n  right (space ts vc' d) = 3\n  left (ext vc') = 2\n  right (ext vc') = 3\n\ngoal (1 subgoal):\n 1. len vc' ts d = Abs_real_int (2, 3)", "by auto"], ["proof (state)\nthis:\n  len vc' ts d = Abs_real_int (2, 3)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have  res_d:\"restrict vc' (res ts) d = Abs_nat_int {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict vc' (res ts) d = Abs_nat_int {0}", "using ts_def ts_rep_def ts_in_type Abs_traffic_inverse res_def traffic.res_def\n          inf_idem restrict_def vc'_def"], ["proof (prove)\nusing this:\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  \\<forall>c. re c = Abs_nat_int {0}\n  res ?ts \\<equiv> fst (snd (Rep_traffic ?ts))\n  ?x \\<sqinter> ?x = ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n\ngoal (1 subgoal):\n 1. restrict vc' (res ts) d = Abs_nat_int {0}", "by force"], ["proof (state)\nthis:\n  restrict vc' (res ts) d = Abs_nat_int {0}\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "have \"ts,vc' \\<Turnstile> re(c) \\<^bold>\\<and> re(d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext vc'\\<parallel> \\<and>\n     len vc' ts c = ext vc' \\<and>\n     restrict vc' (res ts) c = lan vc' \\<and> |lan vc'| = 1) \\<and>\n    0 < \\<parallel>ext vc'\\<parallel> \\<and>\n    len vc' ts d = ext vc' \\<and>\n    restrict vc' (res ts) d = lan vc' \\<and> |lan vc'| = 1", "using \n          len_d len_c vc'_def ts_def ts_rep_def ts_in_type Abs_traffic_inverse\n          res_c res_d nat_int.card'_def\n          Abs_real_int_inverse real_int.length_def traffic.res_def\n          nat_int.singleton2 Abs_nat_int_inverse"], ["proof (prove)\nusing this:\n  len vc' ts d = Abs_real_int (2, 3)\n  len vc' ts c = Abs_real_int (2, 3)\n  vc' =\n  \\<lparr>ext = Abs_real_int (2, 3), lan = Abs_nat_int {0}, own = c\\<rparr>\n  ts = Abs_traffic ts_rep\n  ts_rep = (po, re, cl, dy, ps, sd)\n  ts_rep\n  \\<in> {ts.\n         (\\<forall>c.\n             fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n         (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n         (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n         (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n         (\\<forall>c.\n             |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n         (\\<forall>c.\n             fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n             (\\<exists>n.\n                 Rep_nat_int (fst (snd ts) c) \\<union>\n                 Rep_nat_int (fst (snd (snd ts)) c) =\n                 {n, n + 1})) \\<and>\n         (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n         (\\<forall>c. 0 < snd (snd (snd (snd (snd ts)))) c)}\n  ?y \\<in> {ts.\n            (\\<forall>c.\n                fst (snd ts) c \\<sqinter> fst (snd (snd ts)) c = bot) \\<and>\n            (\\<forall>c. 1 \\<le> |fst (snd ts) c|) \\<and>\n            (\\<forall>c. |fst (snd ts) c| \\<le> 2) \\<and>\n            (\\<forall>c. |fst (snd (snd ts)) c| \\<le> 1) \\<and>\n            (\\<forall>c.\n                |fst (snd ts) c| + |fst (snd (snd ts)) c| \\<le> 2) \\<and>\n            (\\<forall>c.\n                fst (snd (snd ts)) c \\<noteq> bot \\<longrightarrow>\n                (\\<exists>n.\n                    Rep_nat_int (fst (snd ts) c) \\<union>\n                    Rep_nat_int (fst (snd (snd ts)) c) =\n                    {n, n + 1})) \\<and>\n            (\\<forall>c. 0 < fst (snd (snd (snd (snd ts)))) c) \\<and>\n            (\\<forall>c.\n                0 < snd (snd (snd (snd (snd ts)))) c)} \\<Longrightarrow>\n  Rep_traffic (Abs_traffic ?y) = ?y\n  restrict vc' (res ts) c = Abs_nat_int {0}\n  restrict vc' (res ts) d = Abs_nat_int {0}\n  card' \\<equiv> map_fun Rep_nat_int id card\n  ?y \\<in> {r. fst r \\<le> snd r} \\<Longrightarrow>\n  Rep_real_int (Abs_real_int ?y) = ?y\n  \\<parallel>?r\\<parallel> \\<equiv> right ?r - left ?r\n  res ?ts \\<equiv> fst (snd (Rep_traffic ?ts))\n  (\\<exists>n. Rep_nat_int ?i = {n}) \\<longrightarrow> |?i| = 1\n  ?y \\<in> {S. \\<exists>m n. {m..n} = S} \\<Longrightarrow>\n  Rep_nat_int (Abs_nat_int ?y) = ?y\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext vc'\\<parallel> \\<and>\n     len vc' ts c = ext vc' \\<and>\n     restrict vc' (res ts) c = lan vc' \\<and> |lan vc'| = 1) \\<and>\n    0 < \\<parallel>ext vc'\\<parallel> \\<and>\n    len vc' ts d = ext vc' \\<and>\n    restrict vc' (res ts) d = lan vc' \\<and> |lan vc'| = 1", "by auto"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext vc'\\<parallel> \\<and>\n   len vc' ts c = ext vc' \\<and>\n   restrict vc' (res ts) c = lan vc' \\<and> |lan vc'| = 1) \\<and>\n  0 < \\<parallel>ext vc'\\<parallel> \\<and>\n  len vc' ts d = ext vc' \\<and>\n  restrict vc' (res ts) d = lan vc' \\<and> |lan vc'| = 1\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "with leqvc"], ["proof (chain)\npicking this:\n  vc' \\<le> vc\n  (0 < \\<parallel>ext vc'\\<parallel> \\<and>\n   len vc' ts c = ext vc' \\<and>\n   restrict vc' (res ts) c = lan vc' \\<and> |lan vc'| = 1) \\<and>\n  0 < \\<parallel>ext vc'\\<parallel> \\<and>\n  len vc' ts d = ext vc' \\<and>\n  restrict vc' (res ts) d = lan vc' \\<and> |lan vc'| = 1", "have \"ts,vc \\<Turnstile> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  vc' \\<le> vc\n  (0 < \\<parallel>ext vc'\\<parallel> \\<and>\n   len vc' ts c = ext vc' \\<and>\n   restrict vc' (res ts) c = lan vc' \\<and> |lan vc'| = 1) \\<and>\n  0 < \\<parallel>ext vc'\\<parallel> \\<and>\n  len vc' ts d = ext vc' \\<and>\n  restrict vc' (res ts) d = lan vc' \\<and> |lan vc'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       vc=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using somewhere_leq"], ["proof (prove)\nusing this:\n  vc' \\<le> vc\n  (0 < \\<parallel>ext vc'\\<parallel> \\<and>\n   len vc' ts c = ext vc' \\<and>\n   restrict vc' (res ts) c = lan vc' \\<and> |lan vc'| = 1) \\<and>\n  0 < \\<parallel>ext vc'\\<parallel> \\<and>\n  len vc' ts d = ext vc' \\<and>\n  restrict vc' (res ts) d = lan vc' \\<and> |lan vc'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       vc=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts d = ext v \\<and>\n                    restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<exists>v u.\n     vc=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "with assumption"], ["proof (chain)\npicking this:\n  d \\<noteq> c\n  \\<exists>v u.\n     vc=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)", "have \"ts,vc \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>= d) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(d) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  d \\<noteq> c\n  \\<exists>v u.\n     vc=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts c = ext v \\<and>\n                   restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts d = ext v \\<and>\n                  restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c \\<noteq> d \\<and>\n    (\\<exists>v u.\n        vc=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts c = ext v \\<and>\n                      restrict v (res ts) c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts d = ext v \\<and>\n                     restrict v (res ts) d = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> d \\<and>\n  (\\<exists>v u.\n      vc=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts c = ext v \\<and>\n                    restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts d = ext v \\<and>\n                   restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<And>v'.\n       \\<lbrakk>v = c > v';\n        \\<forall>x xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))\\<rbrakk>\n       \\<Longrightarrow> False", "with safe"], ["proof (chain)\npicking this:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>v u.\n         vc=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  c \\<noteq> d \\<and>\n  (\\<exists>v u.\n      vc=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts c = ext v \\<and>\n                    restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts d = ext v \\<and>\n                   restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "show False"], ["proof (prove)\nusing this:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>v u.\n         vc=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  c \\<noteq> d \\<and>\n  (\\<exists>v u.\n      vc=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts c = ext v \\<and>\n                    restrict v (res ts) c = lan v \\<and> |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts d = ext v \\<and>\n                   restrict v (res ts) d = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     \\<not> (\\<forall>x xa.\n                xa \\<noteq> x \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts xa = ext v \\<and>\n                                  restrict v (res ts) xa = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts x = ext v \\<and>\n                                 restrict v (res ts) x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>v'.\n          v = x > v' \\<longrightarrow>\n          \\<not> (\\<forall>x xa.\n                     xa \\<noteq> x \\<longrightarrow>\n                     (\\<nexists>v u.\n                         v'=v\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts xa = ext v \\<and>\n restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     v = c > v' \\<longrightarrow>\n     \\<not> (\\<forall>x xa.\n                xa \\<noteq> x \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts xa = ext v \\<and>\n                                  restrict v (res ts) xa = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts x = ext v \\<and>\n                                 restrict v (res ts) x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>v'.\n          v = x > v' \\<longrightarrow>\n          \\<not> (\\<forall>x xa.\n                     xa \\<noteq> x \\<longrightarrow>\n                     (\\<nexists>v u.\n                         v'=v\\<parallel>u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v\\<parallel>ua \\<and>\n                             (\\<exists>va u.\n                                 v=va--u \\<and>\n                                 True \\<and>\n                                 (\\<exists>v ua.\n                                     u=v--ua \\<and>\n                                     ((0\n < \\<parallel>ext v\\<parallel> \\<and>\n len v ts xa = ext v \\<and>\n restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n0 < \\<parallel>ext v\\<parallel> \\<and>\nlen v ts x = ext v \\<and>\nrestrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n                                     True)) \\<and>\n                             True)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>v'.\n        v = x > v' \\<longrightarrow>\n        \\<not> (\\<forall>x xa.\n                   xa \\<noteq> x \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts xa = ext v \\<and>\n                                     restrict v (res ts) xa = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts x = ext v \\<and>\n                                    restrict v (res ts) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x.\n     \\<forall>v'.\n        v = x > v' \\<longrightarrow>\n        \\<not> (\\<forall>x xa.\n                   xa \\<noteq> x \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts xa = ext v \\<and>\n                                     restrict v (res ts) xa = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts x = ext v \\<and>\n                                    restrict v (res ts) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "from safe and unsafe"], ["proof (chain)\npicking this:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  \\<exists>x.\n     \\<forall>v'.\n        v = x > v' \\<longrightarrow>\n        \\<not> (\\<forall>x xa.\n                   xa \\<noteq> x \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts xa = ext v \\<and>\n                                     restrict v (res ts) xa = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts x = ext v \\<and>\n                                    restrict v (res ts) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))", "have \"ts,v  \\<Turnstile> \\<^bold>\\<forall>e. safe(e) \\<^bold>\\<and>  (\\<^bold>\\<exists> c. (\\<^bold>@c  \\<^bold>\\<not>( \\<^bold>\\<forall>e. safe(e))))\""], ["proof (prove)\nusing this:\n  \\<forall>x xa.\n     xa \\<noteq> x \\<longrightarrow>\n     (\\<nexists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts xa = ext v \\<and>\n                       restrict v (res ts) xa = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts x = ext v \\<and>\n                      restrict v (res ts) x = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  \\<exists>x.\n     \\<forall>v'.\n        v = x > v' \\<longrightarrow>\n        \\<not> (\\<forall>x xa.\n                   xa \\<noteq> x \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts xa = ext v \\<and>\n                                     restrict v (res ts) xa = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts x = ext v \\<and>\n                                    restrict v (res ts) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<forall>xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>va u.\n               v=va\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))) \\<and>\n       (\\<exists>x.\n           \\<forall>v'.\n              v = x > v' \\<longrightarrow>\n              \\<not> (\\<forall>x xa.\n                         xa \\<noteq> x \\<longrightarrow>\n                         (\\<nexists>v u.\n                             v'=v\\<parallel>u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v\\<parallel>ua \\<and>\n                                 (\\<exists>va u.\n                                     v=va--u \\<and>\n                                     True \\<and>\n                                     (\\<exists>v ua.\n   u=v--ua \\<and>\n   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts xa = ext v \\<and>\n     restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts x = ext v \\<and>\n    restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n   True)) \\<and>\n                                 True))))", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     (\\<forall>xa.\n         xa \\<noteq> x \\<longrightarrow>\n         (\\<nexists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts xa = ext v \\<and>\n                           restrict v (res ts) xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts x = ext v \\<and>\n                          restrict v (res ts) x = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True))) \\<and>\n     (\\<exists>x.\n         \\<forall>v'.\n            v = x > v' \\<longrightarrow>\n            \\<not> (\\<forall>x xa.\n                       xa \\<noteq> x \\<longrightarrow>\n                       (\\<nexists>v u.\n                           v'=v\\<parallel>u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v\\<parallel>ua \\<and>\n                               (\\<exists>va u.\n                                   v=va--u \\<and>\n                                   True \\<and>\n                                   (\\<exists>v ua.\n u=v--ua \\<and>\n ((0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts xa = ext v \\<and>\n   restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts x = ext v \\<and>\n  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n True)) \\<and>\n                               True))))\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<forall>xa.\n         xa \\<noteq> x \\<longrightarrow>\n         (\\<nexists>va u.\n             v=va\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts xa = ext v \\<and>\n                           restrict v (res ts) xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts x = ext v \\<and>\n                          restrict v (res ts) x = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True))) \\<and>\n     (\\<exists>x.\n         \\<forall>v'.\n            v = x > v' \\<longrightarrow>\n            \\<not> (\\<forall>x xa.\n                       xa \\<noteq> x \\<longrightarrow>\n                       (\\<nexists>v u.\n                           v'=v\\<parallel>u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v\\<parallel>ua \\<and>\n                               (\\<exists>va u.\n                                   v=va--u \\<and>\n                                   True \\<and>\n                                   (\\<exists>v ua.\n u=v--ua \\<and>\n ((0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts xa = ext v \\<and>\n   restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts x = ext v \\<and>\n  restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n True)) \\<and>\n                               True))))\n\ngoal (1 subgoal):\n 1. \\<exists>ts v.\n       \\<forall>x.\n          (\\<forall>xa.\n              xa \\<noteq> x \\<longrightarrow>\n              (\\<nexists>va u.\n                  v=va\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts xa = ext v \\<and>\n                                restrict v (res ts) xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts x = ext v \\<and>\n                               restrict v (res ts) x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<and>\n          (\\<exists>x.\n              \\<forall>v'.\n                 v = x > v' \\<longrightarrow>\n                 \\<not> (\\<forall>x xa.\n                            xa \\<noteq> x \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts xa = ext v \\<and>\n        restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts x = ext v \\<and>\n       restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))))", "by blast"], ["proof (state)\nthis:\n  \\<exists>ts v.\n     \\<forall>x.\n        (\\<forall>xa.\n            xa \\<noteq> x \\<longrightarrow>\n            (\\<nexists>va u.\n                v=va\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts xa = ext v \\<and>\n                              restrict v (res ts) xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts x = ext v \\<and>\n                             restrict v (res ts) x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            True)) \\<and>\n                    True))) \\<and>\n        (\\<exists>x.\n            \\<forall>v'.\n               v = x > v' \\<longrightarrow>\n               \\<not> (\\<forall>x xa.\n                          xa \\<noteq> x \\<longrightarrow>\n                          (\\<nexists>v u.\n                              v'=v\\<parallel>u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v\\<parallel>ua \\<and>\n                                  (\\<exists>va u.\nv=va--u \\<and>\nTrue \\<and>\n(\\<exists>v ua.\n    u=v--ua \\<and>\n    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n      len v ts xa = ext v \\<and>\n      restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts x = ext v \\<and>\n     restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n    True)) \\<and>\n                                  True))))\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\nNow we show how to amend the controller specifications to gain safety as an invariant\neven with regular sensors.\n\nThe distance controller can be strengthened, by requiring that we switch\nto the perspective of one of the cars involved first, before checking\nfor the collision. Since all variables are universally quantified, \nthis ensures that no collision exists for the perspective of any car.\n\\<close>"], ["", "abbreviation DC'::\"\\<sigma>\"\n  where \"DC' \\<equiv> \\<^bold>G ( \\<^bold>\\<forall> c d. \\<^bold>\\<not>(c \\<^bold>= d) \\<^bold>\\<rightarrow> \n                  (\\<^bold>@d \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>) \\<^bold>\\<rightarrow> \\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>@d \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>)\""], ["", "text\\<open>\nThe amendment to the lane change controller is slightly different. Instead\nof checking the potential collision only from the perspective of the\ncar \\(d\\) trying to change lanes, we require that also no other car may\nperceive a potential collision. Note that the restriction to \\(d\\)'s\nbehaviour can only be enforced within \\(d\\), if the information from\nthe other car is somehow passed to \\(d\\). Hence, we require the \ncars to communicate in some way. However, we do not need to specifiy,\n\\emph{how} this communication is implemented. \n\\<close>"], ["", "abbreviation LC'::\"\\<sigma>\"\n  where \"LC' \\<equiv> \\<^bold>G ( \\<^bold>\\<forall>d. (\\<^bold>\\<exists> c.  (\\<^bold>@c (pcc c d)) \\<^bold>\\<or> (\\<^bold>@d (pcc c d))) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(d) \\<^bold>\\<bottom> ) \""], ["", "text\\<open>\nWith these new controllers, we can prove a stronger theorem than before. Instead\nof proving safety from the perspective of a single car as previously, we now\nonly consider a traffic situation to be safe, if it satisfies the safety\npredicate from the perspective of \\emph{all} cars. Note that this immediately\nimplies the safety invariance theorem proven for perfect sensors. \n\\<close>"], ["", "theorem safety:\"\\<Turnstile> (\\<^bold>\\<forall>e. \\<^bold>@e ( safe e ) ) \\<^bold>\\<and> DC' \\<^bold>\\<and> LC' \\<^bold>\\<rightarrow>  \\<^bold>G(\\<^bold>\\<forall> e.  \\<^bold>@ e (safe e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>x v'.\n           v = x > v' \\<longrightarrow>\n           (\\<forall>xa.\n               xa \\<noteq> x \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts xa = ext v \\<and>\n                                 restrict v (res ts) xa = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts x = ext v \\<and>\n                                restrict v (res ts) x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))) \\<and>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x xa.\n               x \\<noteq> xa \\<longrightarrow>\n               (\\<forall>v'.\n                   move ts ts' v = xa > v' \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' x = ext v \\<and>\n                                     restrict v (res ts') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<longrightarrow>\n               (\\<forall>ts'a.\n                   ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                   (\\<forall>v'.\n                       move ts' ts'a\n                        (move ts ts' v) = xa > v' \\<longrightarrow>\n                       (\\<nexists>v u.\n                           v'=v\\<parallel>u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v\\<parallel>ua \\<and>\n                               (\\<exists>va u.\n                                   v=va--u \\<and>\n                                   True \\<and>\n                                   (\\<exists>v ua.\n u=v--ua \\<and>\n ((0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts'a x = ext v \\<and>\n   restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts'a xa = ext v \\<and>\n  restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n True)) \\<and>\n                               True)))))) \\<and>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x.\n               (\\<exists>xa.\n                   (\\<forall>v'.\n                       move ts ts' v = xa > v' \\<longrightarrow>\n                       xa \\<noteq> x \\<and>\n                       (\\<exists>v u.\n                           v'=v\\<parallel>u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v\\<parallel>ua \\<and>\n                               (\\<exists>va u.\n                                   v=va--u \\<and>\n                                   True \\<and>\n                                   (\\<exists>v ua.\n u=v--ua \\<and>\n ((0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  (0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n True)) \\<and>\n                               True))) \\<or>\n                   (\\<forall>v'.\n                       move ts ts' v = x > v' \\<longrightarrow>\n                       xa \\<noteq> x \\<and>\n                       (\\<exists>v u.\n                           v'=v\\<parallel>u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v\\<parallel>ua \\<and>\n                               (\\<exists>va u.\n                                   v=va--u \\<and>\n                                   True \\<and>\n                                   (\\<exists>v ua.\n u=v--ua \\<and>\n ((0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' x = ext v \\<and>\n   restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n  (0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts' xa = ext v \\<and>\n   restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n True)) \\<and>\n                               True)))) \\<longrightarrow>\n               (\\<forall>ts'a.\n                   ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                   False))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n           (\\<forall>x v'.\n               move ts ts' v = x > v' \\<longrightarrow>\n               (\\<forall>xa.\n                   xa \\<noteq> x \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (res ts') xa = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (res ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))))", "proof (rule allI; rule allI;rule impI; rule allI; rule impI; rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "fix ts v ts' e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "assume assm:\"ts,v \\<Turnstile> ( \\<^bold>\\<forall>e. \\<^bold>@e (safe e) ) \\<^bold>\\<and> DC' \\<^bold>\\<and> LC'\""], ["proof (state)\nthis:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "assume abs:\"(ts \\<^bold>\\<Rightarrow> ts')\""], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "from assm"], ["proof (chain)\npicking this:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))", "have init:\"ts,v \\<Turnstile> ( \\<^bold>\\<forall>e. \\<^bold>@e (safe e) )\""], ["proof (prove)\nusing this:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<forall>x v'.\n       v = x > v' \\<longrightarrow>\n       (\\<forall>xa.\n           xa \\<noteq> x \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts xa = ext v \\<and>\n                             restrict v (res ts) xa = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts x = ext v \\<and>\n                            restrict v (res ts) x = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "by simp"], ["proof (state)\nthis:\n  \\<forall>x v'.\n     v = x > v' \\<longrightarrow>\n     (\\<forall>xa.\n         xa \\<noteq> x \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts xa = ext v \\<and>\n                           restrict v (res ts) xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts x = ext v \\<and>\n                          restrict v (res ts) x = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "from assm"], ["proof (chain)\npicking this:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))", "have DC :\"ts,v \\<Turnstile> DC'\""], ["proof (prove)\nusing this:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n       (\\<forall>x xa.\n           x \\<noteq> xa \\<longrightarrow>\n           (\\<forall>v'.\n               move ts ts' v = xa > v' \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True))) \\<longrightarrow>\n           (\\<forall>ts'a.\n               ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n               (\\<forall>v'.\n                   move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'a x = ext v \\<and>\n                                     restrict v (res ts'a) x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a xa = ext v \\<and>\n                                    restrict v (res ts'a) xa = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))))", "by simp"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x xa.\n         x \\<noteq> xa \\<longrightarrow>\n         (\\<forall>v'.\n             move ts ts' v = xa > v' \\<longrightarrow>\n             (\\<nexists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' xa = ext v \\<and>\n                              restrict v (res ts') xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True))) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n             (\\<forall>v'.\n                 move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a x = ext v \\<and>\n                                   restrict v (res ts'a) x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'a xa = ext v \\<and>\n                                  restrict v (res ts'a) xa = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True)))))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "from assm"], ["proof (chain)\npicking this:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))", "have LC: \"ts,v \\<Turnstile> LC'\""], ["proof (prove)\nusing this:\n  (\\<forall>x v'.\n      v = x > v' \\<longrightarrow>\n      (\\<forall>xa.\n          xa \\<noteq> x \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts xa = ext v \\<and>\n                            restrict v (res ts) xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True)))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x xa.\n          x \\<noteq> xa \\<longrightarrow>\n          (\\<forall>v'.\n              move ts ts' v = xa > v' \\<longrightarrow>\n              (\\<nexists>v u.\n                  v'=v\\<parallel>u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v\\<parallel>ua \\<and>\n                      (\\<exists>va u.\n                          v=va--u \\<and>\n                          True \\<and>\n                          (\\<exists>v ua.\n                              u=v--ua \\<and>\n                              ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' x = ext v \\<and>\n                                restrict v (res ts') x = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              True)) \\<and>\n                      True))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n              (\\<forall>v'.\n                  move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'a x = ext v \\<and>\n                                    restrict v (res ts'a) x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a xa = ext v \\<and>\n                                   restrict v (res ts'a) xa = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))))) \\<and>\n  (\\<forall>ts'.\n      ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n      (\\<forall>x.\n          (\\<exists>xa.\n              (\\<forall>v'.\n                  move ts ts' v = xa > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True))) \\<or>\n              (\\<forall>v'.\n                  move ts ts' v = x > v' \\<longrightarrow>\n                  xa \\<noteq> x \\<and>\n                  (\\<exists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' x = ext v \\<and>\n                                    restrict v (clm ts') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (res ts') xa = lan v \\<and>\n                                    |lan v| = 1 \\<or>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts' xa = ext v \\<and>\n                                    restrict v (clm ts') xa = lan v \\<and>\n                                    |lan v| = 1)) \\<and>\n                                  True)) \\<and>\n                          True)))) \\<longrightarrow>\n          (\\<forall>ts'a.\n              ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n              False)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n       (\\<forall>x.\n           (\\<exists>xa.\n               (\\<forall>v'.\n                   move ts ts' v = xa > v' \\<longrightarrow>\n                   xa \\<noteq> x \\<and>\n                   (\\<exists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' x = ext v \\<and>\n                                     restrict v (clm ts') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (res ts') xa = lan v \\<and>\n                                     |lan v| = 1 \\<or>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (clm ts') xa = lan v \\<and>\n                                     |lan v| = 1)) \\<and>\n                                   True)) \\<and>\n                           True))) \\<or>\n               (\\<forall>v'.\n                   move ts ts' v = x > v' \\<longrightarrow>\n                   xa \\<noteq> x \\<and>\n                   (\\<exists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' x = ext v \\<and>\n                                     restrict v (clm ts') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (res ts') xa = lan v \\<and>\n                                     |lan v| = 1 \\<or>\n                                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts' xa = ext v \\<and>\n                                     restrict v (clm ts') xa = lan v \\<and>\n                                     |lan v| = 1)) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<longrightarrow>\n           (\\<forall>ts'a.\n               ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n               False))", "by simp"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x.\n         (\\<exists>xa.\n             (\\<forall>v'.\n                 move ts ts' v = xa > v' \\<longrightarrow>\n                 xa \\<noteq> x \\<and>\n                 (\\<exists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' x = ext v \\<and>\n                                   restrict v (clm ts') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (res ts') xa = lan v \\<and>\n                                   |lan v| = 1 \\<or>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (clm ts') xa = lan v \\<and>\n                                   |lan v| = 1)) \\<and>\n                                 True)) \\<and>\n                         True))) \\<or>\n             (\\<forall>v'.\n                 move ts ts' v = x > v' \\<longrightarrow>\n                 xa \\<noteq> x \\<and>\n                 (\\<exists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' x = ext v \\<and>\n                                   restrict v (clm ts') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (res ts') xa = lan v \\<and>\n                                   |lan v| = 1 \\<or>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (clm ts') xa = lan v \\<and>\n                                   |lan v| = 1)) \\<and>\n                                 True)) \\<and>\n                         True)))) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n             False))\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts' x.\n       \\<lbrakk>(\\<forall>x v'.\n                    v = x > v' \\<longrightarrow>\n                    (\\<forall>xa.\n                        xa \\<noteq> x \\<longrightarrow>\n                        (\\<nexists>v u.\n                            v'=v\\<parallel>u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v\\<parallel>ua \\<and>\n                                (\\<exists>va u.\n                                    v=va--u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v--ua \\<and>\n  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts xa = ext v \\<and>\n    restrict v (res ts) xa = lan v \\<and> |lan v| = 1) \\<and>\n   0 < \\<parallel>ext v\\<parallel> \\<and>\n   len v ts x = ext v \\<and>\n   restrict v (res ts) x = lan v \\<and> |lan v| = 1) \\<and>\n  True)) \\<and>\n                                True)))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x xa.\n                        x \\<noteq> xa \\<longrightarrow>\n                        (\\<forall>v'.\n                            move ts ts' v = xa > v' \\<longrightarrow>\n                            (\\<nexists>v u.\n                                v'=v\\<parallel>u \\<and>\n                                True \\<and>\n                                (\\<exists>v ua.\n                                    u=v\\<parallel>ua \\<and>\n                                    (\\<exists>va u.\n  v=va--u \\<and>\n  True \\<and>\n  (\\<exists>v ua.\n      u=v--ua \\<and>\n      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts' x = ext v \\<and>\n        restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts' xa = ext v \\<and>\n       restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n      True)) \\<and>\n                                    True))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n                            (\\<forall>v'.\n                                move ts' ts'a\n                                 (move ts ts' v) = xa > v' \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'a x = ext v \\<and>\n            restrict v (res ts'a) x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'a xa = ext v \\<and>\n           restrict v (res ts'a) xa = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))))) \\<and>\n                (\\<forall>ts'.\n                    ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n                    (\\<forall>x.\n                        (\\<exists>xa.\n                            (\\<forall>v'.\n                                move ts ts' v = xa > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True))) \\<or>\n                            (\\<forall>v'.\n                                move ts ts' v = x > v' \\<longrightarrow>\n                                xa \\<noteq> x \\<and>\n                                (\\<exists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' x = ext v \\<and>\n            restrict v (clm ts') x = lan v \\<and> |lan v| = 1) \\<and>\n           (0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1 \\<or>\n            0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (clm ts') xa = lan v \\<and> |lan v| = 1)) \\<and>\n          True)) \\<and>\n  True)))) \\<longrightarrow>\n                        (\\<forall>ts'a.\n                            ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n                            False)));\n        ts \\<^bold>\\<Rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts' v = x > v' \\<longrightarrow>\n                            (\\<forall>xa.\n                                xa \\<noteq> x \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts' xa = ext v \\<and>\n            restrict v (res ts') xa = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' x = ext v \\<and>\n           restrict v (res ts') x = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "show \"ts',move ts ts' v \\<Turnstile> ( \\<^bold>@e (safe e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (res ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "using abs"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (res ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "proof (induction)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<forall>v'.\n       move ts ts v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts x = ext v \\<and>\n                             restrict v (res ts) x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts e = ext v \\<and>\n                            restrict v (res ts) e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 6. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "case (refl )"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<forall>v'.\n       move ts ts v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts x = ext v \\<and>\n                             restrict v (res ts) x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts e = ext v \\<and>\n                            restrict v (res ts) e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 6. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have \"move ts ts v = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts v = v", "using move_nothing"], ["proof (prove)\nusing this:\n  move ?ts ?ts ?v = ?v\n\ngoal (1 subgoal):\n 1. move ts ts v = v", "by blast"], ["proof (state)\nthis:\n  move ts ts v = v\n\ngoal (6 subgoals):\n 1. \\<forall>v'.\n       move ts ts v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts x = ext v \\<and>\n                             restrict v (res ts) x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts e = ext v \\<and>\n                            restrict v (res ts) e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 6. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "thus ?case"], ["proof (prove)\nusing this:\n  move ts ts v = v\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts x = ext v \\<and>\n                             restrict v (res ts) x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts e = ext v \\<and>\n                            restrict v (res ts) e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "using    move_nothing init"], ["proof (prove)\nusing this:\n  move ts ts v = v\n  move ?ts ?ts ?v = ?v\n  \\<forall>x v'.\n     v = x > v' \\<longrightarrow>\n     (\\<forall>xa.\n         xa \\<noteq> x \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts xa = ext v \\<and>\n                           restrict v (res ts) xa = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts x = ext v \\<and>\n                          restrict v (res ts) x = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts x = ext v \\<and>\n                             restrict v (res ts) x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts e = ext v \\<and>\n                            restrict v (res ts) e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "by simp"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts x = ext v \\<and>\n                           restrict v (res ts) x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts e = ext v \\<and>\n                          restrict v (res ts) e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "case (evolve ts' ts'' )"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have local_DC:\n      \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<forall> c d. \\<^bold>\\<not>(c \\<^bold>= d) \\<^bold>\\<rightarrow>\n                             (\\<^bold>@d \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle> ) \\<^bold>\\<rightarrow> ( \\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>@d \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(d)\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       x \\<noteq> xa \\<longrightarrow>\n       (\\<forall>v'.\n           move ts ts' v = xa > v' \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' xa = ext v \\<and>\n                            restrict v (res ts') xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n           (\\<forall>v'.\n               move ts' ts' (move ts ts' v) = xa > v' \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True))))", "using evolve.hyps DC"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x xa.\n         x \\<noteq> xa \\<longrightarrow>\n         (\\<forall>v'.\n             move ts ts' v = xa > v' \\<longrightarrow>\n             (\\<nexists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' xa = ext v \\<and>\n                              restrict v (res ts') xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True))) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<leadsto> ts'a \\<longrightarrow>\n             (\\<forall>v'.\n                 move ts' ts'a (move ts ts' v) = xa > v' \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'a x = ext v \\<and>\n                                   restrict v (res ts'a) x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'a xa = ext v \\<and>\n                                  restrict v (res ts'a) xa = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True)))))\n\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       x \\<noteq> xa \\<longrightarrow>\n       (\\<forall>v'.\n           move ts ts' v = xa > v' \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' xa = ext v \\<and>\n                            restrict v (res ts') xa = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n           (\\<forall>v'.\n               move ts' ts' (move ts ts' v) = xa > v' \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' xa = ext v \\<and>\n                                restrict v (res ts') xa = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True))))", "by simp"], ["proof (state)\nthis:\n  \\<forall>x xa.\n     x \\<noteq> xa \\<longrightarrow>\n     (\\<forall>v'.\n         move ts ts' v = xa > v' \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' xa = ext v \\<and>\n                          restrict v (res ts') xa = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n         (\\<forall>v'.\n             move ts' ts' (move ts ts' v) = xa > v' \\<longrightarrow>\n             (\\<nexists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' xa = ext v \\<and>\n                              restrict v (res ts') xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True))))\n\ngoal (5 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        ts' \\<^bold>\\<leadsto> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 5. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts'' x = ext v \\<and>\n                             restrict v (res ts'') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts'' e = ext v \\<and>\n                            restrict v (res ts'') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "assume \"\\<not> (ts'',move ts ts'' v \\<Turnstile> ( \\<^bold>@e (safe e)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))", "have  e_def:\"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<not>(\\<^bold>@e (safe e))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))))", "by best"], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>@e (\\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "using switch_always_exists switch_unique"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n  \\<forall>c. \\<exists>u. ?v = c > u\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))", "obtain ve where ve_def:\n        \"((move ts ts'' v) =e> ve) \\<and> (ts'',ve \\<Turnstile> \\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence unsafe:\"ts'',ve \\<Turnstile> \\<^bold>\\<exists> c. \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<noteq> e \\<and>\n       (\\<exists>v u.\n           ve=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' x = ext v \\<and>\n                         restrict v (res ts'') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))", "obtain c where c_def:\"ts'',ve \\<Turnstile>  \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            ve=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' c = ext v \\<and>\n                          restrict v (res ts'') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' e = ext v \\<and>\n                         restrict v (res ts'') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "from evolve.IH  and c_def"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \n        ts'_safe:\"ts',move ts ts' v \\<Turnstile> \\<^bold>@e (\\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       c \\<noteq> e \\<and>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     c \\<noteq> e \\<and>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence not_eq:\"ts',move ts ts' v \\<Turnstile>\\<^bold>@e (\\<^bold>\\<not>(c \\<^bold>= e))\" \n        and safe':\"ts',move ts ts' v \\<Turnstile> \\<^bold>@e ( \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     c \\<noteq> e \\<and>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<forall>v'. move ts ts' v = e > v' \\<longrightarrow> c \\<noteq> e &&&\n    \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "using hmlsl.at_conj_distr"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     c \\<noteq> e \\<and>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  \\<forall>ts v.\n     (\\<forall>v'.\n         v = ?c > v' \\<longrightarrow> ?\\<phi> ts v' \\<and> ?\\<psi> ts v') =\n     ((\\<forall>v'. v = ?c > v' \\<longrightarrow> ?\\<phi> ts v') \\<and>\n      (\\<forall>v'. v = ?c > v' \\<longrightarrow> ?\\<psi> ts v'))\n\ngoal (1 subgoal):\n 1. \\<forall>v'. move ts ts' v = e > v' \\<longrightarrow> c \\<noteq> e &&&\n    \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by simp+"], ["proof (state)\nthis:\n  \\<forall>v'. move ts ts' v = e > v' \\<longrightarrow> c \\<noteq> e\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "from not_eq"], ["proof (chain)\npicking this:\n  \\<forall>v'. move ts ts' v = e > v' \\<longrightarrow> c \\<noteq> e", "have not_eq_v:\"ts',move ts ts' v \\<Turnstile>\\<^bold>\\<not>(c \\<^bold>=e)\""], ["proof (prove)\nusing this:\n  \\<forall>v'. move ts ts' v = e > v' \\<longrightarrow> c \\<noteq> e\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "using hmlsl.at_eq switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>v'. move ts ts' v = e > v' \\<longrightarrow> c \\<noteq> e\n  \\<forall>ts v.\n     (\\<forall>v'. v = ?e > v' \\<longrightarrow> ?c = ?d) = (?c = ?d)\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by auto"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "have \n        \"ts',move ts ts' v \\<Turnstile>  \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<rightarrow>\n                                 (\\<^bold>@e \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> ) \\<^bold>\\<rightarrow> (\\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>@e \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<longrightarrow>\n    (\\<forall>v'.\n        move ts ts' v = e > v' \\<longrightarrow>\n        (\\<nexists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (res ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (res ts') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n        (\\<forall>v'.\n            move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n            (\\<nexists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (res ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' e = ext v \\<and>\n                             restrict v (res ts') e = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            True)) \\<and>\n                    True))))", "using local_DC"], ["proof (prove)\nusing this:\n  \\<forall>x xa.\n     x \\<noteq> xa \\<longrightarrow>\n     (\\<forall>v'.\n         move ts ts' v = xa > v' \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' xa = ext v \\<and>\n                          restrict v (res ts') xa = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n         (\\<forall>v'.\n             move ts' ts' (move ts ts' v) = xa > v' \\<longrightarrow>\n             (\\<nexists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' xa = ext v \\<and>\n                              restrict v (res ts') xa = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True))))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<longrightarrow>\n    (\\<forall>v'.\n        move ts ts' v = e > v' \\<longrightarrow>\n        (\\<nexists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (res ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (res ts') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n        (\\<forall>v'.\n            move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n            (\\<nexists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (res ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' e = ext v \\<and>\n                             restrict v (res ts') e = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            True)) \\<and>\n                    True))))", "by simp"], ["proof (state)\nthis:\n  c \\<noteq> e \\<longrightarrow>\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      (\\<nexists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n      (\\<forall>v'.\n          move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (res ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' e = ext v \\<and>\n                           restrict v (res ts') e = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence dc:\"ts',move ts ts' v \\<Turnstile> (\\<^bold>@e \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> ) \\<^bold>\\<rightarrow>\n                                      (\\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>@e \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<longrightarrow>\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      (\\<nexists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n      (\\<forall>v'.\n          move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (res ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' e = ext v \\<and>\n                           restrict v (res ts') e = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))))\n\ngoal (1 subgoal):\n 1. (\\<forall>v'.\n        move ts ts' v = e > v' \\<longrightarrow>\n        (\\<nexists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (res ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (res ts') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n        (\\<forall>v'.\n            move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n            (\\<nexists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (res ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' e = ext v \\<and>\n                             restrict v (res ts') e = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            True)) \\<and>\n                    True))))", "using not_eq_v"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<longrightarrow>\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      (\\<nexists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n      (\\<forall>v'.\n          move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (res ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' e = ext v \\<and>\n                           restrict v (res ts') e = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))))\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. (\\<forall>v'.\n        move ts ts' v = e > v' \\<longrightarrow>\n        (\\<nexists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (res ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (res ts') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n        (\\<forall>v'.\n            move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n            (\\<nexists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (res ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' e = ext v \\<and>\n                             restrict v (res ts') e = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            True)) \\<and>\n                    True))))", "by simp"], ["proof (state)\nthis:\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      (\\<nexists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n      (\\<forall>v'.\n          move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (res ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' e = ext v \\<and>\n                           restrict v (res ts') e = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence no_coll_after_evol:\"ts',move ts ts' v \\<Turnstile> ( \\<^bold>\\<box>\\<^bold>\\<tau> \\<^bold>@e \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>)\""], ["proof (prove)\nusing this:\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      (\\<nexists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n      (\\<forall>v'.\n          move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (res ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' e = ext v \\<and>\n                           restrict v (res ts') e = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n       (\\<forall>v'.\n           move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' c = ext v \\<and>\n                             restrict v (res ts') c = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (res ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "using safe'"], ["proof (prove)\nusing this:\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      (\\<nexists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      True)) \\<and>\n              True))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n      (\\<forall>v'.\n          move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n          (\\<nexists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (res ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' e = ext v \\<and>\n                           restrict v (res ts') e = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          True)) \\<and>\n                  True))))\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n       (\\<forall>v'.\n           move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' c = ext v \\<and>\n                             restrict v (res ts') c = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (res ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "by simp"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n     (\\<forall>v'.\n         move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' c = ext v \\<and>\n                           restrict v (res ts') c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence 1:\"ts'',move ts' ts'' (move ts ts' v) \\<Turnstile> \\<^bold>@e \\<^bold>\\<not> \\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n     (\\<forall>v'.\n         move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' c = ext v \\<and>\n                           restrict v (res ts') c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts' ts'' (move ts ts' v) = e > v' \\<longrightarrow>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' c = ext v \\<and>\n                         restrict v (res ts'') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "using evolve.hyps"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<leadsto> ts' \\<longrightarrow>\n     (\\<forall>v'.\n         move ts' ts' (move ts ts' v) = e > v' \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' c = ext v \\<and>\n                           restrict v (res ts') c = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts' ts'' (move ts ts' v) = e > v' \\<longrightarrow>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' c = ext v \\<and>\n                         restrict v (res ts'') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by simp"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts' ts'' (move ts ts' v) = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "have move_eq:\"move ts' ts'' (move ts ts' v) = move ts ts'' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts' ts'' (move ts ts' v) = move ts ts'' v", "using \"evolve.hyps\" abstract.evolve abstract.refl move_trans"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  ts' \\<^bold>\\<leadsto> ts''\n  \\<lbrakk>?ts \\<^bold>\\<Rightarrow> ?ts';\n   ?ts' \\<^bold>\\<leadsto> ?ts''\\<rbrakk>\n  \\<Longrightarrow> ?ts \\<^bold>\\<Rightarrow> ?ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts' ts'' (move ts ts' v) = move ts ts'' v", "by blast"], ["proof (state)\nthis:\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "from 1"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts' ts'' (move ts ts' v) = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))", "have \"ts'', move ts ts'' v \\<Turnstile> \\<^bold>@e \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts' ts'' (move ts ts' v) = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' c = ext v \\<and>\n                         restrict v (res ts'') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "using move_eq"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts' ts'' (move ts ts' v) = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  move ts' ts'' (move ts ts' v) = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<nexists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' c = ext v \\<and>\n                         restrict v (res ts'') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts'',ve \\<Turnstile>  \\<^bold>\\<not>\\<^bold>\\<langle>re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<nexists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using ve_def"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<nexists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' c = ext v \\<and>\n                       restrict v (res ts'') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<nexists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by blast"], ["proof (state)\nthis:\n  \\<nexists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<nexists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. False", "using c_def"], ["proof (prove)\nusing this:\n  \\<nexists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts'' x = ext v \\<and>\n                           restrict v (res ts'') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' e = ext v \\<and>\n                          restrict v (res ts'') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "case (cr_clm ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n. ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_clm cr_clm.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>c( ?c, ?n ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n. ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps cr_clm.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (4 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 4. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts'' x = ext v \\<and>\n                             restrict v (res ts'') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts'' e = ext v \\<and>\n                            restrict v (res ts'') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "assume \"\\<not> (ts'',move ts ts'' v \\<Turnstile> ( \\<^bold>@e (safe e)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))", "have  e_def:\"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<not>(\\<^bold>@e (safe e))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))))", "by best"], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>@e (\\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "using switch_always_exists switch_unique"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n  \\<forall>c. \\<exists>u. ?v = c > u\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))", "obtain ve where ve_def:\n        \"((move ts ts'' v) =e> ve) \\<and> (ts'',ve \\<Turnstile> \\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence unsafe:\"ts'',ve \\<Turnstile> \\<^bold>\\<exists> c. \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<noteq> e \\<and>\n       (\\<exists>v u.\n           ve=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' x = ext v \\<and>\n                         restrict v (res ts'') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))", "obtain c where c_def:\"ts'',ve \\<Turnstile>  \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            ve=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' c = ext v \\<and>\n                          restrict v (res ts'') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' e = ext v \\<and>\n                         restrict v (res ts'') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence c_neq_e:\"ts'',ve \\<Turnstile>\\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "obtain d n where d_def: \" (ts' \\<^bold>\\<midarrow>c(d,n) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using cr_clm.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n. ts' \\<^bold>\\<midarrow>c( c, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "from c_def"], ["proof (chain)\npicking this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\"(v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> ve \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \" (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using d_def backwards_c_res_stab"], ["proof (prove)\nusing this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  ts' \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts''\n  (?ts \\<^bold>\\<midarrow>c( ?d, ?n ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> \\<^bold>\\<not> safe (e)\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "using c_neq_e c_def v'_def somewhere_leq"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "by meson"], ["proof (state)\nthis:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "using cr_clm.IH move_stab ve_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  move ts ts' v = move ts ts'' v\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts'' x = ext v \\<and>\n                           restrict v (res ts'') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' e = ext v \\<and>\n                          restrict v (res ts'') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "case (wd_res ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n.\n     ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_wdr wd_res.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>wdr( ?c, ?n ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n.\n     ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps wd_res.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (3 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 3. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c n.\n           ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts'' x = ext v \\<and>\n                             restrict v (res ts'') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts'' e = ext v \\<and>\n                            restrict v (res ts'') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "assume \"\\<not> (ts'',move ts ts'' v \\<Turnstile> ( \\<^bold>@e (safe e)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))", "have  e_def:\"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<not>(\\<^bold>@e (safe e))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))))", "by best"], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>@e (\\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "using switch_always_exists switch_unique"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n  \\<forall>c. \\<exists>u. ?v = c > u\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "by (fastforce)"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))", "obtain ve where ve_def:\n        \"((move ts ts'' v) =e> ve) \\<and> (ts'',ve \\<Turnstile> \\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence unsafe:\"ts'',ve \\<Turnstile> \\<^bold>\\<exists> c. \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<noteq> e \\<and>\n       (\\<exists>v u.\n           ve=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' x = ext v \\<and>\n                         restrict v (res ts'') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))", "obtain c where c_def:\"ts'',ve \\<Turnstile>  \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            ve=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' c = ext v \\<and>\n                          restrict v (res ts'') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' e = ext v \\<and>\n                         restrict v (res ts'') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence c_neq_e:\"ts'',ve \\<Turnstile>\\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "obtain d n  where n_def:\n        \"(ts' \\<^bold>\\<midarrow>wdr(d,n) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wd_res.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c n.\n     ts' \\<^bold>\\<midarrow>wdr( c, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d n.\n        ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "from c_def"], ["proof (chain)\npicking this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\"(v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> ve \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \" (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using n_def backwards_wdr_res_stab"], ["proof (prove)\nusing this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  ts' \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts''\n  (?ts \\<^bold>\\<midarrow>wdr( ?d, ?n ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> \\<^bold>\\<not> safe (e)\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "using c_neq_e c_def v'_def somewhere_leq"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "by meson"], ["proof (state)\nthis:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "using wd_res.IH move_stab ve_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  move ts ts' v = move ts ts'' v\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts'' x = ext v \\<and>\n                           restrict v (res ts'') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' e = ext v \\<and>\n                          restrict v (res ts'') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "case (wd_clm ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_wdc wd_clm.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>wdc( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps wd_clm.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (2 subgoals):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))\n 2. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts'' x = ext v \\<and>\n                             restrict v (res ts'') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts'' e = ext v \\<and>\n                            restrict v (res ts'') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "assume \"\\<not> (ts'',move ts ts'' v \\<Turnstile> ( \\<^bold>@e (safe e)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))", "have  e_def:\"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<not>(\\<^bold>@e (safe e))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))))", "by best"], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))", "obtain ve where ve_def:\n        \"((move ts ts'' v) =e> ve) \\<and> (ts'',ve \\<Turnstile> \\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence unsafe:\"ts'',ve \\<Turnstile> \\<^bold>\\<exists> c. \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<noteq> e \\<and>\n       (\\<exists>v u.\n           ve=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' x = ext v \\<and>\n                         restrict v (res ts'') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))", "obtain c where c_def:\"ts'',ve \\<Turnstile>  \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            ve=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' c = ext v \\<and>\n                          restrict v (res ts'') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' e = ext v \\<and>\n                         restrict v (res ts'') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence c_neq_e:\"ts'',ve \\<Turnstile>\\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "obtain d where d_def: \"(ts' \\<^bold>\\<midarrow>wdc(d) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wd_clm.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>wdc( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "from c_def"], ["proof (chain)\npicking this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n        \"(v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> ve \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \" (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using d_def backwards_wdc_res_stab"], ["proof (prove)\nusing this:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  ts' \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts''\n  (?ts \\<^bold>\\<midarrow>wdc( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> \\<^bold>\\<not> safe (e)\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "using c_neq_e c_def v'_def somewhere_leq"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "by meson"], ["proof (state)\nthis:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "using wd_clm.IH move_stab ve_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  move ts ts' v = move ts ts'' v\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts'' x = ext v \\<and>\n                           restrict v (res ts'') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' e = ext v \\<and>\n                          restrict v (res ts'') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "case (cr_res ts' ts'')"], ["proof (state)\nthis:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have local_LC: \n      \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<forall>d.( \\<^bold>\\<exists> c. (\\<^bold>@c (pcc c d)) \\<^bold>\\<or> (\\<^bold>@d (pcc c d))) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(d) \\<^bold>\\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>xa.\n           (\\<forall>v'.\n               move ts ts' v = xa > v' \\<longrightarrow>\n               xa \\<noteq> x \\<and>\n               (\\<exists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (clm ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (res ts') xa = lan v \\<and>\n                                 |lan v| = 1 \\<or>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (clm ts') xa = lan v \\<and>\n                                 |lan v| = 1)) \\<and>\n                               True)) \\<and>\n                       True))) \\<or>\n           (\\<forall>v'.\n               move ts ts' v = x > v' \\<longrightarrow>\n               xa \\<noteq> x \\<and>\n               (\\<exists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (clm ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (res ts') xa = lan v \\<and>\n                                 |lan v| = 1 \\<or>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (clm ts') xa = lan v \\<and>\n                                 |lan v| = 1)) \\<and>\n                               True)) \\<and>\n                       True)))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           False)", "using LC cr_res.hyps(1)"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts \\<^bold>\\<Rightarrow> ts' \\<longrightarrow>\n     (\\<forall>x.\n         (\\<exists>xa.\n             (\\<forall>v'.\n                 move ts ts' v = xa > v' \\<longrightarrow>\n                 xa \\<noteq> x \\<and>\n                 (\\<exists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' x = ext v \\<and>\n                                   restrict v (clm ts') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (res ts') xa = lan v \\<and>\n                                   |lan v| = 1 \\<or>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (clm ts') xa = lan v \\<and>\n                                   |lan v| = 1)) \\<and>\n                                 True)) \\<and>\n                         True))) \\<or>\n             (\\<forall>v'.\n                 move ts ts' v = x > v' \\<longrightarrow>\n                 xa \\<noteq> x \\<and>\n                 (\\<exists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' x = ext v \\<and>\n                                   restrict v (clm ts') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (res ts') xa = lan v \\<and>\n                                   |lan v| = 1 \\<or>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts' xa = ext v \\<and>\n                                   restrict v (clm ts') xa = lan v \\<and>\n                                   |lan v| = 1)) \\<and>\n                                 True)) \\<and>\n                         True)))) \\<longrightarrow>\n         (\\<forall>ts'a.\n             ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts'a \\<longrightarrow>\n             False))\n  ts \\<^bold>\\<Rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>xa.\n           (\\<forall>v'.\n               move ts ts' v = xa > v' \\<longrightarrow>\n               xa \\<noteq> x \\<and>\n               (\\<exists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (clm ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (res ts') xa = lan v \\<and>\n                                 |lan v| = 1 \\<or>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (clm ts') xa = lan v \\<and>\n                                 |lan v| = 1)) \\<and>\n                               True)) \\<and>\n                       True))) \\<or>\n           (\\<forall>v'.\n               move ts ts' v = x > v' \\<longrightarrow>\n               xa \\<noteq> x \\<and>\n               (\\<exists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (clm ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                (0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (res ts') xa = lan v \\<and>\n                                 |lan v| = 1 \\<or>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' xa = ext v \\<and>\n                                 restrict v (clm ts') xa = lan v \\<and>\n                                 |lan v| = 1)) \\<and>\n                               True)) \\<and>\n                       True)))) \\<longrightarrow>\n       (\\<forall>ts'.\n           ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           False)", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     (\\<exists>xa.\n         (\\<forall>v'.\n             move ts ts' v = xa > v' \\<longrightarrow>\n             xa \\<noteq> x \\<and>\n             (\\<exists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True))) \\<or>\n         (\\<forall>v'.\n             move ts ts' v = x > v' \\<longrightarrow>\n             xa \\<noteq> x \\<and>\n             (\\<exists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True)))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         False)\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "have \"move ts ts' v = move ts' ts'' (move ts ts' v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "using move_stability_res cr_res.hyps move_trans"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  move ?ts ?ts' ?v = ?v\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n  ?ts \\<^bold>\\<Rightarrow> ?ts' \\<and>\n  ?ts' \\<^bold>\\<Rightarrow> ?ts'' \\<longrightarrow>\n  move ?ts' ?ts'' (move ?ts ?ts' ?v) = move ?ts ?ts'' ?v\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts' ts'' (move ts ts' v)", "by auto"], ["proof (state)\nthis:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "hence move_stab: \"move ts ts' v = move ts ts'' v\""], ["proof (prove)\nusing this:\n  move ts ts' v = move ts' ts'' (move ts ts' v)\n\ngoal (1 subgoal):\n 1. move ts ts' v = move ts ts'' v", "by (metis abstract.simps cr_res.hyps move_trans)"], ["proof (state)\nthis:\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<And>ts' ts''.\n       \\<lbrakk>ts \\<^bold>\\<Rightarrow> ts';\n        \\<forall>v'.\n           move ts ts' v = e > v' \\<longrightarrow>\n           (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   v'=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)));\n        \\<exists>c.\n           ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v'.\n                            move ts ts'' v = e > v' \\<longrightarrow>\n                            (\\<forall>x.\n                                x \\<noteq> e \\<longrightarrow>\n                                (\\<nexists>v u.\n                                    v'=v\\<parallel>u \\<and>\n                                    True \\<and>\n                                    (\\<exists>v ua.\n  u=v\\<parallel>ua \\<and>\n  (\\<exists>va u.\n      v=va--u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v--ua \\<and>\n          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n            len v ts'' x = ext v \\<and>\n            restrict v (res ts'') x = lan v \\<and> |lan v| = 1) \\<and>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts'' e = ext v \\<and>\n           restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n          True)) \\<and>\n  True)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts'' x = ext v \\<and>\n                             restrict v (res ts'') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts'' e = ext v \\<and>\n                            restrict v (res ts'') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "obtain d where d_def: \"(ts' \\<^bold>\\<midarrow>r(d) \\<^bold>\\<rightarrow> ts'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using cr_res.hyps"], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<Rightarrow> ts'\n  \\<exists>c. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "assume \"\\<not> (ts'',move ts ts'' v \\<Turnstile> ( \\<^bold>@e (safe e)))\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))", "have  e_def:\"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<not>(\\<^bold>@e (safe e))\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))))", "by best"], ["proof (state)\nthis:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>@e (\\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "using switch_always_exists switch_unique"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n  \\<forall>c. \\<exists>u. ?v = c > u\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       \\<not> (\\<forall>x.\n                  x \\<noteq> e \\<longrightarrow>\n                  (\\<nexists>v u.\n                      v'=v\\<parallel>u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v\\<parallel>ua \\<and>\n                          (\\<exists>va u.\n                              v=va--u \\<and>\n                              True \\<and>\n                              (\\<exists>v ua.\n                                  u=v--ua \\<and>\n                                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' x = ext v \\<and>\n                                    restrict v (res ts'') x = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' e = ext v \\<and>\n                                   restrict v (res ts'') e = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  True)) \\<and>\n                          True)))", "by fast"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))", "obtain ve where ve_def:\n        \"((move ts ts'' v) =e> ve) \\<and> (ts'',ve \\<Turnstile> \\<^bold>\\<not> safe e)\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using switch_always_exists"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     \\<not> (\\<forall>x.\n                x \\<noteq> e \\<longrightarrow>\n                (\\<nexists>v u.\n                    v'=v\\<parallel>u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v\\<parallel>ua \\<and>\n                        (\\<exists>va u.\n                            v=va--u \\<and>\n                            True \\<and>\n                            (\\<exists>v ua.\n                                u=v--ua \\<and>\n                                ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' x = ext v \\<and>\n                                  restrict v (res ts'') x = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts'' e = ext v \\<and>\n                                 restrict v (res ts'') e = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                True)) \\<and>\n                        True)))\n  \\<forall>c. \\<exists>u. ?v = c > u\n\ngoal (1 subgoal):\n 1. (\\<And>ve.\n        move ts ts'' v = e > ve \\<and>\n        \\<not> (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       ve=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence unsafe:\"ts'',ve \\<Turnstile> \\<^bold>\\<exists> c. \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<noteq> e \\<and>\n       (\\<exists>v u.\n           ve=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' x = ext v \\<and>\n                         restrict v (res ts'') x = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts'' e = ext v \\<and>\n                        restrict v (res ts'') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       True)) \\<and>\n               True))", "by blast"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))", "obtain c where c_def:\"ts'',ve \\<Turnstile>  \\<^bold>\\<not>(c \\<^bold>= e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq> e \\<and>\n     (\\<exists>v u.\n         ve=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts'' x = ext v \\<and>\n                       restrict v (res ts'') x = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts'' e = ext v \\<and>\n                      restrict v (res ts'') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            ve=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' c = ext v \\<and>\n                          restrict v (res ts'') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts'' e = ext v \\<and>\n                         restrict v (res ts'') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        True)) \\<and>\n                True)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "hence c_neq_e:\"ts'',ve \\<Turnstile>\\<^bold>\\<not>(c \\<^bold>= e)\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>v'.\n               move ts ts'' v = e > v' \\<longrightarrow>\n               (\\<forall>x.\n                   x \\<noteq> e \\<longrightarrow>\n                   (\\<nexists>v u.\n                       v'=v\\<parallel>u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v\\<parallel>ua \\<and>\n                           (\\<exists>va u.\n                               v=va--u \\<and>\n                               True \\<and>\n                               (\\<exists>v ua.\n                                   u=v--ua \\<and>\n                                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                     len v ts'' x = ext v \\<and>\n                                     restrict v (res ts'') x = lan v \\<and>\n                                     |lan v| = 1) \\<and>\n                                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                                    len v ts'' e = ext v \\<and>\n                                    restrict v (res ts'') e = lan v \\<and>\n                                    |lan v| = 1) \\<and>\n                                   True)) \\<and>\n                           True)))) \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"d=e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  d = e\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence e_trans:\"ts' \\<^bold>\\<midarrow>r(e) \\<^bold>\\<rightarrow> ts''\""], ["proof (prove)\nusing this:\n  d = e\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''", "using d_def"], ["proof (prove)\nusing this:\n  d = e\n  ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''", "by simp"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "from c_def"], ["proof (chain)\npicking this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \"ts'',ve \\<Turnstile> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by meson"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n          \"(v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> ve \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "with backwards_res_act"], ["proof (chain)\npicking this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \"ts',v' \\<Turnstile>   re(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e))\""], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "using c_def  backwards_res_stab c_neq_e"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "by (metis (no_types, lifting) d_def True)"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e)))\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "using  v'_def"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' e = ext v' \\<and>\n   restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' e = ext v' \\<and>\n        restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)", "by blast"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"ts',ve \\<Turnstile>\\<^bold>\\<langle> re(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e)) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1)) \\<and>\n                   True)) \\<and>\n           True)", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' e = ext v' \\<and>\n      restrict v' (clm ts') e = lan v' \\<and> |lan v'| = 1)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1)) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and>\n                   |lan v| = 1)) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "hence \"ts',ve \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> cl(e)\\<^bold>\\<rangle> \""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and>\n                   |lan v| = 1)) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using hmlsl.somewhere_and_or_distr"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  (0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and>\n                   |lan v| = 1)) \\<and>\n                 True)) \\<and>\n         True)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (?\\<chi> ts v \\<and>\n                      (?\\<phi> ts v \\<or> ?\\<psi> ts v)) \\<and>\n                     True)) \\<and>\n             True)) =\n     ((\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<phi> ts v) \\<and>\n                      True)) \\<and>\n              True)) \\<or>\n      (\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<psi> ts v) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by metis"], ["proof (state)\nthis:\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (2 subgoals):\n 1. d = e \\<Longrightarrow> False\n 2. d \\<noteq> e \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "show False"], ["proof (prove)\nusing this:\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',ve \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> e", "using c_def"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (2 subgoals):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. False", "using assm' cr_res.IH c_def move_stab ve_def"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  move ts ts' v = move ts ts'' v\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',ve \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> cl(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> cl(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using c_def"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (clm ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by force"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> pcc c e\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (clm ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts' v \\<Turnstile> \\<^bold>@e (pcc c e)\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       c \\<noteq> e \\<and>\n       (\\<exists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (clm ts') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1 \\<or>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (clm ts') c = lan v \\<and>\n                         |lan v| = 1)) \\<and>\n                       True)) \\<and>\n               True))", "using ve_def move_stab switch_unique"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n  move ts ts' v = move ts ts'' v\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       c \\<noteq> e \\<and>\n       (\\<exists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (clm ts') e = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and>\n                         |lan v| = 1 \\<or>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (clm ts') c = lan v \\<and>\n                         |lan v| = 1)) \\<and>\n                       True)) \\<and>\n               True))", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     c \\<noteq> e \\<and>\n     (\\<exists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (clm ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (clm ts') c = lan v \\<and>\n                       |lan v| = 1)) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence pcc:\"ts',move ts ts' v \\<Turnstile> (\\<^bold>@c (pcc c e)) \\<^bold>\\<or> (\\<^bold>@e (pcc c e))\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     c \\<noteq> e \\<and>\n     (\\<exists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (clm ts') e = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (res ts') c = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (clm ts') c = lan v \\<and>\n                       |lan v| = 1)) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<forall>v'.\n        move ts ts' v = c > v' \\<longrightarrow>\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (clm ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (res ts') c = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (clm ts') c = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True))) \\<or>\n    (\\<forall>v'.\n        move ts ts' v = e > v' \\<longrightarrow>\n        c \\<noteq> e \\<and>\n        (\\<exists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (clm ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (res ts') c = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (clm ts') c = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True)))", "by blast"], ["proof (state)\nthis:\n  (\\<forall>v'.\n      move ts ts' v = c > v' \\<longrightarrow>\n      c \\<noteq> e \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<or>\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      c \\<noteq> e \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \n            \"ts',move ts ts' v \\<Turnstile>(\\<^bold>\\<exists> c.(\\<^bold>@c (pcc c e)) \\<^bold>\\<or> (\\<^bold>@e (pcc c e))) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(e) \\<^bold>\\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        (\\<forall>v'.\n            move ts ts' v = x > v' \\<longrightarrow>\n            x \\<noteq> e \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (clm ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True))) \\<or>\n        (\\<forall>v'.\n            move ts ts' v = e > v' \\<longrightarrow>\n            x \\<noteq> e \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (clm ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True)))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "using local_LC e_def"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>xa.\n         (\\<forall>v'.\n             move ts ts' v = xa > v' \\<longrightarrow>\n             xa \\<noteq> x \\<and>\n             (\\<exists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True))) \\<or>\n         (\\<forall>v'.\n             move ts ts' v = x > v' \\<longrightarrow>\n             xa \\<noteq> x \\<and>\n             (\\<exists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True)))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         False)\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        (\\<forall>v'.\n            move ts ts' v = x > v' \\<longrightarrow>\n            x \\<noteq> e \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (clm ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True))) \\<or>\n        (\\<forall>v'.\n            move ts ts' v = e > v' \\<longrightarrow>\n            x \\<noteq> e \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (clm ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True)))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>x.\n      (\\<forall>v'.\n          move ts ts' v = x > v' \\<longrightarrow>\n          x \\<noteq> e \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (clm ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True))) \\<or>\n      (\\<forall>v'.\n          move ts ts' v = e > v' \\<longrightarrow>\n          x \\<noteq> e \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (clm ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True)))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      (\\<forall>v'.\n          move ts ts' v = x > v' \\<longrightarrow>\n          x \\<noteq> e \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (clm ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True))) \\<or>\n      (\\<forall>v'.\n          move ts ts' v = e > v' \\<longrightarrow>\n          x \\<noteq> e \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (clm ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True)))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. False", "using e_trans pcc"], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      (\\<forall>v'.\n          move ts ts' v = x > v' \\<longrightarrow>\n          x \\<noteq> e \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (clm ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True))) \\<or>\n      (\\<forall>v'.\n          move ts ts' v = e > v' \\<longrightarrow>\n          x \\<noteq> e \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (clm ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True)))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n  ts' \\<^bold>\\<midarrow>r( e ) \\<^bold>\\<rightarrow> ts''\n  (\\<forall>v'.\n      move ts ts' v = c > v' \\<longrightarrow>\n      c \\<noteq> e \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<or>\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      c \\<noteq> e \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (res ts') c = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  d \\<noteq> e\n\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  d \\<noteq> e", "have neq:\"d \\<noteq>e\""], ["proof (prove)\nusing this:\n  d \\<noteq> e\n\ngoal (1 subgoal):\n 1. d \\<noteq> e", "."], ["proof (state)\nthis:\n  d \\<noteq> e\n\ngoal (1 subgoal):\n 1. d \\<noteq> e \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"c=d\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  c \\<noteq> d\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "from c_def"], ["proof (chain)\npicking this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \"ts'',ve \\<Turnstile> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by meson"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n            \"(v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> ve \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "with backwards_res_stab"], ["proof (chain)\npicking this:\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have overlap: \"ts',v' \\<Turnstile> re(c) \\<^bold>\\<and> (re(e))\""], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using c_def  backwards_res_stab c_neq_e False"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  c \\<noteq> e\n  c \\<noteq> d\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by (metis (no_types, lifting) d_def neq)"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "hence unsafe2:\"ts',ve \\<Turnstile>\\<^bold>\\<not> safe(e)\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "using  c_neq_e somewhere_leq v'_def"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>x.\n               x \\<noteq> e \\<longrightarrow>\n               (\\<nexists>v u.\n                   ve=v\\<parallel>u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v\\<parallel>ua \\<and>\n                       (\\<exists>va u.\n                           v=va--u \\<and>\n                           True \\<and>\n                           (\\<exists>v ua.\n                               u=v--ua \\<and>\n                               ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                 len v ts' x = ext v \\<and>\n                                 restrict v (res ts') x = lan v \\<and>\n                                 |lan v| = 1) \\<and>\n                                0 < \\<parallel>ext v\\<parallel> \\<and>\n                                len v ts' e = ext v \\<and>\n                                restrict v (res ts') e = lan v \\<and>\n                                |lan v| = 1) \\<and>\n                               True)) \\<and>\n                       True)))", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "from cr_res.IH"], ["proof (chain)\npicking this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))", "have \"ts',move ts ts'' v \\<Turnstile> \\<^bold>@e (safe(e))\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (res ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "using move_stab"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts'' v = e > v' \\<longrightarrow>\n       (\\<forall>x.\n           x \\<noteq> e \\<longrightarrow>\n           (\\<nexists>v u.\n               v'=v\\<parallel>u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v\\<parallel>ua \\<and>\n                   (\\<exists>va u.\n                       v=va--u \\<and>\n                       True \\<and>\n                       (\\<exists>v ua.\n                           u=v--ua \\<and>\n                           ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                             len v ts' x = ext v \\<and>\n                             restrict v (res ts') x = lan v \\<and>\n                             |lan v| = 1) \\<and>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' e = ext v \\<and>\n                            restrict v (res ts') e = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           True)) \\<and>\n                   True)))", "by force"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (2 subgoals):\n 1. c = d \\<Longrightarrow> False\n 2. c \\<noteq> d \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal (1 subgoal):\n 1. False", "using unsafe2 ve_def"], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (res ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' e = ext v \\<and>\n                              restrict v (res ts') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "by best"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  c = d\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence e_trans:\"ts' \\<^bold>\\<midarrow>r(c) \\<^bold>\\<rightarrow> ts''\""], ["proof (prove)\nusing this:\n  c = d\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''", "using d_def"], ["proof (prove)\nusing this:\n  c = d\n  ts' \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''", "by simp"], ["proof (state)\nthis:\n  ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "from c_def"], ["proof (chain)\npicking this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))", "have \"ts'',ve \\<Turnstile> \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts'' c = ext v \\<and>\n                     restrict v (res ts'') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' e = ext v \\<and>\n                    restrict v (res ts'') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by auto"], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "using somewhere_leq"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' c = ext v \\<and>\n                   restrict v (res ts'') c = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts'' e = ext v \\<and>\n                  restrict v (res ts'') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' c = ext v' \\<and>\n        restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts'' e = ext v' \\<and>\n       restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "by meson"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "obtain v' where v'_def:\n            \"(v' \\<le> ve) \\<and> (ts'',v' \\<Turnstile> re(c) \\<^bold>\\<and> re(e))\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts'' c = ext v' \\<and>\n      restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts'' e = ext v' \\<and>\n     restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        v' \\<le> ve \\<and>\n        (0 < \\<parallel>ext v'\\<parallel> \\<and>\n         len v' ts'' c = ext v' \\<and>\n         restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts'' e = ext v' \\<and>\n        restrict v' (res ts'') e = lan v' \\<and>\n        |lan v'| = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "with backwards_res_act"], ["proof (chain)\npicking this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1", "have \"ts',v' \\<Turnstile>   (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<and> (re(e) )\""], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using c_def  backwards_res_stab c_neq_e"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. (0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' c = ext v' \\<and>\n     restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n    0 < \\<parallel>ext v'\\<parallel> \\<and>\n    len v' ts' e = ext v' \\<and>\n    restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by (metis (no_types, lifting) d_def True)"], ["proof (state)\nthis:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"\\<exists>v'. (v' \\<le> ve) \\<and> (ts',v' \\<Turnstile> (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<and> (re(e)))\""], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts' e = ext v' \\<and>\n       restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "using v'_def"], ["proof (prove)\nusing this:\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n   0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts' c = ext v' \\<and>\n   restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts' e = ext v' \\<and>\n  restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  v' \\<le> ve \\<and>\n  (0 < \\<parallel>ext v'\\<parallel> \\<and>\n   len v' ts'' c = ext v' \\<and>\n   restrict v' (res ts'') c = lan v' \\<and> |lan v'| = 1) \\<and>\n  0 < \\<parallel>ext v'\\<parallel> \\<and>\n  len v' ts'' e = ext v' \\<and>\n  restrict v' (res ts'') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v'\\<le>ve.\n       (0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n        0 < \\<parallel>ext v'\\<parallel> \\<and>\n        len v' ts' c = ext v' \\<and>\n        restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n       0 < \\<parallel>ext v'\\<parallel> \\<and>\n       len v' ts' e = ext v' \\<and>\n       restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"ts',ve \\<Turnstile>\\<^bold>\\<langle> (re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<and> (re(e) ) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "using somewhere_leq move_stab"], ["proof (prove)\nusing this:\n  \\<exists>v'\\<le>ve.\n     (0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (res ts') c = lan v' \\<and> |lan v'| = 1 \\<or>\n      0 < \\<parallel>ext v'\\<parallel> \\<and>\n      len v' ts' c = ext v' \\<and>\n      restrict v' (clm ts') c = lan v' \\<and> |lan v'| = 1) \\<and>\n     0 < \\<parallel>ext v'\\<parallel> \\<and>\n     len v' ts' e = ext v' \\<and>\n     restrict v' (res ts') e = lan v' \\<and> |lan v'| = 1\n  (?v \\<le> ?v') =\n  (\\<exists>v1 v2 v3 vl vr vu vd.\n      ?v'=vl\\<parallel>v1 \\<and>\n      v1=v2\\<parallel>vr \\<and> v2=vd--v3 \\<and> v3=?v--vu)\n  move ts ts' v = move ts ts'' v\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True)", "by meson"], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "hence \"ts',ve \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> \\<^bold>\\<or> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle> \""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using hmlsl.somewhere_and_or_distr"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<or>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<forall>ts v.\n     (\\<exists>va u.\n         v=va\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     (?\\<chi> ts v \\<and>\n                      (?\\<phi> ts v \\<or> ?\\<psi> ts v)) \\<and>\n                     True)) \\<and>\n             True)) =\n     ((\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<phi> ts v) \\<and>\n                      True)) \\<and>\n              True)) \\<or>\n      (\\<exists>va u.\n          v=va\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      (?\\<chi> ts v \\<and> ?\\<psi> ts v) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (res ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<or>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c = d \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (res ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True)) \\<or>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',ve \\<Turnstile>  \\<^bold>\\<langle> re(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (2 subgoals):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \"ts',ve \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>= e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> e", "using c_def"], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e\n\ngoal (2 subgoals):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False\n 2. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n\ngoal (1 subgoal):\n 1. False", "using assm' cr_res.IH c_def move_stab ve_def"], ["proof (prove)\nusing this:\n  c \\<noteq> e\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (res ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  move ts ts' v = move ts ts'' v\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "assume assm':\"ts',ve \\<Turnstile>  \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> \\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> re(e)\\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using c_def"], ["proof (prove)\nusing this:\n  \\<exists>v u.\n     ve=v\\<parallel>u \\<and>\n     True \\<and>\n     (\\<exists>v ua.\n         u=v\\<parallel>ua \\<and>\n         (\\<exists>va u.\n             v=va--u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v--ua \\<and>\n                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' c = ext v \\<and>\n                   restrict v (clm ts') c = lan v \\<and> |lan v| = 1) \\<and>\n                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                  len v ts' e = ext v \\<and>\n                  restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                 True)) \\<and>\n         True)\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' e = ext v \\<and>\n                     restrict v (res ts') e = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile>\\<^bold>\\<not> (c \\<^bold>=e) \\<^bold>\\<and> \\<^bold>\\<langle> cl(c) \\<^bold>\\<and> (re(e) \\<^bold>\\<or> cl(e)) \\<^bold>\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts' e = ext v \\<and>\n                   restrict v (res ts') e = lan v \\<and> |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. c \\<noteq> e \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',ve \\<Turnstile> pcc e c\""], ["proof (prove)\nusing this:\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. e \\<noteq> c \\<and>\n    (\\<exists>v u.\n        ve=v\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' c = ext v \\<and>\n                      restrict v (clm ts') c = lan v \\<and>\n                      |lan v| = 1) \\<and>\n                     (0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (res ts') e = lan v \\<and>\n                      |lan v| = 1 \\<or>\n                      0 < \\<parallel>ext v\\<parallel> \\<and>\n                      len v ts' e = ext v \\<and>\n                      restrict v (clm ts') e = lan v \\<and>\n                      |lan v| = 1)) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["proof (state)\nthis:\n  e \\<noteq> c \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts' v \\<Turnstile> \\<^bold>@e (pcc e c)\""], ["proof (prove)\nusing this:\n  e \\<noteq> c \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       e \\<noteq> c \\<and>\n       (\\<exists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (clm ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (res ts') e = lan v \\<and>\n                         |lan v| = 1 \\<or>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (clm ts') e = lan v \\<and>\n                         |lan v| = 1)) \\<and>\n                       True)) \\<and>\n               True))", "using ve_def move_stab  switch_unique"], ["proof (prove)\nusing this:\n  e \\<noteq> c \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' c = ext v \\<and>\n                    restrict v (clm ts') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   (0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and> |lan v| = 1 \\<or>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (clm ts') e = lan v \\<and>\n                    |lan v| = 1)) \\<and>\n                  True)) \\<and>\n          True))\n  move ts ts'' v = e > ve \\<and>\n  \\<not> (\\<forall>x.\n             x \\<noteq> e \\<longrightarrow>\n             (\\<nexists>v u.\n                 ve=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts'' x = ext v \\<and>\n                               restrict v (res ts'') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts'' e = ext v \\<and>\n                              restrict v (res ts'') e = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             True)) \\<and>\n                     True)))\n  move ts ts' v = move ts ts'' v\n  ?v = ?c > ?u \\<and> ?v = ?c > ?w \\<longrightarrow> ?u = ?w\n\ngoal (1 subgoal):\n 1. \\<forall>v'.\n       move ts ts' v = e > v' \\<longrightarrow>\n       e \\<noteq> c \\<and>\n       (\\<exists>v u.\n           v'=v\\<parallel>u \\<and>\n           True \\<and>\n           (\\<exists>v ua.\n               u=v\\<parallel>ua \\<and>\n               (\\<exists>va u.\n                   v=va--u \\<and>\n                   True \\<and>\n                   (\\<exists>v ua.\n                       u=v--ua \\<and>\n                       ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (clm ts') c = lan v \\<and>\n                         |lan v| = 1) \\<and>\n                        (0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (res ts') e = lan v \\<and>\n                         |lan v| = 1 \\<or>\n                         0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' e = ext v \\<and>\n                         restrict v (clm ts') e = lan v \\<and>\n                         |lan v| = 1)) \\<and>\n                       True)) \\<and>\n               True))", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     e \\<noteq> c \\<and>\n     (\\<exists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (clm ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (clm ts') e = lan v \\<and>\n                       |lan v| = 1)) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence pcc:\"ts', move ts ts' v \\<Turnstile> (\\<^bold>@e (pcc e c)) \\<^bold>\\<or> (\\<^bold>@c (pcc e c))\""], ["proof (prove)\nusing this:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     e \\<noteq> c \\<and>\n     (\\<exists>v u.\n         v'=v\\<parallel>u \\<and>\n         True \\<and>\n         (\\<exists>v ua.\n             u=v\\<parallel>ua \\<and>\n             (\\<exists>va u.\n                 v=va--u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v--ua \\<and>\n                     ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' c = ext v \\<and>\n                       restrict v (clm ts') c = lan v \\<and>\n                       |lan v| = 1) \\<and>\n                      (0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (res ts') e = lan v \\<and>\n                       |lan v| = 1 \\<or>\n                       0 < \\<parallel>ext v\\<parallel> \\<and>\n                       len v ts' e = ext v \\<and>\n                       restrict v (clm ts') e = lan v \\<and>\n                       |lan v| = 1)) \\<and>\n                     True)) \\<and>\n             True))\n\ngoal (1 subgoal):\n 1. (\\<forall>v'.\n        move ts ts' v = e > v' \\<longrightarrow>\n        e \\<noteq> c \\<and>\n        (\\<exists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (clm ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (clm ts') e = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True))) \\<or>\n    (\\<forall>v'.\n        move ts ts' v = c > v' \\<longrightarrow>\n        e \\<noteq> c \\<and>\n        (\\<exists>v u.\n            v'=v\\<parallel>u \\<and>\n            True \\<and>\n            (\\<exists>v ua.\n                u=v\\<parallel>ua \\<and>\n                (\\<exists>va u.\n                    v=va--u \\<and>\n                    True \\<and>\n                    (\\<exists>v ua.\n                        u=v--ua \\<and>\n                        ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' c = ext v \\<and>\n                          restrict v (clm ts') c = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         (0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1 \\<or>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (clm ts') e = lan v \\<and>\n                          |lan v| = 1)) \\<and>\n                        True)) \\<and>\n                True)))", "by blast"], ["proof (state)\nthis:\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      e \\<noteq> c \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<or>\n  (\\<forall>v'.\n      move ts ts' v = c > v' \\<longrightarrow>\n      e \\<noteq> c \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "have \n              \"ts',move ts ts' v \\<Turnstile>(\\<^bold>\\<exists> d.(\\<^bold>@d (pcc d c)) \\<^bold>\\<or> (\\<^bold>@c (pcc d c))) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(c) \\<^bold>\\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        (\\<forall>v'.\n            move ts ts' v = x > v' \\<longrightarrow>\n            x \\<noteq> c \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (clm ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True))) \\<or>\n        (\\<forall>v'.\n            move ts ts' v = c > v' \\<longrightarrow>\n            x \\<noteq> c \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (clm ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True)))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "using local_LC move_stab c_def e_def"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<exists>xa.\n         (\\<forall>v'.\n             move ts ts' v = xa > v' \\<longrightarrow>\n             xa \\<noteq> x \\<and>\n             (\\<exists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True))) \\<or>\n         (\\<forall>v'.\n             move ts ts' v = x > v' \\<longrightarrow>\n             xa \\<noteq> x \\<and>\n             (\\<exists>v u.\n                 v'=v\\<parallel>u \\<and>\n                 True \\<and>\n                 (\\<exists>v ua.\n                     u=v\\<parallel>ua \\<and>\n                     (\\<exists>va u.\n                         v=va--u \\<and>\n                         True \\<and>\n                         (\\<exists>v ua.\n                             u=v--ua \\<and>\n                             ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' x = ext v \\<and>\n                               restrict v (clm ts') x = lan v \\<and>\n                               |lan v| = 1) \\<and>\n                              (0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (res ts') xa = lan v \\<and>\n                               |lan v| = 1 \\<or>\n                               0 < \\<parallel>ext v\\<parallel> \\<and>\n                               len v ts' xa = ext v \\<and>\n                               restrict v (clm ts') xa = lan v \\<and>\n                               |lan v| = 1)) \\<and>\n                             True)) \\<and>\n                     True)))) \\<longrightarrow>\n     (\\<forall>ts'.\n         ts' \\<^bold>\\<midarrow>r( x ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         False)\n  move ts ts' v = move ts ts'' v\n  c \\<noteq> e \\<and>\n  (\\<exists>v u.\n      ve=v\\<parallel>u \\<and>\n      True \\<and>\n      (\\<exists>v ua.\n          u=v\\<parallel>ua \\<and>\n          (\\<exists>va u.\n              v=va--u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v--ua \\<and>\n                  ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts'' c = ext v \\<and>\n                    restrict v (res ts'') c = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   0 < \\<parallel>ext v\\<parallel> \\<and>\n                   len v ts'' e = ext v \\<and>\n                   restrict v (res ts'') e = lan v \\<and>\n                   |lan v| = 1) \\<and>\n                  True)) \\<and>\n          True))\n  \\<not> (\\<forall>v'.\n             move ts ts'' v = e > v' \\<longrightarrow>\n             (\\<forall>x.\n                 x \\<noteq> e \\<longrightarrow>\n                 (\\<nexists>v u.\n                     v'=v\\<parallel>u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v\\<parallel>ua \\<and>\n                         (\\<exists>va u.\n                             v=va--u \\<and>\n                             True \\<and>\n                             (\\<exists>v ua.\n                                 u=v--ua \\<and>\n                                 ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                                   len v ts'' x = ext v \\<and>\n                                   restrict v (res ts'') x = lan v \\<and>\n                                   |lan v| = 1) \\<and>\n                                  0 < \\<parallel>ext v\\<parallel> \\<and>\n                                  len v ts'' e = ext v \\<and>\n                                  restrict v (res ts'') e = lan v \\<and>\n                                  |lan v| = 1) \\<and>\n                                 True)) \\<and>\n                         True))))\n\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        (\\<forall>v'.\n            move ts ts' v = x > v' \\<longrightarrow>\n            x \\<noteq> c \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (clm ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True))) \\<or>\n        (\\<forall>v'.\n            move ts ts' v = c > v' \\<longrightarrow>\n            x \\<noteq> c \\<and>\n            (\\<exists>v u.\n                v'=v\\<parallel>u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v\\<parallel>ua \\<and>\n                    (\\<exists>va u.\n                        v=va--u \\<and>\n                        True \\<and>\n                        (\\<exists>v ua.\n                            u=v--ua \\<and>\n                            ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' c = ext v \\<and>\n                              restrict v (clm ts') c = lan v \\<and>\n                              |lan v| = 1) \\<and>\n                             (0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (res ts') x = lan v \\<and>\n                              |lan v| = 1 \\<or>\n                              0 < \\<parallel>ext v\\<parallel> \\<and>\n                              len v ts' x = ext v \\<and>\n                              restrict v (clm ts') x = lan v \\<and>\n                              |lan v| = 1)) \\<and>\n                            True)) \\<and>\n                    True)))) \\<longrightarrow>\n    (\\<forall>ts'.\n        ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n        False)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>x.\n      (\\<forall>v'.\n          move ts ts' v = x > v' \\<longrightarrow>\n          x \\<noteq> c \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (clm ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True))) \\<or>\n      (\\<forall>v'.\n          move ts ts' v = c > v' \\<longrightarrow>\n          x \\<noteq> c \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (clm ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True)))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "hence \"ts',move ts ts' v \\<Turnstile> \\<^bold>\\<box>r(c) \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      (\\<forall>v'.\n          move ts ts' v = x > v' \\<longrightarrow>\n          x \\<noteq> c \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (clm ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True))) \\<or>\n      (\\<forall>v'.\n          move ts ts' v = c > v' \\<longrightarrow>\n          x \\<noteq> c \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (clm ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True)))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n       False", "using pcc"], ["proof (prove)\nusing this:\n  (\\<exists>x.\n      (\\<forall>v'.\n          move ts ts' v = x > v' \\<longrightarrow>\n          x \\<noteq> c \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (clm ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True))) \\<or>\n      (\\<forall>v'.\n          move ts ts' v = c > v' \\<longrightarrow>\n          x \\<noteq> c \\<and>\n          (\\<exists>v u.\n              v'=v\\<parallel>u \\<and>\n              True \\<and>\n              (\\<exists>v ua.\n                  u=v\\<parallel>ua \\<and>\n                  (\\<exists>va u.\n                      v=va--u \\<and>\n                      True \\<and>\n                      (\\<exists>v ua.\n                          u=v--ua \\<and>\n                          ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' c = ext v \\<and>\n                            restrict v (clm ts') c = lan v \\<and>\n                            |lan v| = 1) \\<and>\n                           (0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (res ts') x = lan v \\<and>\n                            |lan v| = 1 \\<or>\n                            0 < \\<parallel>ext v\\<parallel> \\<and>\n                            len v ts' x = ext v \\<and>\n                            restrict v (clm ts') x = lan v \\<and>\n                            |lan v| = 1)) \\<and>\n                          True)) \\<and>\n                  True)))) \\<longrightarrow>\n  (\\<forall>ts'.\n      ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n      False)\n  (\\<forall>v'.\n      move ts ts' v = e > v' \\<longrightarrow>\n      e \\<noteq> c \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True))) \\<or>\n  (\\<forall>v'.\n      move ts ts' v = c > v' \\<longrightarrow>\n      e \\<noteq> c \\<and>\n      (\\<exists>v u.\n          v'=v\\<parallel>u \\<and>\n          True \\<and>\n          (\\<exists>v ua.\n              u=v\\<parallel>ua \\<and>\n              (\\<exists>va u.\n                  v=va--u \\<and>\n                  True \\<and>\n                  (\\<exists>v ua.\n                      u=v--ua \\<and>\n                      ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' c = ext v \\<and>\n                        restrict v (clm ts') c = lan v \\<and>\n                        |lan v| = 1) \\<and>\n                       (0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (res ts') e = lan v \\<and>\n                        |lan v| = 1 \\<or>\n                        0 < \\<parallel>ext v\\<parallel> \\<and>\n                        len v ts' e = ext v \\<and>\n                        restrict v (clm ts') e = lan v \\<and>\n                        |lan v| = 1)) \\<and>\n                      True)) \\<and>\n              True)))\n\ngoal (1 subgoal):\n 1. \\<forall>ts'.\n       ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n       False", "by blast"], ["proof (state)\nthis:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n\ngoal (1 subgoal):\n 1. \\<exists>v u.\n       ve=v\\<parallel>u \\<and>\n       True \\<and>\n       (\\<exists>v ua.\n           u=v\\<parallel>ua \\<and>\n           (\\<exists>va u.\n               v=va--u \\<and>\n               True \\<and>\n               (\\<exists>v ua.\n                   u=v--ua \\<and>\n                   ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (clm ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    0 < \\<parallel>ext v\\<parallel> \\<and>\n                    len v ts' e = ext v \\<and>\n                    restrict v (res ts') e = lan v \\<and>\n                    |lan v| = 1) \\<and>\n                   True)) \\<and>\n           True) \\<Longrightarrow>\n    False", "thus \"ts'',move ts ts'' v \\<Turnstile> \\<^bold>\\<bottom>\""], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n\ngoal (1 subgoal):\n 1. False", "using e_trans"], ["proof (prove)\nusing this:\n  \\<forall>ts'.\n     ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n     False\n  ts' \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts''\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts'' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts'' x = ext v \\<and>\n                           restrict v (res ts'') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts'' e = ext v \\<and>\n                          restrict v (res ts'') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v'.\n     move ts ts' v = e > v' \\<longrightarrow>\n     (\\<forall>x.\n         x \\<noteq> e \\<longrightarrow>\n         (\\<nexists>v u.\n             v'=v\\<parallel>u \\<and>\n             True \\<and>\n             (\\<exists>v ua.\n                 u=v\\<parallel>ua \\<and>\n                 (\\<exists>va u.\n                     v=va--u \\<and>\n                     True \\<and>\n                     (\\<exists>v ua.\n                         u=v--ua \\<and>\n                         ((0 < \\<parallel>ext v\\<parallel> \\<and>\n                           len v ts' x = ext v \\<and>\n                           restrict v (res ts') x = lan v \\<and>\n                           |lan v| = 1) \\<and>\n                          0 < \\<parallel>ext v\\<parallel> \\<and>\n                          len v ts' e = ext v \\<and>\n                          restrict v (res ts') e = lan v \\<and>\n                          |lan v| = 1) \\<and>\n                         True)) \\<and>\n                 True)))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}