{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic/regular/HMLSL_Regular.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic", "problem_names": ["lemma backwards_res_act:\n  \"(ts \\<^bold>\\<midarrow>r(c) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c) \\<^bold>\\<or> cl(c))\"", "lemma backwards_res_act_somewhere:\n  \"(ts \\<^bold>\\<midarrow>r(c)\\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle>) \\<longrightarrow> (ts,v \\<Turnstile>\\<^bold>\\<langle> re(c) \\<^bold>\\<or> cl(c)\\<^bold>\\<rangle> )\"", "lemma backwards_res_stab:\n  \"(ts \\<^bold>\\<midarrow>r(d) \\<^bold>\\<rightarrow> ts') \\<and>  (d \\<noteq>c) \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\"", "lemma backwards_c_res_stab:\n  \"(ts \\<^bold>\\<midarrow>c(d,n) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\"", "lemma backwards_wdc_res_stab:\n  \"(ts \\<^bold>\\<midarrow>wdc(d) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\"", "lemma backwards_wdr_res_stab:\n  \"(ts \\<^bold>\\<midarrow>wdr(d,n) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\"", "lemma reservation1: \"\\<Turnstile>(re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(c) re(c)\"", "lemma reservation2: \"\\<Turnstile>(\\<^bold>\\<box>r(c) re(c)) \\<^bold>\\<rightarrow> (re(c) \\<^bold>\\<or> cl(c))\"", "lemma reservation:\"\\<Turnstile>(\\<^bold>\\<box>r(c) re(c)) \\<^bold>\\<leftrightarrow> (re(c) \\<^bold>\\<or> cl(c))\""], "translations": [["", "lemma backwards_res_act:\n  \"(ts \\<^bold>\\<midarrow>r(c) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c) \\<^bold>\\<or> cl(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "assume assm:\"(ts \\<^bold>\\<midarrow>r(c) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c))\""], ["proof (state)\nthis:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "from assm"], ["proof (chain)\npicking this:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1", "have len_eq:\"len v ts c = len v ts' c\""], ["proof (prove)\nusing this:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. len v ts c = len v ts' c", "using create_reservation_length_stable"], ["proof (prove)\nusing this:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  ?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  len ?v ?ts ?c = len ?v ?ts' ?c\n\ngoal (1 subgoal):\n 1. len v ts c = len v ts' c", "by blast"], ["proof (state)\nthis:\n  len v ts c = len v ts' c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "have \"res ts c \\<sqsubseteq> res ts' c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. res ts c \\<le> res ts' c", "using assm traffic.create_res_subseteq1"], ["proof (prove)\nusing this:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  ?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  res ?ts ?c \\<le> res ?ts' ?c\n\ngoal (1 subgoal):\n 1. res ts c \\<le> res ts' c", "by auto"], ["proof (state)\nthis:\n  res ts c \\<le> res ts' c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "hence restr_subs_res:\"restrict v (res ts) c \\<sqsubseteq> restrict v (res ts') c\""], ["proof (prove)\nusing this:\n  res ts c \\<le> res ts' c\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<le> restrict v (res ts') c", "using assm restriction.restrict_view"], ["proof (prove)\nusing this:\n  res ts c \\<le> res ts' c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  restrict ?v ?f ?c \\<le> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<le> restrict v (res ts') c", "by auto"], ["proof (state)\nthis:\n  restrict v (res ts) c \\<le> restrict v (res ts') c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "have \"clm ts c \\<sqsubseteq> res ts' c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. clm ts c \\<le> res ts' c", "using assm traffic.create_res_subseteq2"], ["proof (prove)\nusing this:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  ?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  clm ?ts ?c \\<le> res ?ts' ?c\n\ngoal (1 subgoal):\n 1. clm ts c \\<le> res ts' c", "using assm restriction.restrict_view"], ["proof (prove)\nusing this:\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  ?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  clm ?ts ?c \\<le> res ?ts' ?c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  restrict ?v ?f ?c \\<le> lan ?v\n\ngoal (1 subgoal):\n 1. clm ts c \\<le> res ts' c", "by auto"], ["proof (state)\nthis:\n  clm ts c \\<le> res ts' c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "hence restr_subs_clm:\"restrict v (clm ts) c \\<sqsubseteq> restrict v (res ts') c\""], ["proof (prove)\nusing this:\n  clm ts c \\<le> res ts' c\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<le> restrict v (res ts') c", "using assm restriction.restrict_view"], ["proof (prove)\nusing this:\n  clm ts c \\<le> res ts' c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  restrict ?v ?f ?c \\<le> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<le> restrict v (res ts') c", "by auto"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<le> restrict v (res ts') c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "have \"restrict v (res ts) c = \\<emptyset> \\<or> restrict v (res ts) c \\<noteq> \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<or> restrict v (res ts) c \\<noteq> bot", "by simp"], ["proof (state)\nthis:\n  restrict v (res ts) c = bot \\<or> restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  restrict v (res ts) c = bot \\<or> restrict v (res ts) c \\<noteq> bot", "show \" ts,v \\<Turnstile> (re(c) \\<^bold>\\<or> cl(c))\""], ["proof (prove)\nusing this:\n  restrict v (res ts) c = bot \\<or> restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "assume restr_res_nonempty:\"restrict v (res ts) c \\<noteq> \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (2 subgoals):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "hence restrict_one:\"|restrict v (res ts) c | = 1\""], ["proof (prove)\nusing this:\n  restrict v (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| = 1", "using nat_int.card_non_empty_geq_one nat_int.card_subset_le dual_order.antisym\n        restr_subs_res assm"], ["proof (prove)\nusing this:\n  restrict v (res ts) c \\<noteq> bot\n  (?i \\<noteq> bot) = (1 \\<le> |?i|)\n  ?i \\<le> ?i' \\<longrightarrow> |?i| \\<le> |?i'|\n  \\<lbrakk>?b \\<le> ?a; ?a \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  restrict v (res ts) c \\<le> restrict v (res ts') c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| = 1", "by fastforce"], ["proof (state)\nthis:\n  |restrict v (res ts) c| = 1\n\ngoal (2 subgoals):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "have \"restrict v (res ts ) c \\<sqsubseteq> lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<le> lan v", "using restr_subs_res assm"], ["proof (prove)\nusing this:\n  restrict v (res ts) c \\<le> restrict v (res ts') c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<le> lan v", "by auto"], ["proof (state)\nthis:\n  restrict v (res ts) c \\<le> lan v\n\ngoal (2 subgoals):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "hence \"restrict v (res ts)c = lan v\""], ["proof (prove)\nusing this:\n  restrict v (res ts) c \\<le> lan v\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = lan v", "using restriction.restrict_eq_lan_subs\n        restrict_one assm"], ["proof (prove)\nusing this:\n  restrict v (res ts) c \\<le> lan v\n  |restrict ?v ?f ?c| = |lan ?v| \\<and>\n  restrict ?v ?f ?c \\<le> lan ?v \\<longrightarrow>\n  restrict ?v ?f ?c = lan ?v\n  |restrict v (res ts) c| = 1\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = lan v", "by auto"], ["proof (state)\nthis:\n  restrict v (res ts) c = lan v\n\ngoal (2 subgoals):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n 2. restrict v (res ts) c \\<noteq> bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  restrict v (res ts) c = lan v", "show ?thesis"], ["proof (prove)\nusing this:\n  restrict v (res ts) c = lan v\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "using assm len_eq"], ["proof (prove)\nusing this:\n  restrict v (res ts) c = lan v\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  len v ts c = len v ts' c\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and>\n  restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "assume restr_res_empty:\"restrict v (res ts) c = \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v (res ts) c = bot\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  restrict v (res ts) c = bot", "have  clm_non_empty: \"restrict v (clm ts) c \\<noteq> \\<emptyset>\""], ["proof (prove)\nusing this:\n  restrict v (res ts) c = bot\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<noteq> bot", "by (metis assm bot.extremum inf.absorb1 inf_commute local.hmlsl.free_no_clm\n          restriction.create_reservation_restrict_union restriction.restrict_def\n          un_empty_absorb1)"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  restrict v (clm ts) c \\<noteq> bot", "have restrict_one:\"|restrict v (clm ts) c | = 1\""], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| = 1", "using nat_int.card_non_empty_geq_one nat_int.card_subset_le dual_order.antisym\n        restr_subs_clm assm"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<noteq> bot\n  (?i \\<noteq> bot) = (1 \\<le> |?i|)\n  ?i \\<le> ?i' \\<longrightarrow> |?i| \\<le> |?i'|\n  \\<lbrakk>?b \\<le> ?a; ?a \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  restrict v (clm ts) c \\<le> restrict v (res ts') c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| = 1", "by fastforce"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| = 1\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "have \"restrict v (clm ts ) c \\<sqsubseteq> lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<le> lan v", "using restr_subs_clm assm"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<le> restrict v (res ts') c\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<le> lan v", "by auto"], ["proof (state)\nthis:\n  restrict v (clm ts) c \\<le> lan v\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "hence \"restrict v (clm ts)c = lan v\""], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<le> lan v\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = lan v", "using restriction.restrict_eq_lan_subs\n        restrict_one assm"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c \\<le> lan v\n  |restrict ?v ?f ?c| = |lan ?v| \\<and>\n  restrict ?v ?f ?c \\<le> lan ?v \\<longrightarrow>\n  restrict ?v ?f ?c = lan ?v\n  |restrict v (clm ts) c| = 1\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = lan v", "by auto"], ["proof (state)\nthis:\n  restrict v (clm ts) c = lan v\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c = bot \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  restrict v (clm ts) c = lan v", "show ?thesis"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c = lan v\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "using assm len_eq"], ["proof (prove)\nusing this:\n  restrict v (clm ts) c = lan v\n  (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n  len v ts c = len v ts' c\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "by auto"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and>\n  restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and>\n  restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma backwards_res_act_somewhere:\n  \"(ts \\<^bold>\\<midarrow>r(c)\\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> \\<^bold>\\<langle>re(c)\\<^bold>\\<rangle>) \\<longrightarrow> (ts,v \\<Turnstile>\\<^bold>\\<langle> re(c) \\<^bold>\\<or> cl(c)\\<^bold>\\<rangle> )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    (\\<exists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<longrightarrow>\n    (\\<exists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (clm ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "using backwards_res_act"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts') \\<and>\n    (\\<exists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts' c = ext v \\<and>\n                     restrict v (res ts') c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True)) \\<longrightarrow>\n    (\\<exists>va u.\n        v=va\\<parallel>u \\<and>\n        True \\<and>\n        (\\<exists>v ua.\n            u=v\\<parallel>ua \\<and>\n            (\\<exists>va u.\n                v=va--u \\<and>\n                True \\<and>\n                (\\<exists>v ua.\n                    u=v--ua \\<and>\n                    (0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n                     0 < \\<parallel>ext v\\<parallel> \\<and>\n                     len v ts c = ext v \\<and>\n                     restrict v (clm ts) c = lan v \\<and>\n                     |lan v| = 1) \\<and>\n                    True)) \\<and>\n            True))", "by blast"], ["", "lemma backwards_res_stab:\n  \"(ts \\<^bold>\\<midarrow>r(d) \\<^bold>\\<rightarrow> ts') \\<and>  (d \\<noteq>c) \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts') \\<and>\n    d \\<noteq> c \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "using regular_sensors.create_reservation_length_stable restrict_def'\n    traffic.create_res_subseteq1_neq"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  len ?v ?ts ?c = len ?v ?ts' ?c\n  restrict ?v ?f ?c = lan ?v \\<sqinter> ?f ?c\n  (?ts \\<^bold>\\<midarrow>r( ?d ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  ?d \\<noteq> ?c \\<longrightarrow>\n  res ?ts ?c = res ?ts' ?c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>r( d ) \\<^bold>\\<rightarrow> ts') \\<and>\n    d \\<noteq> c \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "by auto"], ["", "lemma backwards_c_res_stab:\n  \"(ts \\<^bold>\\<midarrow>c(d,n) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "using create_claim_length_stable traffic.create_clm_eq_res"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>c( ?d, ?n ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  len ?v ?ts ?c = len ?v ?ts' ?c\n  ?ts \\<^bold>\\<midarrow>c( ?d, ?n ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  res ?ts ?c = res ?ts' ?c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>c( d, n ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "by (metis (mono_tags, lifting) traffic.create_claim_def)"], ["", "lemma backwards_wdc_res_stab:\n  \"(ts \\<^bold>\\<midarrow>wdc(d) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "using withdraw_claim_length_stable traffic.withdraw_clm_eq_res"], ["proof (prove)\nusing this:\n  ?ts \\<^bold>\\<midarrow>wdc( ?d ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  len ?v ?ts ?c = len ?v ?ts' ?c\n  ?ts \\<^bold>\\<midarrow>wdc( ?d ) \\<^bold>\\<rightarrow> ?ts' \\<longrightarrow>\n  res ?ts ?c = res ?ts' ?c\n\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>wdc( d ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "by (metis (mono_tags, lifting) traffic.withdraw_claim_def)"], ["", "lemma backwards_wdr_res_stab:\n  \"(ts \\<^bold>\\<midarrow>wdr(d,n) \\<^bold>\\<rightarrow> ts') \\<and> (ts',v \\<Turnstile> re(c)) \\<longrightarrow> (ts,v \\<Turnstile> re(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ts \\<^bold>\\<midarrow>wdr( d, n ) \\<^bold>\\<rightarrow> ts') \\<and>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1", "by (metis inf.absorb1 order_trans regular_sensors.withdraw_reservation_length_stable\n      restrict_def' restriction.restrict_res traffic.withdraw_res_subseteq)"], ["", "text\\<open>\nWe now proceed to prove the \\emph{reservation lemma}, which was \ncrucial in the manual safety proof \\cite {Hilscher2011}. \n\\<close>"], ["", "lemma reservation1: \"\\<Turnstile>(re(c) \\<^bold>\\<or> cl(c)) \\<^bold>\\<rightarrow> \\<^bold>\\<box>r(c) re(c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n       (\\<forall>ts'.\n           ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' c = ext v \\<and>\n           restrict v (res ts') c = lan v \\<and> |lan v| = 1)", "proof (rule allI| rule impI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts'.\n       \\<lbrakk>0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n                0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (clm ts) c = lan v \\<and> |lan v| = 1;\n        ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> 0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and> |lan v| = 1", "fix ts v ts'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ts v ts'.\n       \\<lbrakk>0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n                0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (clm ts) c = lan v \\<and> |lan v| = 1;\n        ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> 0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and> |lan v| = 1", "assume assm:\"ts,v \\<Turnstile>re(c) \\<^bold>\\<or> cl(c)\" and ts'_def:\"ts \\<^bold>\\<midarrow>r(c)\\<^bold>\\<rightarrow>ts'\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and>\n  restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n  ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<And>ts v ts'.\n       \\<lbrakk>0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n                0 < \\<parallel>ext v\\<parallel> \\<and>\n                len v ts c = ext v \\<and>\n                restrict v (clm ts) c = lan v \\<and> |lan v| = 1;\n        ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts'\\<rbrakk>\n       \\<Longrightarrow> 0 < \\<parallel>ext v\\<parallel> \\<and>\n                         len v ts' c = ext v \\<and>\n                         restrict v (res ts') c = lan v \\<and> |lan v| = 1", "from assm"], ["proof (chain)\npicking this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and>\n  restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "show \"ts',v \\<Turnstile>  re(c)\""], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and>\n  restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1\n 2. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "assume re:\"ts,v \\<Turnstile>re(c)\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1\n\ngoal (2 subgoals):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1\n 2. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (res ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "by (metis inf.absorb1 order_trans regular_sensors.create_reservation_length_stable\n          restrict_def' restriction.restrict_subseteq traffic.create_res_subseteq1 ts'_def)"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "assume cl:\"ts,v \\<Turnstile>cl(c)\""], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts c = ext v \\<and>\n    restrict v (clm ts) c = lan v \\<and> |lan v| = 1 \\<Longrightarrow>\n    0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "then"], ["proof (chain)\npicking this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts c = ext v \\<and> restrict v (clm ts) c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. 0 < \\<parallel>ext v\\<parallel> \\<and>\n    len v ts' c = ext v \\<and>\n    restrict v (res ts') c = lan v \\<and> |lan v| = 1", "by (metis inf.absorb1 order_trans regular_sensors.create_reservation_length_stable\n          restrict_def' restriction.restrict_subseteq traffic.create_res_subseteq2 ts'_def)"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < \\<parallel>ext v\\<parallel> \\<and>\n  len v ts' c = ext v \\<and>\n  restrict v (res ts') c = lan v \\<and> |lan v| = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reservation2: \"\\<Turnstile>(\\<^bold>\\<box>r(c) re(c)) \\<^bold>\\<rightarrow> (re(c) \\<^bold>\\<or> cl(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' c = ext v \\<and>\n           restrict v (res ts') c = lan v \\<and>\n           |lan v| = 1) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "using backwards_res_act traffic.always_create_res"], ["proof (prove)\nusing this:\n  (?ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ?ts') \\<and>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts' ?c = ext ?v \\<and>\n  restrict ?v (res ?ts') ?c = lan ?v \\<and> |lan ?v| = 1 \\<longrightarrow>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (res ?ts) ?c = lan ?v \\<and> |lan ?v| = 1 \\<or>\n  0 < \\<parallel>ext ?v\\<parallel> \\<and>\n  len ?v ?ts ?c = ext ?v \\<and>\n  restrict ?v (clm ?ts) ?c = lan ?v \\<and> |lan ?v| = 1\n  \\<forall>ts.\n     \\<exists>ts'. ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ts'\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' c = ext v \\<and>\n           restrict v (res ts') c = lan v \\<and>\n           |lan v| = 1) \\<longrightarrow>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n       0 < \\<parallel>ext v\\<parallel> \\<and>\n       len v ts c = ext v \\<and>\n       restrict v (clm ts) c = lan v \\<and> |lan v| = 1", "by metis"], ["", "lemma reservation:\"\\<Turnstile>(\\<^bold>\\<box>r(c) re(c)) \\<^bold>\\<leftrightarrow> (re(c) \\<^bold>\\<or> cl(c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' c = ext v \\<and>\n           restrict v (res ts') c = lan v \\<and> |lan v| = 1) =\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (clm ts) c = lan v \\<and> |lan v| = 1)", "using reservation1 reservation2"], ["proof (prove)\nusing this:\n  \\<forall>ts v.\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (res ts) ?c = lan v \\<and> |lan v| = 1 \\<or>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (clm ts) ?c = lan v \\<and> |lan v| = 1 \\<longrightarrow>\n     (\\<forall>ts'.\n         ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         0 < \\<parallel>ext v\\<parallel> \\<and>\n         len v ts' ?c = ext v \\<and>\n         restrict v (res ts') ?c = lan v \\<and> |lan v| = 1)\n  \\<forall>ts v.\n     (\\<forall>ts'.\n         ts \\<^bold>\\<midarrow>r( ?c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n         0 < \\<parallel>ext v\\<parallel> \\<and>\n         len v ts' ?c = ext v \\<and>\n         restrict v (res ts') ?c = lan v \\<and>\n         |lan v| = 1) \\<longrightarrow>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (res ts) ?c = lan v \\<and> |lan v| = 1 \\<or>\n     0 < \\<parallel>ext v\\<parallel> \\<and>\n     len v ts ?c = ext v \\<and>\n     restrict v (clm ts) ?c = lan v \\<and> |lan v| = 1\n\ngoal (1 subgoal):\n 1. \\<forall>ts v.\n       (\\<forall>ts'.\n           ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n           0 < \\<parallel>ext v\\<parallel> \\<and>\n           len v ts' c = ext v \\<and>\n           restrict v (res ts') c = lan v \\<and> |lan v| = 1) =\n       (0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (res ts) c = lan v \\<and> |lan v| = 1 \\<or>\n        0 < \\<parallel>ext v\\<parallel> \\<and>\n        len v ts c = ext v \\<and>\n        restrict v (clm ts) c = lan v \\<and> |lan v| = 1)", "by blast"], ["", "end"], ["", "end"]]}