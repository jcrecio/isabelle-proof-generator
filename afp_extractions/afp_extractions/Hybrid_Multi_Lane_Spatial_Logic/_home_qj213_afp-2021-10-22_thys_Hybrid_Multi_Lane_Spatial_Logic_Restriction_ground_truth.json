{"file_name": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic/Restriction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Hybrid_Multi_Lane_Spatial_Logic", "problem_names": ["lemma restrict_def':\" restrict v f c = lan v \\<sqinter> f c\"", "lemma restrict_subseteq:\"restrict v f c \\<sqsubseteq> f c\"", "lemma restrict_clm : \"restrict v (clm ts) c \\<sqsubseteq> clm ts c\"", "lemma restrict_res: \"restrict v (res ts) c \\<sqsubseteq> res ts c\"", "lemma restrict_view:\"restrict v f c \\<sqsubseteq> lan v\"", "lemma restriction_stable:\"(v=u\\<parallel>w) \\<longrightarrow> restrict u f  c = restrict w f  c\"", "lemma restriction_stable1:\"(v=u\\<parallel>w) \\<longrightarrow> restrict v f  c = restrict u f  c\"", "lemma restriction_stable2:\"(v=u\\<parallel>w) \\<longrightarrow> restrict v f  c = restrict w f  c\"", "lemma restriction_un:\n  \"(v=u--w) \\<longrightarrow> restrict v f c = (restrict u f c \\<squnion> restrict w f c)\"", "lemma restriction_mon1:\"(v=u--w) \\<longrightarrow> restrict u f c \\<sqsubseteq> restrict v f c\"", "lemma restriction_mon2:\"(v=u--w) \\<longrightarrow> restrict w f c \\<sqsubseteq> restrict v f c\"", "lemma restriction_disj:\"(v=u--w) \\<longrightarrow> (restrict u f c) \\<sqinter> (restrict w f c) = \\<emptyset>\"", "lemma vertical_chop_restriction_res_consec_or_empty:\n  \"(v=v1--v2) \\<and> restrict v1 (res ts) c \\<noteq> \\<emptyset> \\<and> consec ((lan v1)) ((lan v2)) \\<and>  \n    \\<not>consec (restrict v1 (res ts) c) (restrict v2 (res ts) c) \n      \\<longrightarrow> restrict v2 (res ts) c = \\<emptyset>\"", "lemma restriction_consec_res:\"(v=u--w) \n  \\<longrightarrow> restrict u (res ts) c = \\<emptyset> \\<or> restrict w (res ts) c = \\<emptyset> \n  \\<or>  consec (restrict u (res ts) c) ( restrict w (res ts) c)\"", "lemma restriction_clm_res_disjoint:\n  \"(restrict v (res ts) c) \\<sqinter> (restrict v (clm ts) c) = \\<emptyset>\"", "lemma el_in_restriction_clm_singleton:\n  \"n \\<^bold>\\<in> restrict v (clm ts) c \\<longrightarrow> (clm ts) c = Abs_nat_int({n})\"", "lemma restriction_clm_v2_non_empty_v1_empty:\n  \"(v=u--w) \\<and> restrict w (clm ts) c \\<noteq> \\<emptyset> \\<and>  \n    consec ((lan u)) ((lan w)) \\<longrightarrow> restrict u (clm ts) c = \\<emptyset>\"", "lemma restriction_consec_clm:\n  \"(v=u--w) \\<and> consec (lan u) (lan w) \n    \\<longrightarrow> restrict u (clm ts) c = \\<emptyset> \\<or> restrict w (clm ts) c = \\<emptyset>\"", "lemma restriction_add_res:\n  \"(v=u--w) \n    \\<longrightarrow> |restrict v (res ts) c|=|restrict u (res ts) c|+|restrict w (res ts) c|\"", "lemma restriction_eq_view_card:\"restrict v f c = lan v \\<longrightarrow> |restrict v f c| =|lan v|\"", "lemma restriction_card_mon1:\"(v=u--w) \\<longrightarrow> |restrict u f c| \\<le> |restrict v f c|\"", "lemma restriction_card_mon2:\"(v=u--w) \\<longrightarrow> |restrict w f c| \\<le> |restrict v f c|\"", "lemma restriction_res_leq_two:\"|restrict v (res ts) c| \\<le> 2\"", "lemma restriction_clm_leq_one:\"|restrict v (clm ts) c| \\<le> 1\"", "lemma restriction_add_clm:\n  \"(v=u--w) \n    \\<longrightarrow> |restrict v (clm ts) c|=|restrict u (clm ts) c|+|restrict w (clm ts) c|\"", "lemma restriction_card_mon_trans:\n  \"(v=v1--v2) \\<and> (v2=v3--v4) \\<and> |restrict v3 f c| = 1 \\<longrightarrow> |restrict v f c|\\<ge>1\"", "lemma restriction_card_somewhere_mon:\n  \"(v=vl\\<parallel>v1)\\<and>(v1=v2\\<parallel>vr)\\<and>(v2=vu--v3)\\<and>(v3=v'--vd)\\<and>|restrict v' f c|=1\n      \\<longrightarrow> |restrict v f c| \\<ge> 1\"", "lemma restrict_eq_lan_subs:\n  \"|restrict v f c| = |lan v| \\<and> (restrict v f c \\<sqsubseteq> lan v) \\<longrightarrow> restrict v f c = lan v\"", "lemma create_reservation_restrict_union:\n  \"(ts\\<^bold>\\<midarrow>r(c)\\<^bold>\\<rightarrow>ts') \n    \\<longrightarrow> restrict v (res ts') c = restrict v (res ts) c \\<squnion> restrict v (clm ts) c\"", "lemma switch_restrict_stable:\"(v=c>u) \\<longrightarrow> restrict v f d = restrict u f d\""], "translations": [["", "lemma restrict_def':\" restrict v f c = lan v \\<sqinter> f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v f c = lan v \\<sqinter> f c", "using inf_commute restriction.restrict_def"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v f c = lan v \\<sqinter> f c", "by auto"], ["", "lemma restrict_subseteq:\"restrict v f c \\<sqsubseteq> f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v f c \\<le> f c", "using inf_le1 restrict_def"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v f c \\<le> f c", "by auto"], ["", "lemma restrict_clm : \"restrict v (clm ts) c \\<sqsubseteq> clm ts c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<le> clm ts c", "using inf_le1 restrict_def"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c \\<le> clm ts c", "by auto"], ["", "lemma restrict_res: \"restrict v (res ts) c \\<sqsubseteq> res ts c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<le> res ts c", "using inf_le1 restrict_def"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<le> res ts c", "by auto"], ["", "lemma restrict_view:\"restrict v f c \\<sqsubseteq> lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v f c \\<le> lan v", "using inf_le1 restrict_def"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?x\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v f c \\<le> lan v", "by auto"], ["", "lemma restriction_stable:\"(v=u\\<parallel>w) \\<longrightarrow> restrict u f  c = restrict w f  c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u\\<parallel>w \\<longrightarrow> restrict u f c = restrict w f c", "using hchop_def restrict_def"], ["proof (prove)\nusing this:\n  ?v=?u\\<parallel>?w \\<equiv>\n  R_Chop(ext ?v,ext ?u,ext ?w) \\<and>\n  lan ?v = lan ?u \\<and>\n  lan ?v = lan ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. v=u\\<parallel>w \\<longrightarrow> restrict u f c = restrict w f c", "by auto"], ["", "lemma restriction_stable1:\"(v=u\\<parallel>w) \\<longrightarrow> restrict v f  c = restrict u f  c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u\\<parallel>w \\<longrightarrow> restrict v f c = restrict u f c", "by (simp add: hchop_def restrict_def)"], ["", "lemma restriction_stable2:\"(v=u\\<parallel>w) \\<longrightarrow> restrict v f  c = restrict w f  c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u\\<parallel>w \\<longrightarrow> restrict v f c = restrict w f c", "by (simp add: restriction_stable restriction_stable1)"], ["", "lemma restriction_un:\n  \"(v=u--w) \\<longrightarrow> restrict v f c = (restrict u f c \\<squnion> restrict w f c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow>\n    restrict v f c = restrict u f c \\<squnion> restrict w f c", "using nat_int.inter_distr1 nat_int.inter_empty1 nat_int.un_empty_absorb1\n    nat_int.un_empty_absorb2 nat_int.nchop_def restrict_def vchop_def"], ["proof (prove)\nusing this:\n  consec ?j ?k \\<longrightarrow>\n  ?i \\<sqinter> (?j \\<squnion> ?k) =\n  ?i \\<sqinter> ?j \\<squnion> ?i \\<sqinter> ?k\n  ?i \\<sqinter> bot = bot\n  ?i \\<squnion> bot = ?i\n  bot \\<squnion> ?i = ?i\n  N_Chop(?i,?j,?k) \\<equiv>\n  ?i = ?j \\<squnion> ?k \\<and> (?j = bot \\<or> ?k = bot \\<or> consec ?j ?k)\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow>\n    restrict v f c = restrict u f c \\<squnion> restrict w f c", "by auto"], ["", "lemma restriction_mon1:\"(v=u--w) \\<longrightarrow> restrict u f c \\<sqsubseteq> restrict v f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> restrict u f c \\<le> restrict v f c", "using inf_mono nat_int.chop_subset1 restrict_def vchop_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c \\<sqinter> ?d\n  N_Chop(?i,?j,?k) \\<longrightarrow> ?j \\<le> ?i\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> restrict u f c \\<le> restrict v f c", "by (metis (no_types, hide_lams) order_refl)"], ["", "lemma restriction_mon2:\"(v=u--w) \\<longrightarrow> restrict w f c \\<sqsubseteq> restrict v f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> restrict w f c \\<le> restrict v f c", "using inf_mono nat_int.chop_subset2 restrict_def vchop_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c \\<sqinter> ?d\n  N_Chop(?i,?j,?k) \\<longrightarrow> ?k \\<le> ?i\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> restrict w f c \\<le> restrict v f c", "by (metis (no_types, hide_lams) order_refl)"], ["", "lemma restriction_disj:\"(v=u--w) \\<longrightarrow> (restrict u f c) \\<sqinter> (restrict w f c) = \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> restrict u f c \\<sqinter> restrict w f c = bot", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow> restrict u f c \\<sqinter> restrict w f c = bot", "assume assm: \"v=u--w\""], ["proof (state)\nthis:\n  v=u--w\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow> restrict u f c \\<sqinter> restrict w f c = bot", "then"], ["proof (chain)\npicking this:\n  v=u--w", "have 1:\"lan u \\<sqinter> lan w = \\<emptyset>\""], ["proof (prove)\nusing this:\n  v=u--w\n\ngoal (1 subgoal):\n 1. lan u \\<sqinter> lan w = bot", "using vchop_def"], ["proof (prove)\nusing this:\n  v=u--w\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n\ngoal (1 subgoal):\n 1. lan u \\<sqinter> lan w = bot", "by (metis inf_commute inter_empty1 nat_int.consec_inter_empty nat_int.nchop_def)"], ["proof (state)\nthis:\n  lan u \\<sqinter> lan w = bot\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow> restrict u f c \\<sqinter> restrict w f c = bot", "from assm"], ["proof (chain)\npicking this:\n  v=u--w", "have \"(restrict u f c) \\<sqinter> (restrict w f c) \\<sqsubseteq> lan u \\<sqinter> lan w \""], ["proof (prove)\nusing this:\n  v=u--w\n\ngoal (1 subgoal):\n 1. restrict u f c \\<sqinter> restrict w f c \\<le> lan u \\<sqinter> lan w", "by (meson inf_mono restriction.restrict_view)"], ["proof (state)\nthis:\n  restrict u f c \\<sqinter> restrict w f c \\<le> lan u \\<sqinter> lan w\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow> restrict u f c \\<sqinter> restrict w f c = bot", "with 1"], ["proof (chain)\npicking this:\n  lan u \\<sqinter> lan w = bot\n  restrict u f c \\<sqinter> restrict w f c \\<le> lan u \\<sqinter> lan w", "show  \"(restrict u f c) \\<sqinter> (restrict w f c) = \\<emptyset>\""], ["proof (prove)\nusing this:\n  lan u \\<sqinter> lan w = bot\n  restrict u f c \\<sqinter> restrict w f c \\<le> lan u \\<sqinter> lan w\n\ngoal (1 subgoal):\n 1. restrict u f c \\<sqinter> restrict w f c = bot", "by (simp add: bot.extremum_uniqueI)"], ["proof (state)\nthis:\n  restrict u f c \\<sqinter> restrict w f c = bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vertical_chop_restriction_res_consec_or_empty:\n  \"(v=v1--v2) \\<and> restrict v1 (res ts) c \\<noteq> \\<emptyset> \\<and> consec ((lan v1)) ((lan v2)) \\<and>  \n    \\<not>consec (restrict v1 (res ts) c) (restrict v2 (res ts) c) \n      \\<longrightarrow> restrict v2 (res ts) c = \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<longrightarrow>\n    restrict v2 (res ts) c = bot", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<Longrightarrow>\n    restrict v2 (res ts) c = bot", "assume assm:\n    \"(v=v1--v2) \\<and> restrict v1 (res ts) c \\<noteq> \\<emptyset> \\<and>\n      consec ((lan v1)) ((lan v2)) \\<and> \n      \\<not>consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\""], ["proof (state)\nthis:\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<Longrightarrow>\n    restrict v2 (res ts) c = bot", "hence \"restrict v1 (res ts) c = \\<emptyset> \\<or> restrict v2 (res ts) c = \\<emptyset> \\<or>\n   (maximum (restrict v1 (res ts) c)+1 \\<noteq>minimum (restrict v2 (res ts) c))\""], ["proof (prove)\nusing this:\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. restrict v1 (res ts) c = bot \\<or>\n    restrict v2 (res ts) c = bot \\<or>\n    maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n    minimum (restrict v2 (res ts) c)", "using nat_int.consec_def"], ["proof (prove)\nusing this:\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n\ngoal (1 subgoal):\n 1. restrict v1 (res ts) c = bot \\<or>\n    restrict v2 (res ts) c = bot \\<or>\n    maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n    minimum (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  restrict v1 (res ts) c = bot \\<or>\n  restrict v2 (res ts) c = bot \\<or>\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<Longrightarrow>\n    restrict v2 (res ts) c = bot", "hence empty_or_non_consec:\"restrict v2 (res ts) c = \\<emptyset> \\<or> \n    (maximum (restrict v1 (res ts) c)+1 \\<noteq>minimum (restrict v2 (res ts) c))\""], ["proof (prove)\nusing this:\n  restrict v1 (res ts) c = bot \\<or>\n  restrict v2 (res ts) c = bot \\<or>\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c = bot \\<or>\n    maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n    minimum (restrict v2 (res ts) c)", "using assm"], ["proof (prove)\nusing this:\n  restrict v1 (res ts) c = bot \\<or>\n  restrict v2 (res ts) c = bot \\<or>\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c = bot \\<or>\n    maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n    minimum (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  restrict v2 (res ts) c = bot \\<or>\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<Longrightarrow>\n    restrict v2 (res ts) c = bot", "have consec_lanes:\"consec ((lan v1)) ((lan v2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consec (lan v1) (lan v2)", "by (simp add: assm)"], ["proof (state)\nthis:\n  consec (lan v1) (lan v2)\n\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<Longrightarrow>\n    restrict v2 (res ts) c = bot", "have subs:\"restrict v2 (res ts) c \\<sqsubseteq> ((lan v2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<le> lan v2", "using restrict_view"], ["proof (prove)\nusing this:\n  restrict ?v ?f ?c \\<le> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<le> lan v2", "by simp"], ["proof (state)\nthis:\n  restrict v2 (res ts) c \\<le> lan v2\n\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and>\n    restrict v1 (res ts) c \\<noteq> bot \\<and>\n    consec (lan v1) (lan v2) \\<and>\n    \\<not> consec (restrict v1 (res ts) c)\n            (restrict v2 (res ts) c) \\<Longrightarrow>\n    restrict v2 (res ts) c = bot", "show \"restrict v2 (res ts) c = \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c = bot", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<noteq> bot \\<Longrightarrow> False", "assume non_empty:\"restrict v2 (res ts) c \\<noteq> \\<emptyset>\""], ["proof (state)\nthis:\n  restrict v2 (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<noteq> bot \\<Longrightarrow> False", "hence max:\n      \"(maximum (restrict v1 (res ts) c)+1 \\<noteq>minimum (restrict v2 (res ts) c))\""], ["proof (prove)\nusing this:\n  restrict v2 (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n    minimum (restrict v2 (res ts) c)", "using empty_or_non_consec"], ["proof (prove)\nusing this:\n  restrict v2 (res ts) c \\<noteq> bot\n  restrict v2 (res ts) c = bot \\<or>\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n    minimum (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have ex_n:\" \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)", "using nat_int.el.rep_eq non_empty nat_int.non_empty_elem_in"], ["proof (prove)\nusing this:\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  restrict v2 (res ts) c \\<noteq> bot\n  (?i \\<noteq> bot) = (\\<exists>n. n \\<^bold>\\<in> ?i)\n\ngoal (1 subgoal):\n 1. \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<noteq> bot \\<Longrightarrow> False", "have res1_or2:\"|(res ts) c| = 1 \\<or> |(res ts) c| = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |res ts c| = 1 \\<or> |res ts c| = 2", "by (metis Suc_1 atLeastOneRes atMostTwoRes dual_order.antisym le_SucE)"], ["proof (state)\nthis:\n  |res ts c| = 1 \\<or> |res ts c| = 2\n\ngoal (1 subgoal):\n 1. restrict v2 (res ts) c \\<noteq> bot \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  |res ts c| = 1 \\<or> |res ts c| = 2", "show False"], ["proof (prove)\nusing this:\n  |res ts c| = 1 \\<or> |res ts c| = 2\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. |res ts c| = 1 \\<Longrightarrow> False\n 2. |res ts c| = 2 \\<Longrightarrow> False", "assume res_one:\"|(res ts) c|=1\""], ["proof (state)\nthis:\n  |res ts c| = 1\n\ngoal (2 subgoals):\n 1. |res ts c| = 1 \\<Longrightarrow> False\n 2. |res ts c| = 2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  |res ts c| = 1", "obtain n where one_lane:\"Rep_nat_int ((res ts) c) =  {n}\""], ["proof (prove)\nusing this:\n  |res ts c| = 1\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        Rep_nat_int (res ts c) = {n} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using singleton"], ["proof (prove)\nusing this:\n  |res ts c| = 1\n  |?i| = 1 \\<longrightarrow> (\\<exists>n. Rep_nat_int ?i = {n})\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        Rep_nat_int (res ts c) = {n} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Rep_nat_int (res ts c) = {n}\n\ngoal (2 subgoals):\n 1. |res ts c| = 1 \\<Longrightarrow> False\n 2. |res ts c| = 2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Rep_nat_int (res ts c) = {n}", "have \"n \\<in> Rep_nat_int (restrict v1 (res ts) c)\""], ["proof (prove)\nusing this:\n  Rep_nat_int (res ts c) = {n}\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c)", "by (metis assm equals0D nat_int.el.rep_eq less_eq_nat_int.rep_eq \n            nat_int.non_empty_elem_in restrict_res singletonI subset_singletonD)"], ["proof (state)\nthis:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (2 subgoals):\n 1. |res ts c| = 1 \\<Longrightarrow> False\n 2. |res ts c| = 2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)", "have \"Rep_nat_int (restrict v2 (res ts) c) = {}\""], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v2 (res ts) c) = {}", "by (metis one_lane assm inf.absorb1 less_eq_nat_int.rep_eq restriction.restrict_res\n            restriction_disj subset_singleton_iff)"], ["proof (state)\nthis:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n\ngoal (2 subgoals):\n 1. |res ts c| = 1 \\<Longrightarrow> False\n 2. |res ts c| = 2 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n\ngoal (1 subgoal):\n 1. False", "using ex_n"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n  \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "assume res_two:\"|(res ts) c| = 2\""], ["proof (state)\nthis:\n  |res ts c| = 2\n\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "hence ex_two_ln:\" (\\<exists>n . Rep_nat_int ((res ts) c) = {n,n+1})\""], ["proof (prove)\nusing this:\n  |res ts c| = 2\n\ngoal (1 subgoal):\n 1. \\<exists>n. Rep_nat_int (res ts c) = {n, n + 1}", "using consecutiveRes"], ["proof (prove)\nusing this:\n  |res ts c| = 2\n  |res ?ts ?c| = 2 \\<longrightarrow>\n  (\\<exists>n. Rep_nat_int (res ?ts ?c) = {n, n + 1})\n\ngoal (1 subgoal):\n 1. \\<exists>n. Rep_nat_int (res ts c) = {n, n + 1}", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. Rep_nat_int (res ts c) = {n, n + 1}\n\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. Rep_nat_int (res ts c) = {n, n + 1}", "obtain n where n_def:\"Rep_nat_int ((res ts) c) = {n,n+1}\""], ["proof (prove)\nusing this:\n  \\<exists>n. Rep_nat_int (res ts c) = {n, n + 1}\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        Rep_nat_int (res ts c) = {n, n + 1} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Rep_nat_int (res ts c) = {n, n + 1}\n\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "hence rep_restrict_v1:\"Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n,n+1}\""], ["proof (prove)\nusing this:\n  Rep_nat_int (res ts c) = {n, n + 1}\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}", "using less_eq_nat_int.rep_eq restrict_res"], ["proof (prove)\nusing this:\n  Rep_nat_int (res ts c) = {n, n + 1}\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict ?v (res ?ts) ?c \\<le> res ?ts ?c\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}", "by blast"], ["proof (state)\nthis:\n  Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}\n\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "hence \n        \"n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<or> \n         n+1 \\<in> Rep_nat_int(restrict v1 (res ts) c)\""], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<or>\n    n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)", "using assm bot.extremum_unique less_eq_nat_int.rep_eq"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  (?a \\<le> bot) = (?a = bot)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<or>\n    n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)", "by fastforce"], ["proof (state)\nthis:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<or>\n  n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. |res ts c| = 2 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<or>\n  n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "assume suc_n_in_res_v1:\"n+1 \\<in> Rep_nat_int (restrict v1 (res ts) c)\""], ["proof (state)\nthis:\n  n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence suc_n_in_v1:\"n+1 \\<in> Rep_nat_int ((lan v1))\""], ["proof (prove)\nusing this:\n  n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (lan v1)", "using less_eq_nat_int.rep_eq restrict_view"], ["proof (prove)\nusing this:\n  n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict ?v ?f ?c \\<le> lan ?v\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (lan v1)", "by blast"], ["proof (state)\nthis:\n  n + 1 \\<in> Rep_nat_int (lan v1)\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence  \"n+1 \\<notin> Rep_nat_int (lan v2)\""], ["proof (prove)\nusing this:\n  n + 1 \\<in> Rep_nat_int (lan v1)\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (lan v2)", "using assm vchop_def nat_int.nchop_def nat_int.consec_in_exclusive1 \n            nat_int.el.rep_eq nat_int.not_in.rep_eq"], ["proof (prove)\nusing this:\n  n + 1 \\<in> Rep_nat_int (lan v1)\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  N_Chop(?i,?j,?k) \\<equiv>\n  ?i = ?j \\<squnion> ?k \\<and> (?j = bot \\<or> ?k = bot \\<or> consec ?j ?k)\n  consec ?i ?j \\<and> ?n \\<^bold>\\<in> ?i \\<longrightarrow>\n  ?n \\<^bold>\\<notin> ?j\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  (?x \\<^bold>\\<notin> ?xa) = (?x \\<notin> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (lan v2)", "by blast"], ["proof (state)\nthis:\n  n + 1 \\<notin> Rep_nat_int (lan v2)\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence suc_n_not_in_res_v2:\"n+1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)\""], ["proof (prove)\nusing this:\n  n + 1 \\<notin> Rep_nat_int (lan v2)\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)", "using less_eq_nat_int.rep_eq subs"], ["proof (prove)\nusing this:\n  n + 1 \\<notin> Rep_nat_int (lan v2)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict v2 (res ts) c \\<le> lan v2\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "have \"\\<forall>m . m \\<^bold>\\<in> lan v2 \\<longrightarrow> m \\<ge> minimum (lan v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow> minimum (lan v2) \\<le> m", "by (metis consec_lanes nat_int.minimum_def nat_int.consec_def \n            nat_int.el.rep_eq atLeastAtMost_iff nat_int.leq_min_inf\n            nat_int.rep_non_empty_means_seq)"], ["proof (state)\nthis:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v2 \\<longrightarrow> minimum (lan v2) \\<le> m\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v2 \\<longrightarrow> minimum (lan v2) \\<le> m", "have \"\\<forall>m . m \\<^bold>\\<in> lan v2 \\<longrightarrow> m > maximum (lan v1)\""], ["proof (prove)\nusing this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v2 \\<longrightarrow> minimum (lan v2) \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow> maximum (lan v1) < m", "using assm nat_int.consec_def"], ["proof (prove)\nusing this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v2 \\<longrightarrow> minimum (lan v2) \\<le> m\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v2 \\<longrightarrow> maximum (lan v1) < m", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> maximum (lan v1) < m\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> maximum (lan v1) < m", "have \"\\<forall>m . m \\<^bold>\\<in> lan v2 \\<longrightarrow> m > n+1\""], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> maximum (lan v1) < m\n\ngoal (1 subgoal):\n 1. \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> n + 1 < m", "using consec_lanes nat_int.maximum_def nat_int.card_seq \n            nat_int.consec_def suc_n_in_v1"], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> maximum (lan v1) < m\n  consec (lan v1) (lan v2)\n  ?i \\<noteq> bot \\<Longrightarrow> maximum ?i = Max (Rep_nat_int ?i)\n  \\<forall>i.\n     |i| = ?x \\<longrightarrow>\n     Rep_nat_int i = {} \\<or>\n     (\\<exists>n. Rep_nat_int i = {n..n + (?x - 1)})\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n  n + 1 \\<in> Rep_nat_int (lan v1)\n\ngoal (1 subgoal):\n 1. \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> n + 1 < m", "by (simp add: nat_int.consec_lesser)"], ["proof (state)\nthis:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> n + 1 < m\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> n + 1 < m", "have \"n \\<notin> Rep_nat_int ((lan v2))\""], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> n + 1 < m\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (lan v2)", "using suc_n_in_v1 assm nat_int.consec_def nat_int.el.rep_eq"], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v2 \\<longrightarrow> n + 1 < m\n  n + 1 \\<in> Rep_nat_int (lan v1)\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (lan v2)", "by auto"], ["proof (state)\nthis:\n  n \\<notin> Rep_nat_int (lan v2)\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence \"n\\<notin> Rep_nat_int (restrict v2 (res ts) c)\""], ["proof (prove)\nusing this:\n  n \\<notin> Rep_nat_int (lan v2)\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (restrict v2 (res ts) c)", "using less_eq_nat_int.rep_eq rev_subsetD subs"], ["proof (prove)\nusing this:\n  n \\<notin> Rep_nat_int (lan v2)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  \\<lbrakk>?c \\<in> ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n  restrict v2 (res ts) c \\<le> lan v2\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  n \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence \"Rep_nat_int (restrict v2 (res ts) c) = {}\""], ["proof (prove)\nusing this:\n  n \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v2 (res ts) c) = {}", "using insert_absorb insert_ident insert_not_empty n_def less_eq_nat_int.rep_eq\n            restrict_res singleton_insert_inj_eq subset_insert suc_n_not_in_res_v2"], ["proof (prove)\nusing this:\n  n \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n  \\<lbrakk>?x \\<notin> ?A; ?x \\<notin> ?B\\<rbrakk>\n  \\<Longrightarrow> (insert ?x ?A = insert ?x ?B) = (?A = ?B)\n  insert ?a ?A \\<noteq> {}\n  Rep_nat_int (res ts c) = {n, n + 1}\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict ?v (res ?ts) ?c \\<le> res ?ts ?c\n  ({?b} = insert ?a ?A) = (?a = ?b \\<and> ?A \\<subseteq> {?b})\n  ?x \\<notin> ?A \\<Longrightarrow>\n  (?A \\<subseteq> insert ?x ?B) = (?A \\<subseteq> ?B)\n  n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v2 (res ts) c) = {}", "by fastforce"], ["proof (state)\nthis:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n\ngoal (2 subgoals):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n\ngoal (1 subgoal):\n 1. False", "using ex_n"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n  \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "assume n_in_res_v1:\"n \\<in> Rep_nat_int (restrict v1 (res ts) c)\""], ["proof (state)\nthis:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence n_not_in_v2:\"n \\<notin> Rep_nat_int ((lan v2))\""], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (lan v2)", "using assm vchop_def nat_int.nchop_def  nat_int.consec_in_exclusive1 \n            nat_int.consec_in_exclusive2 nat_int.el.rep_eq nat_int.not_in.rep_eq"], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  N_Chop(?i,?j,?k) \\<equiv>\n  ?i = ?j \\<squnion> ?k \\<and> (?j = bot \\<or> ?k = bot \\<or> consec ?j ?k)\n  consec ?i ?j \\<and> ?n \\<^bold>\\<in> ?i \\<longrightarrow>\n  ?n \\<^bold>\\<notin> ?j\n  consec ?i ?j \\<and> ?n \\<^bold>\\<in> ?j \\<longrightarrow>\n  ?n \\<^bold>\\<notin> ?i\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  (?x \\<^bold>\\<notin> ?xa) = (?x \\<notin> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (lan v2)", "by (meson less_eq_nat_int.rep_eq restrict_view subsetCE)"], ["proof (state)\nthis:\n  n \\<notin> Rep_nat_int (lan v2)\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "hence n_not_in_res_v2:\"n \\<notin> Rep_nat_int (restrict v2 (res ts) c)\""], ["proof (prove)\nusing this:\n  n \\<notin> Rep_nat_int (lan v2)\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (restrict v2 (res ts) c)", "using less_eq_nat_int.rep_eq subs"], ["proof (prove)\nusing this:\n  n \\<notin> Rep_nat_int (lan v2)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict v2 (res ts) c \\<le> lan v2\n\ngoal (1 subgoal):\n 1. n \\<notin> Rep_nat_int (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  n \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (restrict v1 (res ts) c) \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"n+1 \\<in> Rep_nat_int(restrict v2 (res ts) c) \")"], ["proof (state)\ngoal (2 subgoals):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow>\n    False", "case False"], ["proof (state)\nthis:\n  n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (2 subgoals):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow>\n    False", "hence \"Rep_nat_int (restrict v2 (res ts) c) = {}\""], ["proof (prove)\nusing this:\n  n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v2 (res ts) c) = {}", "using insert_absorb insert_ident insert_not_empty n_def n_not_in_res_v2\n              less_eq_nat_int.rep_eq restrict_res singleton_insert_inj_eq' subset_insert"], ["proof (prove)\nusing this:\n  n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n  \\<lbrakk>?x \\<notin> ?A; ?x \\<notin> ?B\\<rbrakk>\n  \\<Longrightarrow> (insert ?x ?A = insert ?x ?B) = (?A = ?B)\n  insert ?a ?A \\<noteq> {}\n  Rep_nat_int (res ts c) = {n, n + 1}\n  n \\<notin> Rep_nat_int (restrict v2 (res ts) c)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict ?v (res ?ts) ?c \\<le> res ?ts ?c\n  (insert ?a ?A = {?b}) = (?a = ?b \\<and> ?A \\<subseteq> {?b})\n  ?x \\<notin> ?A \\<Longrightarrow>\n  (?A \\<subseteq> insert ?x ?B) = (?A \\<subseteq> ?B)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v2 (res ts) c) = {}", "by fastforce"], ["proof (state)\nthis:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n\ngoal (2 subgoals):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False\n 2. n + 1 \\<notin> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n\ngoal (1 subgoal):\n 1. False", "using ex_n"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) = {}\n  \\<exists>n. n \\<in> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "obtain NN :: \"nat set \\<Rightarrow> nat \\<Rightarrow> nat set\" where\n            \"\\<forall>x0 x1. (\\<exists>v2. x0 = insert x1 v2 \\<and> x1 \\<notin> v2) \n              = (x0 = insert x1 (NN x0 x1) \\<and> x1 \\<notin> NN x0 x1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>NN.\n        \\<forall>x0 x1.\n           (\\<exists>v2. x0 = insert x1 v2 \\<and> x1 \\<notin> v2) =\n           (x0 = insert x1 (NN x0 x1) \\<and>\n            x1 \\<notin> NN x0 x1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1.\n     (\\<exists>v2. x0 = insert x1 v2 \\<and> x1 \\<notin> v2) =\n     (x0 = insert x1 (NN x0 x1) \\<and> x1 \\<notin> NN x0 x1)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>x0 x1.\n     (\\<exists>v2. x0 = insert x1 v2 \\<and> x1 \\<notin> v2) =\n     (x0 = insert x1 (NN x0 x1) \\<and> x1 \\<notin> NN x0 x1)", "have f1: \n            \"Rep_nat_int (restrict v2 (res ts) c) = \n              insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)) \n             \\<and> n + 1 \\<notin> NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)\""], ["proof (prove)\nusing this:\n  \\<forall>x0 x1.\n     (\\<exists>v2. x0 = insert x1 v2 \\<and> x1 \\<notin> v2) =\n     (x0 = insert x1 (NN x0 x1) \\<and> x1 \\<notin> NN x0 x1)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v2 (res ts) c) =\n    insert (n + 1)\n     (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)) \\<and>\n    n + 1 \\<notin> NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)", "by (meson mk_disjoint_insert True)"], ["proof (state)\nthis:\n  Rep_nat_int (restrict v2 (res ts) c) =\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)) \\<and>\n  n + 1 \\<notin> NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Rep_nat_int (restrict v2 (res ts) c) =\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)) \\<and>\n  n + 1 \\<notin> NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)", "have \n            \"insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n+1)) \n              \\<subseteq> {n+1}\\<union>{}\""], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v2 (res ts) c) =\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)) \\<and>\n  n + 1 \\<notin> NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)\n\ngoal (1 subgoal):\n 1. insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1))\n    \\<subseteq> {n + 1} \\<union> {}", "by (metis (no_types) insert_is_Un n_def n_not_in_res_v2 less_eq_nat_int.rep_eq\n                restrict_res subset_insert)"], ["proof (state)\nthis:\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1))\n  \\<subseteq> {n + 1} \\<union> {}\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1))\n  \\<subseteq> {n + 1} \\<union> {}", "have \"{n + 1} = Rep_nat_int (restrict v2 (res ts) c)\""], ["proof (prove)\nusing this:\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1))\n  \\<subseteq> {n + 1} \\<union> {}\n\ngoal (1 subgoal):\n 1. {n + 1} = Rep_nat_int (restrict v2 (res ts) c)", "using f1"], ["proof (prove)\nusing this:\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1))\n  \\<subseteq> {n + 1} \\<union> {}\n  Rep_nat_int (restrict v2 (res ts) c) =\n  insert (n + 1) (NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)) \\<and>\n  n + 1 \\<notin> NN (Rep_nat_int (restrict v2 (res ts) c)) (n + 1)\n\ngoal (1 subgoal):\n 1. {n + 1} = Rep_nat_int (restrict v2 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  {n + 1} = Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  {n + 1} = Rep_nat_int (restrict v2 (res ts) c)", "have min:\"nat_int.minimum (restrict v2 (res ts) c) = n+1\""], ["proof (prove)\nusing this:\n  {n + 1} = Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. minimum (restrict v2 (res ts) c) = n + 1", "by (metis (no_types) Min_singleton nat_int.minimum_def non_empty)"], ["proof (state)\nthis:\n  minimum (restrict v2 (res ts) c) = n + 1\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  minimum (restrict v2 (res ts) c) = n + 1", "have suc_n_in_v2:\"n+1 \\<^bold>\\<in> (lan v2)\""], ["proof (prove)\nusing this:\n  minimum (restrict v2 (res ts) c) = n + 1\n\ngoal (1 subgoal):\n 1. n + 1 \\<^bold>\\<in> lan v2", "using nat_int.el.rep_eq less_eq_nat_int.rep_eq subs True"], ["proof (prove)\nusing this:\n  minimum (restrict v2 (res ts) c) = n + 1\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict v2 (res ts) c \\<le> lan v2\n  n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. n + 1 \\<^bold>\\<in> lan v2", "by auto"], ["proof (state)\nthis:\n  n + 1 \\<^bold>\\<in> lan v2\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "have \"\\<forall>m . m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)", "by (metis atLeastAtMost_iff consec_lanes nat_int.maximum_def  nat_int.consec_def\n              nat_int.el.rep_eq nat_int.leq_max_sup nat_int.rep_non_empty_means_seq)"], ["proof (state)\nthis:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)", "have \"\\<forall>m . m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)\""], ["proof (prove)\nusing this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)", "using assm"], ["proof (prove)\nusing this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)", "using nat_int.consec_lesser nat_int.minimum_in nat_int.consec_def"], ["proof (prove)\nusing this:\n  \\<forall>m.\n     m \\<^bold>\\<in> lan v1 \\<longrightarrow> m \\<le> maximum (lan v1)\n  v=v1--v2 \\<and>\n  restrict v1 (res ts) c \\<noteq> bot \\<and>\n  consec (lan v1) (lan v2) \\<and>\n  \\<not> consec (restrict v1 (res ts) c) (restrict v2 (res ts) c)\n  consec ?i ?j \\<longrightarrow>\n  (\\<forall>n m.\n      n \\<^bold>\\<in> ?i \\<and> m \\<^bold>\\<in> ?j \\<longrightarrow> n < m)\n  ?i \\<noteq> bot \\<longrightarrow> minimum ?i \\<^bold>\\<in> ?i\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n\ngoal (1 subgoal):\n 1. \\<forall>m.\n       m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)", "by auto"], ["proof (state)\nthis:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)", "have \"\\<forall>m . m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n+1\""], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)\n\ngoal (1 subgoal):\n 1. \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n + 1", "using consec_lanes  nat_int.card_seq nat_int.consec_def suc_n_in_v2 \n              nat_int.consec_lesser"], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < minimum (lan v2)\n  consec (lan v1) (lan v2)\n  \\<forall>i.\n     |i| = ?x \\<longrightarrow>\n     Rep_nat_int i = {} \\<or>\n     (\\<exists>n. Rep_nat_int i = {n..n + (?x - 1)})\n  consec ?i ?j \\<equiv>\n  ?i \\<noteq> bot \\<and> ?j \\<noteq> bot \\<and> maximum ?i + 1 = minimum ?j\n  n + 1 \\<^bold>\\<in> lan v2\n  consec ?i ?j \\<longrightarrow>\n  (\\<forall>n m.\n      n \\<^bold>\\<in> ?i \\<and> m \\<^bold>\\<in> ?j \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n + 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n + 1\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n + 1", "have suc_n_not_in_v1:\"n+1 \\<notin> Rep_nat_int ((lan v1))\""], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n + 1\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (lan v1)", "using nat_int.el.rep_eq"], ["proof (prove)\nusing this:\n  \\<forall>m. m \\<^bold>\\<in> lan v1 \\<longrightarrow> m < n + 1\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (lan v1)", "by auto"], ["proof (state)\nthis:\n  n + 1 \\<notin> Rep_nat_int (lan v1)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "have suc_n_not_in_res_v1:\"n+1 \\<notin> Rep_nat_int (restrict v1 (res ts) c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (restrict v1 (res ts) c)", "using less_eq_nat_int.rep_eq restrict_view suc_n_not_in_v1"], ["proof (prove)\nusing this:\n  (?x \\<le> ?xa) = (Rep_nat_int ?x \\<subseteq> Rep_nat_int ?xa)\n  restrict ?v ?f ?c \\<le> lan ?v\n  n + 1 \\<notin> Rep_nat_int (lan v1)\n\ngoal (1 subgoal):\n 1. n + 1 \\<notin> Rep_nat_int (restrict v1 (res ts) c)", "by blast"], ["proof (state)\nthis:\n  n + 1 \\<notin> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "from rep_restrict_v1 and n_in_res_v1"], ["proof (chain)\npicking this:\n  Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)", "have res_v1_singleton:\n            \"Rep_nat_int (restrict v1 (res ts) c) = {n}\""], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v1 (res ts) c) = {n}", "using Set.set_insert insert_absorb2 insert_commute singleton_insert_inj_eq'\n              subset_insert suc_n_not_in_res_v1"], ["proof (prove)\nusing this:\n  Rep_nat_int (restrict v1 (res ts) c) \\<subseteq> {n, n + 1}\n  n \\<in> Rep_nat_int (restrict v1 (res ts) c)\n  \\<lbrakk>?x \\<in> ?A;\n   \\<And>B.\n      \\<lbrakk>?A = insert ?x B; ?x \\<notin> B\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  insert ?x (insert ?x ?A) = insert ?x ?A\n  insert ?x (insert ?y ?A) = insert ?y (insert ?x ?A)\n  (insert ?a ?A = {?b}) = (?a = ?b \\<and> ?A \\<subseteq> {?b})\n  ?x \\<notin> ?A \\<Longrightarrow>\n  (?A \\<subseteq> insert ?x ?B) = (?A \\<subseteq> ?B)\n  n + 1 \\<notin> Rep_nat_int (restrict v1 (res ts) c)\n\ngoal (1 subgoal):\n 1. Rep_nat_int (restrict v1 (res ts) c) = {n}", "by blast"], ["proof (state)\nthis:\n  Rep_nat_int (restrict v1 (res ts) c) = {n}\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "have max: \"nat_int.maximum (restrict v1 (res ts) c) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximum (restrict v1 (res ts) c) = n", "by (metis Rep_nat_int_inverse nat_int.leq_max_sup' order_refl \n                res_v1_singleton nat_int.rep_single)"], ["proof (state)\nthis:\n  maximum (restrict v1 (res ts) c) = n\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "from min and max"], ["proof (chain)\npicking this:\n  minimum (restrict v2 (res ts) c) = n + 1\n  maximum (restrict v1 (res ts) c) = n", "have \n            \"maximum (restrict v1 (res ts) c)+1 = minimum (restrict v2 (res ts) c)\""], ["proof (prove)\nusing this:\n  minimum (restrict v2 (res ts) c) = n + 1\n  maximum (restrict v1 (res ts) c) = n\n\ngoal (1 subgoal):\n 1. maximum (restrict v1 (res ts) c) + 1 = minimum (restrict v2 (res ts) c)", "by auto"], ["proof (state)\nthis:\n  maximum (restrict v1 (res ts) c) + 1 = minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. n + 1 \\<in> Rep_nat_int (restrict v2 (res ts) c) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  maximum (restrict v1 (res ts) c) + 1 = minimum (restrict v2 (res ts) c)\n\ngoal (1 subgoal):\n 1. False", "using empty_or_non_consec non_empty"], ["proof (prove)\nusing this:\n  maximum (restrict v1 (res ts) c) + 1 = minimum (restrict v2 (res ts) c)\n  restrict v2 (res ts) c = bot \\<or>\n  maximum (restrict v1 (res ts) c) + 1 \\<noteq>\n  minimum (restrict v2 (res ts) c)\n  restrict v2 (res ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v2 (res ts) c = bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restriction_consec_res:\"(v=u--w) \n  \\<longrightarrow> restrict u (res ts) c = \\<emptyset> \\<or> restrict w (res ts) c = \\<emptyset> \n  \\<or>  consec (restrict u (res ts) c) ( restrict w (res ts) c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow>\n    restrict u (res ts) c = bot \\<or>\n    restrict w (res ts) c = bot \\<or>\n    consec (restrict u (res ts) c) (restrict w (res ts) c)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    restrict u (res ts) c = bot \\<or>\n    restrict w (res ts) c = bot \\<or>\n    consec (restrict u (res ts) c) (restrict w (res ts) c)", "assume assm:\"v=u--w\""], ["proof (state)\nthis:\n  v=u--w\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    restrict u (res ts) c = bot \\<or>\n    restrict w (res ts) c = bot \\<or>\n    consec (restrict u (res ts) c) (restrict w (res ts) c)", "then"], ["proof (chain)\npicking this:\n  v=u--w", "show \"restrict u (res ts) c = \\<emptyset> \\<or> restrict w (res ts) c = \\<emptyset> \n  \\<or>  consec (restrict u (res ts) c) ( restrict w (res ts) c)\""], ["proof (prove)\nusing this:\n  v=u--w\n\ngoal (1 subgoal):\n 1. restrict u (res ts) c = bot \\<or>\n    restrict w (res ts) c = bot \\<or>\n    consec (restrict u (res ts) c) (restrict w (res ts) c)", "proof (cases \"res ts c =\\<emptyset>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>v=u--w; res ts c = bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)\n 2. \\<lbrakk>v=u--w; res ts c \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)", "case True"], ["proof (state)\nthis:\n  res ts c = bot\n\ngoal (2 subgoals):\n 1. \\<lbrakk>v=u--w; res ts c = bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)\n 2. \\<lbrakk>v=u--w; res ts c \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict u (res ts) c = bot \\<or>\n    restrict w (res ts) c = bot \\<or>\n    consec (restrict u (res ts) c) (restrict w (res ts) c)", "by (simp add: True inter_empty1 restriction.restrict_def')"], ["proof (state)\nthis:\n  restrict u (res ts) c = bot \\<or>\n  restrict w (res ts) c = bot \\<or>\n  consec (restrict u (res ts) c) (restrict w (res ts) c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v=u--w; res ts c \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>v=u--w; res ts c \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)", "case False"], ["proof (state)\nthis:\n  res ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v=u--w; res ts c \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)", "then"], ["proof (chain)\npicking this:\n  res ts c \\<noteq> bot", "have \"res ts c \\<noteq> \\<emptyset>\""], ["proof (prove)\nusing this:\n  res ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. res ts c \\<noteq> bot", "by best"], ["proof (state)\nthis:\n  res ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v=u--w; res ts c \\<noteq> bot\\<rbrakk>\n    \\<Longrightarrow> restrict u (res ts) c = bot \\<or>\n                      restrict w (res ts) c = bot \\<or>\n                      consec (restrict u (res ts) c) (restrict w (res ts) c)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict u (res ts) c = bot \\<or>\n    restrict w (res ts) c = bot \\<or>\n    consec (restrict u (res ts) c) (restrict w (res ts) c)", "by (metis (no_types, lifting) assm inter_empty1 nat_int.nchop_def \n          restriction.restrict_def restriction.vertical_chop_restriction_res_consec_or_empty\n          view.vchop_def)"], ["proof (state)\nthis:\n  restrict u (res ts) c = bot \\<or>\n  restrict w (res ts) c = bot \\<or>\n  consec (restrict u (res ts) c) (restrict w (res ts) c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict u (res ts) c = bot \\<or>\n  restrict w (res ts) c = bot \\<or>\n  consec (restrict u (res ts) c) (restrict w (res ts) c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restriction_clm_res_disjoint:\n  \"(restrict v (res ts) c) \\<sqinter> (restrict v (clm ts) c) = \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (res ts) c \\<sqinter> restrict v (clm ts) c = bot", "by (metis (no_types) inf_assoc nat_int.inter_empty2 restriction.restrict_def\n      restrict_def' traffic.disjoint)"], ["", "lemma el_in_restriction_clm_singleton:\n  \"n \\<^bold>\\<in> restrict v (clm ts) c \\<longrightarrow> (clm ts) c = Abs_nat_int({n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<longrightarrow>\n    clm ts c = Abs_nat_int {n}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "assume n_in_restr:\"n \\<^bold>\\<in> restrict v (clm ts) c\""], ["proof (state)\nthis:\n  n \\<^bold>\\<in> restrict v (clm ts) c\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "hence \"n \\<^bold>\\<in> ((clm ts) c \\<sqinter> (lan v))\""], ["proof (prove)\nusing this:\n  n \\<^bold>\\<in> restrict v (clm ts) c\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> clm ts c \\<sqinter> lan v", "by (simp add: restrict_def)"], ["proof (state)\nthis:\n  n \\<^bold>\\<in> clm ts c \\<sqinter> lan v\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "hence \"n \\<in> (Rep_nat_int (clm ts c) \\<inter> Rep_nat_int (lan v))\""], ["proof (prove)\nusing this:\n  n \\<^bold>\\<in> clm ts c \\<sqinter> lan v\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (clm ts c) \\<inter> Rep_nat_int (lan v)", "by (simp add: inf_nat_int.rep_eq nat_int.el_def)"], ["proof (state)\nthis:\n  n \\<in> Rep_nat_int (clm ts c) \\<inter> Rep_nat_int (lan v)\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "hence n_in_rep_clm:\"n \\<in> (Rep_nat_int ((clm ts) c))\""], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (clm ts c) \\<inter> Rep_nat_int (lan v)\n\ngoal (1 subgoal):\n 1. n \\<in> Rep_nat_int (clm ts c)", "by simp"], ["proof (state)\nthis:\n  n \\<in> Rep_nat_int (clm ts c)\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "then"], ["proof (chain)\npicking this:\n  n \\<in> Rep_nat_int (clm ts c)", "have \"(clm ts) c \\<noteq> \\<emptyset>\""], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (clm ts c)\n\ngoal (1 subgoal):\n 1. clm ts c \\<noteq> bot", "using nat_int.el.rep_eq nat_int.non_empty_elem_in"], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (clm ts c)\n  (?x \\<^bold>\\<in> ?xa) = (?x \\<in> Rep_nat_int ?xa)\n  (?i \\<noteq> bot) = (\\<exists>n. n \\<^bold>\\<in> ?i)\n\ngoal (1 subgoal):\n 1. clm ts c \\<noteq> bot", "by auto"], ["proof (state)\nthis:\n  clm ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "then"], ["proof (chain)\npicking this:\n  clm ts c \\<noteq> bot", "have \"|(clm ts) c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  clm ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. 1 \\<le> |clm ts c|", "by (simp add: nat_int.card_non_empty_geq_one)"], ["proof (state)\nthis:\n  1 \\<le> |clm ts c|\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "then"], ["proof (chain)\npicking this:\n  1 \\<le> |clm ts c|", "have \"|(clm ts) c| = 1\""], ["proof (prove)\nusing this:\n  1 \\<le> |clm ts c|\n\ngoal (1 subgoal):\n 1. |clm ts c| = 1", "using atMostOneClm le_antisym"], ["proof (prove)\nusing this:\n  1 \\<le> |clm ts c|\n  |clm ?ts ?c| \\<le> 1\n  \\<lbrakk>?m \\<le> ?n; ?n \\<le> ?m\\<rbrakk> \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. |clm ts c| = 1", "by blast"], ["proof (state)\nthis:\n  |clm ts c| = 1\n\ngoal (1 subgoal):\n 1. n \\<^bold>\\<in> restrict v (clm ts) c \\<Longrightarrow>\n    clm ts c = Abs_nat_int {n}", "with n_in_rep_clm"], ["proof (chain)\npicking this:\n  n \\<in> Rep_nat_int (clm ts c)\n  |clm ts c| = 1", "show \"(clm ts) c = Abs_nat_int({n})\""], ["proof (prove)\nusing this:\n  n \\<in> Rep_nat_int (clm ts c)\n  |clm ts c| = 1\n\ngoal (1 subgoal):\n 1. clm ts c = Abs_nat_int {n}", "by (metis Rep_nat_int_inverse nat_int.singleton singletonD)"], ["proof (state)\nthis:\n  clm ts c = Abs_nat_int {n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restriction_clm_v2_non_empty_v1_empty:\n  \"(v=u--w) \\<and> restrict w (clm ts) c \\<noteq> \\<emptyset> \\<and>  \n    consec ((lan u)) ((lan w)) \\<longrightarrow> restrict u (clm ts) c = \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<and>\n    restrict w (clm ts) c \\<noteq> bot \\<and>\n    consec (lan u) (lan w) \\<longrightarrow>\n    restrict u (clm ts) c = bot", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=u--w \\<and>\n    restrict w (clm ts) c \\<noteq> bot \\<and>\n    consec (lan u) (lan w) \\<Longrightarrow>\n    restrict u (clm ts) c = bot", "assume assm:\"(v=u--w) \\<and> restrict w (clm ts) c \\<noteq> \\<emptyset> \\<and> consec (lan u) (lan w)\""], ["proof (state)\nthis:\n  v=u--w \\<and>\n  restrict w (clm ts) c \\<noteq> bot \\<and> consec (lan u) (lan w)\n\ngoal (1 subgoal):\n 1. v=u--w \\<and>\n    restrict w (clm ts) c \\<noteq> bot \\<and>\n    consec (lan u) (lan w) \\<Longrightarrow>\n    restrict u (clm ts) c = bot", "obtain n where n_in_res_v2: \"(n \\<^bold>\\<in> restrict w (clm ts) c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        n \\<^bold>\\<in> restrict w (clm ts) c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assm maximum_in"], ["proof (prove)\nusing this:\n  v=u--w \\<and>\n  restrict w (clm ts) c \\<noteq> bot \\<and> consec (lan u) (lan w)\n  ?i \\<noteq> bot \\<longrightarrow> maximum ?i \\<^bold>\\<in> ?i\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        n \\<^bold>\\<in> restrict w (clm ts) c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n \\<^bold>\\<in> restrict w (clm ts) c\n\ngoal (1 subgoal):\n 1. v=u--w \\<and>\n    restrict w (clm ts) c \\<noteq> bot \\<and>\n    consec (lan u) (lan w) \\<Longrightarrow>\n    restrict u (clm ts) c = bot", "have \"(clm ts) c = Abs_nat_int({n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. clm ts c = Abs_nat_int {n}", "using n_in_res_v2"], ["proof (prove)\nusing this:\n  n \\<^bold>\\<in> restrict w (clm ts) c\n\ngoal (1 subgoal):\n 1. clm ts c = Abs_nat_int {n}", "by (simp add: el_in_restriction_clm_singleton)"], ["proof (state)\nthis:\n  clm ts c = Abs_nat_int {n}\n\ngoal (1 subgoal):\n 1. v=u--w \\<and>\n    restrict w (clm ts) c \\<noteq> bot \\<and>\n    consec (lan u) (lan w) \\<Longrightarrow>\n    restrict u (clm ts) c = bot", "then"], ["proof (chain)\npicking this:\n  clm ts c = Abs_nat_int {n}", "show \"restrict u (clm ts) c = \\<emptyset>\""], ["proof (prove)\nusing this:\n  clm ts c = Abs_nat_int {n}\n\ngoal (1 subgoal):\n 1. restrict u (clm ts) c = bot", "by (metis assm inf.absorb_iff2 inf_commute less_eq_nat_int.rep_eq \n        n_in_res_v2 nat_int.el.rep_eq nat_int.in_singleton restriction.restrict_subseteq\n        restriction.restriction_disj subsetI)"], ["proof (state)\nthis:\n  restrict u (clm ts) c = bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restriction_consec_clm:\n  \"(v=u--w) \\<and> consec (lan u) (lan w) \n    \\<longrightarrow> restrict u (clm ts) c = \\<emptyset> \\<or> restrict w (clm ts) c = \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<and> consec (lan u) (lan w) \\<longrightarrow>\n    restrict u (clm ts) c = bot \\<or> restrict w (clm ts) c = bot", "using nat_int.card_un_add nat_int.card_empty_zero restriction_un atMostOneClm\n    nat_int.chop_add1 nat_int.inter_distr1 nat_int.inter_empty1 nat_int.un_empty_absorb1\n    nat_int.un_empty_absorb2 nat_int.nchop_def restrict_def vchop_def \n    restriction_clm_v2_non_empty_v1_empty"], ["proof (prove)\nusing this:\n  consec ?i ?j \\<longrightarrow> |?i \\<squnion> ?j| = |?i| + |?j|\n  |bot| = 0\n  ?v=?u--?w \\<longrightarrow>\n  restrict ?v ?f ?c = restrict ?u ?f ?c \\<squnion> restrict ?w ?f ?c\n  |clm ?ts ?c| \\<le> 1\n  N_Chop(?i,?j,?k) \\<longrightarrow> |?i| = |?j| + |?k|\n  consec ?j ?k \\<longrightarrow>\n  ?i \\<sqinter> (?j \\<squnion> ?k) =\n  ?i \\<sqinter> ?j \\<squnion> ?i \\<sqinter> ?k\n  ?i \\<sqinter> bot = bot\n  ?i \\<squnion> bot = ?i\n  bot \\<squnion> ?i = ?i\n  N_Chop(?i,?j,?k) \\<equiv>\n  ?i = ?j \\<squnion> ?k \\<and> (?j = bot \\<or> ?k = bot \\<or> consec ?j ?k)\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n  ?v=?u--?w \\<equiv>\n  N_Chop(lan ?v,lan ?u,lan ?w) \\<and>\n  ext ?v = ext ?u \\<and>\n  ext ?v = ext ?w \\<and>\n  own ?v = own ?u \\<and>\n  own ?v = own ?w \\<and> more ?v = more ?w \\<and> more ?v = more ?u\n  ?v=?u--?w \\<and>\n  restrict ?w (clm ?ts) ?c \\<noteq> bot \\<and>\n  consec (lan ?u) (lan ?w) \\<longrightarrow>\n  restrict ?u (clm ?ts) ?c = bot\n\ngoal (1 subgoal):\n 1. v=u--w \\<and> consec (lan u) (lan w) \\<longrightarrow>\n    restrict u (clm ts) c = bot \\<or> restrict w (clm ts) c = bot", "by meson"], ["", "lemma restriction_add_res:\n  \"(v=u--w) \n    \\<longrightarrow> |restrict v (res ts) c|=|restrict u (res ts) c|+|restrict w (res ts) c|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow>\n    |restrict v (res ts) c| =\n    |restrict u (res ts) c| + |restrict w (res ts) c|", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (res ts) c| =\n    |restrict u (res ts) c| + |restrict w (res ts) c|", "assume assm: \"v=u--w\""], ["proof (state)\nthis:\n  v=u--w\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (res ts) c| =\n    |restrict u (res ts) c| + |restrict w (res ts) c|", "then"], ["proof (chain)\npicking this:\n  v=u--w", "have 1:\"restrict u (res ts) c \\<sqinter> restrict w (res ts) c = \\<emptyset>\""], ["proof (prove)\nusing this:\n  v=u--w\n\ngoal (1 subgoal):\n 1. restrict u (res ts) c \\<sqinter> restrict w (res ts) c = bot", "using restriction.restriction_disj"], ["proof (prove)\nusing this:\n  v=u--w\n  ?v=?u--?w \\<longrightarrow>\n  restrict ?u ?f ?c \\<sqinter> restrict ?w ?f ?c = bot\n\ngoal (1 subgoal):\n 1. restrict u (res ts) c \\<sqinter> restrict w (res ts) c = bot", "by auto"], ["proof (state)\nthis:\n  restrict u (res ts) c \\<sqinter> restrict w (res ts) c = bot\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (res ts) c| =\n    |restrict u (res ts) c| + |restrict w (res ts) c|", "from assm"], ["proof (chain)\npicking this:\n  v=u--w", "have \"restrict v (res ts) c=restrict u (res ts) c\\<squnion>restrict w (res ts) c\""], ["proof (prove)\nusing this:\n  v=u--w\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c =\n    restrict u (res ts) c \\<squnion> restrict w (res ts) c", "using restriction.restriction_un"], ["proof (prove)\nusing this:\n  v=u--w\n  ?v=?u--?w \\<longrightarrow>\n  restrict ?v ?f ?c = restrict ?u ?f ?c \\<squnion> restrict ?w ?f ?c\n\ngoal (1 subgoal):\n 1. restrict v (res ts) c =\n    restrict u (res ts) c \\<squnion> restrict w (res ts) c", "by blast"], ["proof (state)\nthis:\n  restrict v (res ts) c =\n  restrict u (res ts) c \\<squnion> restrict w (res ts) c\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (res ts) c| =\n    |restrict u (res ts) c| + |restrict w (res ts) c|", "with 1"], ["proof (chain)\npicking this:\n  restrict u (res ts) c \\<sqinter> restrict w (res ts) c = bot\n  restrict v (res ts) c =\n  restrict u (res ts) c \\<squnion> restrict w (res ts) c", "show \" |restrict v (res ts) c|=|restrict u (res ts) c|+|restrict w (res ts) c|\""], ["proof (prove)\nusing this:\n  restrict u (res ts) c \\<sqinter> restrict w (res ts) c = bot\n  restrict v (res ts) c =\n  restrict u (res ts) c \\<squnion> restrict w (res ts) c\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| =\n    |restrict u (res ts) c| + |restrict w (res ts) c|", "by (metis add.right_neutral add_cancel_left_left assm nat_int.card_empty_zero\n        nat_int.card_un_add nat_int.un_empty_absorb1 nat_int.un_empty_absorb2 \n        restriction.restriction_consec_res)"], ["proof (state)\nthis:\n  |restrict v (res ts) c| =\n  |restrict u (res ts) c| + |restrict w (res ts) c|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restriction_eq_view_card:\"restrict v f c = lan v \\<longrightarrow> |restrict v f c| =|lan v|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v f c = lan v \\<longrightarrow> |restrict v f c| = |lan v|", "by simp"], ["", "lemma restriction_card_mon1:\"(v=u--w) \\<longrightarrow> |restrict u f c| \\<le> |restrict v f c|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> |restrict u f c| \\<le> |restrict v f c|", "using nat_int.card_subset_le restriction_mon1"], ["proof (prove)\nusing this:\n  ?i \\<le> ?i' \\<longrightarrow> |?i| \\<le> |?i'|\n  ?v=?u--?w \\<longrightarrow> restrict ?u ?f ?c \\<le> restrict ?v ?f ?c\n\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> |restrict u f c| \\<le> |restrict v f c|", "by (simp )"], ["", "lemma restriction_card_mon2:\"(v=u--w) \\<longrightarrow> |restrict w f c| \\<le> |restrict v f c|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> |restrict w f c| \\<le> |restrict v f c|", "using nat_int.card_subset_le restriction_mon2"], ["proof (prove)\nusing this:\n  ?i \\<le> ?i' \\<longrightarrow> |?i| \\<le> |?i'|\n  ?v=?u--?w \\<longrightarrow> restrict ?w ?f ?c \\<le> restrict ?v ?f ?c\n\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow> |restrict w f c| \\<le> |restrict v f c|", "by (simp )"], ["", "lemma restriction_res_leq_two:\"|restrict v (res ts) c| \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| \\<le> 2", "using atMostTwoRes nat_int.card_subset_le le_trans restrict_res"], ["proof (prove)\nusing this:\n  |res ?ts ?c| \\<le> 2\n  ?i \\<le> ?i' \\<longrightarrow> |?i| \\<le> |?i'|\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n  restrict ?v (res ?ts) ?c \\<le> res ?ts ?c\n\ngoal (1 subgoal):\n 1. |restrict v (res ts) c| \\<le> 2", "by metis"], ["", "lemma restriction_clm_leq_one:\"|restrict v (clm ts) c| \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| \\<le> 1", "using atMostOneClm nat_int.card_subset_le le_trans restrict_clm"], ["proof (prove)\nusing this:\n  |clm ?ts ?c| \\<le> 1\n  ?i \\<le> ?i' \\<longrightarrow> |?i| \\<le> |?i'|\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n  restrict ?v (clm ?ts) ?c \\<le> clm ?ts ?c\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| \\<le> 1", "by metis"], ["", "lemma restriction_add_clm:\n  \"(v=u--w) \n    \\<longrightarrow> |restrict v (clm ts) c|=|restrict u (clm ts) c|+|restrict w (clm ts) c|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=u--w \\<longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "assume assm:\"v=u--w\""], ["proof (state)\nthis:\n  v=u--w\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "have \"|restrict u (clm ts) c| = 1 \\<or> |restrict u (clm ts) c| = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict u (clm ts) c| = 1 \\<or> |restrict u (clm ts) c| = 0", "by (metis One_nat_def le_0_eq le_SucE restriction.restriction_clm_leq_one)"], ["proof (state)\nthis:\n  |restrict u (clm ts) c| = 1 \\<or> |restrict u (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. v=u--w \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict u (clm ts) c| = 1 \\<or> |restrict u (clm ts) c| = 0", "show \"|restrict v (clm ts) c|=|restrict u (clm ts) c|+|restrict w (clm ts) c|\""], ["proof (prove)\nusing this:\n  |restrict u (clm ts) c| = 1 \\<or> |restrict u (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. |restrict u (clm ts) c| = 1 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|\n 2. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "assume clm_u:\"|restrict u (clm ts) c| = 1\""], ["proof (state)\nthis:\n  |restrict u (clm ts) c| = 1\n\ngoal (2 subgoals):\n 1. |restrict u (clm ts) c| = 1 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|\n 2. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "have \"restrict u (clm ts) c \\<noteq> \\<emptyset>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict u (clm ts) c \\<noteq> bot", "using clm_u card_non_empty_geq_one"], ["proof (prove)\nusing this:\n  |restrict u (clm ts) c| = 1\n  (?i \\<noteq> bot) = (1 \\<le> |?i|)\n\ngoal (1 subgoal):\n 1. restrict u (clm ts) c \\<noteq> bot", "by auto"], ["proof (state)\nthis:\n  restrict u (clm ts) c \\<noteq> bot\n\ngoal (2 subgoals):\n 1. |restrict u (clm ts) c| = 1 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|\n 2. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  restrict u (clm ts) c \\<noteq> bot", "have \"|restrict w (clm ts) c| = 0\""], ["proof (prove)\nusing this:\n  restrict u (clm ts) c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. |restrict w (clm ts) c| = 0", "by (metis (no_types) assm card_empty_zero inf_commute inter_empty2\n          nat_int.nchop_def restriction.restrict_def \n          restriction.restriction_clm_v2_non_empty_v1_empty view.vchop_def)"], ["proof (state)\nthis:\n  |restrict w (clm ts) c| = 0\n\ngoal (2 subgoals):\n 1. |restrict u (clm ts) c| = 1 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|\n 2. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict w (clm ts) c| = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  |restrict w (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "by (metis Nat.add_0_right assm clm_u inf.absorb1 inf_commute \n          restriction.restriction_card_mon1 restriction.restriction_clm_leq_one)"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| =\n  |restrict u (clm ts) c| + |restrict w (clm ts) c|\n\ngoal (1 subgoal):\n 1. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "assume no_clm_u:\"|restrict u (clm ts) c| = 0\""], ["proof (state)\nthis:\n  |restrict u (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict u (clm ts) c| = 0", "have \"|restrict w (clm ts) c| = 1 \\<or> |restrict w (clm ts) c| = 0\""], ["proof (prove)\nusing this:\n  |restrict u (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict w (clm ts) c| = 1 \\<or> |restrict w (clm ts) c| = 0", "by (metis One_nat_def le_0_eq le_SucE restriction.restriction_clm_leq_one)"], ["proof (state)\nthis:\n  |restrict w (clm ts) c| = 1 \\<or> |restrict w (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict u (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict w (clm ts) c| = 1 \\<or> |restrict w (clm ts) c| = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  |restrict w (clm ts) c| = 1 \\<or> |restrict w (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. |restrict w (clm ts) c| = 1 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|\n 2. |restrict w (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "assume \"|restrict w (clm ts) c| = 1\""], ["proof (state)\nthis:\n  |restrict w (clm ts) c| = 1\n\ngoal (2 subgoals):\n 1. |restrict w (clm ts) c| = 1 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|\n 2. |restrict w (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict w (clm ts) c| = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  |restrict w (clm ts) c| = 1\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "by (metis no_clm_u add_cancel_left_left antisym_conv3 assm leD \n            restriction.restriction_card_mon2 restriction.restriction_clm_leq_one)"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| =\n  |restrict u (clm ts) c| + |restrict w (clm ts) c|\n\ngoal (1 subgoal):\n 1. |restrict w (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. |restrict w (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "assume no_clm_w:\"|restrict w (clm ts) c| = 0\""], ["proof (state)\nthis:\n  |restrict w (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict w (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict w (clm ts) c| = 0", "have \"|restrict v (clm ts) c| = 0\""], ["proof (prove)\nusing this:\n  |restrict w (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| = 0", "by (metis assm card_empty_zero chop_empty \n            nat_int.card_non_empty_geq_one nat_int.nchop_def no_clm_u \n            restriction.restriction_un)"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict w (clm ts) c| = 0 \\<Longrightarrow>\n    |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "then"], ["proof (chain)\npicking this:\n  |restrict v (clm ts) c| = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  |restrict v (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "using no_clm_u no_clm_w"], ["proof (prove)\nusing this:\n  |restrict v (clm ts) c| = 0\n  |restrict u (clm ts) c| = 0\n  |restrict w (clm ts) c| = 0\n\ngoal (1 subgoal):\n 1. |restrict v (clm ts) c| =\n    |restrict u (clm ts) c| + |restrict w (clm ts) c|", "by linarith"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| =\n  |restrict u (clm ts) c| + |restrict w (clm ts) c|\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| =\n  |restrict u (clm ts) c| + |restrict w (clm ts) c|\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  |restrict v (clm ts) c| =\n  |restrict u (clm ts) c| + |restrict w (clm ts) c|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restriction_card_mon_trans:\n  \"(v=v1--v2) \\<and> (v2=v3--v4) \\<and> |restrict v3 f c| = 1 \\<longrightarrow> |restrict v f c|\\<ge>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=v1--v2 \\<and> v2=v3--v4 \\<and> |restrict v3 f c| = 1 \\<longrightarrow>\n    1 \\<le> |restrict v f c|", "by (metis One_nat_def Suc_leI neq0_conv not_less_eq_eq \n      restriction_card_mon1 restriction_card_mon2)"], ["", "lemma restriction_card_somewhere_mon:\n  \"(v=vl\\<parallel>v1)\\<and>(v1=v2\\<parallel>vr)\\<and>(v2=vu--v3)\\<and>(v3=v'--vd)\\<and>|restrict v' f c|=1\n      \\<longrightarrow> |restrict v f c| \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v=vl\\<parallel>v1 \\<and>\n    v1=v2\\<parallel>vr \\<and>\n    v2=vu--v3 \\<and>\n    v3=v'--vd \\<and> |restrict v' f c| = 1 \\<longrightarrow>\n    1 \\<le> |restrict v f c|", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v=vl\\<parallel>v1 \\<and>\n    v1=v2\\<parallel>vr \\<and>\n    v2=vu--v3 \\<and>\n    v3=v'--vd \\<and> |restrict v' f c| = 1 \\<Longrightarrow>\n    1 \\<le> |restrict v f c|", "assume assm:\n    \"(v=vl\\<parallel>v1)\\<and>(v1=v2\\<parallel>vr)\\<and>(v2=vu--v3)\\<and>(v3=v'--vd)\\<and>|restrict v' f c|=1\""], ["proof (state)\nthis:\n  v=vl\\<parallel>v1 \\<and>\n  v1=v2\\<parallel>vr \\<and>\n  v2=vu--v3 \\<and> v3=v'--vd \\<and> |restrict v' f c| = 1\n\ngoal (1 subgoal):\n 1. v=vl\\<parallel>v1 \\<and>\n    v1=v2\\<parallel>vr \\<and>\n    v2=vu--v3 \\<and>\n    v3=v'--vd \\<and> |restrict v' f c| = 1 \\<Longrightarrow>\n    1 \\<le> |restrict v f c|", "then"], ["proof (chain)\npicking this:\n  v=vl\\<parallel>v1 \\<and>\n  v1=v2\\<parallel>vr \\<and>\n  v2=vu--v3 \\<and> v3=v'--vd \\<and> |restrict v' f c| = 1", "have \"|restrict v2 f c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  v=vl\\<parallel>v1 \\<and>\n  v1=v2\\<parallel>vr \\<and>\n  v2=vu--v3 \\<and> v3=v'--vd \\<and> |restrict v' f c| = 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict v2 f c|", "using restriction_card_mon_trans"], ["proof (prove)\nusing this:\n  v=vl\\<parallel>v1 \\<and>\n  v1=v2\\<parallel>vr \\<and>\n  v2=vu--v3 \\<and> v3=v'--vd \\<and> |restrict v' f c| = 1\n  ?v=?v1.0--?v2.0 \\<and>\n  ?v2.0=?v3.0--?v4.0 \\<and> |restrict ?v3.0 ?f ?c| = 1 \\<longrightarrow>\n  1 \\<le> |restrict ?v ?f ?c|\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict v2 f c|", "by blast"], ["proof (state)\nthis:\n  1 \\<le> |restrict v2 f c|\n\ngoal (1 subgoal):\n 1. v=vl\\<parallel>v1 \\<and>\n    v1=v2\\<parallel>vr \\<and>\n    v2=vu--v3 \\<and>\n    v3=v'--vd \\<and> |restrict v' f c| = 1 \\<Longrightarrow>\n    1 \\<le> |restrict v f c|", "then"], ["proof (chain)\npicking this:\n  1 \\<le> |restrict v2 f c|", "show \"|restrict v f c| \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> |restrict v2 f c|\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict v f c|", "using restriction_stable1 restriction_stable2 assm"], ["proof (prove)\nusing this:\n  1 \\<le> |restrict v2 f c|\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?u ?f ?c\n  ?v=?u\\<parallel>?w \\<longrightarrow> restrict ?v ?f ?c = restrict ?w ?f ?c\n  v=vl\\<parallel>v1 \\<and>\n  v1=v2\\<parallel>vr \\<and>\n  v2=vu--v3 \\<and> v3=v'--vd \\<and> |restrict v' f c| = 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> |restrict v f c|", "by metis"], ["proof (state)\nthis:\n  1 \\<le> |restrict v f c|\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restrict_eq_lan_subs:\n  \"|restrict v f c| = |lan v| \\<and> (restrict v f c \\<sqsubseteq> lan v) \\<longrightarrow> restrict v f c = lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v f c| = |lan v| \\<and>\n    restrict v f c \\<le> lan v \\<longrightarrow>\n    restrict v f c = lan v", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. |restrict v f c| = |lan v| \\<and>\n    restrict v f c \\<le> lan v \\<Longrightarrow>\n    restrict v f c = lan v", "assume assm:\"|restrict v f c| = |lan v| \\<and> (restrict v f c \\<sqsubseteq> lan v)\""], ["proof (state)\nthis:\n  |restrict v f c| = |lan v| \\<and> restrict v f c \\<le> lan v\n\ngoal (1 subgoal):\n 1. |restrict v f c| = |lan v| \\<and>\n    restrict v f c \\<le> lan v \\<Longrightarrow>\n    restrict v f c = lan v", "have \"|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  |restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. |restrict v f c| = |lan v| \\<and>\n    restrict v f c \\<le> lan v \\<Longrightarrow>\n    restrict v f c = lan v", "thus \"restrict v f c = lan v\""], ["proof (prove)\nusing this:\n  |restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. restrict v f c = lan v", "proof (cases \"|restrict v f c| = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| = 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v\n 2. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "case True"], ["proof (state)\nthis:\n  |restrict v f c| = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| = 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v\n 2. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "then"], ["proof (chain)\npicking this:\n  |restrict v f c| = 0", "have res_empty:\"restrict v f c = \\<emptyset>\""], ["proof (prove)\nusing this:\n  |restrict v f c| = 0\n\ngoal (1 subgoal):\n 1. restrict v f c = bot", "by (metis nat_int.card_non_empty_geq_one nat_int.card_empty_zero)"], ["proof (state)\nthis:\n  restrict v f c = bot\n\ngoal (2 subgoals):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| = 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v\n 2. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "then"], ["proof (chain)\npicking this:\n  restrict v f c = bot", "have \"lan v = \\<emptyset>\""], ["proof (prove)\nusing this:\n  restrict v f c = bot\n\ngoal (1 subgoal):\n 1. lan v = bot", "by (metis assm nat_int.card_empty_zero nat_int.card_non_empty_geq_one)"], ["proof (state)\nthis:\n  lan v = bot\n\ngoal (2 subgoals):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| = 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v\n 2. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "then"], ["proof (chain)\npicking this:\n  lan v = bot", "show \"restrict v f c = lan v\""], ["proof (prove)\nusing this:\n  lan v = bot\n\ngoal (1 subgoal):\n 1. restrict v f c = lan v", "using res_empty"], ["proof (prove)\nusing this:\n  lan v = bot\n  restrict v f c = bot\n\ngoal (1 subgoal):\n 1. restrict v f c = lan v", "by auto"], ["proof (state)\nthis:\n  restrict v f c = lan v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "case False"], ["proof (state)\nthis:\n  |restrict v f c| \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>|restrict v f c| = 0 \\<or> |restrict v f c| \\<noteq> 0;\n     |restrict v f c| \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> restrict v f c = lan v", "show \"restrict v f c = lan v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v f c = lan v", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict v f c \\<noteq> lan v \\<Longrightarrow> False", "assume non_eq:\"restrict v f c \\<noteq> lan v\""], ["proof (state)\nthis:\n  restrict v f c \\<noteq> lan v\n\ngoal (1 subgoal):\n 1. restrict v f c \\<noteq> lan v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  restrict v f c \\<noteq> lan v", "have \"restrict v f c < lan v\""], ["proof (prove)\nusing this:\n  restrict v f c \\<noteq> lan v\n\ngoal (1 subgoal):\n 1. restrict v f c < lan v", "by (simp add: assm less_le)"], ["proof (state)\nthis:\n  restrict v f c < lan v\n\ngoal (1 subgoal):\n 1. restrict v f c \\<noteq> lan v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  restrict v f c < lan v", "have \"|restrict v f c| < |lan v|\""], ["proof (prove)\nusing this:\n  restrict v f c < lan v\n\ngoal (1 subgoal):\n 1. |restrict v f c| < |lan v|", "using card_subset_less"], ["proof (prove)\nusing this:\n  restrict v f c < lan v\n  ?i < ?i' \\<longrightarrow> |?i| < |?i'|\n\ngoal (1 subgoal):\n 1. |restrict v f c| < |lan v|", "by blast"], ["proof (state)\nthis:\n  |restrict v f c| < |lan v|\n\ngoal (1 subgoal):\n 1. restrict v f c \\<noteq> lan v \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  |restrict v f c| < |lan v|", "show False"], ["proof (prove)\nusing this:\n  |restrict v f c| < |lan v|\n\ngoal (1 subgoal):\n 1. False", "using assm"], ["proof (prove)\nusing this:\n  |restrict v f c| < |lan v|\n  |restrict v f c| = |lan v| \\<and> restrict v f c \\<le> lan v\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v f c = lan v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v f c = lan v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma create_reservation_restrict_union:\n  \"(ts\\<^bold>\\<midarrow>r(c)\\<^bold>\\<rightarrow>ts') \n    \\<longrightarrow> restrict v (res ts') c = restrict v (res ts) c \\<squnion> restrict v (clm ts) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "assume assm:\"(ts\\<^bold>\\<midarrow>r(c)\\<^bold>\\<rightarrow>ts')\""], ["proof (state)\nthis:\n  ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts'\n\ngoal (1 subgoal):\n 1. ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "hence res_ts':\"res ts' c = res ts c \\<squnion> clm ts c\""], ["proof (prove)\nusing this:\n  ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts'\n\ngoal (1 subgoal):\n 1. res ts' c = res ts c \\<squnion> clm ts c", "by (simp add: create_reservation_def)"], ["proof (state)\nthis:\n  res ts' c = res ts c \\<squnion> clm ts c\n\ngoal (1 subgoal):\n 1. ts \\<^bold>\\<midarrow>r( c ) \\<^bold>\\<rightarrow> ts' \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "show \" restrict v (res ts') c = restrict v (res ts) c \\<squnion> restrict v (clm ts) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "proof (cases \"clm ts c = \\<emptyset>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. clm ts c = bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "case True"], ["proof (state)\nthis:\n  clm ts c = bot\n\ngoal (2 subgoals):\n 1. clm ts c = bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "hence res_ts'eq_ts:\"res ts' c = res ts c\""], ["proof (prove)\nusing this:\n  clm ts c = bot\n\ngoal (1 subgoal):\n 1. res ts' c = res ts c", "using res_ts' nat_int.un_empty_absorb1"], ["proof (prove)\nusing this:\n  clm ts c = bot\n  res ts' c = res ts c \\<squnion> clm ts c\n  ?i \\<squnion> bot = ?i\n\ngoal (1 subgoal):\n 1. res ts' c = res ts c", "by simp"], ["proof (state)\nthis:\n  res ts' c = res ts c\n\ngoal (2 subgoals):\n 1. clm ts c = bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "from True"], ["proof (chain)\npicking this:\n  clm ts c = bot", "have restrict_clm:\"restrict v (clm ts) c = \\<emptyset>\""], ["proof (prove)\nusing this:\n  clm ts c = bot\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = bot", "using nat_int.inter_empty2 restrict_def"], ["proof (prove)\nusing this:\n  clm ts c = bot\n  bot \\<sqinter> ?i = bot\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v (clm ts) c = bot", "by simp"], ["proof (state)\nthis:\n  restrict v (clm ts) c = bot\n\ngoal (2 subgoals):\n 1. clm ts c = bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "from res_ts'eq_ts"], ["proof (chain)\npicking this:\n  res ts' c = res ts c", "have \"restrict v (res ts') c = restrict v (res ts) c\""], ["proof (prove)\nusing this:\n  res ts' c = res ts c\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c = restrict v (res ts) c", "by (simp add: restrict_def)"], ["proof (state)\nthis:\n  restrict v (res ts') c = restrict v (res ts) c\n\ngoal (2 subgoals):\n 1. clm ts c = bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "thus ?thesis"], ["proof (prove)\nusing this:\n  restrict v (res ts') c = restrict v (res ts) c\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "using restrict_clm"], ["proof (prove)\nusing this:\n  restrict v (res ts') c = restrict v (res ts) c\n  restrict v (clm ts) c = bot\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "by (simp add: nat_int.un_empty_absorb1)"], ["proof (state)\nthis:\n  restrict v (res ts') c =\n  restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n\ngoal (1 subgoal):\n 1. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "case False"], ["proof (state)\nthis:\n  clm ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "hence \"consec (clm ts c) (res ts c) \\<or> consec (res ts c) (clm ts c)\""], ["proof (prove)\nusing this:\n  clm ts c \\<noteq> bot\n\ngoal (1 subgoal):\n 1. consec (clm ts c) (res ts c) \\<or> consec (res ts c) (clm ts c)", "by (simp add: clm_consec_res)"], ["proof (state)\nthis:\n  consec (clm ts c) (res ts c) \\<or> consec (res ts c) (clm ts c)\n\ngoal (1 subgoal):\n 1. clm ts c \\<noteq> bot \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "thus ?thesis"], ["proof (prove)\nusing this:\n  consec (clm ts c) (res ts c) \\<or> consec (res ts c) (clm ts c)\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. consec (clm ts c) (res ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. consec (res ts c) (clm ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "assume consec:\"consec (clm ts c) (res ts c)\""], ["proof (state)\nthis:\n  consec (clm ts c) (res ts c)\n\ngoal (2 subgoals):\n 1. consec (clm ts c) (res ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n 2. consec (res ts c) (clm ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "then"], ["proof (chain)\npicking this:\n  consec (clm ts c) (res ts c)", "show ?thesis"], ["proof (prove)\nusing this:\n  consec (clm ts c) (res ts c)\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "using inter_distr1 res_ts' restriction.restrict_def"], ["proof (prove)\nusing this:\n  consec (clm ts c) (res ts c)\n  consec ?j ?k \\<longrightarrow>\n  ?i \\<sqinter> (?j \\<squnion> ?k) =\n  ?i \\<sqinter> ?j \\<squnion> ?i \\<sqinter> ?k\n  res ts' c = res ts c \\<squnion> clm ts c\n  restrict ?v ?f ?c \\<equiv> ?f ?c \\<sqinter> lan ?v\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "by (simp add: Un_ac(3) inf_commute nat_int.union_def)"], ["proof (state)\nthis:\n  restrict v (res ts') c =\n  restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n\ngoal (1 subgoal):\n 1. consec (res ts c) (clm ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. consec (res ts c) (clm ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "assume consec:\"consec (res ts c) (clm ts c)\""], ["proof (state)\nthis:\n  consec (res ts c) (clm ts c)\n\ngoal (1 subgoal):\n 1. consec (res ts c) (clm ts c) \\<Longrightarrow>\n    restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "then"], ["proof (chain)\npicking this:\n  consec (res ts c) (clm ts c)", "show ?thesis"], ["proof (prove)\nusing this:\n  consec (res ts c) (clm ts c)\n\ngoal (1 subgoal):\n 1. restrict v (res ts') c =\n    restrict v (res ts) c \\<squnion> restrict v (clm ts) c", "by (simp add: inter_distr2 res_ts' restriction.restrict_def)"], ["proof (state)\nthis:\n  restrict v (res ts') c =\n  restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v (res ts') c =\n  restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrict v (res ts') c =\n  restrict v (res ts) c \\<squnion> restrict v (clm ts) c\n\ngoal:\nNo subgoals!", "qed"], ["", "(* switch lemmas *)"], ["", "lemma switch_restrict_stable:\"(v=c>u) \\<longrightarrow> restrict v f d = restrict u f d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = c > u \\<longrightarrow> restrict v f d = restrict u f d", "using switch_def"], ["proof (prove)\nusing this:\n  ?v = ?c > ?w \\<equiv>\n  ext ?v = ext ?w \\<and>\n  lan ?v = lan ?w \\<and> own ?w = ?c \\<and> more ?v = more ?w\n\ngoal (1 subgoal):\n 1. v = c > u \\<longrightarrow> restrict v f d = restrict u f d", "by (simp add: restrict_def)"], ["", "end"], ["", "end"]]}