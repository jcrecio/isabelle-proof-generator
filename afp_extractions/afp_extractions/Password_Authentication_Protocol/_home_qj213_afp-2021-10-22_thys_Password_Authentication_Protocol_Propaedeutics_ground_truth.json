{"file_name": "/home/qj213/afp-2021-10-22/thys/Password_Authentication_Protocol/Propaedeutics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Password_Authentication_Protocol", "problem_names": ["lemma set_spies [rule_format]:\n \"Says i j k A B X \\<in> set evs \\<longrightarrow> X \\<in> spies evs\"", "lemma parts_subset:\n \"H \\<subseteq> parts H\"", "lemma parts_idem:\n \"parts (parts H) = parts H\"", "lemma parts_simp:\n \"H \\<subseteq> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  parts H = H\"", "lemma parts_mono:\n \"G \\<subseteq> H \\<Longrightarrow> parts G \\<subseteq> parts H\"", "lemma parts_insert:\n \"insert X (parts H) \\<subseteq> parts (insert X H)\"", "lemma parts_simp_insert:\n \"X \\<in> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  parts (insert X H) = insert X (parts H)\"", "lemma parts_auth_data_1:\n \"parts (insert (Auth_Data x y) H) \\<subseteq>\n    {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H\"", "lemma parts_auth_data_2:\n \"{Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H \\<subseteq>\n    parts (insert (Auth_Data x y) H)\"", "lemma parts_auth_data:\n \"parts (insert (Auth_Data x y) H) =\n    {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H\"", "lemma parts_crypt_1:\n \"parts (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (parts (insert X H))\"", "lemma parts_crypt_2:\n \"insert (Crypt K X) (parts (insert X H)) \\<subseteq> parts (insert (Crypt K X) H)\"", "lemma parts_crypt:\n \"parts (insert (Crypt K X) H) = insert (Crypt K X) (parts (insert X H))\"", "lemma parts_mpair_1:\n \"parts (insert \\<lbrace>X, Y\\<rbrace> H) \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))\"", "lemma parts_mpair_2:\n \"insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H)) \\<subseteq> parts (insert \\<lbrace>X, Y\\<rbrace> H)\"", "lemma parts_mpair:\n \"parts (insert \\<lbrace>X, Y\\<rbrace> H) = insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))\"", "lemma items_subset:\n \"H \\<subseteq> items H\"", "lemma items_idem:\n \"items (items H) = items H\"", "lemma items_parts_subset:\n \"items H \\<subseteq> parts H\"", "lemma items_simp:\n \"H \\<subseteq> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  items H = H\"", "lemma items_mono:\n \"G \\<subseteq> H \\<Longrightarrow> items G \\<subseteq> items H\"", "lemma items_insert:\n \"insert X (items H) \\<subseteq> items (insert X H)\"", "lemma items_simp_insert_1:\n \"X \\<in> items H \\<Longrightarrow> items (insert X H) = items H\"", "lemma items_simp_insert_2:\n \"X \\<in> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  items (insert X H) = insert X (items H)\"", "lemma items_pri_agrk_out:\n \"Pri_AgrK x \\<notin> parts H \\<Longrightarrow>\n    items (insert (Pri_AgrK x) H) = insert (Pri_AgrK x) (items H)\"", "lemma items_auth_data_in_1:\n \"items (insert (Auth_Data x y) H) \\<subseteq>\n    insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\"", "lemma items_auth_data_in_2:\n \"Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H \\<Longrightarrow>\n    insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H)) \\<subseteq>\n      items (insert (Auth_Data x y) H)\"", "lemma items_auth_data_in:\n \"Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H \\<Longrightarrow>\n    items (insert (Auth_Data x y) H) =\n      insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\"", "lemma items_auth_data_out:\n \"\\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H\\<rbrakk> \\<Longrightarrow>\n    items (insert (Auth_Data x y) H) = insert (Auth_Data x y) (items H)\"", "lemma items_crypt_1:\n \"items (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (items (insert X H))\"", "lemma items_crypt_2:\n \"insert (Crypt K X) (items (insert X H)) \\<subseteq> items (insert (Crypt K X) H)\"", "lemma items_crypt:\n \"items (insert (Crypt K X) H) = insert (Crypt K X) (items (insert X H))\"", "lemma items_mpair_1:\n \"items (insert \\<lbrace>X, Y\\<rbrace> H) \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))\"", "lemma items_mpair_2:\n \"insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H)) \\<subseteq> items (insert \\<lbrace>X, Y\\<rbrace> H)\"", "lemma items_mpair:\n \"items (insert \\<lbrace>X, Y\\<rbrace> H) = insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))\"", "lemma analz_subset:\n \"H \\<subseteq> analz H\"", "lemma analz_idem:\n \"analz (analz H) = analz H\"", "lemma analz_parts_subset:\n \"analz H \\<subseteq> parts H\"", "lemma analz_items_subset:\n \"analz H \\<subseteq> items H\"", "lemma analz_simp:\n \"H \\<subseteq> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  analz H = H\"", "lemma analz_mono:\n \"G \\<subseteq> H \\<Longrightarrow> analz G \\<subseteq> analz H\"", "lemma analz_insert:\n \"insert X (analz H) \\<subseteq> analz (insert X H)\"", "lemma analz_simp_insert_1:\n \"X \\<in> analz H \\<Longrightarrow> analz (insert X H) = analz H\"", "lemma analz_simp_insert_2:\n \"X \\<in> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  analz (insert X H) = insert X (analz H)\"", "lemma analz_auth_data_in_1:\n \"analz (insert (Auth_Data x y) H) \\<subseteq>\n    insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\"", "lemma analz_auth_data_in_2:\n \"Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n    insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H)) \\<subseteq>\n      analz (insert (Auth_Data x y) H)\"", "lemma analz_auth_data_in:\n \"Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n    analz (insert (Auth_Data x y) H) =\n      insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\"", "lemma analz_auth_data_out:\n \"\\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H\\<rbrakk> \\<Longrightarrow>\n    analz (insert (Auth_Data x y) H) = insert (Auth_Data x y) (analz H)\"", "lemma analz_crypt_in_1:\n \"analz (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (analz (insert X H))\"", "lemma analz_crypt_in_2:\n \"Key (invK K) \\<in> analz H \\<Longrightarrow>\n    insert (Crypt K X) (analz (insert X H)) \\<subseteq> analz (insert (Crypt K X) H)\"", "lemma analz_crypt_in:\n \"Key (invK K) \\<in> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) = insert (Crypt K X) (analz (insert X H))\"", "lemma analz_crypt_out:\n \"Key (invK K) \\<notin> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) = insert (Crypt K X) (analz H)\"", "lemma analz_mpair_1:\n \"analz (insert \\<lbrace>X, Y\\<rbrace> H) \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))\"", "lemma analz_mpair_2:\n \"insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H)) \\<subseteq> analz (insert \\<lbrace>X, Y\\<rbrace> H)\"", "lemma analz_mpair:\n \"analz (insert \\<lbrace>X, Y\\<rbrace> H) = insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))\"", "lemma synth_simp_intro:\n \"X \\<in> synth H \\<Longrightarrow>\n    X \\<in> range Nonce \\<union>\n      range Key \\<union>\n      range Passwd \\<union>\n      range Pri_AgrK \\<union>\n      range Pub_AgrK \\<Longrightarrow>\n  X \\<in> H\"", "lemma synth_auth_data:\n \"Auth_Data x y \\<in> synth H \\<Longrightarrow>\n    Auth_Data x y \\<in> H \\<or> Pri_AgrK x \\<in> H \\<and> Pri_AgrK y \\<in> H\"", "lemma synth_crypt:\n \"Crypt K X \\<in> synth H \\<Longrightarrow> Crypt K X \\<in> H \\<or> X \\<in> synth H \\<and> Key K \\<in> H\"", "lemma synth_mpair:\n \"\\<lbrace>X, Y\\<rbrace> \\<in> synth H \\<Longrightarrow> \\<lbrace>X, Y\\<rbrace> \\<in> H \\<or> X \\<in> synth H \\<and> Y \\<in> synth H\"", "lemma synth_analz_fst:\n \"\\<lbrace>X, Y\\<rbrace> \\<in> synth (analz H) \\<Longrightarrow> X \\<in> synth (analz H)\"", "lemma synth_analz_snd:\n \"\\<lbrace>X, Y\\<rbrace> \\<in> synth (analz H) \\<Longrightarrow> Y \\<in> synth (analz H)\""], "translations": [["", "lemma set_spies [rule_format]:\n \"Says i j k A B X \\<in> set evs \\<longrightarrow> X \\<in> spies evs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Says i j k A B X \\<in> set evs \\<longrightarrow> X \\<in> spies evs", "apply (induction evs rule: spies.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Says i j k A B X \\<in> set [] \\<longrightarrow> X \\<in> spies []\n 2. \\<And>ia ja ka Aa Ba Xa evs.\n       Says i j k A B X \\<in> set evs \\<longrightarrow>\n       X \\<in> spies evs \\<Longrightarrow>\n       Says i j k A B X\n       \\<in> set (Says ia ja ka Aa Ba Xa # evs) \\<longrightarrow>\n       X \\<in> spies (Says ia ja ka Aa Ba Xa # evs)", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_subset:\n \"H \\<subseteq> parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> parts H", "by (rule subsetI, rule parts.Inj)"], ["", "lemma parts_idem:\n \"parts (parts H) = parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (parts H) = parts H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. parts (parts H) \\<subseteq> parts H\n 2. parts H \\<subseteq> parts (parts H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> parts (parts H) \\<Longrightarrow> x \\<in> parts H\n 2. parts H \\<subseteq> parts (parts H)", "apply (erule parts.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x X. X \\<in> parts H \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> parts (parts H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> parts (parts H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 4. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> parts (parts H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H\n 7. parts H \\<subseteq> parts (parts H)", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> parts (parts H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> parts (parts H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 3. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> parts (parts H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H\n 6. parts H \\<subseteq> parts (parts H)", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> parts (parts H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 2. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> parts (parts H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H\n 5. parts H \\<subseteq> parts (parts H)", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> parts (parts H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H\n 4. parts H \\<subseteq> parts (parts H)", "apply (erule parts.Body)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H\n 3. parts H \\<subseteq> parts (parts H)", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (parts H);\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H\n 2. parts H \\<subseteq> parts (parts H)", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. parts H \\<subseteq> parts (parts H)", "apply (rule parts_subset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_simp:\n \"H \\<subseteq> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  parts H = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    parts H = H", "apply (rule equalityI [OF _ parts_subset])"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    parts H \\<subseteq> H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        x \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> H", "apply (erule parts.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H\n 2. \\<And>x X Y.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H\n 3. \\<And>x X Y.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> H\n 4. \\<And>x K X.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        Crypt K X \\<in> parts H; Crypt K X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> H\n 5. \\<And>x xa y.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H; Auth_Data xa y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> H\n 6. \\<And>x xa y.\n       \\<lbrakk>H \\<subseteq> range Agent \\<union> range Number \\<union>\n                              range Nonce \\<union>\n                              range Key \\<union>\n                              range Hash \\<union>\n                              range Passwd \\<union>\n                              range Pri_AgrK \\<union>\n                              range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H; Auth_Data xa y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> H", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_mono:\n \"G \\<subseteq> H \\<Longrightarrow> parts G \\<subseteq> parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow> parts G \\<subseteq> parts H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<subseteq> H; x \\<in> parts G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> parts H", "apply (erule parts.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>G \\<subseteq> H; X \\<in> G\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 4. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> parts G;\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (drule subsetD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x X. X \\<in> G \\<Longrightarrow> ?c9 x X \\<in> G\n 2. \\<And>x X.\n       \\<lbrakk>X \\<in> G; ?c9 x X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 4. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 5. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> parts G;\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 7. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>X \\<in> G; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 4. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> parts G;\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 3. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> parts G;\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> parts G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 2. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> parts G;\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> parts G;\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> parts G;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_insert:\n \"insert X (parts H) \\<subseteq> parts (insert X H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert X (parts H) \\<subseteq> parts (insert X H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert X (parts H) \\<Longrightarrow>\n       x \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = X \\<or> x \\<in> parts H \\<Longrightarrow>\n       x \\<in> parts (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x = X \\<Longrightarrow> x \\<in> parts (insert X H)\n 2. \\<And>x. x \\<in> parts H \\<Longrightarrow> x \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> parts (insert X H)\n 2. \\<And>x. x \\<in> parts H \\<Longrightarrow> x \\<in> parts (insert X H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> insert X H\n 2. \\<And>x. x \\<in> parts H \\<Longrightarrow> x \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> parts H \\<Longrightarrow> x \\<in> parts (insert X H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. parts H \\<subseteq> parts (insert X H)", "apply (rule parts_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. H \\<subseteq> insert X H", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_simp_insert:\n \"X \\<in> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  parts (insert X H) = insert X (parts H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> range Agent \\<union> range Number \\<union> range Nonce \\<union>\n            range Key \\<union>\n            range Hash \\<union>\n            range Passwd \\<union>\n            range Pri_AgrK \\<union>\n            range Pub_AgrK \\<Longrightarrow>\n    parts (insert X H) = insert X (parts H)", "apply (rule equalityI [OF _ parts_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> range Agent \\<union> range Number \\<union> range Nonce \\<union>\n            range Key \\<union>\n            range Hash \\<union>\n            range Passwd \\<union>\n            range Pri_AgrK \\<union>\n            range Pub_AgrK \\<Longrightarrow>\n    parts (insert X H) \\<subseteq> insert X (parts H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        x \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert X (parts H)", "apply (erule parts.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        Xa \\<in> insert X H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (parts H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert X (parts H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (parts H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert X (parts H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert X (parts H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa \\<in> insert X (parts H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (parts H)\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y \\<in> insert X (parts H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> insert X (parts H)\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pri_AgrK \\<union>\n                        range Pub_AgrK;\n        Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y \\<in> insert X (parts H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> insert X (parts H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Xa = X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 4. \\<And>K Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rotate_tac [!])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Xa = X \\<or> Xa \\<in> H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 4. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 5. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rule disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or>\n                X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule parts.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rule disjI2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> = X\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> parts H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rule disjI2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rule disjI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> parts H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> parts H", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or>\n        X \\<in> range Pri_AgrK \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_auth_data_1:\n \"parts (insert (Auth_Data x y) H) \\<subseteq>\n    {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (insert (Auth_Data x y) H)\n    \\<subseteq> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> parts (insert (Auth_Data x y) H) \\<Longrightarrow>\n       xa \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H", "apply (erule parts.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa X.\n       X \\<in> insert (Auth_Data x y) H \\<Longrightarrow>\n       X \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H\n 2. \\<And>xa X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union>\n              parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> {Pri_AgrK x, Pri_AgrK y,\n                                  Auth_Data x y} \\<union>\n                                 parts H\n 3. \\<And>xa X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union>\n              parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> {Pri_AgrK x, Pri_AgrK y,\n                                  Auth_Data x y} \\<union>\n                                 parts H\n 4. \\<And>xa K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union>\n              parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> {Pri_AgrK x, Pri_AgrK y,\n                                  Auth_Data x y} \\<union>\n                                 parts H\n 5. \\<And>xa xaa ya.\n       \\<lbrakk>Auth_Data xaa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xaa ya\n        \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union>\n              parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xaa\n                         \\<in> {Pri_AgrK x, Pri_AgrK y,\n                                Auth_Data x y} \\<union>\n                               parts H\n 6. \\<And>xa xaa ya.\n       \\<lbrakk>Auth_Data xaa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xaa ya\n        \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union>\n              parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> {Pri_AgrK x, Pri_AgrK y,\n                                Auth_Data x y} \\<union>\n                               parts H", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X = Auth_Data x y \\<or> X \\<in> H \\<Longrightarrow>\n       X = Pri_AgrK x \\<or>\n       X = Pri_AgrK y \\<or> X = Auth_Data x y \\<or> X \\<in> parts H\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or>\n                         X = Pri_AgrK y \\<or>\n                         X = Auth_Data x y \\<or> X \\<in> parts H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y = Pri_AgrK x \\<or>\n                         Y = Pri_AgrK y \\<or>\n                         Y = Auth_Data x y \\<or> Y \\<in> parts H\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or>\n                         X = Pri_AgrK y \\<or>\n                         X = Auth_Data x y \\<or> X \\<in> parts H\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X.\n       X = Auth_Data x y \\<Longrightarrow>\n       X = Pri_AgrK x \\<or>\n       X = Pri_AgrK y \\<or> X = Auth_Data x y \\<or> X \\<in> parts H\n 2. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X = Pri_AgrK x \\<or>\n       X = Pri_AgrK y \\<or> X = Auth_Data x y \\<or> X \\<in> parts H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or>\n                         X = Pri_AgrK y \\<or>\n                         X = Auth_Data x y \\<or> X \\<in> parts H\n 4. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y = Pri_AgrK x \\<or>\n                         Y = Pri_AgrK y \\<or>\n                         Y = Auth_Data x y \\<or> Y \\<in> parts H\n 5. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or>\n                         X = Pri_AgrK y \\<or>\n                         X = Auth_Data x y \\<or> X \\<in> parts H\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 7. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X = Pri_AgrK x \\<or>\n       X = Pri_AgrK y \\<or> X = Auth_Data x y \\<or> X \\<in> parts H\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or>\n                         X = Pri_AgrK y \\<or>\n                         X = Auth_Data x y \\<or> X \\<in> parts H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y = Pri_AgrK x \\<or>\n                         Y = Pri_AgrK y \\<or>\n                         Y = Auth_Data x y \\<or> Y \\<in> parts H\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or>\n                         X = Pri_AgrK y \\<or>\n                         X = Auth_Data x y \\<or> X \\<in> parts H\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (rule_tac [1-4] disjI2)+"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X. X \\<in> H \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule parts.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 3. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 4. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 2. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 4. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Auth_Data x y) H);\n        Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> xa = y \\<or> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (rule disjI2)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> ya = x \\<or> ya = y \\<or> Pri_AgrK ya \\<in> parts H", "apply (rule disjI2)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> parts (insert (Auth_Data x y) H);\n        Auth_Data xa ya \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> parts H", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_auth_data_2:\n \"{Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H \\<subseteq>\n    parts (insert (Auth_Data x y) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H\n    \\<subseteq> parts (insert (Auth_Data x y) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union>\n                parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<or>\n       xa = Pri_AgrK y \\<or>\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa = Pri_AgrK y \\<or>\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Pri_AgrK x \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa = Pri_AgrK y \\<or>\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (rule parts.Auth_Fst [of _ y])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Auth_Data x y \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa = Pri_AgrK y \\<or>\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       xa = Pri_AgrK y \\<or>\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<or>\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Pri_AgrK y \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (rule parts.Auth_Snd [of x])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Auth_Data x y \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa = Auth_Data x y \\<or> xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Auth_Data x y \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Auth_Data x y \\<in> parts (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> parts H \\<Longrightarrow>\n       xa \\<in> parts (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. parts H \\<subseteq> parts (insert (Auth_Data x y) H)", "apply (rule parts_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. H \\<subseteq> insert (Auth_Data x y) H", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_auth_data:\n \"parts (insert (Auth_Data x y) H) =\n    {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (insert (Auth_Data x y) H) =\n    {Pri_AgrK x, Pri_AgrK y, Auth_Data x y} \\<union> parts H", "by (rule equalityI, rule parts_auth_data_1, rule parts_auth_data_2)"], ["", "lemma parts_crypt_1:\n \"parts (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (parts (insert X H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (insert (Crypt K X) H)\n    \\<subseteq> insert (Crypt K X) (parts (insert X H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> parts (insert (Crypt K X) H) \\<Longrightarrow>\n       x \\<in> insert (Crypt K X) (parts (insert X H))", "apply (erule parts.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert (Crypt K X) H \\<Longrightarrow>\n       Xa \\<in> insert (Crypt K X) (parts (insert X H))\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace>\n        \\<in> insert (Crypt K X) (parts (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (parts (insert X H))\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace>\n        \\<in> insert (Crypt K X) (parts (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Crypt K X) (parts (insert X H))\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> insert (Crypt K X) (parts (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (parts (insert X H))\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y\n        \\<in> insert (Crypt K X) (parts (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> insert (Crypt K X) (parts (insert X H))\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y\n        \\<in> insert (Crypt K X) (parts (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert (Crypt K X) (parts (insert X H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = Crypt K X \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> parts (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = Crypt K X \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 4. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> parts (insert X H)\n 5. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> parts (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (rule_tac [1-3] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> parts (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert X H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts (insert X H)\n 3. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Crypt K X) H);\n        Ka = K\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka.\n       \\<lbrakk>Crypt K X \\<in> parts (insert (Crypt K X) H);\n        Ka = K\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert X H\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> parts (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (rule disjI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> parts (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> parts (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> parts (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X H)", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_crypt_2:\n \"insert (Crypt K X) (parts (insert X H)) \\<subseteq> parts (insert (Crypt K X) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Crypt K X) (parts (insert X H))\n    \\<subseteq> parts (insert (Crypt K X) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert (Crypt K X) (parts (insert X H)) \\<Longrightarrow>\n       x \\<in> parts (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = Crypt K X \\<or> x \\<in> parts (insert X H) \\<Longrightarrow>\n       x \\<in> parts (insert (Crypt K X) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = Crypt K X \\<Longrightarrow> x \\<in> parts (insert (Crypt K X) H)\n 2. \\<And>x.\n       x \\<in> parts (insert X H) \\<Longrightarrow>\n       x \\<in> parts (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Crypt K X \\<in> parts (insert (Crypt K X) H)\n 2. \\<And>x.\n       x \\<in> parts (insert X H) \\<Longrightarrow>\n       x \\<in> parts (insert (Crypt K X) H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Crypt K X \\<in> insert (Crypt K X) H\n 2. \\<And>x.\n       x \\<in> parts (insert X H) \\<Longrightarrow>\n       x \\<in> parts (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> parts (insert X H) \\<Longrightarrow>\n       x \\<in> parts (insert (Crypt K X) H)", "apply (subst parts_idem [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> parts (insert X H) \\<Longrightarrow>\n       x \\<in> parts (parts (insert (Crypt K X) H))", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       parts (insert X H) \\<subseteq> parts (parts (insert (Crypt K X) H))", "apply (rule parts_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. insert X H \\<subseteq> parts (insert (Crypt K X) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> insert X H \\<Longrightarrow>\n       xa \\<in> parts (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa = X \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert (Crypt K X) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa. xa = X \\<Longrightarrow> xa \\<in> parts (insert (Crypt K X) H)\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow> xa \\<in> parts (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> parts (insert (Crypt K X) H)\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow> xa \\<in> parts (insert (Crypt K X) H)", "apply (rule parts.Body [of K])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Crypt K X \\<in> parts (insert (Crypt K X) H)\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow> xa \\<in> parts (insert (Crypt K X) H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Crypt K X \\<in> insert (Crypt K X) H\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow> xa \\<in> parts (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow> xa \\<in> parts (insert (Crypt K X) H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> H \\<Longrightarrow> xa \\<in> insert (Crypt K X) H", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_crypt:\n \"parts (insert (Crypt K X) H) = insert (Crypt K X) (parts (insert X H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (insert (Crypt K X) H) = insert (Crypt K X) (parts (insert X H))", "by (rule equalityI, rule parts_crypt_1, rule parts_crypt_2)"], ["", "lemma parts_mpair_1:\n \"parts (insert \\<lbrace>X, Y\\<rbrace> H) \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (insert \\<lbrace>X, Y\\<rbrace> H)\n    \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H) \\<Longrightarrow>\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))", "apply (erule parts.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> H \\<Longrightarrow>\n       Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (parts ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (parts ({X, Y} \\<union> H))\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (parts ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (parts ({X, Y} \\<union> H))\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (parts ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (parts ({X, Y} \\<union> H))\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (parts ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                (parts ({X, Y} \\<union> H))\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (parts ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                (parts ({X, Y} \\<union> H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> parts (insert X (insert Y H))\n 5. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> parts (insert X (insert Y H))\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> parts (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts (insert X (insert Y H))", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_mpair_2:\n \"insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H)) \\<subseteq> parts (insert \\<lbrace>X, Y\\<rbrace> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))\n    \\<subseteq> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                (parts ({X, Y} \\<union> H)) \\<Longrightarrow>\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<or>\n       x \\<in> parts (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x.\n       x \\<in> parts (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>x.\n       x \\<in> parts (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> parts (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (subst parts_idem [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> parts (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> parts (parts (insert \\<lbrace>X, Y\\<rbrace> H))", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       parts (insert X (insert Y H))\n       \\<subseteq> parts (parts (insert \\<lbrace>X, Y\\<rbrace> H))", "apply (rule parts_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       insert X (insert Y H)\n       \\<subseteq> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> insert X (insert Y H) \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa = X \\<or> xa = Y \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = X \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>xa.\n       xa = Y \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>xa.\n       xa = Y \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule parts.Fst [of _ Y])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>xa.\n       xa = Y \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>xa.\n       xa = Y \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa = Y \\<or> xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Y \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Y \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule parts.Snd [of X])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow>\n       xa \\<in> parts (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule parts.Inj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> H \\<Longrightarrow> xa \\<in> insert \\<lbrace>X, Y\\<rbrace> H", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parts_mpair:\n \"parts (insert \\<lbrace>X, Y\\<rbrace> H) = insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (insert \\<lbrace>X, Y\\<rbrace> H) =\n    insert \\<lbrace>X, Y\\<rbrace> (parts ({X, Y} \\<union> H))", "by (rule equalityI, rule parts_mpair_1, rule parts_mpair_2)"], ["", "lemma items_subset:\n \"H \\<subseteq> items H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> items H", "by (rule subsetI, rule items.Inj)"], ["", "lemma items_idem:\n \"items (items H) = items H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items (items H) = items H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. items (items H) \\<subseteq> items H\n 2. items H \\<subseteq> items (items H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> items (items H) \\<Longrightarrow> x \\<in> items H\n 2. items H \\<subseteq> items (items H)", "apply (erule items.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x X. X \\<in> items H \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items (items H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items (items H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items (items H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (items H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 7. items H \\<subseteq> items (items H)", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items (items H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items (items H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 3. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items (items H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (items H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 6. items H \\<subseteq> items (items H)", "apply (erule items.Fst)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items (items H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items (items H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (items H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 5. items H \\<subseteq> items (items H)", "apply (erule items.Snd)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items (items H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (items H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 4. items H \\<subseteq> items (items H)", "apply (erule items.Body)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (items H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 3. items H \\<subseteq> items (items H)", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Pri_AgrK y \\<in> items (items H); Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 3. items H \\<subseteq> items (items H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. items H \\<subseteq> items (items H)", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (items H);\n        Pri_AgrK xa \\<in> items (items H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. items H \\<subseteq> items (items H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. items H \\<subseteq> items (items H)", "apply (rule items_subset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_parts_subset:\n \"items H \\<subseteq> parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items H \\<subseteq> parts H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> items H \\<Longrightarrow> x \\<in> parts H", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X. X \\<in> H \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 4. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items H; Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> items H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> items H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 3. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items H; Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> items H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> items H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 2. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items H; Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> items H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> items H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> items H; Crypt K X \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> items H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> items H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> items H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> items H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> items H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_simp:\n \"H \\<subseteq> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  items H = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    items H = H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    items H \\<subseteq> H\n 2. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> items H", "apply (subst (3) parts_simp [symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK\n 2. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    items H \\<subseteq> parts H\n 3. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> items H", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    items H \\<subseteq> parts H\n 2. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> items H", "apply (rule items_parts_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> items H", "apply (rule items_subset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_mono:\n \"G \\<subseteq> H \\<Longrightarrow> items G \\<subseteq> items H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow> items G \\<subseteq> items H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<subseteq> H; x \\<in> items G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> items H", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>G \\<subseteq> H; X \\<in> G\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> items G;\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (drule subsetD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x X. X \\<in> G \\<Longrightarrow> ?c9 x X \\<in> G\n 2. \\<And>x X.\n       \\<lbrakk>X \\<in> G; ?c9 x X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 4. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 5. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> items G;\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 7. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>X \\<in> G; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> items G;\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 3. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> items G;\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> items G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> items G;\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> items G;\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items G;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Pri_AgrK y \\<in> items G; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items G;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> items G;\n        Pri_AgrK xa \\<in> items G; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_insert:\n \"insert X (items H) \\<subseteq> items (insert X H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert X (items H) \\<subseteq> items (insert X H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert X (items H) \\<Longrightarrow>\n       x \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = X \\<or> x \\<in> items H \\<Longrightarrow>\n       x \\<in> items (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x = X \\<Longrightarrow> x \\<in> items (insert X H)\n 2. \\<And>x. x \\<in> items H \\<Longrightarrow> x \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> items (insert X H)\n 2. \\<And>x. x \\<in> items H \\<Longrightarrow> x \\<in> items (insert X H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> insert X H\n 2. \\<And>x. x \\<in> items H \\<Longrightarrow> x \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> items H \\<Longrightarrow> x \\<in> items (insert X H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. items H \\<subseteq> items (insert X H)", "apply (rule items_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. H \\<subseteq> insert X H", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_simp_insert_1:\n \"X \\<in> items H \\<Longrightarrow> items (insert X H) = items H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> items H \\<Longrightarrow> items (insert X H) = items H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> items H \\<Longrightarrow> items (insert X H) \\<subseteq> items H\n 2. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>X \\<in> items H; x \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> items H\n 2. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.induct [of _ \"insert X H\"])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>X \\<in> items H; Xa \\<in> insert X H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 7. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> items H; Xa = X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 7. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> items H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>Xa.\n       \\<lbrakk>X \\<in> items H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 4. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 5. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 7. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 8. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> items H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 7. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 3. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 6. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.Fst)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> items H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 5. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.Snd)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> items H; Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 4. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.Body)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 3. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 3. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> items H; Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> items H \\<Longrightarrow> items H \\<subseteq> items (insert X H)", "apply (rule items_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> items H \\<Longrightarrow> H \\<subseteq> insert X H", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_simp_insert_2:\n \"X \\<in> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  items (insert X H) = insert X (items H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> range Agent \\<union> range Number \\<union> range Nonce \\<union>\n            range Key \\<union>\n            range Hash \\<union>\n            range Passwd \\<union>\n            range Pub_AgrK \\<Longrightarrow>\n    items (insert X H) = insert X (items H)", "apply (rule equalityI [OF _ items_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> range Agent \\<union> range Number \\<union> range Nonce \\<union>\n            range Key \\<union>\n            range Hash \\<union>\n            range Passwd \\<union>\n            range Pub_AgrK \\<Longrightarrow>\n    items (insert X H) \\<subseteq> insert X (items H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        x \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert X (items H)", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Xa \\<in> insert X H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (items H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert X (items H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (items H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert X (items H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert X (items H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa \\<in> insert X (items H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (items H)\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> insert X (items H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> insert X (items H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> insert X (items H)\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Key \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> insert X (items H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> insert X (items H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> insert X (items H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa = X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 4. \\<And>K Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rotate_tac [!])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Xa = X \\<or> Xa \\<in> H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 4. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 5. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Key \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> = X\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> items H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> items H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> items H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Key \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_pri_agrk_out:\n \"Pri_AgrK x \\<notin> parts H \\<Longrightarrow>\n    items (insert (Pri_AgrK x) H) = insert (Pri_AgrK x) (items H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pri_AgrK x \\<notin> parts H \\<Longrightarrow>\n    items (insert (Pri_AgrK x) H) = insert (Pri_AgrK x) (items H)", "apply (rule equalityI [OF _ items_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Pri_AgrK x \\<notin> parts H \\<Longrightarrow>\n    items (insert (Pri_AgrK x) H) \\<subseteq> insert (Pri_AgrK x) (items H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        xa \\<in> items (insert (Pri_AgrK x) H)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Pri_AgrK x) (items H)", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        X \\<in> insert (Pri_AgrK x) H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Pri_AgrK x) (items H)\n 2. \\<And>xa X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> insert (Pri_AgrK x) (items H)\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Pri_AgrK x) (items H)\n 3. \\<And>xa X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> insert (Pri_AgrK x) (items H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Pri_AgrK x) (items H)\n 4. \\<And>xa K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> insert (Pri_AgrK x) (items H)\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Pri_AgrK x) (items H)\n 5. \\<And>xa xaa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xaa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xaa y \\<in> insert (Pri_AgrK x) (items H);\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> insert (Pri_AgrK x) (items H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xaa \\<in> insert (Pri_AgrK x) (items H)\n 6. \\<And>xa xaa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xaa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xaa y \\<in> insert (Pri_AgrK x) (items H);\n        Pri_AgrK xaa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xaa \\<in> insert (Pri_AgrK x) (items H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> insert (Pri_AgrK x) (items H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        X = Pri_AgrK x \\<or> X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = Pri_AgrK x \\<or> Y \\<in> items H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H; X = Pri_AgrK x\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 2. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 4. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = Pri_AgrK x \\<or> Y \\<in> items H\n 5. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 7. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = Pri_AgrK x \\<or> Y \\<in> items H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Pri_AgrK x \\<or> X \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 3. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 5. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Pri_AgrK x) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 4. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Crypt K X \\<in> items (insert (Pri_AgrK x) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        y = x \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H); y = x\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa x \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa x \\<in> items H;\n        Pri_AgrK x \\<in> items (insert (Pri_AgrK x) H); y = x\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (drule subsetD [OF items_parts_subset [of H]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa x \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK x \\<in> items (insert (Pri_AgrK x) H); y = x;\n        Auth_Data xa x \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (drule parts.Auth_Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa x \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK x \\<in> items (insert (Pri_AgrK x) H); y = x;\n        Pri_AgrK x \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa = x \\<or> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        xa = x \\<or> Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H); xa = x\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data x y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data x y \\<in> items H;\n        Pri_AgrK x \\<in> items (insert (Pri_AgrK x) H); xa = x\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (drule subsetD [OF items_parts_subset [of H]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data x y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK x \\<in> items (insert (Pri_AgrK x) H); xa = x;\n        Auth_Data x y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (drule parts.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data x y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK x \\<in> items (insert (Pri_AgrK x) H); xa = x;\n        Pri_AgrK x \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H\n 2. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> y = x \\<or> Pri_AgrK y \\<in> items H", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Pri_AgrK x \\<notin> parts H;\n        Auth_Data xa y \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items (insert (Pri_AgrK x) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_auth_data_in_1:\n \"items (insert (Auth_Data x y) H) \\<subseteq>\n    insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items (insert (Auth_Data x y) H)\n    \\<subseteq> insert (Auth_Data x y)\n                 (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> items (insert (Auth_Data x y) H) \\<Longrightarrow>\n       xa \\<in> insert (Auth_Data x y)\n                 (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa X.\n       X \\<in> insert (Auth_Data x y) H \\<Longrightarrow>\n       X \\<in> insert (Auth_Data x y)\n                (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 2. \\<And>xa X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y)\n                                  (items\n                                    ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 3. \\<And>xa X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Auth_Data x y)\n                                  (items\n                                    ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 4. \\<And>xa K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y)\n                                  (items\n                                    ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 5. \\<And>xa xaa ya.\n       \\<lbrakk>Auth_Data xaa ya \\<in> items (insert (Auth_Data x y) H);\n        Auth_Data xaa ya\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xaa\n                         \\<in> insert (Auth_Data x y)\n                                (items\n                                  ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 6. \\<And>xa xaa ya.\n       \\<lbrakk>Auth_Data xaa ya \\<in> items (insert (Auth_Data x y) H);\n        Auth_Data xaa ya\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H));\n        Pri_AgrK xaa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xaa\n        \\<in> insert (Auth_Data x y)\n               (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> insert (Auth_Data x y)\n                                (items\n                                  ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X = Auth_Data x y \\<or> X \\<in> H \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or>\n                         Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X.\n       X = Auth_Data x y \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or>\n                         Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 7. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or>\n                         Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 2. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 4. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK y \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK y\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule items.Inj)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK y \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK y\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x\n                         \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK x \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK x\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule items.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK x \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK x\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_auth_data_in_2:\n \"Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H \\<Longrightarrow>\n    insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H)) \\<subseteq>\n      items (insert (Auth_Data x y) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pri_AgrK x \\<in> items H \\<or>\n    Pri_AgrK y \\<in> items H \\<Longrightarrow>\n    insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n    \\<subseteq> items (insert (Auth_Data x y) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> insert (Auth_Data x y)\n                  (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Auth_Data x y \\<or>\n        xa \\<in> items\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Auth_Data x y \\<or>\n                xa \\<in> items\n                          (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Auth_Data x y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> items\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Auth_Data x y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> items\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> items\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (subst items_idem [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> items\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (items (insert (Auth_Data x y) H))", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       Pri_AgrK x \\<in> items H \\<or>\n       Pri_AgrK y \\<in> items H \\<Longrightarrow>\n       items (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n       \\<subseteq> items (items (insert (Auth_Data x y) H))", "apply (rule items_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       Pri_AgrK x \\<in> items H \\<or>\n       Pri_AgrK y \\<in> items H \\<Longrightarrow>\n       insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n       \\<subseteq> items (insert (Auth_Data x y) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xaa \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK x \\<or> xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x \\<or> xa = Pri_AgrK y \\<or> xa \\<in> H;\n        Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       items H \\<subseteq> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items.Auth_Fst [of _ y])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y\n                         \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       items H \\<subseteq> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y \\<or> xa \\<in> H;\n        Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa = Pri_AgrK y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items.Auth_Snd [of x])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y\n                         \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 4. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 4. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       items H \\<subseteq> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       items H \\<subseteq> items (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> items (insert (Auth_Data x y) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Auth_Data x y) H", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_auth_data_in:\n \"Pri_AgrK x \\<in> items H \\<or> Pri_AgrK y \\<in> items H \\<Longrightarrow>\n    items (insert (Auth_Data x y) H) =\n      insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pri_AgrK x \\<in> items H \\<or>\n    Pri_AgrK y \\<in> items H \\<Longrightarrow>\n    items (insert (Auth_Data x y) H) =\n    insert (Auth_Data x y) (items ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "by (rule equalityI, rule items_auth_data_in_1, rule items_auth_data_in_2)"], ["", "lemma items_auth_data_out:\n \"\\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H\\<rbrakk> \\<Longrightarrow>\n    items (insert (Auth_Data x y) H) = insert (Auth_Data x y) (items H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pri_AgrK x \\<notin> items H;\n     Pri_AgrK y \\<notin> items H\\<rbrakk>\n    \\<Longrightarrow> items (insert (Auth_Data x y) H) =\n                      insert (Auth_Data x y) (items H)", "apply (rule equalityI [OF _ items_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pri_AgrK x \\<notin> items H;\n     Pri_AgrK y \\<notin> items H\\<rbrakk>\n    \\<Longrightarrow> items (insert (Auth_Data x y) H)\n                      \\<subseteq> insert (Auth_Data x y) (items H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        xa \\<in> items (insert (Auth_Data x y) H)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Auth_Data x y) (items H)", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        X \\<in> insert (Auth_Data x y) H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y) (items H)\n 2. \\<And>xa X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y) (items H)\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y) (items H)\n 3. \\<And>xa X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y) (items H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Auth_Data x y) (items H)\n 4. \\<And>xa K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> insert (Auth_Data x y) (items H)\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y) (items H)\n 5. \\<And>xa xaa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xaa ya \\<in> items (insert (Auth_Data x y) H);\n        Auth_Data xaa ya \\<in> insert (Auth_Data x y) (items H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> insert (Auth_Data x y) (items H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xaa \\<in> insert (Auth_Data x y) (items H)\n 6. \\<And>xa xaa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xaa ya \\<in> items (insert (Auth_Data x y) H);\n        Auth_Data xaa ya \\<in> insert (Auth_Data x y) (items H);\n        Pri_AgrK xaa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xaa \\<in> insert (Auth_Data x y) (items H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> insert (Auth_Data x y) (items H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        X = Auth_Data x y \\<or> X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or> Y \\<in> items H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        X = Auth_Data x y\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 2. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 4. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or> Y \\<in> items H\n 5. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 7. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or> Y \\<in> items H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> items H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule items.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 3. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 4. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 4. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Crypt K X \\<in> items (insert (Auth_Data x y) H);\n        Crypt K X \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H; xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H; Auth_Data xa ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H; Auth_Data xa ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> items H;\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H; xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H; Auth_Data xa ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H; Auth_Data xa ya \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> items H", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> items H; Pri_AgrK y \\<notin> items H;\n        Auth_Data xa ya \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_crypt_1:\n \"items (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (items (insert X H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items (insert (Crypt K X) H)\n    \\<subseteq> insert (Crypt K X) (items (insert X H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> items (insert (Crypt K X) H) \\<Longrightarrow>\n       x \\<in> insert (Crypt K X) (items (insert X H))", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert (Crypt K X) H \\<Longrightarrow>\n       Xa \\<in> insert (Crypt K X) (items (insert X H))\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace>\n        \\<in> insert (Crypt K X) (items (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (items (insert X H))\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace>\n        \\<in> insert (Crypt K X) (items (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Crypt K X) (items (insert X H))\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> insert (Crypt K X) (items (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (items (insert X H))\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> insert (Crypt K X) (items (insert X H));\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> insert (Crypt K X) (items (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> insert (Crypt K X) (items (insert X H))\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> insert (Crypt K X) (items (insert X H));\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> insert (Crypt K X) (items (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert (Crypt K X) (items (insert X H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = Crypt K X \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> items (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = Crypt K X \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 4. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> items (insert X H)\n 5. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> items (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> items (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert X H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert X H)\n 3. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or>\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Crypt K X) H);\n        Ka = K\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka.\n       \\<lbrakk>Crypt K X \\<in> items (insert (Crypt K X) H);\n        Ka = K\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert X H\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X H)", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X H)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_crypt_2:\n \"insert (Crypt K X) (items (insert X H)) \\<subseteq> items (insert (Crypt K X) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Crypt K X) (items (insert X H))\n    \\<subseteq> items (insert (Crypt K X) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert (Crypt K X) (items (insert X H)) \\<Longrightarrow>\n       x \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = Crypt K X \\<or> x \\<in> items (insert X H) \\<Longrightarrow>\n       x \\<in> items (insert (Crypt K X) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = Crypt K X \\<Longrightarrow> x \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x.\n       x \\<in> items (insert X H) \\<Longrightarrow>\n       x \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Crypt K X \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x.\n       x \\<in> items (insert X H) \\<Longrightarrow>\n       x \\<in> items (insert (Crypt K X) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Crypt K X \\<in> insert (Crypt K X) H\n 2. \\<And>x.\n       x \\<in> items (insert X H) \\<Longrightarrow>\n       x \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> items (insert X H) \\<Longrightarrow>\n       x \\<in> items (insert (Crypt K X) H)", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert X H \\<Longrightarrow>\n       Xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = X \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa. Xa = X \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. X \\<in> items (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (rule items.Body [of K])"], ["proof (prove)\ngoal (7 subgoals):\n 1. Crypt K X \\<in> items (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (7 subgoals):\n 1. Crypt K X \\<in> insert (Crypt K X) H\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert (Crypt K X) H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> items (insert X H);\n        Crypt Ka Xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert X H);\n        Pri_AgrK y \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Auth_Data xa y \\<in> items (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert (Crypt K X) H)", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert X H);\n        Pri_AgrK xa \\<in> items (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert (Crypt K X) H)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_crypt:\n \"items (insert (Crypt K X) H) = insert (Crypt K X) (items (insert X H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items (insert (Crypt K X) H) = insert (Crypt K X) (items (insert X H))", "by (rule equalityI, rule items_crypt_1, rule items_crypt_2)"], ["", "lemma items_mpair_1:\n \"items (insert \\<lbrace>X, Y\\<rbrace> H) \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items (insert \\<lbrace>X, Y\\<rbrace> H)\n    \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H) \\<Longrightarrow>\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> H \\<Longrightarrow>\n       Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (items ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (items ({X, Y} \\<union> H))\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (items ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (items ({X, Y} \\<union> H))\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (items ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (items ({X, Y} \\<union> H))\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (items ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                (items ({X, Y} \\<union> H))\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (items ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                (items ({X, Y} \\<union> H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> items (insert X (insert Y H))\n 4. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> items (insert X (insert Y H))\n 5. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (rule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (rule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (rule items.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert X (insert Y H))\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items (insert X (insert Y H))", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items (insert X (insert Y H))", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_mpair_2:\n \"insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H)) \\<subseteq> items (insert \\<lbrace>X, Y\\<rbrace> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))\n    \\<subseteq> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                (items ({X, Y} \\<union> H)) \\<Longrightarrow>\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<or>\n       x \\<in> items (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x.\n       x \\<in> items (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>x.\n       x \\<in> items (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> items (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule items.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert X (insert Y H) \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = X \\<or> Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = X \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. X \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule items.Fst [of _ Y])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = Y \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. Y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule items.Snd [of X])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule items.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> items (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> items (insert X (insert Y H));\n        Crypt K Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert X (insert Y H));\n        Pri_AgrK y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Auth_Data xa y \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert X (insert Y H));\n        Pri_AgrK xa \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> items (insert \\<lbrace>X, Y\\<rbrace> H)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma items_mpair:\n \"items (insert \\<lbrace>X, Y\\<rbrace> H) = insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items (insert \\<lbrace>X, Y\\<rbrace> H) =\n    insert \\<lbrace>X, Y\\<rbrace> (items ({X, Y} \\<union> H))", "by (rule equalityI, rule items_mpair_1, rule items_mpair_2)"], ["", "lemma analz_subset:\n \"H \\<subseteq> analz H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> analz H", "by (rule subsetI, rule analz.Inj)"], ["", "lemma analz_idem:\n \"analz (analz H) = analz H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (analz H) = analz H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. analz (analz H) \\<subseteq> analz H\n 2. analz H \\<subseteq> analz (analz H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> analz (analz H) \\<Longrightarrow> x \\<in> analz H\n 2. analz H \\<subseteq> analz (analz H)", "apply (erule analz.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x X. X \\<in> analz H \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (analz H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (analz H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz (analz H); Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (analz H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 7. analz H \\<subseteq> analz (analz H)", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (analz H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (analz H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 3. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz (analz H); Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (analz H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 6. analz H \\<subseteq> analz (analz H)", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (analz H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 2. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz (analz H); Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (analz H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 5. analz H \\<subseteq> analz (analz H)", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz (analz H); Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (analz H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 4. analz H \\<subseteq> analz (analz H)", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz (analz H);\n        Key (invK K) \\<in> analz (analz H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 4. analz H \\<subseteq> analz (analz H)", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 3. analz H \\<subseteq> analz (analz H)", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Pri_AgrK y \\<in> analz (analz H); Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 3. analz H \\<subseteq> analz (analz H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. analz H \\<subseteq> analz (analz H)", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz (analz H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. analz H \\<subseteq> analz (analz H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. analz H \\<subseteq> analz (analz H)", "apply (rule analz_subset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_parts_subset:\n \"analz H \\<subseteq> parts H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz H \\<subseteq> parts H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> analz H \\<Longrightarrow> x \\<in> parts H", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X. X \\<in> H \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 4. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> parts H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 3. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> parts H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> parts H\n 2. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> parts H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> parts H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> parts H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> parts H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> parts H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> parts H", "apply (erule parts.Auth_Snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_items_subset:\n \"analz H \\<subseteq> items H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz H \\<subseteq> items H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> analz H \\<Longrightarrow> x \\<in> items H", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X. X \\<in> H \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 4. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> items H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 3. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> items H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> items H\n 2. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> items H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>Crypt K X \\<in> analz H; Crypt K X \\<in> items H;\n        Key (invK K) \\<in> analz H; Key (invK K) \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Body)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK y \\<in> analz H; Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz H;\n        Pri_AgrK y \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Auth_Data xa y \\<in> items H;\n        Pri_AgrK xa \\<in> analz H; Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> items H", "apply (erule items.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz H;\n        Pri_AgrK xa \\<in> items H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> items H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_simp:\n \"H \\<subseteq> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Key \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pri_AgrK \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  analz H = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    analz H = H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    analz H \\<subseteq> H\n 2. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> analz H", "apply (subst (3) parts_simp [symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK\n 2. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    analz H \\<subseteq> parts H\n 3. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> analz H", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    analz H \\<subseteq> parts H\n 2. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> analz H", "apply (rule analz_parts_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> range Agent \\<union> range Number \\<union>\n                  range Nonce \\<union>\n                  range Key \\<union>\n                  range Hash \\<union>\n                  range Passwd \\<union>\n                  range Pri_AgrK \\<union>\n                  range Pub_AgrK \\<Longrightarrow>\n    H \\<subseteq> analz H", "apply (rule analz_subset)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_mono:\n \"G \\<subseteq> H \\<Longrightarrow> analz G \\<subseteq> analz H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow> analz G \\<subseteq> analz H", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>G \\<subseteq> H; x \\<in> analz G\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz H", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>G \\<subseteq> H; X \\<in> G\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Crypt K X \\<in> analz H; Key (invK K) \\<in> analz G;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (drule subsetD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x X. X \\<in> G \\<Longrightarrow> ?c9 x X \\<in> G\n 2. \\<And>x X.\n       \\<lbrakk>X \\<in> G; ?c9 x X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 4. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 5. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Crypt K X \\<in> analz H; Key (invK K) \\<in> analz G;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 7. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x X.\n       \\<lbrakk>X \\<in> G; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Crypt K X \\<in> analz H; Key (invK K) \\<in> analz G;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 3. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Crypt K X \\<in> analz H; Key (invK K) \\<in> analz G;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 4. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x X Y.\n       \\<lbrakk>G \\<subseteq> H; \\<lbrace>X, Y\\<rbrace> \\<in> analz G;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 2. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Crypt K X \\<in> analz H; Key (invK K) \\<in> analz G;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 4. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Crypt K X \\<in> analz H; Key (invK K) \\<in> analz G;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K X.\n       \\<lbrakk>G \\<subseteq> H; Crypt K X \\<in> analz G;\n        Key (invK K) \\<in> analz G; Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz G;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Pri_AgrK y \\<in> analz G; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz G;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>G \\<subseteq> H; Auth_Data xa y \\<in> analz G;\n        Pri_AgrK xa \\<in> analz G; Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_insert:\n \"insert X (analz H) \\<subseteq> analz (insert X H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert X (analz H) \\<subseteq> analz (insert X H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert X (analz H) \\<Longrightarrow>\n       x \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = X \\<or> x \\<in> analz H \\<Longrightarrow>\n       x \\<in> analz (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x = X \\<Longrightarrow> x \\<in> analz (insert X H)\n 2. \\<And>x. x \\<in> analz H \\<Longrightarrow> x \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> analz (insert X H)\n 2. \\<And>x. x \\<in> analz H \\<Longrightarrow> x \\<in> analz (insert X H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> insert X H\n 2. \\<And>x. x \\<in> analz H \\<Longrightarrow> x \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> analz H \\<Longrightarrow> x \\<in> analz (insert X H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. analz H \\<subseteq> analz (insert X H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. H \\<subseteq> insert X H", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_simp_insert_1:\n \"X \\<in> analz H \\<Longrightarrow> analz (insert X H) = analz H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> analz H \\<Longrightarrow> analz (insert X H) = analz H", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. X \\<in> analz H \\<Longrightarrow> analz (insert X H) \\<subseteq> analz H\n 2. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>X \\<in> analz H; x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz H\n 2. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.induct [of _ \"insert X H\"])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>X \\<in> analz H; Xa \\<in> insert X H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 7. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> analz H; Xa = X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 7. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>Xa.\n       \\<lbrakk>X \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 4. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 5. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 7. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 8. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 7. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 3. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 4. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 6. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 2. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 4. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 5. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 4. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> analz H; Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 4. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 3. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 3. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>X \\<in> analz H; Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> analz H \\<Longrightarrow> analz H \\<subseteq> analz (insert X H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> analz H \\<Longrightarrow> H \\<subseteq> insert X H", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_simp_insert_2:\n \"X \\<in> range Agent \\<union>\n    range Number \\<union>\n    range Nonce \\<union>\n    range Hash \\<union>\n    range Passwd \\<union>\n    range Pub_AgrK \\<Longrightarrow>\n  analz (insert X H) = insert X (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> range Agent \\<union> range Number \\<union> range Nonce \\<union>\n            range Hash \\<union>\n            range Passwd \\<union>\n            range Pub_AgrK \\<Longrightarrow>\n    analz (insert X H) = insert X (analz H)", "apply (rule equalityI [OF _ analz_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> range Agent \\<union> range Number \\<union> range Nonce \\<union>\n            range Hash \\<union>\n            range Passwd \\<union>\n            range Pub_AgrK \\<Longrightarrow>\n    analz (insert X H) \\<subseteq> insert X (analz H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert X (analz H)", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Xa \\<in> insert X H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (analz H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert X (analz H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (analz H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert X (analz H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert X (analz H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa \\<in> insert X (analz H);\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) \\<in> insert X (analz H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert X (analz H)\n 5. \\<And>x xa y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> insert X (analz H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> insert X (analz H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> insert X (analz H)\n 6. \\<And>x xa y.\n       \\<lbrakk>X \\<in> range Agent \\<union> range Number \\<union>\n                        range Nonce \\<union>\n                        range Hash \\<union>\n                        range Passwd \\<union>\n                        range Pub_AgrK;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> insert X (analz H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> insert X (analz H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> insert X (analz H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa = X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 4. \\<And>K Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rotate_tac [!])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Xa = X \\<or> Xa \\<in> H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 4. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 5. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rule disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>X \\<in> range Agent \\<or>\n                X \\<in> range Number \\<or>\n                X \\<in> range Nonce \\<or>\n                X \\<in> range Hash \\<or>\n                X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule analz.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rule disjI2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> = X \\<or>\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> = X\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = X \\<or> Y \\<in> analz H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rule disjI2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Crypt K Xa = X \\<or> Crypt K Xa \\<in> analz H;\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        Key (invK K) = X \\<or> Key (invK K) \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz H; Key (invK K) = X\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = X \\<or> Xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rule disjI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Crypt K Xa \\<in> analz H; Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y = X \\<or> Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa = X \\<or> Pri_AgrK xa \\<in> analz H;\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa = X\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y = X \\<or> Pri_AgrK y \\<in> analz H", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Auth_Data xa y \\<in> analz H; Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        X \\<in> range Agent \\<or>\n        X \\<in> range Number \\<or>\n        X \\<in> range Nonce \\<or>\n        X \\<in> range Hash \\<or>\n        X \\<in> range Passwd \\<or> X \\<in> range Pub_AgrK;\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_auth_data_in_1:\n \"analz (insert (Auth_Data x y) H) \\<subseteq>\n    insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (insert (Auth_Data x y) H)\n    \\<subseteq> insert (Auth_Data x y)\n                 (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> analz (insert (Auth_Data x y) H) \\<Longrightarrow>\n       xa \\<in> insert (Auth_Data x y)\n                 (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa X.\n       X \\<in> insert (Auth_Data x y) H \\<Longrightarrow>\n       X \\<in> insert (Auth_Data x y)\n                (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 2. \\<And>xa X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y)\n                                  (analz\n                                    ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 3. \\<And>xa X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Auth_Data x y)\n                                  (analz\n                                    ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 4. \\<And>xa K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y)\n                                  (analz\n                                    ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 5. \\<And>xa xaa ya.\n       \\<lbrakk>Auth_Data xaa ya \\<in> analz (insert (Auth_Data x y) H);\n        Auth_Data xaa ya\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xaa\n                         \\<in> insert (Auth_Data x y)\n                                (analz\n                                  ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n 6. \\<And>xa xaa ya.\n       \\<lbrakk>Auth_Data xaa ya \\<in> analz (insert (Auth_Data x y) H);\n        Auth_Data xaa ya\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H));\n        Pri_AgrK xaa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xaa\n        \\<in> insert (Auth_Data x y)\n               (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> insert (Auth_Data x y)\n                                (analz\n                                  ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X = Auth_Data x y \\<or> X \\<in> H \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or>\n                         Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X.\n       X = Auth_Data x y \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or>\n                         Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 7. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X = Auth_Data x y \\<or>\n       X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or>\n                         Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or>\n                         X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       X \\<in> H \\<Longrightarrow>\n       X \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 6. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 4. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 5. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 2. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 4. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz\n                                  (insert (Pri_AgrK x)\n                                    (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K)\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Key (invK K)\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK y\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK y\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x\n                         \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 3. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or>\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK x\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Auth_Data x y \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK x\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        xa = x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n 2. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Auth_Data xa ya\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa\n        \\<in> analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz\n                                (insert (Pri_AgrK x)\n                                  (insert (Pri_AgrK y) H))", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_auth_data_in_2:\n \"Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n    insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H)) \\<subseteq>\n      analz (insert (Auth_Data x y) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pri_AgrK x \\<in> analz H \\<or>\n    Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n    insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\n    \\<subseteq> analz (insert (Auth_Data x y) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> insert (Auth_Data x y)\n                  (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Auth_Data x y \\<or>\n        xa \\<in> analz\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Auth_Data x y \\<or>\n                xa \\<in> analz\n                          (insert (Pri_AgrK x) (insert (Pri_AgrK y) H));\n        Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Auth_Data x y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> analz\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Auth_Data x y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> analz\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> analz\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (subst analz_idem [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> analz\n                  (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (analz (insert (Auth_Data x y) H))", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       Pri_AgrK x \\<in> analz H \\<or>\n       Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n       analz (insert (Pri_AgrK x) (insert (Pri_AgrK y) H))\n       \\<subseteq> analz (analz (insert (Auth_Data x y) H))", "apply (rule analz_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       Pri_AgrK x \\<in> analz H \\<or>\n       Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n       insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\n       \\<subseteq> analz (insert (Auth_Data x y) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xaa \\<in> insert (Pri_AgrK x) (insert (Pri_AgrK y) H)\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK x \\<or> xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x \\<or> xa = Pri_AgrK y \\<or> xa \\<in> H;\n        Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK x\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       analz H \\<subseteq> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz.Auth_Fst [of _ y])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y\n                         \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK x; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       analz H \\<subseteq> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK x \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y \\<or> xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y \\<or> xa \\<in> H;\n        Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa = Pri_AgrK y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz.Auth_Snd [of x])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y\n                         \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 4. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Auth_Data x y \\<in> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 4. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK x \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK x \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       analz H \\<subseteq> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 3. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>xa = Pri_AgrK y; Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       analz H \\<subseteq> analz (insert (Auth_Data x y) H)\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa = Pri_AgrK y \\<Longrightarrow>\n       H \\<subseteq> insert (Auth_Data x y) H\n 2. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> analz (insert (Auth_Data x y) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H;\n        xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Auth_Data x y) H", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_auth_data_in:\n \"Pri_AgrK x \\<in> analz H \\<or> Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n    analz (insert (Auth_Data x y) H) =\n      insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pri_AgrK x \\<in> analz H \\<or>\n    Pri_AgrK y \\<in> analz H \\<Longrightarrow>\n    analz (insert (Auth_Data x y) H) =\n    insert (Auth_Data x y) (analz ({Pri_AgrK x, Pri_AgrK y} \\<union> H))", "by (rule equalityI, rule analz_auth_data_in_1, rule analz_auth_data_in_2)"], ["", "lemma analz_auth_data_out:\n \"\\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H\\<rbrakk> \\<Longrightarrow>\n    analz (insert (Auth_Data x y) H) = insert (Auth_Data x y) (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pri_AgrK x \\<notin> analz H;\n     Pri_AgrK y \\<notin> analz H\\<rbrakk>\n    \\<Longrightarrow> analz (insert (Auth_Data x y) H) =\n                      insert (Auth_Data x y) (analz H)", "apply (rule equalityI [OF _ analz_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pri_AgrK x \\<notin> analz H;\n     Pri_AgrK y \\<notin> analz H\\<rbrakk>\n    \\<Longrightarrow> analz (insert (Auth_Data x y) H)\n                      \\<subseteq> insert (Auth_Data x y) (analz H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        xa \\<in> analz (insert (Auth_Data x y) H)\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> insert (Auth_Data x y) (analz H)", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        X \\<in> insert (Auth_Data x y) H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y) (analz H)\n 2. \\<And>xa X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y) (analz H)\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y) (analz H)\n 3. \\<And>xa X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace>\n        \\<in> insert (Auth_Data x y) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Auth_Data x y) (analz H)\n 4. \\<And>xa K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> insert (Auth_Data x y) (analz H);\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> insert (Auth_Data x y) (analz H)\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert (Auth_Data x y) (analz H)\n 5. \\<And>xa xaa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xaa ya \\<in> analz (insert (Auth_Data x y) H);\n        Auth_Data xaa ya \\<in> insert (Auth_Data x y) (analz H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> insert (Auth_Data x y) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xaa \\<in> insert (Auth_Data x y) (analz H)\n 6. \\<And>xa xaa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xaa ya \\<in> analz (insert (Auth_Data x y) H);\n        Auth_Data xaa ya \\<in> insert (Auth_Data x y) (analz H);\n        Pri_AgrK xaa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xaa \\<in> insert (Auth_Data x y) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> insert (Auth_Data x y) (analz H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        X = Auth_Data x y \\<or> X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or> Y \\<in> analz H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        X = Auth_Data x y\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 2. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 4. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or> Y \\<in> analz H\n 5. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 7. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = Auth_Data x y \\<or> Y \\<in> analz H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X = Auth_Data x y \\<or> X \\<in> analz H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule analz.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 3. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 4. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 5. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Y.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert (Auth_Data x y) H);\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 2. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Crypt K X \\<in> analz H;\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Crypt K X \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz (insert (Auth_Data x y) H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H; xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H; Auth_Data xa ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H; Auth_Data xa ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        xa = x \\<and> ya = y \\<or> Auth_Data xa ya \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H; xa = x \\<and> ya = y\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H\n 2. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H; Auth_Data xa ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H; Auth_Data xa ya \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK ya \\<in> analz H", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>Pri_AgrK x \\<notin> analz H; Pri_AgrK y \\<notin> analz H;\n        Auth_Data xa ya \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz (insert (Auth_Data x y) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_crypt_in_1:\n \"analz (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (analz (insert X H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (insert (Crypt K X) H)\n    \\<subseteq> insert (Crypt K X) (analz (insert X H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> analz (insert (Crypt K X) H) \\<Longrightarrow>\n       x \\<in> insert (Crypt K X) (analz (insert X H))", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert (Crypt K X) H \\<Longrightarrow>\n       Xa \\<in> insert (Crypt K X) (analz (insert X H))\n 2. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace>\n        \\<in> insert (Crypt K X) (analz (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (analz (insert X H))\n 3. \\<And>x Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace>\n        \\<in> insert (Crypt K X) (analz (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Crypt K X) (analz (insert X H))\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> insert (Crypt K X) (analz (insert X H));\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> insert (Crypt K X) (analz (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (analz (insert X H))\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> insert (Crypt K X) (analz (insert X H));\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> insert (Crypt K X) (analz (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> insert (Crypt K X) (analz (insert X H))\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> insert (Crypt K X) (analz (insert X H));\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> insert (Crypt K X) (analz (insert X H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert (Crypt K X) (analz (insert X H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = Crypt K X \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> analz (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = Crypt K X \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 4. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> analz (insert X H)\n 5. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> analz (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert X H\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 3. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert X H)\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 2. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert X H)\n 3. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>\\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Ka = K \\<and> Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Crypt K X) H);\n        Key (invK K) \\<in> analz (insert (Crypt K X) H);\n        Key (invK K) \\<in> analz (insert X H); Ka = K\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz (insert X H)\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka.\n       \\<lbrakk>Crypt K X \\<in> analz (insert (Crypt K X) H);\n        Key (invK K) \\<in> analz (insert (Crypt K X) H);\n        Key (invK K) \\<in> analz (insert X H); Ka = K\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert X H\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Key (invK Ka) \\<in> analz (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X H)", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X H)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_crypt_in_2:\n \"Key (invK K) \\<in> analz H \\<Longrightarrow>\n    insert (Crypt K X) (analz (insert X H)) \\<subseteq> analz (insert (Crypt K X) H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Key (invK K) \\<in> analz H \\<Longrightarrow>\n    insert (Crypt K X) (analz (insert X H))\n    \\<subseteq> analz (insert (Crypt K X) H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        x \\<in> insert (Crypt K X) (analz (insert X H))\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        x = Crypt K X \\<or> x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H; x = Crypt K X\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H; x = Crypt K X\\<rbrakk>\n       \\<Longrightarrow> Crypt K X \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H; x = Crypt K X\\<rbrakk>\n       \\<Longrightarrow> Crypt K X \\<in> insert (Crypt K X) H\n 2. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        x \\<in> analz (insert X H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply rotate_tac"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> analz (insert X H);\n        Key (invK K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> x \\<in> analz (insert (Crypt K X) H)", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> insert X H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (rule analz.Decrypt [of K])"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Crypt K X \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 8. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Crypt K X \\<in> insert (Crypt K X) H\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 8. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa = X\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule rev_subsetD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = X \\<Longrightarrow>\n       analz H \\<subseteq> analz (insert (Crypt K X) H)\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (rule analz_mono)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa. Xa = X \\<Longrightarrow> H \\<subseteq> insert (Crypt K X) H\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) H\n 2. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert X H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Crypt Ka Xa \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert X H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Key (invK Ka) \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert X H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert (Crypt K X) H)", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<in> analz H;\n        Auth_Data xa y \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert X H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert (Crypt K X) H)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_crypt_in:\n \"Key (invK K) \\<in> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) = insert (Crypt K X) (analz (insert X H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Key (invK K) \\<in> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) = insert (Crypt K X) (analz (insert X H))", "by (rule equalityI, rule analz_crypt_in_1, rule analz_crypt_in_2)"], ["", "lemma analz_crypt_out:\n \"Key (invK K) \\<notin> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) = insert (Crypt K X) (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Key (invK K) \\<notin> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) = insert (Crypt K X) (analz H)", "apply (rule equalityI [OF _ analz_insert])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Key (invK K) \\<notin> analz H \\<Longrightarrow>\n    analz (insert (Crypt K X) H) \\<subseteq> insert (Crypt K X) (analz H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        x \\<in> analz (insert (Crypt K X) H)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> insert (Crypt K X) (analz H)", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Xa \\<in> insert (Crypt K X) H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (analz H)\n 2. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert (Crypt K X) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (analz H)\n 3. \\<And>x Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> insert (Crypt K X) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert (Crypt K X) (analz H)\n 4. \\<And>x Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Crypt Ka Xa \\<in> insert (Crypt K X) (analz H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> insert (Crypt K X) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert (Crypt K X) (analz H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> insert (Crypt K X) (analz H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> insert (Crypt K X) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> insert (Crypt K X) (analz H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> insert (Crypt K X) (analz H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> insert (Crypt K X) (analz H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> insert (Crypt K X) (analz H)", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Xa = Crypt K X \\<or> Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> analz H\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H; Xa = Crypt K X\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 4. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> analz H\n 5. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 7. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H; Xa \\<in> H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y = Crypt K X \\<or> Y \\<in> analz H\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa = Crypt K X \\<or> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>Key (invK K) \\<notin> analz H; X \\<in> H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 4. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 6. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 3. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 5. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz (insert (Crypt K X) H);\n        \\<lbrace>Xa, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz H\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Ka = K \\<and> Xa = X \\<or> Crypt Ka Xa \\<in> analz H;\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H; Ka = K \\<and> Xa = X\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H; Crypt Ka Xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 4. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H; Crypt Ka Xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ka Xa.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Crypt Ka Xa \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz (insert (Crypt K X) H);\n        Key (invK Ka) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Key (invK Ka) \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 3. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK y \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H\n 2. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Auth_Data xa y \\<in> analz H;\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz H", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Key (invK K) \\<notin> analz H;\n        Auth_Data xa y \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz (insert (Crypt K X) H);\n        Pri_AgrK xa \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz H", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_mpair_1:\n \"analz (insert \\<lbrace>X, Y\\<rbrace> H) \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (insert \\<lbrace>X, Y\\<rbrace> H)\n    \\<subseteq> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H) \\<Longrightarrow>\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> H \\<Longrightarrow>\n       Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (analz ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (analz ({X, Y} \\<union> H))\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (analz ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (analz ({X, Y} \\<union> H))\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa\n        \\<in> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K)\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (analz ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                   (analz ({X, Y} \\<union> H))\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (analz ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                (analz ({X, Y} \\<union> H))\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y\n        \\<in> insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa\n        \\<in> insert \\<lbrace>X, Y\\<rbrace>\n               (analz ({X, Y} \\<union> H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                                (analz ({X, Y} \\<union> H))", "apply simp_all"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> analz (insert X (insert Y H))\n 5. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 7. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n       Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa = \\<lbrace>X, Y\\<rbrace> \\<or>\n                         Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (rule_tac [1-4] disjI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa. Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> X \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 4. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 6. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y \\<or>\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X \\<and> Ya = Y\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> analz (insert X (insert Y H))\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Xa.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Xa = X\\<rbrakk>\n       \\<Longrightarrow> Y \\<in> insert X (insert Y H)\n 2. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 3. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 5. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert X (insert Y H))\n 2. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 4. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Key (invK K) \\<in> analz (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 3. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))\n 2. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y \\<in> analz (insert X (insert Y H))", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y.\n       \\<lbrakk>Auth_Data xa y\n                \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H))\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa \\<in> analz (insert X (insert Y H))", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_mpair_2:\n \"insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H)) \\<subseteq> analz (insert \\<lbrace>X, Y\\<rbrace> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))\n    \\<subseteq> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace>\n                (analz ({X, Y} \\<union> H)) \\<Longrightarrow>\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<or>\n       x \\<in> analz (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x.\n       x \\<in> analz (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = \\<lbrace>X, Y\\<rbrace> \\<Longrightarrow>\n       x \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>x.\n       x \\<in> analz (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> analz (insert X (insert Y H)) \\<Longrightarrow>\n       x \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule analz.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x Xa.\n       Xa \\<in> insert X (insert Y H) \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = X \\<or> Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = X \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. X \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule analz.Fst [of _ Y])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa = Y \\<or> Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>Xa.\n       Xa = Y \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. Y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule analz.Snd [of X])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 7. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow>\n       Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (rule analz.Inj)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>Xa.\n       Xa \\<in> H \\<Longrightarrow> Xa \\<in> insert \\<lbrace>X, Y\\<rbrace> H\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 6. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 5. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule analz.Fst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x Xa Ya.\n       \\<lbrakk>\\<lbrace>Xa, Ya\\<rbrace>\n                \\<in> analz (insert X (insert Y H));\n        \\<lbrace>Xa, Ya\\<rbrace>\n        \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Ya \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 4. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule analz.Snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Crypt K Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x K Xa.\n       \\<lbrakk>Crypt K Xa \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert X (insert Y H));\n        Key (invK K) \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Key (invK K)\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 3. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule analz.Auth_Fst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\n 2. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Auth_Data xa y \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H);\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK y\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply (erule analz.Auth_Snd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y.\n       \\<lbrakk>Auth_Data xa y \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert X (insert Y H));\n        Pri_AgrK xa \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)\\<rbrakk>\n       \\<Longrightarrow> Pri_AgrK xa\n                         \\<in> analz (insert \\<lbrace>X, Y\\<rbrace> H)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma analz_mpair:\n \"analz (insert \\<lbrace>X, Y\\<rbrace> H) = insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (insert \\<lbrace>X, Y\\<rbrace> H) =\n    insert \\<lbrace>X, Y\\<rbrace> (analz ({X, Y} \\<union> H))", "by (rule equalityI, rule analz_mpair_1, rule analz_mpair_2)"], ["", "lemma synth_simp_intro:\n \"X \\<in> synth H \\<Longrightarrow>\n    X \\<in> range Nonce \\<union>\n      range Key \\<union>\n      range Passwd \\<union>\n      range Pri_AgrK \\<union>\n      range Pub_AgrK \\<Longrightarrow>\n  X \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<in> synth H;\n     X \\<in> range Nonce \\<union> range Key \\<union> range Passwd \\<union>\n             range Pri_AgrK \\<union>\n             range Pub_AgrK\\<rbrakk>\n    \\<Longrightarrow> X \\<in> H", "by (erule synth.cases, blast+)"], ["", "lemma synth_auth_data:\n \"Auth_Data x y \\<in> synth H \\<Longrightarrow>\n    Auth_Data x y \\<in> H \\<or> Pri_AgrK x \\<in> H \\<and> Pri_AgrK y \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Auth_Data x y \\<in> synth H \\<Longrightarrow>\n    Auth_Data x y \\<in> H \\<or> Pri_AgrK x \\<in> H \\<and> Pri_AgrK y \\<in> H", "by (erule synth.cases, simp_all)"], ["", "lemma synth_crypt:\n \"Crypt K X \\<in> synth H \\<Longrightarrow> Crypt K X \\<in> H \\<or> X \\<in> synth H \\<and> Key K \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Crypt K X \\<in> synth H \\<Longrightarrow>\n    Crypt K X \\<in> H \\<or> X \\<in> synth H \\<and> Key K \\<in> H", "by (erule synth.cases, simp_all)"], ["", "lemma synth_mpair:\n \"\\<lbrace>X, Y\\<rbrace> \\<in> synth H \\<Longrightarrow> \\<lbrace>X, Y\\<rbrace> \\<in> H \\<or> X \\<in> synth H \\<and> Y \\<in> synth H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> synth H \\<Longrightarrow>\n    \\<lbrace>X, Y\\<rbrace> \\<in> H \\<or>\n    X \\<in> synth H \\<and> Y \\<in> synth H", "by (erule synth.cases, simp_all)"], ["", "lemma synth_analz_fst:\n \"\\<lbrace>X, Y\\<rbrace> \\<in> synth (analz H) \\<Longrightarrow> X \\<in> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> synth (analz H) \\<Longrightarrow>\n    X \\<in> synth (analz H)", "proof (drule_tac synth_mpair, erule_tac disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> analz H \\<Longrightarrow>\n    X \\<in> synth (analz H)\n 2. X \\<in> synth (analz H) \\<and> Y \\<in> synth (analz H) \\<Longrightarrow>\n    X \\<in> synth (analz H)", "qed (drule analz.Fst, erule synth.Inj, erule conjE)"], ["", "lemma synth_analz_snd:\n \"\\<lbrace>X, Y\\<rbrace> \\<in> synth (analz H) \\<Longrightarrow> Y \\<in> synth (analz H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> synth (analz H) \\<Longrightarrow>\n    Y \\<in> synth (analz H)", "proof (drule_tac synth_mpair, erule_tac disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrace>X, Y\\<rbrace> \\<in> analz H \\<Longrightarrow>\n    Y \\<in> synth (analz H)\n 2. X \\<in> synth (analz H) \\<and> Y \\<in> synth (analz H) \\<Longrightarrow>\n    Y \\<in> synth (analz H)", "qed (drule analz.Snd, erule synth.Inj, erule conjE)"], ["", "end"]]}