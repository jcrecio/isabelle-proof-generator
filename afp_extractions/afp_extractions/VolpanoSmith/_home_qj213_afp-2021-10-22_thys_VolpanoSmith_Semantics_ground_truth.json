{"file_name": "/home/qj213/afp-2021-10-22/thys/VolpanoSmith/Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/VolpanoSmith", "problem_names": ["lemmas red_induct = red.induct[split_format (complete)]", "lemma Skip_reds:\n  \"\\<langle>Skip,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> \\<Longrightarrow> s = s' \\<and> c' = Skip\"", "lemma LAss_reds:\n  \"\\<langle>V:=e,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> s' = s(V:=\\<lbrakk>e\\<rbrakk> s)\"", "lemma Seq2_reds:\n  \"\\<langle>Skip;;c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<langle>c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"", "lemma Seq_reds:\n  assumes \"\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"\n  obtains s'' where \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle>\" and \"\\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"", "lemma Cond_True_or_False:\n  \"\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true \\<or> \\<lbrakk>b\\<rbrakk> s = Some false\"", "lemma CondTrue_reds:\n  \"\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true \\<Longrightarrow> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"", "lemma CondFalse_reds:\n  \"\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> \\<langle>c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"", "lemma WhileFalse_reds: \n  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> s = s'\"", "lemma WhileTrue_reds: \n  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true\n  \\<Longrightarrow> \\<exists>sx. \\<langle>cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle> \\<and> \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"", "lemma While_True_or_False:\n  \"\\<langle>while (b) com,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true \\<or> \\<lbrakk>b\\<rbrakk> s = Some false\"", "lemma Seq_red_nE: assumes \"\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n  obtains i j s'' where \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\" and \"\\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n  and \"n = i + j + 1\"", "lemma while_red_nE:\n  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle> \n  \\<Longrightarrow> (\\<lbrakk>b\\<rbrakk> s = Some false \\<and> s = s' \\<and> n = 1) \\<or>\n     (\\<exists>i j s''. \\<lbrakk>b\\<rbrakk> s = Some true \\<and> \\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle> \\<and> \n                \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle> \\<and> n = i + j + 2)\"", "lemma while_red_n_induct [consumes 1, case_names false true]:\n  assumes major: \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n  and IHfalse:\"\\<And>s.  \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> P s s\"\n  and IHtrue:\"\\<And>s i j s''. \\<lbrakk>  \\<lbrakk>b\\<rbrakk> s = Some true; \\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>; \n                            \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>; P s'' s'\\<rbrakk> \\<Longrightarrow> P s s'\"\n  shows \"P s s'\"", "lemma reds_to_red_n:\"\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> \\<Longrightarrow> \\<exists>n. \\<langle>c,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',s'\\<rangle>\"", "lemma red_n_to_reds:\"\\<langle>c,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',s'\\<rangle> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\"", "lemma while_reds_induct[consumes 1, case_names false true]:\n  \"\\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>; \\<And>s. \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> P s s;\n    \\<And>s s''. \\<lbrakk> \\<lbrakk>b\\<rbrakk> s = Some true; \\<langle>cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle>; \n             \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>; P s'' s'\\<rbrakk> \\<Longrightarrow> P s s'\\<rbrakk>\n  \\<Longrightarrow> P s s'\"", "lemma red_det:\n  \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1,s\\<^sub>1\\<rangle>; \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk> \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2 \\<and> s\\<^sub>1 = s\\<^sub>2\"", "theorem reds_det:\n  \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>1\\<rangle>; \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk> \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2\""], "translations": [["", "lemmas red_induct = red.induct[split_format (complete)]"], ["", "abbreviation reds ::\"com \\<Rightarrow> state \\<Rightarrow> com \\<Rightarrow> state \\<Rightarrow> bool\" \n   (\"((1\\<langle>_,/_\\<rangle>) \\<rightarrow>*/ (1\\<langle>_,/_\\<rangle>))\" [0,0,0,0] 81) where\n  \"\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> ==  red\\<^sup>*\\<^sup>* (c,s) (c',s')\""], ["", "lemma Skip_reds:\n  \"\\<langle>Skip,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> \\<Longrightarrow> s = s' \\<and> c' = Skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Skip,s\\<rangle> \\<rightarrow>*\n    \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n    s = s' \\<and> c' = Skip", "by(blast elim:converse_rtranclpE red.cases)"], ["", "lemma LAss_reds:\n  \"\\<langle>V:=e,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> s' = s(V:=\\<lbrakk>e\\<rbrakk> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>V:=e,s\\<rangle> \\<rightarrow>*\n    \\<langle>Skip,s'\\<rangle> \\<Longrightarrow>\n    s' = s(V := \\<lbrakk>e\\<rbrakk>s)", "proof(induct \"V:=e\" s rule:converse_rtranclp_induct2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b aa ba.\n       \\<lbrakk>\\<langle>V:=e,b\\<rangle> \\<rightarrow>\n                \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        aa = V:=e \\<Longrightarrow>\n        s' = ba(V := \\<lbrakk>e\\<rbrakk>ba)\\<rbrakk>\n       \\<Longrightarrow> s' = b(V := \\<lbrakk>e\\<rbrakk>b)", "case (step s c'' s'')"], ["proof (state)\nthis:\n  \\<langle>V:=e,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  c'' = V:=e \\<Longrightarrow> s' = s''(V := \\<lbrakk>e\\<rbrakk>s'')\n\ngoal (1 subgoal):\n 1. \\<And>b aa ba.\n       \\<lbrakk>\\<langle>V:=e,b\\<rangle> \\<rightarrow>\n                \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        aa = V:=e \\<Longrightarrow>\n        s' = ba(V := \\<lbrakk>e\\<rbrakk>ba)\\<rbrakk>\n       \\<Longrightarrow> s' = b(V := \\<lbrakk>e\\<rbrakk>b)", "hence \"c'' = Skip\" and \"s'' = s(V:=(\\<lbrakk>e\\<rbrakk> s))\""], ["proof (prove)\nusing this:\n  \\<langle>V:=e,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  c'' = V:=e \\<Longrightarrow> s' = s''(V := \\<lbrakk>e\\<rbrakk>s'')\n\ngoal (1 subgoal):\n 1. c'' = Skip &&& s'' = s(V := \\<lbrakk>e\\<rbrakk>s)", "by(auto elim:red.cases)"], ["proof (state)\nthis:\n  c'' = Skip\n  s'' = s(V := \\<lbrakk>e\\<rbrakk>s)\n\ngoal (1 subgoal):\n 1. \\<And>b aa ba.\n       \\<lbrakk>\\<langle>V:=e,b\\<rangle> \\<rightarrow>\n                \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        aa = V:=e \\<Longrightarrow>\n        s' = ba(V := \\<lbrakk>e\\<rbrakk>ba)\\<rbrakk>\n       \\<Longrightarrow> s' = b(V := \\<lbrakk>e\\<rbrakk>b)", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  c'' = Skip\n  s'' = s(V := \\<lbrakk>e\\<rbrakk>s)", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  c'' = Skip\n  s'' = s(V := \\<lbrakk>e\\<rbrakk>s)\n\ngoal (1 subgoal):\n 1. s' = s(V := \\<lbrakk>e\\<rbrakk>s)", "by(auto dest:Skip_reds)"], ["proof (state)\nthis:\n  s' = s(V := \\<lbrakk>e\\<rbrakk>s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Seq2_reds:\n  \"\\<langle>Skip;;c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<langle>c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Skip;; c\\<^sub>2,s\\<rangle> \\<rightarrow>*\n    \\<langle>Skip,s'\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>", "by(induct c==\"Skip;;c\\<^sub>2\" s rule:converse_rtranclp_induct2)(auto elim:red.cases)"], ["", "lemma Seq_reds:\n  assumes \"\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\"\n  obtains s'' where \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle>\" and \"\\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s''.\n        \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                 \\<langle>Skip,s''\\<rangle>;\n         \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n         \\<langle>Skip,s'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s''.\n        \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                 \\<langle>Skip,s''\\<rangle>;\n         \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n         \\<langle>Skip,s'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>s''. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle> \\<and> \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "fix c c'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "assume \"\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\" and \"c = c\\<^sub>1;;c\\<^sub>2\" and \"c' = Skip\""], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  c = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "hence \"\\<exists>s''. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle> \\<and> \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  c = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "proof(induct arbitrary:c\\<^sub>1 rule:converse_rtranclp_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1.\n       \\<lbrakk>c' = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,s'\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>\n 2. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "case refl"], ["proof (state)\nthis:\n  c' = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip\n\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1.\n       \\<lbrakk>c' = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,s'\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>\n 2. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  c' = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s'\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s'\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "case (step c s c'' s'')"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  \\<lbrakk>c'' = ?c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s''a.\n                       \\<langle>?c\\<^sub>1,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s''a\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,s''a\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n  c = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "note IH = \\<open>\\<And>c\\<^sub>1. \\<lbrakk>c'' = c\\<^sub>1;;c\\<^sub>2; c' = Skip\\<rbrakk> \n          \\<Longrightarrow> \\<exists>sx. \\<langle>c\\<^sub>1,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle> \\<and> \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>c'' = ?c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>sx.\n                       \\<langle>?c\\<^sub>1,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,sx\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "from step"], ["proof (chain)\npicking this:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  \\<lbrakk>c'' = ?c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s''a.\n                       \\<langle>?c\\<^sub>1,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s''a\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,s''a\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n  c = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip", "have \"\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  \\<lbrakk>c'' = ?c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s''a.\n                       \\<langle>?c\\<^sub>1,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s''a\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,s''a\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n  c = c\\<^sub>1;; c\\<^sub>2\n  c' = Skip\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n    \\<langle>c'',s''\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n  \\<langle>c'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "hence \"(c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'') \\<or> \n          (\\<exists>c\\<^sub>1'. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle> \\<and> c'' = c\\<^sub>1';;c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n  \\<langle>c'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<or>\n    (\\<exists>c\\<^sub>1''.\n        \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n        c'' = c\\<^sub>1'';; c\\<^sub>2)", "by(auto elim:red.cases)"], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<or>\n  (\\<exists>c\\<^sub>1''.\n      \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n      \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n      c'' = c\\<^sub>1'';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba c\\<^sub>1.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           \\<lbrakk>aa = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n           \\<Longrightarrow> \\<exists>s''.\n                                \\<langle>c\\<^sub>1,\n                                 ba\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s''\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>2,\n                                 s''\\<rangle> \\<rightarrow>*\n                                \\<langle>Skip,s'\\<rangle>;\n        a = c\\<^sub>1;; c\\<^sub>2; c' = Skip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s''.\n                            \\<langle>c\\<^sub>1,b\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<or>\n  (\\<exists>c\\<^sub>1''.\n      \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n      \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n      c'' = c\\<^sub>1'';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>\n 2. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "assume \"c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>\n 2. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\\<close> \\<open>c' = Skip\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  c' = Skip\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  c' = Skip\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "assume \"\\<exists>c\\<^sub>1'. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle> \\<and> c'' = c\\<^sub>1';;c\\<^sub>2\""], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>1''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n     c'' = c\\<^sub>1'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<exists>c\\<^sub>1''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n     c'' = c\\<^sub>1'';; c\\<^sub>2", "obtain c\\<^sub>1' where \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle>\" and \"c'' = c\\<^sub>1';;c\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<exists>c\\<^sub>1''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n     c'' = c\\<^sub>1'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1''.\n        \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                 \\<langle>c\\<^sub>1'',s''\\<rangle>;\n         c'' = c\\<^sub>1'';; c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s''\\<rangle>\n  c'' = c\\<^sub>1';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "from IH[OF \\<open>c'' = c\\<^sub>1';;c\\<^sub>2\\<close> \\<open>c' = Skip\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>sx.\n     \\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,sx\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>", "obtain sx where \"\\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\" and \"\\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>sx.\n     \\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,sx\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>sx.\n        \\<lbrakk>\\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>*\n                 \\<langle>Skip,sx\\<rangle>;\n         \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>*\n         \\<langle>Skip,s'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\n  \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "from \\<open>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle>\\<close> \\<open>\\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s''\\<rangle>\n  \\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>", "have \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s''\\<rangle>\n  \\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>", "by(auto intro:converse_rtranclp_into_rtranclp)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<and>\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "with \\<open>\\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<langle>?c2,s\\<rangle> \\<rightarrow>* \\<langle>?c'2,s'\\<rangle>;\n   ?c2 = c\\<^sub>1;; c\\<^sub>2; ?c'2 = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s''.\n                       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s''\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "with \\<open>\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>\\<langle>?c2,s\\<rangle> \\<rightarrow>* \\<langle>?c'2,s'\\<rangle>;\n   ?c2 = c\\<^sub>1;; c\\<^sub>2; ?c'2 = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s''.\n                       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s''\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>\\<langle>?c2,s\\<rangle> \\<rightarrow>* \\<langle>?c'2,s'\\<rangle>;\n   ?c2 = c\\<^sub>1;; c\\<^sub>2; ?c'2 = Skip\\<rbrakk>\n  \\<Longrightarrow> \\<exists>s''.\n                       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s''\\<rangle> \\<and>\n                       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>s''.\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>s''.\n        \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                 \\<langle>Skip,s''\\<rangle>;\n         \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n         \\<langle>Skip,s'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n           \\<langle>Skip,?s''\\<rangle>;\n   \\<langle>c\\<^sub>2,?s''\\<rangle> \\<rightarrow>*\n   \\<langle>Skip,s'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n           \\<langle>Skip,?s''\\<rangle>;\n   \\<langle>c\\<^sub>2,?s''\\<rangle> \\<rightarrow>*\n   \\<langle>Skip,s'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>s''.\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Cond_True_or_False:\n  \"\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true \\<or> \\<lbrakk>b\\<rbrakk> s = Some false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>*\n    \\<langle>Skip,s'\\<rangle> \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some true \\<or> \\<lbrakk>b\\<rbrakk>s = Some false", "by(induct c==\"if (b) c\\<^sub>1 else c\\<^sub>2\" s rule:converse_rtranclp_induct2)(auto elim:red.cases)"], ["", "lemma CondTrue_reds:\n  \"\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true \\<Longrightarrow> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,\n              s\\<rangle> \\<rightarrow>*\n             \\<langle>Skip,s'\\<rangle>;\n     \\<lbrakk>b\\<rbrakk>s = Some true\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>*\n                      \\<langle>Skip,s'\\<rangle>", "by(induct c==\"if (b) c\\<^sub>1 else c\\<^sub>2\" s rule:converse_rtranclp_induct2)(auto elim:red.cases)"], ["", "lemma CondFalse_reds:\n  \"\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> \\<langle>c\\<^sub>2,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,\n              s\\<rangle> \\<rightarrow>*\n             \\<langle>Skip,s'\\<rangle>;\n     \\<lbrakk>b\\<rbrakk>s = Some false\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2,s\\<rangle> \\<rightarrow>*\n                      \\<langle>Skip,s'\\<rangle>", "by(induct c==\"if (b) c\\<^sub>1 else c\\<^sub>2\" s rule:converse_rtranclp_induct2)(auto elim:red.cases)"], ["", "lemma WhileFalse_reds: \n  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> s = s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>*\n             \\<langle>Skip,s'\\<rangle>;\n     \\<lbrakk>b\\<rbrakk>s = Some false\\<rbrakk>\n    \\<Longrightarrow> s = s'", "proof(induct \"while (b) cx\" s rule:converse_rtranclp_induct2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ba aa baa.\n       \\<lbrakk>\\<langle>while (b) cx,ba\\<rangle> \\<rightarrow>\n                \\<langle>aa,baa\\<rangle>;\n        \\<langle>aa,baa\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>aa = while (b) cx;\n         \\<lbrakk>b\\<rbrakk>baa = Some false\\<rbrakk>\n        \\<Longrightarrow> baa = s';\n        \\<lbrakk>b\\<rbrakk>ba = Some false\\<rbrakk>\n       \\<Longrightarrow> ba = s'", "case step"], ["proof (state)\nthis:\n  \\<langle>while (b) cx,ba___\\<rangle> \\<rightarrow> \\<langle>a_,b_\\<rangle>\n  \\<langle>a_,b_\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>a_ = while (b) cx; \\<lbrakk>b\\<rbrakk>b_ = Some false\\<rbrakk>\n  \\<Longrightarrow> b_ = s'\n  \\<lbrakk>b\\<rbrakk>ba___ = Some false\n\ngoal (1 subgoal):\n 1. \\<And>ba aa baa.\n       \\<lbrakk>\\<langle>while (b) cx,ba\\<rangle> \\<rightarrow>\n                \\<langle>aa,baa\\<rangle>;\n        \\<langle>aa,baa\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>aa = while (b) cx;\n         \\<lbrakk>b\\<rbrakk>baa = Some false\\<rbrakk>\n        \\<Longrightarrow> baa = s';\n        \\<lbrakk>b\\<rbrakk>ba = Some false\\<rbrakk>\n       \\<Longrightarrow> ba = s'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>while (b) cx,ba___\\<rangle> \\<rightarrow> \\<langle>a_,b_\\<rangle>\n  \\<langle>a_,b_\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>a_ = while (b) cx; \\<lbrakk>b\\<rbrakk>b_ = Some false\\<rbrakk>\n  \\<Longrightarrow> b_ = s'\n  \\<lbrakk>b\\<rbrakk>ba___ = Some false\n\ngoal (1 subgoal):\n 1. ba___ = s'", "by(auto elim:red.cases dest: Skip_reds)"], ["proof (state)\nthis:\n  ba___ = s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WhileTrue_reds: \n  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true\n  \\<Longrightarrow> \\<exists>sx. \\<langle>cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle> \\<and> \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>*\n             \\<langle>Skip,s'\\<rangle>;\n     \\<lbrakk>b\\<rbrakk>s = Some true\\<rbrakk>\n    \\<Longrightarrow> \\<exists>sx.\n                         \\<langle>cx,s\\<rangle> \\<rightarrow>*\n                         \\<langle>Skip,sx\\<rangle> \\<and>\n                         \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n                         \\<langle>Skip,s'\\<rangle>", "proof(induct \"while (b) cx\" s rule:converse_rtranclp_induct2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ba aa baa.\n       \\<lbrakk>\\<langle>while (b) cx,ba\\<rangle> \\<rightarrow>\n                \\<langle>aa,baa\\<rangle>;\n        \\<langle>aa,baa\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>aa = while (b) cx;\n         \\<lbrakk>b\\<rbrakk>baa = Some true\\<rbrakk>\n        \\<Longrightarrow> \\<exists>sx.\n                             \\<langle>cx,baa\\<rangle> \\<rightarrow>*\n                             \\<langle>Skip,sx\\<rangle> \\<and>\n                             \\<langle>while (b) cx,\n                              sx\\<rangle> \\<rightarrow>*\n                             \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>b\\<rbrakk>ba = Some true\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sx.\n                            \\<langle>cx,ba\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,sx\\<rangle> \\<and>\n                            \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "case (step s c'' s'')"], ["proof (state)\nthis:\n  \\<langle>while (b) cx,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>c'' = while (b) cx; \\<lbrakk>b\\<rbrakk>s'' = Some true\\<rbrakk>\n  \\<Longrightarrow> \\<exists>sx.\n                       \\<langle>cx,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,sx\\<rangle> \\<and>\n                       \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>b\\<rbrakk>s = Some true\n\ngoal (1 subgoal):\n 1. \\<And>ba aa baa.\n       \\<lbrakk>\\<langle>while (b) cx,ba\\<rangle> \\<rightarrow>\n                \\<langle>aa,baa\\<rangle>;\n        \\<langle>aa,baa\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>aa = while (b) cx;\n         \\<lbrakk>b\\<rbrakk>baa = Some true\\<rbrakk>\n        \\<Longrightarrow> \\<exists>sx.\n                             \\<langle>cx,baa\\<rangle> \\<rightarrow>*\n                             \\<langle>Skip,sx\\<rangle> \\<and>\n                             \\<langle>while (b) cx,\n                              sx\\<rangle> \\<rightarrow>*\n                             \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>b\\<rbrakk>ba = Some true\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sx.\n                            \\<langle>cx,ba\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,sx\\<rangle> \\<and>\n                            \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "hence \"c'' = cx;;while (b) cx \\<and> s'' = s\""], ["proof (prove)\nusing this:\n  \\<langle>while (b) cx,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>c'' = while (b) cx; \\<lbrakk>b\\<rbrakk>s'' = Some true\\<rbrakk>\n  \\<Longrightarrow> \\<exists>sx.\n                       \\<langle>cx,s''\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,sx\\<rangle> \\<and>\n                       \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n                       \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>b\\<rbrakk>s = Some true\n\ngoal (1 subgoal):\n 1. c'' = cx;; while (b) cx \\<and> s'' = s", "by(auto elim:red.cases)"], ["proof (state)\nthis:\n  c'' = cx;; while (b) cx \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<And>ba aa baa.\n       \\<lbrakk>\\<langle>while (b) cx,ba\\<rangle> \\<rightarrow>\n                \\<langle>aa,baa\\<rangle>;\n        \\<langle>aa,baa\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>aa = while (b) cx;\n         \\<lbrakk>b\\<rbrakk>baa = Some true\\<rbrakk>\n        \\<Longrightarrow> \\<exists>sx.\n                             \\<langle>cx,baa\\<rangle> \\<rightarrow>*\n                             \\<langle>Skip,sx\\<rangle> \\<and>\n                             \\<langle>while (b) cx,\n                              sx\\<rangle> \\<rightarrow>*\n                             \\<langle>Skip,s'\\<rangle>;\n        \\<lbrakk>b\\<rbrakk>ba = Some true\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sx.\n                            \\<langle>cx,ba\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,sx\\<rangle> \\<and>\n                            \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n                            \\<langle>Skip,s'\\<rangle>", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  c'' = cx;; while (b) cx \\<and> s'' = s", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>\n  c'' = cx;; while (b) cx \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<exists>sx.\n       \\<langle>cx,s\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,sx\\<rangle> \\<and>\n       \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n       \\<langle>Skip,s'\\<rangle>", "by(auto dest:Seq_reds)"], ["proof (state)\nthis:\n  \\<exists>sx.\n     \\<langle>cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,sx\\<rangle> \\<and>\n     \\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma While_True_or_False:\n  \"\\<langle>while (b) com,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle> \\<Longrightarrow> \\<lbrakk>b\\<rbrakk> s = Some true \\<or> \\<lbrakk>b\\<rbrakk> s = Some false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>while (b) com,s\\<rangle> \\<rightarrow>*\n    \\<langle>Skip,s'\\<rangle> \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some true \\<or> \\<lbrakk>b\\<rbrakk>s = Some false", "by(induct c==\"while (b) com\" s rule:converse_rtranclp_induct2)(auto elim:red.cases)"], ["", "inductive red_n :: \"com \\<Rightarrow> state \\<Rightarrow> nat \\<Rightarrow> com \\<Rightarrow> state \\<Rightarrow> bool\"\n   (\"((1\\<langle>_,/_\\<rangle>) \\<rightarrow>\\<^bsup>_\\<^esup> (1\\<langle>_,/_\\<rangle>))\" [0,0,0,0,0] 81)\nwhere red_n_Base: \"\\<langle>c,s\\<rangle> \\<rightarrow>\\<^bsup>0\\<^esup> \\<langle>c,s\\<rangle>\"\n     | red_n_Rec: \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>; \\<langle>c'',s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',s'\\<rangle>\\<rbrakk> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow>\\<^bsup>Suc n\\<^esup> \\<langle>c',s'\\<rangle>\""], ["", "lemma Seq_red_nE: assumes \"\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n  obtains i j s'' where \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\" and \"\\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n  and \"n = i + j + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i s'' j.\n        \\<lbrakk>\\<langle>c\\<^sub>1,\n                  s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                       s''\\<rangle>;\n         \\<langle>c\\<^sub>2,\n          s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                 s'\\<rangle>;\n         n = i + j + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>i s'' j.\n        \\<lbrakk>\\<langle>c\\<^sub>1,\n                  s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                       s''\\<rangle>;\n         \\<langle>c\\<^sub>2,\n          s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                 s'\\<rangle>;\n         n = i + j + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,\n   s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>", "have \"\\<exists>i j s''. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle> \\<and> \\<langle>c\\<^sub>2,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle> \\<and> n = i + j + 1\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,\n   s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 1", "proof(induct \"c\\<^sub>1;;c\\<^sub>2\" s n \"Skip\" s' arbitrary:c\\<^sub>1 rule:red_n.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s' c\\<^sub>1.\n       \\<lbrakk>\\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           c'' = c\\<^sub>1;; c\\<^sub>2 \\<Longrightarrow>\n           \\<exists>i j s''a.\n              \\<langle>c\\<^sub>1,\n               s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                      s''a\\<rangle> \\<and>\n              \\<langle>c\\<^sub>2,\n               s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                       s'\\<rangle> \\<and>\n              n = i + j + 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j s''.\n                            \\<langle>c\\<^sub>1,\n                             s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                  s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,\n                             s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                    s'\\<rangle> \\<and>\n                            Suc n = i + j + 1", "case (red_n_Rec s c'' s'' n s')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n  \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  c'' = ?c\\<^sub>1;; c\\<^sub>2 \\<Longrightarrow>\n  \\<exists>i j s''a.\n     \\<langle>?c\\<^sub>1,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''a\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<and>\n     n = i + j + 1\n\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s' c\\<^sub>1.\n       \\<lbrakk>\\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           c'' = c\\<^sub>1;; c\\<^sub>2 \\<Longrightarrow>\n           \\<exists>i j s''a.\n              \\<langle>c\\<^sub>1,\n               s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                      s''a\\<rangle> \\<and>\n              \\<langle>c\\<^sub>2,\n               s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                       s'\\<rangle> \\<and>\n              n = i + j + 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j s''.\n                            \\<langle>c\\<^sub>1,\n                             s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                  s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,\n                             s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                    s'\\<rangle> \\<and>\n                            Suc n = i + j + 1", "note IH = \\<open>\\<And>c\\<^sub>1. c'' = c\\<^sub>1;;c\\<^sub>2\n      \\<Longrightarrow> \\<exists>i j sx. \\<langle>c\\<^sub>1,s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle> \\<and> \\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle> \\<and> n = i + j + 1\\<close>"], ["proof (state)\nthis:\n  c'' = ?c\\<^sub>1;; c\\<^sub>2 \\<Longrightarrow>\n  \\<exists>i j sx.\n     \\<langle>?c\\<^sub>1,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             sx\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n            s'\\<rangle> \\<and>\n     n = i + j + 1\n\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s' c\\<^sub>1.\n       \\<lbrakk>\\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           c'' = c\\<^sub>1;; c\\<^sub>2 \\<Longrightarrow>\n           \\<exists>i j s''a.\n              \\<langle>c\\<^sub>1,\n               s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                      s''a\\<rangle> \\<and>\n              \\<langle>c\\<^sub>2,\n               s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                       s'\\<rangle> \\<and>\n              n = i + j + 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j s''.\n                            \\<langle>c\\<^sub>1,\n                             s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                  s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,\n                             s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                    s'\\<rangle> \\<and>\n                            Suc n = i + j + 1", "from \\<open>\\<langle>c\\<^sub>1;;c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n  \\<langle>c'',s''\\<rangle>", "have \"(c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'') \\<or> \n      (\\<exists>c\\<^sub>1'. c'' = c\\<^sub>1';;c\\<^sub>2 \\<and> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n  \\<langle>c'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<or>\n    (\\<exists>c\\<^sub>1''.\n        c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n        \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>1'',s''\\<rangle>)", "by(induct \"c\\<^sub>1;;c\\<^sub>2\" _ _ _ rule:red_induct) auto"], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<or>\n  (\\<exists>c\\<^sub>1''.\n      c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n      \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n      \\<langle>c\\<^sub>1'',s''\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s' c\\<^sub>1.\n       \\<lbrakk>\\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        \\<And>c\\<^sub>1.\n           c'' = c\\<^sub>1;; c\\<^sub>2 \\<Longrightarrow>\n           \\<exists>i j s''a.\n              \\<langle>c\\<^sub>1,\n               s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                      s''a\\<rangle> \\<and>\n              \\<langle>c\\<^sub>2,\n               s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                       s'\\<rangle> \\<and>\n              n = i + j + 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i j s''.\n                            \\<langle>c\\<^sub>1,\n                             s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                  s''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>2,\n                             s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                    s'\\<rangle> \\<and>\n                            Suc n = i + j + 1", "thus ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<or>\n  (\\<exists>c\\<^sub>1''.\n      c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n      \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n      \\<langle>c\\<^sub>1'',s''\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1\n 2. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "assume \"c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1\n 2. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "hence \"c\\<^sub>1 = Skip\" and \"c'' = c\\<^sub>2\" and \"s = s''\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s''\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 = Skip &&& c'' = c\\<^sub>2 &&& s = s''", "by simp_all"], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip\n  c'' = c\\<^sub>2\n  s = s''\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1\n 2. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "from \\<open>c\\<^sub>1 = Skip\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>1 = Skip", "have \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\\<^bsup>0\\<^esup> \\<langle>Skip,s\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Skip\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1,\n     s\\<rangle> \\<rightarrow>\\<^bsup>0\\<^esup> \\<langle>Skip,s\\<rangle>", "by(fastforce intro:red_n_Base)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,\n   s\\<rangle> \\<rightarrow>\\<^bsup>0\\<^esup> \\<langle>Skip,s\\<rangle>\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<and> c'' = c\\<^sub>2 \\<and> s = s'' \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1\n 2. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close> \\<open>c'' = c\\<^sub>2\\<close> \\<open>s = s''\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  c'' = c\\<^sub>2\n  s = s''\n  \\<langle>c\\<^sub>1,\n   s\\<rangle> \\<rightarrow>\\<^bsup>0\\<^esup> \\<langle>Skip,s\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  c'' = c\\<^sub>2\n  s = s''\n  \\<langle>c\\<^sub>1,\n   s\\<rangle> \\<rightarrow>\\<^bsup>0\\<^esup> \\<langle>Skip,s\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "by(rule_tac x=\"0\" in exI) auto"], ["proof (state)\nthis:\n  \\<exists>i j s''.\n     \\<langle>c\\<^sub>1,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     Suc n = i + j + 1\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "assume \"\\<exists>c\\<^sub>1'. c'' = c\\<^sub>1';;c\\<^sub>2 \\<and> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>1''.\n     c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>1'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "then"], ["proof (chain)\npicking this:\n  \\<exists>c\\<^sub>1''.\n     c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>1'',s''\\<rangle>", "obtain c\\<^sub>1' where \"c'' = c\\<^sub>1';;c\\<^sub>2\" and \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>c\\<^sub>1''.\n     c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>1'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1''.\n        \\<lbrakk>c'' = c\\<^sub>1'';; c\\<^sub>2;\n         \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n         \\<langle>c\\<^sub>1'',s''\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c'' = c\\<^sub>1';; c\\<^sub>2\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "from IH[OF \\<open>c'' = c\\<^sub>1';;c\\<^sub>2\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>i j sx.\n     \\<langle>c\\<^sub>1',\n      s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             sx\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n            s'\\<rangle> \\<and>\n     n = i + j + 1", "obtain i j sx\n        where \"\\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\" and \"\\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n        and \"n = i + j + 1\""], ["proof (prove)\nusing this:\n  \\<exists>i j sx.\n     \\<langle>c\\<^sub>1',\n      s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             sx\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n            s'\\<rangle> \\<and>\n     n = i + j + 1\n\ngoal (1 subgoal):\n 1. (\\<And>i sx j.\n        \\<lbrakk>\\<langle>c\\<^sub>1',\n                  s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                         sx\\<rangle>;\n         \\<langle>c\\<^sub>2,\n          sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n         n = i + j + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\n  \\<langle>c\\<^sub>2,\n   sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 1\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "from \\<open>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s''\\<rangle>\\<close> \\<open>\\<langle>c\\<^sub>1',s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s''\\<rangle>\n  \\<langle>c\\<^sub>1',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>", "have \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\\<^bsup>Suc i\\<^esup> \\<langle>Skip,sx\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s''\\<rangle>\n  \\<langle>c\\<^sub>1',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1,\n     s\\<rangle> \\<rightarrow>\\<^bsup>Suc i\\<^esup> \\<langle>Skip,sx\\<rangle>", "by(rule red_n.red_n_Rec)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,\n   s\\<rangle> \\<rightarrow>\\<^bsup>Suc i\\<^esup> \\<langle>Skip,sx\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>1''.\n       c'' = c\\<^sub>1'';; c\\<^sub>2 \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>1'',s''\\<rangle> \\<Longrightarrow>\n    \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "with \\<open>\\<langle>c\\<^sub>2,sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close> \\<open>n = i + j + 1\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>2,\n   sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 1\n  \\<langle>c\\<^sub>1,\n   s\\<rangle> \\<rightarrow>\\<^bsup>Suc i\\<^esup> \\<langle>Skip,sx\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2,\n   sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 1\n  \\<langle>c\\<^sub>1,\n   s\\<rangle> \\<rightarrow>\\<^bsup>Suc i\\<^esup> \\<langle>Skip,sx\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<langle>c\\<^sub>1,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>2,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       Suc n = i + j + 1", "by(rule_tac x=\"Suc i\" in exI) auto"], ["proof (state)\nthis:\n  \\<exists>i j s''.\n     \\<langle>c\\<^sub>1,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     Suc n = i + j + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i j s''.\n     \\<langle>c\\<^sub>1,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     Suc n = i + j + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i j s''.\n     \\<langle>c\\<^sub>1,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     n = i + j + 1\n\ngoal (1 subgoal):\n 1. (\\<And>i s'' j.\n        \\<lbrakk>\\<langle>c\\<^sub>1,\n                  s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                       s''\\<rangle>;\n         \\<langle>c\\<^sub>2,\n          s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                 s'\\<rangle>;\n         n = i + j + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<langle>c\\<^sub>1,\n            s\\<rangle> \\<rightarrow>\\<^bsup>?i\\<^esup> \\<langle>Skip,\n                  ?s''\\<rangle>;\n   \\<langle>c\\<^sub>2,\n    ?s''\\<rangle> \\<rightarrow>\\<^bsup>?j\\<^esup> \\<langle>Skip,s'\\<rangle>;\n   n = ?i + ?j + 1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>i j s''.\n     \\<langle>c\\<^sub>1,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     n = i + j + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<langle>c\\<^sub>1,\n            s\\<rangle> \\<rightarrow>\\<^bsup>?i\\<^esup> \\<langle>Skip,\n                  ?s''\\<rangle>;\n   \\<langle>c\\<^sub>2,\n    ?s''\\<rangle> \\<rightarrow>\\<^bsup>?j\\<^esup> \\<langle>Skip,s'\\<rangle>;\n   n = ?i + ?j + 1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<exists>i j s''.\n     \\<langle>c\\<^sub>1,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>2,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     n = i + j + 1\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_red_nE:\n  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle> \n  \\<Longrightarrow> (\\<lbrakk>b\\<rbrakk> s = Some false \\<and> s = s' \\<and> n = 1) \\<or>\n     (\\<exists>i j s''. \\<lbrakk>b\\<rbrakk> s = Some true \\<and> \\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle> \\<and> \n                \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle> \\<and> n = i + j + 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>while (b) cx,\n     s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n          s'\\<rangle> \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        n = i + j + 2)", "proof(induct \"while (b) cx\" s n \"Skip\" s' rule:red_n.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s'.\n       \\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        c'' = while (b) cx \\<Longrightarrow>\n        \\<lbrakk>b\\<rbrakk>s'' = Some false \\<and>\n        s'' = s' \\<and> n = 1 \\<or>\n        (\\<exists>i j s''a.\n            \\<lbrakk>b\\<rbrakk>s'' = Some true \\<and>\n            \\<langle>cx,\n             s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                    s''a\\<rangle> \\<and>\n            \\<langle>while (b) cx,\n             s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                     s'\\<rangle> \\<and>\n            n = i + j + 2)\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n                         s = s' \\<and> Suc n = 1 \\<or>\n                         (\\<exists>i j s''.\n                             \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n                             \\<langle>cx,\n                              s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                   s''\\<rangle> \\<and>\n                             \\<langle>while (b) cx,\n                              s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                     s'\\<rangle> \\<and>\n                             Suc n = i + j + 2)", "case (red_n_Rec s c'' s'' n s')"], ["proof (state)\nthis:\n  \\<langle>while (b) cx,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  c'' = while (b) cx \\<Longrightarrow>\n  \\<lbrakk>b\\<rbrakk>s'' = Some false \\<and> s'' = s' \\<and> n = 1 \\<or>\n  (\\<exists>i j s''a.\n      \\<lbrakk>b\\<rbrakk>s'' = Some true \\<and>\n      \\<langle>cx,\n       s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''a\\<rangle> \\<and>\n      \\<langle>while (b) cx,\n       s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n      n = i + j + 2)\n\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s'.\n       \\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        c'' = while (b) cx \\<Longrightarrow>\n        \\<lbrakk>b\\<rbrakk>s'' = Some false \\<and>\n        s'' = s' \\<and> n = 1 \\<or>\n        (\\<exists>i j s''a.\n            \\<lbrakk>b\\<rbrakk>s'' = Some true \\<and>\n            \\<langle>cx,\n             s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                    s''a\\<rangle> \\<and>\n            \\<langle>while (b) cx,\n             s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                     s'\\<rangle> \\<and>\n            n = i + j + 2)\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n                         s = s' \\<and> Suc n = 1 \\<or>\n                         (\\<exists>i j s''.\n                             \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n                             \\<langle>cx,\n                              s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                   s''\\<rangle> \\<and>\n                             \\<langle>while (b) cx,\n                              s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                     s'\\<rangle> \\<and>\n                             Suc n = i + j + 2)", "from \\<open>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>while (b) cx,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>", "have \"(\\<lbrakk>b\\<rbrakk> s = Some false \\<and> c'' = Skip \\<and> s'' = s) \\<or>\n    (\\<lbrakk>b\\<rbrakk> s = Some true \\<and> c'' = cx;;while (b) cx \\<and> s'' = s)\""], ["proof (prove)\nusing this:\n  \\<langle>while (b) cx,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and> c'' = Skip \\<and> s'' = s \\<or>\n    \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s", "by(induct \"while (b) cx\" _ _ _ rule:red_induct) auto"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> c'' = Skip \\<and> s'' = s \\<or>\n  \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n  c'' = cx;; while (b) cx \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<And>s c'' s'' n s'.\n       \\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\n                \\<langle>c'',s''\\<rangle>;\n        \\<langle>c'',\n         s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        c'' = while (b) cx \\<Longrightarrow>\n        \\<lbrakk>b\\<rbrakk>s'' = Some false \\<and>\n        s'' = s' \\<and> n = 1 \\<or>\n        (\\<exists>i j s''a.\n            \\<lbrakk>b\\<rbrakk>s'' = Some true \\<and>\n            \\<langle>cx,\n             s''\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                    s''a\\<rangle> \\<and>\n            \\<langle>while (b) cx,\n             s''a\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                     s'\\<rangle> \\<and>\n            n = i + j + 2)\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n                         s = s' \\<and> Suc n = 1 \\<or>\n                         (\\<exists>i j s''.\n                             \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n                             \\<langle>cx,\n                              s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                                   s''\\<rangle> \\<and>\n                             \\<langle>while (b) cx,\n                              s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                                     s'\\<rangle> \\<and>\n                             Suc n = i + j + 2)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> c'' = Skip \\<and> s'' = s \\<or>\n  \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n  c'' = cx;; while (b) cx \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    c'' = Skip \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)\n 2. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "assume \"\\<lbrakk>b\\<rbrakk> s = Some false \\<and> c'' = Skip \\<and> s'' = s\""], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> c'' = Skip \\<and> s'' = s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    c'' = Skip \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)\n 2. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "hence \"\\<lbrakk>b\\<rbrakk> s = Some false\" and \"c'' = Skip\" and \"s'' = s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> c'' = Skip \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false &&& c'' = Skip &&& s'' = s", "by simp_all"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false\n  c'' = Skip\n  s'' = s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    c'' = Skip \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)\n 2. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>b\\<rbrakk>s = Some false\n  c'' = Skip\n  s'' = s", "have \"s = s'\" and \"n = 0\""], ["proof (prove)\nusing this:\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>b\\<rbrakk>s = Some false\n  c'' = Skip\n  s'' = s\n\ngoal (1 subgoal):\n 1. s = s' &&& n = 0", "by(induct _ _ Skip _ rule:red_n.induct,auto elim:red.cases)"], ["proof (state)\nthis:\n  s = s'\n  n = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    c'' = Skip \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)\n 2. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "with \\<open>\\<lbrakk>b\\<rbrakk> s = Some false\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>b\\<rbrakk>s = Some false\n  s = s'\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some false\n  s = s'\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n  (\\<exists>i j s''.\n      \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n      \\<langle>cx,\n       s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n            s''\\<rangle> \\<and>\n      \\<langle>while (b) cx,\n       s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<and>\n      Suc n = i + j + 2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "assume \"\\<lbrakk>b\\<rbrakk> s = Some true \\<and> c'' = cx;;while (b) cx \\<and> s'' = s\""], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n  c'' = cx;; while (b) cx \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "hence \"\\<lbrakk>b\\<rbrakk> s = Some true\" and \"c'' = cx;;while (b) cx\" \n      and \"s'' = s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n  c'' = cx;; while (b) cx \\<and> s'' = s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some true &&& c'' = cx;; while (b) cx &&& s'' = s", "by simp_all"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  c'' = cx;; while (b) cx\n  s'' = s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  c'' = cx;; while (b) cx\n  s'' = s", "obtain i j sx where \"\\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\" and \"\\<langle>while (b) cx,sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n      and \"n = i + j + 1\""], ["proof (prove)\nusing this:\n  \\<langle>c'',\n   s''\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  c'' = cx;; while (b) cx\n  s'' = s\n\ngoal (1 subgoal):\n 1. (\\<And>i sx j.\n        \\<lbrakk>\\<langle>cx,\n                  s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n                       sx\\<rangle>;\n         \\<langle>while (b) cx,\n          sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n         n = i + j + 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce elim:Seq_red_nE)"], ["proof (state)\nthis:\n  \\<langle>cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\n  \\<langle>while (b) cx,\n   sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n    c'' = cx;; while (b) cx \\<and> s'' = s \\<Longrightarrow>\n    \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "with \\<open>\\<lbrakk>b\\<rbrakk> s = Some true\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  \\<langle>cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\n  \\<langle>while (b) cx,\n   sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  \\<langle>cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,sx\\<rangle>\n  \\<langle>while (b) cx,\n   sx\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        Suc n = i + j + 2)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n  (\\<exists>i j s''.\n      \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n      \\<langle>cx,\n       s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n            s''\\<rangle> \\<and>\n      \\<langle>while (b) cx,\n       s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<and>\n      Suc n = i + j + 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> Suc n = 1 \\<or>\n  (\\<exists>i j s''.\n      \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n      \\<langle>cx,\n       s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n            s''\\<rangle> \\<and>\n      \\<langle>while (b) cx,\n       s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<and>\n      Suc n = i + j + 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_red_n_induct [consumes 1, case_names false true]:\n  assumes major: \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n  and IHfalse:\"\\<And>s.  \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> P s s\"\n  and IHtrue:\"\\<And>s i j s''. \\<lbrakk>  \\<lbrakk>b\\<rbrakk> s = Some true; \\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>; \n                            \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>; P s'' s'\\<rbrakk> \\<Longrightarrow> P s s'\"\n  shows \"P s s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s s'", "using major"], ["proof (prove)\nusing this:\n  \\<langle>while (b) cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. P s s'", "proof(induct n arbitrary:s rule:nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<forall>m<n.\n                   \\<forall>x.\n                      \\<langle>while (b) cx,\n                       x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n                            s'\\<rangle> \\<longrightarrow>\n                      P x s';\n        \\<langle>while (b) cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n              s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P s s'", "fix n s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<forall>m<n.\n                   \\<forall>x.\n                      \\<langle>while (b) cx,\n                       x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n                            s'\\<rangle> \\<longrightarrow>\n                      P x s';\n        \\<langle>while (b) cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n              s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P s s'", "assume IHall:\"\\<forall>m<n. \\<forall>x. \\<langle>while (b) cx,x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,s'\\<rangle> \\<longrightarrow> P x s'\"\n    and  \"\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\""], ["proof (state)\nthis:\n  \\<forall>m<n.\n     \\<forall>x.\n        \\<langle>while (b) cx,\n         x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<longrightarrow>\n        P x s'\n  \\<langle>while (b) cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<forall>m<n.\n                   \\<forall>x.\n                      \\<langle>while (b) cx,\n                       x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n                            s'\\<rangle> \\<longrightarrow>\n                      P x s';\n        \\<langle>while (b) cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n              s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P s s'", "from \\<open>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>while (b) cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>", "have \"(\\<lbrakk>b\\<rbrakk> s = Some false \\<and> s = s' \\<and> n = 1) \\<or>\n     (\\<exists>i j s''. \\<lbrakk>b\\<rbrakk> s = Some true \\<and> \\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle> \\<and> \n                \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle> \\<and> n = i + j + 2)\""], ["proof (prove)\nusing this:\n  \\<langle>while (b) cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> n = 1 \\<or>\n    (\\<exists>i j s''.\n        \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle> \\<and>\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle> \\<and>\n        n = i + j + 2)", "by(rule while_red_nE)"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> n = 1 \\<or>\n  (\\<exists>i j s''.\n      \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n      \\<langle>cx,\n       s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n            s''\\<rangle> \\<and>\n      \\<langle>while (b) cx,\n       s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<and>\n      n = i + j + 2)\n\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<forall>m<n.\n                   \\<forall>x.\n                      \\<langle>while (b) cx,\n                       x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n                            s'\\<rangle> \\<longrightarrow>\n                      P x s';\n        \\<langle>while (b) cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n              s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P s s'", "thus \"P s s'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> n = 1 \\<or>\n  (\\<exists>i j s''.\n      \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n      \\<langle>cx,\n       s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n            s''\\<rangle> \\<and>\n      \\<langle>while (b) cx,\n       s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<and>\n      n = i + j + 2)\n\ngoal (1 subgoal):\n 1. P s s'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    s = s' \\<and> n = 1 \\<Longrightarrow>\n    P s s'\n 2. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "assume \"\\<lbrakk>b\\<rbrakk> s = Some false \\<and> s = s' \\<and> n = 1\""], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> n = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    s = s' \\<and> n = 1 \\<Longrightarrow>\n    P s s'\n 2. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "hence \"\\<lbrakk>b\\<rbrakk> s = Some false\" and \"s = s'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>b\\<rbrakk>s = Some false \\<and> s = s' \\<and> n = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false &&& s = s'", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some false\n  s = s'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    s = s' \\<and> n = 1 \\<Longrightarrow>\n    P s s'\n 2. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "from IHfalse[OF \\<open>\\<lbrakk>b\\<rbrakk> s = Some false\\<close>]"], ["proof (chain)\npicking this:\n  P s s", "have \"P s s\""], ["proof (prove)\nusing this:\n  P s s\n\ngoal (1 subgoal):\n 1. P s s", "."], ["proof (state)\nthis:\n  P s s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b\\<rbrakk>s = Some false \\<and>\n    s = s' \\<and> n = 1 \\<Longrightarrow>\n    P s s'\n 2. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "with \\<open>s = s'\\<close>"], ["proof (chain)\npicking this:\n  s = s'\n  P s s", "show ?thesis"], ["proof (prove)\nusing this:\n  s = s'\n  P s s\n\ngoal (1 subgoal):\n 1. P s s'", "by simp"], ["proof (state)\nthis:\n  P s s'\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "assume \"\\<exists>i j s''. \\<lbrakk>b\\<rbrakk> s = Some true \\<and> \\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle> \\<and> \n                      \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle> \\<and> n = i + j + 2\""], ["proof (state)\nthis:\n  \\<exists>i j s''.\n     \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n     \\<langle>cx,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>while (b) cx,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     n = i + j + 2\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "then"], ["proof (chain)\npicking this:\n  \\<exists>i j s''.\n     \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n     \\<langle>cx,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>while (b) cx,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     n = i + j + 2", "obtain i j s'' where \"\\<lbrakk>b\\<rbrakk> s = Some true\"\n      and \"\\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\" and \"\\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\"\n      and \"n = i + j + 2\""], ["proof (prove)\nusing this:\n  \\<exists>i j s''.\n     \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n     \\<langle>cx,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n           s''\\<rangle> \\<and>\n     \\<langle>while (b) cx,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n             s'\\<rangle> \\<and>\n     n = i + j + 2\n\ngoal (1 subgoal):\n 1. (\\<And>i s'' j.\n        \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n         \\<langle>cx,\n          s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n               s''\\<rangle>;\n         \\<langle>while (b) cx,\n          s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                 s'\\<rangle>;\n         n = i + j + 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  \\<langle>cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\n  \\<langle>while (b) cx,\n   s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 2\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "with IHall"], ["proof (chain)\npicking this:\n  \\<forall>m<n.\n     \\<forall>x.\n        \\<langle>while (b) cx,\n         x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<longrightarrow>\n        P x s'\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  \\<langle>cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\n  \\<langle>while (b) cx,\n   s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 2", "have \"P s'' s'\""], ["proof (prove)\nusing this:\n  \\<forall>m<n.\n     \\<forall>x.\n        \\<langle>while (b) cx,\n         x\\<rangle> \\<rightarrow>\\<^bsup>m\\<^esup> \\<langle>Skip,\n              s'\\<rangle> \\<longrightarrow>\n        P x s'\n  \\<lbrakk>b\\<rbrakk>s = Some true\n  \\<langle>cx,\n   s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\n  \\<langle>while (b) cx,\n   s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\n  n = i + j + 2\n\ngoal (1 subgoal):\n 1. P s'' s'", "apply(erule_tac x=\"j\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n     \\<langle>cx,\n      s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>;\n     \\<langle>while (b) cx,\n      s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>;\n     n = i + j + 2;\n     j < n \\<longrightarrow>\n     (\\<forall>x.\n         \\<langle>while (b) cx,\n          x\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<longrightarrow>\n         P x s')\\<rbrakk>\n    \\<Longrightarrow> P s'' s'", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P s'' s'\n\ngoal (1 subgoal):\n 1. \\<exists>i j s''.\n       \\<lbrakk>b\\<rbrakk>s = Some true \\<and>\n       \\<langle>cx,\n        s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n             s''\\<rangle> \\<and>\n       \\<langle>while (b) cx,\n        s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n               s'\\<rangle> \\<and>\n       n = i + j + 2 \\<Longrightarrow>\n    P s s'", "from IHtrue[OF \\<open>\\<lbrakk>b\\<rbrakk> s = Some true\\<close> \\<open>\\<langle>cx,s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,s''\\<rangle>\\<close> \n      \\<open>\\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,s'\\<rangle>\\<close> this]"], ["proof (chain)\npicking this:\n  P s s'", "show ?thesis"], ["proof (prove)\nusing this:\n  P s s'\n\ngoal (1 subgoal):\n 1. P s s'", "."], ["proof (state)\nthis:\n  P s s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P s s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reds_to_red_n:\"\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> \\<Longrightarrow> \\<exists>n. \\<langle>c,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c,s\\<rangle> \\<rightarrow>*\n    \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n    \\<exists>n.\n       \\<langle>c,\n        s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',s'\\<rangle>", "by(induct rule:converse_rtranclp_induct2,auto intro:red_n.intros)"], ["", "lemma red_n_to_reds:\"\\<langle>c,s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',s'\\<rangle> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c,\n     s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>c',\n          s'\\<rangle> \\<Longrightarrow>\n    \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>", "by(induct rule:red_n.induct,auto intro:converse_rtranclp_into_rtranclp)"], ["", "lemma while_reds_induct[consumes 1, case_names false true]:\n  \"\\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>; \\<And>s. \\<lbrakk>b\\<rbrakk> s = Some false \\<Longrightarrow> P s s;\n    \\<And>s s''. \\<lbrakk> \\<lbrakk>b\\<rbrakk> s = Some true; \\<langle>cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle>; \n             \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s'\\<rangle>; P s'' s'\\<rbrakk> \\<Longrightarrow> P s s'\\<rbrakk>\n  \\<Longrightarrow> P s s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>while (b) cx,s\\<rangle> \\<rightarrow>*\n             \\<langle>Skip,s'\\<rangle>;\n     \\<And>s. \\<lbrakk>b\\<rbrakk>s = Some false \\<Longrightarrow> P s s;\n     \\<And>s s''.\n        \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n         \\<langle>cx,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s''\\<rangle>;\n         \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>*\n         \\<langle>Skip,s'\\<rangle>;\n         P s'' s'\\<rbrakk>\n        \\<Longrightarrow> P s s'\\<rbrakk>\n    \\<Longrightarrow> P s s'", "apply(drule reds_to_red_n,clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>b\\<rbrakk>s = Some false \\<Longrightarrow>\n                   P s s;\n        \\<And>s s''.\n           \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n            \\<langle>cx,s\\<rangle> \\<rightarrow>*\n            \\<langle>Skip,s''\\<rangle>;\n            \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>*\n            \\<langle>Skip,s'\\<rangle>;\n            P s'' s'\\<rbrakk>\n           \\<Longrightarrow> P s s';\n        \\<langle>while (b) cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>n\\<^esup> \\<langle>Skip,\n              s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P s s'", "apply(erule while_red_n_induct,clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s i j s''.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>b\\<rbrakk>s = Some false \\<Longrightarrow>\n                   P s s;\n        \\<And>s s''.\n           \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n            \\<langle>cx,s\\<rangle> \\<rightarrow>*\n            \\<langle>Skip,s''\\<rangle>;\n            \\<langle>while (b) cx,s''\\<rangle> \\<rightarrow>*\n            \\<langle>Skip,s'\\<rangle>;\n            P s'' s'\\<rbrakk>\n           \\<Longrightarrow> P s s';\n        \\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>cx,\n         s\\<rangle> \\<rightarrow>\\<^bsup>i\\<^esup> \\<langle>Skip,\n              s''\\<rangle>;\n        \\<langle>while (b) cx,\n         s''\\<rangle> \\<rightarrow>\\<^bsup>j\\<^esup> \\<langle>Skip,\n                s'\\<rangle>;\n        P s'' s'\\<rbrakk>\n       \\<Longrightarrow> P s s'", "by(auto dest:red_n_to_reds)"], ["", "lemma red_det:\n  \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1,s\\<^sub>1\\<rangle>; \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk> \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2 \\<and> s\\<^sub>1 = s\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>\n             \\<langle>c\\<^sub>1,s\\<^sub>1\\<rangle>;\n     \\<langle>c,s\\<rangle> \\<rightarrow>\n     \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2 \\<and> s\\<^sub>1 = s\\<^sub>2", "proof(induct arbitrary:c\\<^sub>2 rule:red_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>V e s c\\<^sub>2.\n       \\<langle>V:=e,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       Skip = c\\<^sub>2 \\<and> s(V := \\<lbrakk>e\\<rbrakk>s) = s\\<^sub>2\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<And>c\\<^sub>2.\n           \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n           \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n           c\\<^sub>1' = c\\<^sub>2 \\<and> s' = s\\<^sub>2;\n        \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1';; c\\<^sub>2 = c\\<^sub>2' \\<and>\n                         s' = s\\<^sub>2\n 3. \\<And>c\\<^sub>2 s c\\<^sub>2'.\n       \\<langle>Skip;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 6. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c = c\\<^sub>2 \\<and> s = s\\<^sub>2\n 7. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> Skip = c\\<^sub>2 \\<and> s = s\\<^sub>2", "case (SeqRed c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s'\\<rangle>\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>?c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n  c\\<^sub>1' = ?c\\<^sub>2 \\<and> s' = s\\<^sub>2\n  \\<langle>c\\<^sub>1;; c\\<^sub>2',s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\n\ngoal (7 subgoals):\n 1. \\<And>V e s c\\<^sub>2.\n       \\<langle>V:=e,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       Skip = c\\<^sub>2 \\<and> s(V := \\<lbrakk>e\\<rbrakk>s) = s\\<^sub>2\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<And>c\\<^sub>2.\n           \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n           \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n           c\\<^sub>1' = c\\<^sub>2 \\<and> s' = s\\<^sub>2;\n        \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1';; c\\<^sub>2 = c\\<^sub>2' \\<and>\n                         s' = s\\<^sub>2\n 3. \\<And>c\\<^sub>2 s c\\<^sub>2'.\n       \\<langle>Skip;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 6. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c = c\\<^sub>2 \\<and> s = s\\<^sub>2\n 7. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> Skip = c\\<^sub>2 \\<and> s = s\\<^sub>2", "note IH = \\<open>\\<And>c\\<^sub>2. \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow> c\\<^sub>1' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\\<close>"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>?c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n  c\\<^sub>1' = ?c\\<^sub>2 \\<and> s' = s\\<^sub>2\n\ngoal (7 subgoals):\n 1. \\<And>V e s c\\<^sub>2.\n       \\<langle>V:=e,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       Skip = c\\<^sub>2 \\<and> s(V := \\<lbrakk>e\\<rbrakk>s) = s\\<^sub>2\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<And>c\\<^sub>2.\n           \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n           \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n           c\\<^sub>1' = c\\<^sub>2 \\<and> s' = s\\<^sub>2;\n        \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1';; c\\<^sub>2 = c\\<^sub>2' \\<and>\n                         s' = s\\<^sub>2\n 3. \\<And>c\\<^sub>2 s c\\<^sub>2'.\n       \\<langle>Skip;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 6. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c = c\\<^sub>2 \\<and> s = s\\<^sub>2\n 7. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> Skip = c\\<^sub>2 \\<and> s = s\\<^sub>2", "from \\<open>\\<langle>c\\<^sub>1;;c\\<^sub>2',s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2',s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>", "have \"c\\<^sub>1 = Skip \\<or> (\\<exists>cx. c\\<^sub>2 = cx;;c\\<^sub>2' \\<and> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>cx,s\\<^sub>2\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1;; c\\<^sub>2',s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 = Skip \\<or>\n    (\\<exists>cx.\n        c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n        \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n        \\<langle>cx,s\\<^sub>2\\<rangle>)", "by(fastforce elim:red.cases)"], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip \\<or>\n  (\\<exists>cx.\n      c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n      \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n      \\<langle>cx,s\\<^sub>2\\<rangle>)\n\ngoal (7 subgoals):\n 1. \\<And>V e s c\\<^sub>2.\n       \\<langle>V:=e,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       Skip = c\\<^sub>2 \\<and> s(V := \\<lbrakk>e\\<rbrakk>s) = s\\<^sub>2\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<And>c\\<^sub>2.\n           \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n           \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n           c\\<^sub>1' = c\\<^sub>2 \\<and> s' = s\\<^sub>2;\n        \\<langle>c\\<^sub>1;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1';; c\\<^sub>2 = c\\<^sub>2' \\<and>\n                         s' = s\\<^sub>2\n 3. \\<And>c\\<^sub>2 s c\\<^sub>2'.\n       \\<langle>Skip;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 6. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c = c\\<^sub>2 \\<and> s = s\\<^sub>2\n 7. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> Skip = c\\<^sub>2 \\<and> s = s\\<^sub>2", "thus ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Skip \\<or>\n  (\\<exists>cx.\n      c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n      \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n      \\<langle>cx,s\\<^sub>2\\<rangle>)\n\ngoal (1 subgoal):\n 1. c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\n 2. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "assume \"c\\<^sub>1 = Skip\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Skip\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\n 2. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "with \\<open>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>c\\<^sub>1',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s'\\<rangle>\n  c\\<^sub>1 = Skip", "have False"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s'\\<rangle>\n  c\\<^sub>1 = Skip\n\ngoal (1 subgoal):\n 1. False", "by(fastforce elim:red.cases)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Skip \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\n 2. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "assume \"\\<exists>cx. c\\<^sub>2 = cx;;c\\<^sub>2' \\<and> \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>cx,s\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<exists>cx.\n     c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>cx,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "then"], ["proof (chain)\npicking this:\n  \\<exists>cx.\n     c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>cx,s\\<^sub>2\\<rangle>", "obtain cx where \"c\\<^sub>2 = cx;;c\\<^sub>2'\" and \"\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>cx,s\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<exists>cx.\n     c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n     \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n     \\<langle>cx,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>cx.\n        \\<lbrakk>c\\<^sub>2 = cx;; c\\<^sub>2';\n         \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n         \\<langle>cx,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>2 = cx;; c\\<^sub>2'\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>cx,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "from IH[OF \\<open>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow> \\<langle>cx,s\\<^sub>2\\<rangle>\\<close>]"], ["proof (chain)\npicking this:\n  c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2", "have \"c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2\""], ["proof (prove)\nusing this:\n  c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2", "."], ["proof (state)\nthis:\n  c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>cx.\n       c\\<^sub>2 = cx;; c\\<^sub>2' \\<and>\n       \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n       \\<langle>cx,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "with \\<open>c\\<^sub>2 = cx;;c\\<^sub>2'\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>2 = cx;; c\\<^sub>2'\n  c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  c\\<^sub>2 = cx;; c\\<^sub>2'\n  c\\<^sub>1' = cx \\<and> s' = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c\\<^sub>1';; c\\<^sub>2' = c\\<^sub>2 \\<and> s' = s\\<^sub>2\n\ngoal (6 subgoals):\n 1. \\<And>V e s c\\<^sub>2.\n       \\<langle>V:=e,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       Skip = c\\<^sub>2 \\<and> s(V := \\<lbrakk>e\\<rbrakk>s) = s\\<^sub>2\n 2. \\<And>c\\<^sub>2 s c\\<^sub>2'.\n       \\<langle>Skip;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n       \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle> \\<Longrightarrow>\n       c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>1 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2 c\\<^sub>2'.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2',s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c\\<^sub>2 = c\\<^sub>2' \\<and> s = s\\<^sub>2\n 5. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some true;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c = c\\<^sub>2 \\<and> s = s\\<^sub>2\n 6. \\<And>b s c c\\<^sub>2.\n       \\<lbrakk>\\<lbrakk>b\\<rbrakk>s = Some false;\n        \\<langle>while (b) c,s\\<rangle> \\<rightarrow>\n        \\<langle>c\\<^sub>2,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> Skip = c\\<^sub>2 \\<and> s = s\\<^sub>2", "qed (fastforce elim:red.cases)+"], ["", "theorem reds_det:\n  \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>1\\<rangle>; \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk> \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>*\n             \\<langle>Skip,s\\<^sub>1\\<rangle>;\n     \\<langle>c,s\\<rangle> \\<rightarrow>*\n     \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "proof(induct rule:converse_rtranclp_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<langle>Skip,s\\<^sub>1\\<rangle> \\<rightarrow>*\n    \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    s\\<^sub>1 = s\\<^sub>2\n 2. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "case refl"], ["proof (state)\nthis:\n  \\<langle>Skip,s\\<^sub>1\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<langle>Skip,s\\<^sub>1\\<rangle> \\<rightarrow>*\n    \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n    s\\<^sub>1 = s\\<^sub>2\n 2. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "from \\<open>\\<langle>Skip,s\\<^sub>1\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>Skip,s\\<^sub>1\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>Skip,s\\<^sub>1\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. s\\<^sub>1 = s\\<^sub>2", "by -(erule converse_rtranclpE,auto elim:red.cases)"], ["proof (state)\nthis:\n  s\\<^sub>1 = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "case (step c'' s'' c' s')"], ["proof (state)\nthis:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>1\\<rangle>\n  \\<langle>c',s'\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n  s\\<^sub>1 = s\\<^sub>2\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "note IH = \\<open>\\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2\\<close>"], ["proof (state)\nthis:\n  \\<langle>c',s'\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n  s\\<^sub>1 = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "from step"], ["proof (chain)\npicking this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>1\\<rangle>\n  \\<langle>c',s'\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n  s\\<^sub>1 = s\\<^sub>2\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>", "have \"\\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>1\\<rangle>\n  \\<langle>c',s'\\<rangle> \\<rightarrow>*\n  \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n  s\\<^sub>1 = s\\<^sub>2\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "from \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\\<close> this"], ["proof (chain)\npicking this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "have \"\\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>", "by -(erule converse_rtranclpE,auto elim:red.cases dest:red_det)"], ["proof (state)\nthis:\n  \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>Skip,s\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>1\\<rangle>;\n        \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle> \\<Longrightarrow>\n        s\\<^sub>1 = s\\<^sub>2;\n        \\<langle>a,b\\<rangle> \\<rightarrow>*\n        \\<langle>Skip,s\\<^sub>2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> s\\<^sub>1 = s\\<^sub>2", "from IH[OF this]"], ["proof (chain)\npicking this:\n  s\\<^sub>1 = s\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  s\\<^sub>1 = s\\<^sub>2\n\ngoal (1 subgoal):\n 1. s\\<^sub>1 = s\\<^sub>2", "."], ["proof (state)\nthis:\n  s\\<^sub>1 = s\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}