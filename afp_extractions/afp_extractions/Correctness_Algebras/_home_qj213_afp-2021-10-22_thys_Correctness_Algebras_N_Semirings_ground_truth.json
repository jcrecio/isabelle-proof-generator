{"file_name": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras/N_Semirings.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras", "problem_names": ["lemma n_sub_one:\n  \"n(x) \\<le> 1\"", "lemma n_isotone:\n  \"x \\<le> y \\<Longrightarrow> n(x) \\<le> n(y)\"", "lemma n_mult_idempotent:\n  \"n(x) * n(x) = n(x)\"", "lemma n_mult_bot:\n  \"n(x) = n(x * bot)\"", "lemma n_mult_left_upper_bound:\n  \"n(x) \\<le> n(x * y)\"", "lemma n_mult_right_bot:\n  \"n(x) * bot = bot\"", "lemma n_mult_n:\n  \"n(x * n(y)) = n(x)\"", "lemma n_mult_left_absorb_sup:\n  \"n(x) * (n(x) \\<squnion> n(y)) = n(x)\"", "lemma n_mult_right_absorb_sup:\n  \"(n(x) \\<squnion> n(y)) * n(y) = n(y)\"", "lemma n_sup_left_absorb_mult:\n  \"n(x) \\<squnion> n(x) * n(y) = n(x)\"", "lemma n_sup_right_absorb_mult:\n  \"n(x) * n(y) \\<squnion> n(y) = n(y)\"", "lemma n_mult_commutative:\n  \"n(x) * n(y) = n(y) * n(x)\"", "lemma n_sup_left_dist_mult:\n  \"n(x) \\<squnion> n(y) * n(z) = (n(x) \\<squnion> n(y)) * (n(x) \\<squnion> n(z))\"", "lemma n_sup_right_dist_mult:\n  \"n(x) * n(y) \\<squnion> n(z) = (n(x) \\<squnion> n(z)) * (n(y) \\<squnion> n(z))\"", "lemma n_order:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> n(x) * n(y) = n(x)\"", "lemma n_mult_left_lower_bound:\n  \"n(x) * n(y) \\<le> n(x)\"", "lemma n_mult_right_lower_bound:\n  \"n(x) * n(y) \\<le> n(y)\"", "lemma n_mult_least_upper_bound:\n  \"n(x) \\<le> n(y) \\<and> n(x) \\<le> n(z) \\<longleftrightarrow> n(x) \\<le> n(y) * n(z)\"", "lemma n_mult_left_divisibility:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> (\\<exists>z . n(x) = n(y) * n(z))\"", "lemma n_mult_right_divisibility:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> (\\<exists>z . n(x) = n(z) * n(y))\"", "lemma n_one:\n  \"n(1) = bot\"", "lemma n_split_equal:\n  \"x \\<squnion> n(x * L) * top = x * bot \\<squnion> n(x * L) * top\"", "lemma n_split_top:\n  \"x * top \\<le> x * bot \\<squnion> n(x * L) * top\"", "lemma n_L:\n  \"n(L) = 1\"", "lemma n_split_L:\n  \"x * L = x * bot \\<squnion> n(x * L) * L\"", "lemma n_n_L:\n  \"n(n(x) * L) = n(x)\"", "lemma n_L_decreasing:\n  \"n(x) * L \\<le> x\"", "lemma n_galois:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> n(x) * L \\<le> y\"", "lemma split_L:\n  \"x * L \\<le> x * bot \\<squnion> L\"", "lemma L_left_zero:\n  \"L * x = L\"", "lemma n_mult:\n  \"n(x * n(y) * L) = n(x * y)\"", "lemma n_mult_top:\n  \"n(x * n(y) * top) = n(x * y)\"", "lemma n_top_L:\n  \"n(x * top) = n(x * L)\"", "lemma n_top_split:\n  \"x * n(y) * top \\<le> x * bot \\<squnion> n(x * y) * top\"", "lemma n_mult_right_upper_bound:\n  \"n(x * y) \\<le> n(z) \\<longleftrightarrow> n(x) \\<le> n(z) \\<and> x * n(y) * L \\<le> x * bot \\<squnion> n(z) * L\"", "lemma n_preserves_equation:\n  \"n(y) * x \\<le> x * n(y) \\<longleftrightarrow> n(y) * x = n(y) * x * n(y)\"", "lemma ni_bot:\n  \"ni(bot) = bot\"", "lemma ni_one:\n  \"ni(1) = bot\"", "lemma ni_L:\n  \"ni(L) = L\"", "lemma ni_top:\n  \"ni(top) = L\"", "lemma ni_dist_sup:\n  \"ni(x \\<squnion> y) = ni(x) \\<squnion> ni(y)\"", "lemma ni_mult_bot:\n  \"ni(x) = ni(x * bot)\"", "lemma ni_split:\n  \"x * ni(y) = x * bot \\<squnion> ni(x * y)\"", "lemma ni_decreasing:\n  \"ni(x) \\<le> x\"", "lemma ni_isotone:\n  \"x \\<le> y \\<Longrightarrow> ni(x) \\<le> ni(y)\"", "lemma ni_mult_left_upper_bound:\n  \"ni(x) \\<le> ni(x * y)\"", "lemma ni_idempotent:\n  \"ni(ni(x)) = ni(x)\"", "lemma ni_below_L:\n  \"ni(x) \\<le> L\"", "lemma ni_left_zero:\n  \"ni(x) * y = ni(x)\"", "lemma ni_split_L:\n  \"x * L = x * bot \\<squnion> ni(x * L)\"", "lemma ni_top_L:\n  \"ni(x * top) = ni(x * L)\"", "lemma ni_galois:\n  \"ni(x) \\<le> ni(y) \\<longleftrightarrow> ni(x) \\<le> y\"", "lemma ni_mult:\n  \"ni(x * ni(y)) = ni(x * y)\"", "lemma ni_n_order:\n  \"ni(x) \\<le> ni(y) \\<longleftrightarrow> n(x) \\<le> n(y)\"", "lemma ni_n_equal:\n  \"ni(x) = ni(y) \\<longleftrightarrow> n(x) = n(y)\"", "lemma ni_mult_right_upper_bound:\n  \"ni(x * y) \\<le> ni(z) \\<longleftrightarrow> ni(x) \\<le> ni(z) \\<and> x * ni(y) \\<le> x * bot \\<squnion> ni(z)\"", "lemma n_ni:\n  \"n(ni(x)) = n(x)\"", "lemma ni_n:\n  \"ni(n(x)) = bot\"", "lemma ni_n_galois:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> ni(x) \\<le> y\"", "lemma n_mult_ni:\n  \"n(x * ni(y)) = n(x * y)\"", "lemma ni_mult_n:\n  \"ni(x * n(y)) = ni(x)\"", "lemma ni_export:\n  \"ni(n(x) * y) = n(x) * ni(y)\"", "lemma ni_mult_top:\n  \"ni(x * n(y) * top) = ni(x * y)\"", "lemma ni_n_bot:\n  \"ni(x) = bot \\<longleftrightarrow> n(x) = bot\"", "lemma ni_n_L:\n  \"ni(x) = L \\<longleftrightarrow> n(x) = 1\"", "lemma simp_nImage[simp]:\n  \"\\<exists>y . Rep_nImage x = n(y)\"", "lemma mult_L_circ:\n  \"(x * L)\\<^sup>\\<circ> = 1 \\<squnion> x * L\"", "lemma mult_L_circ_mult:\n  \"(x * L)\\<^sup>\\<circ> * y = y \\<squnion> x * L\"", "lemma circ_L:\n  \"L\\<^sup>\\<circ> = L \\<squnion> 1\"", "lemma circ_n_L:\n  \"x\\<^sup>\\<circ> * n(x) * L = x\\<^sup>\\<circ> * bot\"", "lemma n_circ_left_unfold:\n  \"n(x\\<^sup>\\<circ>) = n(x * x\\<^sup>\\<circ>)\"", "lemma ni_circ:\n  \"ni(x)\\<^sup>\\<circ> = 1 \\<squnion> ni(x)\"", "lemma circ_ni:\n  \"x\\<^sup>\\<circ> * ni(x) = x\\<^sup>\\<circ> * bot\"", "lemma ni_circ_left_unfold:\n  \"ni(x\\<^sup>\\<circ>) = ni(x * x\\<^sup>\\<circ>)\"", "lemma n_circ_import:\n  \"n(y) * x \\<le> x * n(y) \\<Longrightarrow> n(y) * x\\<^sup>\\<circ> = n(y) * (n(y) * x)\\<^sup>\\<circ>\"", "lemma L_below_one_circ:\n  \"L \\<le> 1\\<^sup>\\<circ>\"", "lemma circ_below_L_sup_star:\n  \"x\\<^sup>\\<circ> \\<le> L \\<squnion> x\\<^sup>\\<star>\"", "lemma L_sup_circ_sup_star:\n  \"L \\<squnion> x\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>\"", "lemma circ_one_L:\n  \"1\\<^sup>\\<circ> = L \\<squnion> 1\"", "lemma one_circ_zero:\n  \"L = 1\\<^sup>\\<circ> * bot\"", "lemma circ_not_simulate:\n  \"(\\<forall>x y z . x * z \\<le> z * y \\<longrightarrow> x\\<^sup>\\<circ> * z \\<le> z * y\\<^sup>\\<circ>) \\<longrightarrow> 1 = bot\"", "lemma star_circ_L:\n  \"x\\<^sup>\\<star>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>\"", "lemma circ_circ_2:\n  \"x\\<^sup>\\<circ>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<circ>\"", "lemma circ_sup_6:\n  \"L \\<squnion> (x \\<squnion> y)\\<^sup>\\<circ> = (x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ>\"", "lemma circ_sup_7:\n  \"(x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ> = L \\<squnion> (x \\<squnion> y)\\<^sup>\\<star>\"", "lemma mult_L_star:\n  \"(x * L)\\<^sup>\\<star> = 1 \\<squnion> x * L\"", "lemma mult_L_omega:\n  \"(x * L)\\<^sup>\\<omega> = x * L\"", "lemma mult_L_sup_star:\n  \"(x * L \\<squnion> y)\\<^sup>\\<star> = y\\<^sup>\\<star> \\<squnion> y\\<^sup>\\<star> * x * L\"", "lemma mult_L_sup_omega:\n  \"(x * L \\<squnion> y)\\<^sup>\\<omega> = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * x * L\"", "lemma mult_L_sup_circ:\n  \"(x * L \\<squnion> y)\\<^sup>\\<Omega> = n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> \\<squnion> y\\<^sup>\\<star> * x * L\"", "lemma circ_sup_n:\n  \"(x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> = n((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion> ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n(x\\<^sup>\\<omega>) * L)\"", "lemma n_omega_induct:\n  \"n(y) \\<le> n(x * y \\<squnion> z) \\<Longrightarrow> n(y) \\<le> n(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)\"", "lemma n_Omega_left_unfold:\n  \"1 \\<squnion> x * x\\<^sup>\\<Omega> = x\\<^sup>\\<Omega>\"", "lemma n_Omega_circ_sup:\n  \"(x \\<squnion> y)\\<^sup>\\<Omega> = (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>\"", "lemma n_Omega_circ_simulate_right_sup:\n  assumes \"z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w\"\n    shows \"z * x\\<^sup>\\<Omega> \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)\"", "lemma n_Omega_circ_simulate_left_sup:\n  assumes \"x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w\"\n    shows \"x\\<^sup>\\<Omega> * z \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>\"", "lemma circ_sup_8:\n  \"n((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>\"", "lemma n_split_omega_omega:\n  \"x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> * bot \\<squnion> n(x\\<^sup>\\<omega>) * top\"", "lemma n_below_n_star:\n  \"n(x) \\<le> n(x\\<^sup>\\<star>)\"", "lemma n_star_below_n_omega:\n  \"n(x\\<^sup>\\<star>) \\<le> n(x\\<^sup>\\<omega>)\"", "lemma n_below_n_omega:\n  \"n(x) \\<le> n(x\\<^sup>\\<omega>)\"", "lemma star_n_L:\n  \"x\\<^sup>\\<star> * n(x) * L = x\\<^sup>\\<star> * bot\"", "lemma star_L_split:\n  assumes \"y \\<le> z\"\n      and \"x * z * L \\<le> x * bot \\<squnion> z * L\"\n    shows \"x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\"", "lemma star_L_split_same:\n  \"x * y * L \\<le> x * bot \\<squnion> y * L \\<Longrightarrow> x\\<^sup>\\<star> * y * L = x\\<^sup>\\<star> * bot \\<squnion> y * L\"", "lemma star_n_L_split_equal:\n  \"n(x * y) \\<le> n(y) \\<Longrightarrow> x\\<^sup>\\<star> * n(y) * L = x\\<^sup>\\<star> * bot \\<squnion> n(y) * L\"", "lemma n_star_mult:\n  \"n(x * y) \\<le> n(y) \\<Longrightarrow> n(x\\<^sup>\\<star> * y) = n(x\\<^sup>\\<star>) \\<squnion> n(y)\"", "lemma n_omega_mult:\n  \"n(x\\<^sup>\\<omega> * y) = n(x\\<^sup>\\<omega>)\"", "lemma n_star_left_unfold:\n  \"n(x\\<^sup>\\<star>) = n(x * x\\<^sup>\\<star>)\"", "lemma ni_star_below_ni_omega:\n  \"ni(x\\<^sup>\\<star>) \\<le> ni(x\\<^sup>\\<omega>)\"", "lemma ni_below_ni_omega:\n  \"ni(x) \\<le> ni(x\\<^sup>\\<omega>)\"", "lemma ni_star:\n  \"ni(x)\\<^sup>\\<star> = 1 \\<squnion> ni(x)\"", "lemma ni_omega:\n  \"ni(x)\\<^sup>\\<omega> = ni(x)\"", "lemma ni_omega_induct:\n  \"ni(y) \\<le> ni(x * y \\<squnion> z) \\<Longrightarrow> ni(y) \\<le> ni(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)\"", "lemma star_ni:\n  \"x\\<^sup>\\<star> * ni(x) = x\\<^sup>\\<star> * bot\"", "lemma star_ni_split_equal:\n  \"ni(x * y) \\<le> ni(y) \\<Longrightarrow> x\\<^sup>\\<star> * ni(y) = x\\<^sup>\\<star> * bot \\<squnion> ni(y)\"", "lemma ni_star_mult:\n  \"ni(x * y) \\<le> ni(y) \\<Longrightarrow> ni(x\\<^sup>\\<star> * y) = ni(x\\<^sup>\\<star>) \\<squnion> ni(y)\"", "lemma ni_omega_mult:\n  \"ni(x\\<^sup>\\<omega> * y) = ni(x\\<^sup>\\<omega>)\"", "lemma ni_star_left_unfold:\n  \"ni(x\\<^sup>\\<star>) = ni(x * x\\<^sup>\\<star>)\"", "lemma n_star_import:\n  assumes \"n(y) * x \\<le> x * n(y)\"\n    shows \"n(y) * x\\<^sup>\\<star> = n(y) * (n(y) * x)\\<^sup>\\<star>\"", "lemma n_omega_export:\n  \"n(y) * x \\<le> x * n(y) \\<Longrightarrow> n(y) * x\\<^sup>\\<omega> = (n(y) * x)\\<^sup>\\<omega>\"", "lemma n_omega_import:\n  \"n(y) * x \\<le> x * n(y) \\<Longrightarrow> n(y) * x\\<^sup>\\<omega> = n(y) * (n(y) * x)\\<^sup>\\<omega>\"", "lemma star_n_omega_top:\n  \"x\\<^sup>\\<star> * n(x\\<^sup>\\<omega>) * top = x\\<^sup>\\<star> * bot \\<squnion> n(x\\<^sup>\\<omega>) * top\""], "translations": [["", "lemma n_sub_one:\n  \"n(x) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coreflexive (n x)", "by (metis sup_left_top sup_ge2 n_dist_sup n_top)"], ["", "text \\<open>Theorem 15\\<close>"], ["", "lemma n_isotone:\n  \"x \\<le> y \\<Longrightarrow> n(x) \\<le> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> n x \\<le> n y", "by (metis le_iff_sup n_dist_sup)"], ["", "lemma n_mult_idempotent:\n  \"n(x) * n(x) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. idempotent (n x)", "by (metis mult_assoc mult_1_right n_export n_sub_mult_bot n_top)"], ["", "text \\<open>Theorem 15.3\\<close>"], ["", "lemma n_mult_bot:\n  \"n(x) = n(x * bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x = n (x * bot)", "by (metis sup_commute sup_left_top sup_bot_right mult_left_dist_sup mult_1_right n_dist_sup n_sub_mult_bot n_top)"], ["", "lemma n_mult_left_upper_bound:\n  \"n(x) \\<le> n(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<le> n (x * y)", "by (metis mult_right_isotone n_isotone n_mult_bot bot_least)"], ["", "lemma n_mult_right_bot:\n  \"n(x) * bot = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * bot = bot", "by (metis sup_left_top sup_bot_left mult_left_one mult_1_right n_export n_dist_sup n_sub_mult_bot n_top n_bot)"], ["", "text \\<open>Theorem 15.9\\<close>"], ["", "lemma n_mult_n:\n  \"n(x * n(y)) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * n y) = n x", "by (metis mult_assoc n_mult_right_bot n_mult_bot)"], ["", "lemma n_mult_left_absorb_sup:\n  \"n(x) * (n(x) \\<squnion> n(y)) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * (n x \\<squnion> n y) = n x", "by (metis sup_left_top mult_left_dist_sup mult_1_right n_dist_sup n_mult_idempotent n_top)"], ["", "lemma n_mult_right_absorb_sup:\n  \"(n(x) \\<squnion> n(y)) * n(y) = n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<squnion> n y) * n y = n y", "by (metis sup_commute sup_left_top mult_left_one mult_right_dist_sup n_dist_sup n_mult_idempotent n_top)"], ["", "lemma n_sup_left_absorb_mult:\n  \"n(x) \\<squnion> n(x) * n(y) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<squnion> n x * n y = n x", "using mult_left_dist_sup n_mult_idempotent n_mult_left_absorb_sup"], ["proof (prove)\nusing this:\n  ?x * (?y \\<squnion> ?z) = ?x * ?y \\<squnion> ?x * ?z\n  idempotent (n ?x)\n  n ?x * (n ?x \\<squnion> n ?y) = n ?x\n\ngoal (1 subgoal):\n 1. n x \\<squnion> n x * n y = n x", "by auto"], ["", "lemma n_sup_right_absorb_mult:\n  \"n(x) * n(y) \\<squnion> n(y) = n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * n y \\<squnion> n y = n y", "using mult_right_dist_sup n_mult_idempotent n_mult_right_absorb_sup"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y) * ?z = ?x * ?z \\<squnion> ?y * ?z\n  idempotent (n ?x)\n  (n ?x \\<squnion> n ?y) * n ?y = n ?y\n\ngoal (1 subgoal):\n 1. n x * n y \\<squnion> n y = n y", "by auto"], ["", "lemma n_mult_commutative:\n  \"n(x) * n(y) = n(y) * n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * n y = n y * n x", "by (smt sup_commute mult_left_dist_sup mult_right_dist_sup n_sup_left_absorb_mult n_sup_right_absorb_mult n_export n_mult_idempotent)"], ["", "lemma n_sup_left_dist_mult:\n  \"n(x) \\<squnion> n(y) * n(z) = (n(x) \\<squnion> n(y)) * (n(x) \\<squnion> n(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<squnion> n y * n z = (n x \\<squnion> n y) * (n x \\<squnion> n z)", "by (metis sup_assoc mult_left_dist_sup mult_right_dist_sup n_sup_right_absorb_mult n_mult_commutative n_mult_left_absorb_sup)"], ["", "lemma n_sup_right_dist_mult:\n  \"n(x) * n(y) \\<squnion> n(z) = (n(x) \\<squnion> n(z)) * (n(y) \\<squnion> n(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * n y \\<squnion> n z = (n x \\<squnion> n z) * (n y \\<squnion> n z)", "by (simp add: sup_commute n_sup_left_dist_mult)"], ["", "lemma n_order:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> n(x) * n(y) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<le> n y) = (n x * n y = n x)", "by (metis le_iff_sup n_sup_right_absorb_mult n_mult_left_absorb_sup)"], ["", "lemma n_mult_left_lower_bound:\n  \"n(x) * n(y) \\<le> n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * n y \\<le> n x", "by (simp add: sup.orderI n_sup_left_absorb_mult)"], ["", "lemma n_mult_right_lower_bound:\n  \"n(x) * n(y) \\<le> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * n y \\<le> n y", "by (simp add: le_iff_sup n_sup_right_absorb_mult)"], ["", "lemma n_mult_least_upper_bound:\n  \"n(x) \\<le> n(y) \\<and> n(x) \\<le> n(z) \\<longleftrightarrow> n(x) \\<le> n(y) * n(z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<le> n y \\<and> n x \\<le> n z) = (n x \\<le> n y * n z)", "by (metis order.trans mult_left_isotone n_mult_commutative n_mult_right_lower_bound n_order)"], ["", "lemma n_mult_left_divisibility:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> (\\<exists>z . n(x) = n(y) * n(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<le> n y) = (\\<exists>z. n x = n y * n z)", "by (metis n_mult_commutative n_mult_left_lower_bound n_order)"], ["", "lemma n_mult_right_divisibility:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> (\\<exists>z . n(x) = n(z) * n(y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<le> n y) = (\\<exists>z. n x = n z * n y)", "by (simp add: n_mult_commutative n_mult_left_divisibility)"], ["", "text \\<open>Theorem 15.1\\<close>"], ["", "lemma n_one:\n  \"n(1) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (1::'a) = bot", "by (metis mult_left_one n_mult_bot n_bot)"], ["", "lemma n_split_equal:\n  \"x \\<squnion> n(x * L) * top = x * bot \\<squnion> n(x * L) * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> n (x * L) * top = x * bot \\<squnion> n (x * L) * top", "using n_split order_trans sup.cobounded1 sup_same_context zero_right_mult_decreasing"], ["proof (prove)\nusing this:\n  ?x \\<le> ?x * bot \\<squnion> n (?x * L) * top\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n  ?a \\<le> ?a \\<squnion> ?b\n  \\<lbrakk>?x \\<le> ?y \\<squnion> ?z; ?y \\<le> ?x \\<squnion> ?z\\<rbrakk>\n  \\<Longrightarrow> ?x \\<squnion> ?z = ?y \\<squnion> ?z\n  ?x * bot \\<le> ?x\n\ngoal (1 subgoal):\n 1. x \\<squnion> n (x * L) * top = x * bot \\<squnion> n (x * L) * top", "by blast"], ["", "lemma n_split_top:\n  \"x * top \\<le> x * bot \\<squnion> n(x * L) * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * top \\<le> x * bot \\<squnion> n (x * L) * top", "by (metis mult_left_isotone n_split vector_bot_closed vector_mult_closed vector_sup_closed vector_top_closed)"], ["", "text \\<open>Theorem 15.2\\<close>"], ["", "lemma n_L:\n  \"n(L) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n L = (1::'a)", "by (metis sup_bot_left order.antisym mult_left_one n_export n_isotone n_mult_commutative n_split_top n_sub_one n_top)"], ["", "text \\<open>Theorem 15.5\\<close>"], ["", "lemma n_split_L:\n  \"x * L = x * bot \\<squnion> n(x * L) * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * L = x * bot \\<squnion> n (x * L) * L", "by (metis mult_1_right n_L n_L_split)"], ["", "lemma n_n_L:\n  \"n(n(x) * L) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (n x * L) = n x", "by (simp add: n_export n_L)"], ["", "lemma n_L_decreasing:\n  \"n(x) * L \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * L \\<le> x", "by (metis mult_left_zero n_L_split order_trans sup.orderI zero_right_mult_decreasing mult_assoc n_mult_bot)"], ["", "text \\<open>Theorem 15.10\\<close>"], ["", "lemma n_galois:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> n(x) * L \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<le> n y) = (n x * L \\<le> y)", "by (metis order.trans mult_left_isotone n_L_decreasing n_isotone n_n_L)"], ["", "text \\<open>Theorem 15.6\\<close>"], ["", "lemma split_L:\n  \"x * L \\<le> x * bot \\<squnion> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * L \\<le> x * bot \\<squnion> L", "by (metis sup_commute sup_left_isotone n_galois n_L n_split_L n_sub_one)"], ["", "text \\<open>Theorem 15.7\\<close>"], ["", "lemma L_left_zero:\n  \"L * x = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L * x = L", "by (metis order.antisym mult.left_neutral mult_left_zero zero_right_mult_decreasing n_L n_L_decreasing n_mult_bot mult.assoc)"], ["", "text \\<open>Theorem 15.8\\<close>"], ["", "lemma n_mult:\n  \"n(x * n(y) * L) = n(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * n y * L) = n (x * y)", "using n_L_split n_dist_sup sup.absorb2 n_mult_left_upper_bound n_mult_bot n_n_L"], ["proof (prove)\nusing this:\n  ?x * n ?y * L = ?x * bot \\<squnion> n (?x * ?y) * L\n  n (?x \\<squnion> ?y) = n ?x \\<squnion> n ?y\n  ?a \\<le> ?b \\<Longrightarrow> ?a \\<squnion> ?b = ?b\n  n ?x \\<le> n (?x * ?y)\n  n ?x = n (?x * bot)\n  n (n ?x * L) = n ?x\n\ngoal (1 subgoal):\n 1. n (x * n y * L) = n (x * y)", "by auto"], ["", "lemma n_mult_top:\n  \"n(x * n(y) * top) = n(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * n y * top) = n (x * y)", "by (metis mult_1_right n_mult n_top)"], ["", "text \\<open>Theorem 15.4\\<close>"], ["", "lemma n_top_L:\n  \"n(x * top) = n(x * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * top) = n (x * L)", "by (metis mult_1_right n_L n_mult_top)"], ["", "lemma n_top_split:\n  \"x * n(y) * top \\<le> x * bot \\<squnion> n(x * y) * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * n y * top \\<le> x * bot \\<squnion> n (x * y) * top", "by (metis mult_assoc n_mult n_mult_right_bot n_split_top)"], ["", "lemma n_mult_right_upper_bound:\n  \"n(x * y) \\<le> n(z) \\<longleftrightarrow> n(x) \\<le> n(z) \\<and> x * n(y) * L \\<le> x * bot \\<squnion> n(z) * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n (x * y) \\<le> n z) =\n    (n x \\<le> n z \\<and> x * n y * L \\<le> x * bot \\<squnion> n z * L)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n (x * y) \\<le> n z \\<Longrightarrow>\n    n x \\<le> n z \\<and> x * n y * L \\<le> x * bot \\<squnion> n z * L\n 2. n x \\<le> n z \\<and>\n    x * n y * L \\<le> x * bot \\<squnion> n z * L \\<Longrightarrow>\n    n (x * y) \\<le> n z", "apply (metis sup_right_isotone order.eq_iff mult_isotone n_L_split n_mult_left_upper_bound order_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<le> n z \\<and>\n    x * n y * L \\<le> x * bot \\<squnion> n z * L \\<Longrightarrow>\n    n (x * y) \\<le> n z", "by (smt (verit, ccfv_threshold) n_dist_sup n_export sup.absorb_iff2 n_mult n_mult_commutative n_mult_bot n_n_L)"], ["", "lemma n_preserves_equation:\n  \"n(y) * x \\<le> x * n(y) \\<longleftrightarrow> n(y) * x = n(y) * x * n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n y * x \\<le> x * n y) = (n y * x = n y * x * n y)", "using eq_refl test_preserves_equation n_mult_idempotent n_sub_one"], ["proof (prove)\nusing this:\n  ?x = ?y \\<Longrightarrow> ?x \\<le> ?y\n  \\<lbrakk>dense_rel ?p; coreflexive ?p\\<rbrakk>\n  \\<Longrightarrow> (?p * ?x \\<le> ?x * ?p) = (?p * ?x = ?p * ?x * ?p)\n  idempotent (n ?x)\n  coreflexive (n ?x)\n\ngoal (1 subgoal):\n 1. (n y * x \\<le> x * n y) = (n y * x = n y * x * n y)", "by auto"], ["", "definition ni :: \"'a \\<Rightarrow> 'a\"\n  where \"ni x = n(x) * L\""], ["", "lemma ni_bot:\n  \"ni(bot) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni bot = bot", "by (simp add: n_bot ni_def)"], ["", "lemma ni_one:\n  \"ni(1) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (1::'a) = bot", "by (simp add: n_one ni_def)"], ["", "lemma ni_L:\n  \"ni(L) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni L = L", "by (simp add: n_L ni_def)"], ["", "lemma ni_top:\n  \"ni(top) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni top = L", "by (simp add: n_top ni_def)"], ["", "lemma ni_dist_sup:\n  \"ni(x \\<squnion> y) = ni(x) \\<squnion> ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x \\<squnion> y) = ni x \\<squnion> ni y", "by (simp add: mult_right_dist_sup n_dist_sup ni_def)"], ["", "lemma ni_mult_bot:\n  \"ni(x) = ni(x * bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x = ni (x * bot)", "using n_mult_bot ni_def"], ["proof (prove)\nusing this:\n  n ?x = n (?x * bot)\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. ni x = ni (x * bot)", "by auto"], ["", "lemma ni_split:\n  \"x * ni(y) = x * bot \\<squnion> ni(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * ni y = x * bot \\<squnion> ni (x * y)", "using n_L_split mult_assoc ni_def"], ["proof (prove)\nusing this:\n  ?x * n ?y * L = ?x * bot \\<squnion> n (?x * ?y) * L\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. x * ni y = x * bot \\<squnion> ni (x * y)", "by auto"], ["", "lemma ni_decreasing:\n  \"ni(x) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x \\<le> x", "by (simp add: n_L_decreasing ni_def)"], ["", "lemma ni_isotone:\n  \"x \\<le> y \\<Longrightarrow> ni(x) \\<le> ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> ni x \\<le> ni y", "using mult_left_isotone n_isotone ni_def"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n  ?x \\<le> ?y \\<Longrightarrow> n ?x \\<le> n ?y\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> ni x \\<le> ni y", "by auto"], ["", "lemma ni_mult_left_upper_bound:\n  \"ni(x) \\<le> ni(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x \\<le> ni (x * y)", "using mult_left_isotone n_mult_left_upper_bound ni_def"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n  n ?x \\<le> n (?x * ?y)\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. ni x \\<le> ni (x * y)", "by force"], ["", "lemma ni_idempotent:\n  \"ni(ni(x)) = ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (ni x) = ni x", "by (simp add: n_n_L ni_def)"], ["", "lemma ni_below_L:\n  \"ni(x) \\<le> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x \\<le> L", "using n_L n_galois n_sub_one ni_def"], ["proof (prove)\nusing this:\n  n L = (1::'a)\n  (n ?x \\<le> n ?y) = (n ?x * L \\<le> ?y)\n  coreflexive (n ?x)\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. ni x \\<le> L", "by auto"], ["", "lemma ni_left_zero:\n  \"ni(x) * y = ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x * y = ni x", "by (simp add: L_left_zero mult_assoc ni_def)"], ["", "lemma ni_split_L:\n  \"x * L = x * bot \\<squnion> ni(x * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * L = x * bot \\<squnion> ni (x * L)", "using n_split_L ni_def"], ["proof (prove)\nusing this:\n  ?x * L = ?x * bot \\<squnion> n (?x * L) * L\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. x * L = x * bot \\<squnion> ni (x * L)", "by auto"], ["", "lemma ni_top_L:\n  \"ni(x * top) = ni(x * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x * top) = ni (x * L)", "by (simp add: n_top_L ni_def)"], ["", "lemma ni_galois:\n  \"ni(x) \\<le> ni(y) \\<longleftrightarrow> ni(x) \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ni x \\<le> ni y) = (ni x \\<le> y)", "by (metis n_galois n_n_L ni_def)"], ["", "lemma ni_mult:\n  \"ni(x * ni(y)) = ni(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x * ni y) = ni (x * y)", "using mult_assoc n_mult ni_def"], ["proof (prove)\nusing this:\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  n (?x * n ?y * L) = n (?x * ?y)\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. ni (x * ni y) = ni (x * y)", "by auto"], ["", "lemma ni_n_order:\n  \"ni(x) \\<le> ni(y) \\<longleftrightarrow> n(x) \\<le> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ni x \\<le> ni y) = (n x \\<le> n y)", "using n_galois ni_def ni_galois"], ["proof (prove)\nusing this:\n  (n ?x \\<le> n ?y) = (n ?x * L \\<le> ?y)\n  ni ?x = n ?x * L\n  (ni ?x \\<le> ni ?y) = (ni ?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. (ni x \\<le> ni y) = (n x \\<le> n y)", "by auto"], ["", "lemma ni_n_equal:\n  \"ni(x) = ni(y) \\<longleftrightarrow> n(x) = n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ni x = ni y) = (n x = n y)", "by (metis n_n_L ni_def)"], ["", "lemma ni_mult_right_upper_bound:\n  \"ni(x * y) \\<le> ni(z) \\<longleftrightarrow> ni(x) \\<le> ni(z) \\<and> x * ni(y) \\<le> x * bot \\<squnion> ni(z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ni (x * y) \\<le> ni z) =\n    (ni x \\<le> ni z \\<and> x * ni y \\<le> x * bot \\<squnion> ni z)", "using mult_assoc n_mult_right_upper_bound ni_def ni_n_order"], ["proof (prove)\nusing this:\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  (n (?x * ?y) \\<le> n ?z) =\n  (n ?x \\<le> n ?z \\<and> ?x * n ?y * L \\<le> ?x * bot \\<squnion> n ?z * L)\n  ni ?x = n ?x * L\n  (ni ?x \\<le> ni ?y) = (n ?x \\<le> n ?y)\n\ngoal (1 subgoal):\n 1. (ni (x * y) \\<le> ni z) =\n    (ni x \\<le> ni z \\<and> x * ni y \\<le> x * bot \\<squnion> ni z)", "by auto"], ["", "lemma n_ni:\n  \"n(ni(x)) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (ni x) = n x", "by (simp add: n_n_L ni_def)"], ["", "lemma ni_n:\n  \"ni(n(x)) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (n x) = bot", "by (metis n_mult_right_bot ni_mult_bot ni_bot)"], ["", "lemma ni_n_galois:\n  \"n(x) \\<le> n(y) \\<longleftrightarrow> ni(x) \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<le> n y) = (ni x \\<le> y)", "by (simp add: n_galois ni_def)"], ["", "lemma n_mult_ni:\n  \"n(x * ni(y)) = n(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * ni y) = n (x * y)", "using ni_mult ni_n_equal"], ["proof (prove)\nusing this:\n  ni (?x * ni ?y) = ni (?x * ?y)\n  (ni ?x = ni ?y) = (n ?x = n ?y)\n\ngoal (1 subgoal):\n 1. n (x * ni y) = n (x * y)", "by auto"], ["", "lemma ni_mult_n:\n  \"ni(x * n(y)) = ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x * n y) = ni x", "by (simp add: n_mult_n ni_def)"], ["", "lemma ni_export:\n  \"ni(n(x) * y) = n(x) * ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (n x * y) = n x * ni y", "by (simp add: n_mult_right_bot ni_split)"], ["", "lemma ni_mult_top:\n  \"ni(x * n(y) * top) = ni(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x * n y * top) = ni (x * y)", "by (simp add: n_mult_top ni_def)"], ["", "lemma ni_n_bot:\n  \"ni(x) = bot \\<longleftrightarrow> n(x) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ni x = bot) = (n x = bot)", "using n_bot ni_n_equal ni_bot"], ["proof (prove)\nusing this:\n  n bot = bot\n  (ni ?x = ni ?y) = (n ?x = n ?y)\n  ni bot = bot\n\ngoal (1 subgoal):\n 1. (ni x = bot) = (n x = bot)", "by force"], ["", "lemma ni_n_L:\n  \"ni(x) = L \\<longleftrightarrow> n(x) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ni x = L) = (n x = (1::'a))", "using n_L ni_L ni_n_equal"], ["proof (prove)\nusing this:\n  n L = (1::'a)\n  ni L = L\n  (ni ?x = ni ?y) = (n ?x = n ?y)\n\ngoal (1 subgoal):\n 1. (ni x = L) = (n x = (1::'a))", "by force"], ["", "(* independence of axioms, checked in n_semiring without the respective axiom:\nlemma n_bot         : \"n(bot) = bot\" nitpick [expect=genuine,card=2] oops\nlemma n_top         : \"n(top) = 1\" nitpick [expect=genuine,card=3] oops\nlemma n_dist_sup    : \"n(x \\<squnion> y) = n(x) \\<squnion> n(y)\" nitpick [expect=genuine,card=5] oops\nlemma n_export      : \"n(n(x) * y) = n(x) * n(y)\" nitpick [expect=genuine,card=6] oops\nlemma n_sub_mult_bot: \"n(x) = n(x * bot) * n(x)\" nitpick [expect=genuine,card=2] oops\nlemma n_L_split     : \"x * n(y) * L = x * bot \\<squnion> n(x * y) * L\" nitpick [expect=genuine,card=4] oops\nlemma n_split       : \"x \\<le> x * bot \\<squnion> n(x * L) * top\" nitpick [expect=genuine,card=3] oops\n*)"], ["", "end"], ["", "typedef (overloaded) 'a nImage = \"{ x::'a::n_semiring . (\\<exists>y::'a . x = n(y)) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {x. \\<exists>y. x = n y}", "by auto"], ["", "lemma simp_nImage[simp]:\n  \"\\<exists>y . Rep_nImage x = n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. Rep_nImage x = n y", "using Rep_nImage"], ["proof (prove)\nusing this:\n  Rep_nImage ?x \\<in> {x. \\<exists>y. x = n y}\n\ngoal (1 subgoal):\n 1. \\<exists>y. Rep_nImage x = n y", "by simp"], ["", "setup_lifting type_definition_nImage"], ["", "text \\<open>Theorem 15\\<close>"], ["", "instantiation nImage :: (n_semiring) bounded_idempotent_semiring\nbegin"], ["", "lift_definition sup_nImage :: \"'a nImage \\<Rightarrow> 'a nImage \\<Rightarrow> 'a nImage\" is sup"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>\\<exists>y. a1 = n y; \\<exists>y. a2 = n y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. a1 \\<squnion> a2 = n y", "by (metis n_dist_sup)"], ["", "lift_definition times_nImage :: \"'a nImage \\<Rightarrow> 'a nImage \\<Rightarrow> 'a nImage\" is times"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>\\<exists>y. a1 = n y; \\<exists>y. a2 = n y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. a1 * a2 = n y", "by (metis n_export)"], ["", "lift_definition bot_nImage :: \"'a nImage\" is bot"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. bot = n y", "by (metis n_bot)"], ["", "lift_definition one_nImage :: \"'a nImage\" is 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. (1::'a) = n y", "using n_L"], ["proof (prove)\nusing this:\n  n L = (1::?'a)\n\ngoal (1 subgoal):\n 1. \\<exists>y. (1::'a) = n y", "by auto"], ["", "lift_definition top_nImage :: \"'a nImage\" is 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. (1::'a) = n y", "using n_L"], ["proof (prove)\nusing this:\n  n L = (1::?'a)\n\ngoal (1 subgoal):\n 1. \\<exists>y. (1::'a) = n y", "by auto"], ["", "lift_definition less_eq_nImage :: \"'a nImage \\<Rightarrow> 'a nImage \\<Rightarrow> bool\" is less_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition less_nImage :: \"'a nImage \\<Rightarrow> 'a nImage \\<Rightarrow> bool\" is less"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a nImage, bounded_idempotent_semiring_class)", "apply intro_classes"], ["proof (prove)\ngoal (19 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. bot \\<le> a\n 9. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 10. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\nA total of 19 subgoals...", "apply (simp add: less_eq_nImage.rep_eq less_le_not_le less_nImage.rep_eq)"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<le> x \\<squnion> y\n 5. \\<And>y x. y \\<le> x \\<squnion> y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 7. \\<And>a. bot \\<le> a\n 8. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 9. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 10. \\<And>x. bot * x = bot\nA total of 18 subgoals...", "apply (simp add: less_eq_nImage.rep_eq)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<le> x \\<squnion> y\n 4. \\<And>y x. y \\<le> x \\<squnion> y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 6. \\<And>a. bot \\<le> a\n 7. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 8. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 9. \\<And>x. bot * x = bot\n 10. \\<And>x. 1 * x = x\nA total of 17 subgoals...", "using less_eq_nImage.rep_eq"], ["proof (prove)\nusing this:\n  (?x \\<le> ?xa) = (Rep_nImage ?x \\<le> Rep_nImage ?xa)\n\ngoal (17 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<le> x \\<squnion> y\n 4. \\<And>y x. y \\<le> x \\<squnion> y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 6. \\<And>a. bot \\<le> a\n 7. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 8. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 9. \\<And>x. bot * x = bot\n 10. \\<And>x. 1 * x = x\nA total of 17 subgoals...", "apply force"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. bot \\<le> a\n 6. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 7. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 8. \\<And>x. bot * x = bot\n 9. \\<And>x. 1 * x = x\n 10. \\<And>x. x \\<le> x * 1\nA total of 16 subgoals...", "apply (simp add: less_eq_nImage.rep_eq Rep_nImage_inject)"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>x y. x \\<le> x \\<squnion> y\n 2. \\<And>y x. y \\<le> x \\<squnion> y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 4. \\<And>a. bot \\<le> a\n 5. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 6. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 7. \\<And>x. bot * x = bot\n 8. \\<And>x. 1 * x = x\n 9. \\<And>x. x \\<le> x * 1\n 10. \\<And>x. x \\<squnion> top = top\nA total of 15 subgoals...", "apply (simp add: sup_nImage.rep_eq less_eq_nImage.rep_eq)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>y x. y \\<le> x \\<squnion> y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 3. \\<And>a. bot \\<le> a\n 4. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 5. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 6. \\<And>x. bot * x = bot\n 7. \\<And>x. 1 * x = x\n 8. \\<And>x. x \\<le> x * 1\n 9. \\<And>x. x \\<squnion> top = top\n 10. \\<And>x y z. x * y * z \\<le> x * (y * z)\nA total of 14 subgoals...", "apply (simp add: less_eq_nImage.rep_eq sup_nImage.rep_eq)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. bot \\<le> a\n 3. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 4. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 5. \\<And>x. bot * x = bot\n 6. \\<And>x. 1 * x = x\n 7. \\<And>x. x \\<le> x * 1\n 8. \\<And>x. x \\<squnion> top = top\n 9. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 10. \\<And>a b c. a * b * c = a * (b * c)\nA total of 13 subgoals...", "apply (simp add: sup_nImage.rep_eq less_eq_nImage.rep_eq)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>a. bot \\<le> a\n 2. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 3. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 4. \\<And>x. bot * x = bot\n 5. \\<And>x. 1 * x = x\n 6. \\<And>x. x \\<le> x * 1\n 7. \\<And>x. x \\<squnion> top = top\n 8. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 9. \\<And>a b c. a * b * c = a * (b * c)\n 10. \\<And>a. a * 1 = a\nA total of 12 subgoals...", "apply (simp add: bot_nImage.rep_eq less_eq_nImage.rep_eq)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>x y z. x * y \\<squnion> x * z \\<le> x * (y \\<squnion> z)\n 2. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 3. \\<And>x. bot * x = bot\n 4. \\<And>x. 1 * x = x\n 5. \\<And>x. x \\<le> x * 1\n 6. \\<And>x. x \\<squnion> top = top\n 7. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 8. \\<And>a b c. a * b * c = a * (b * c)\n 9. \\<And>a. a * 1 = a\n 10. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\nA total of 11 subgoals...", "apply (simp add: sup_nImage.rep_eq times_nImage.rep_eq less_eq_nImage.rep_eq mult_left_dist_sup)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x y z. (x \\<squnion> y) * z = x * z \\<squnion> y * z\n 2. \\<And>x. bot * x = bot\n 3. \\<And>x. 1 * x = x\n 4. \\<And>x. x \\<le> x * 1\n 5. \\<And>x. x \\<squnion> top = top\n 6. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 7. \\<And>a b c. a * b * c = a * (b * c)\n 8. \\<And>a. a * 1 = a\n 9. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 10. \\<And>x. x * bot = bot", "apply (metis (mono_tags, lifting) sup_nImage.rep_eq times_nImage.rep_eq Rep_nImage_inverse mult_right_dist_sup)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x. bot * x = bot\n 2. \\<And>x. 1 * x = x\n 3. \\<And>x. x \\<le> x * 1\n 4. \\<And>x. x \\<squnion> top = top\n 5. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 6. \\<And>a b c. a * b * c = a * (b * c)\n 7. \\<And>a. a * 1 = a\n 8. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 9. \\<And>x. x * bot = bot", "apply (smt (z3) times_nImage.rep_eq Rep_nImage_inverse bot_nImage.rep_eq mult_left_zero)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x. 1 * x = x\n 2. \\<And>x. x \\<le> x * 1\n 3. \\<And>x. x \\<squnion> top = top\n 4. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 5. \\<And>a b c. a * b * c = a * (b * c)\n 6. \\<And>a. a * 1 = a\n 7. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 8. \\<And>x. x * bot = bot", "using Rep_nImage_inject one_nImage.rep_eq times_nImage.rep_eq"], ["proof (prove)\nusing this:\n  (Rep_nImage ?x = Rep_nImage ?y) = (?x = ?y)\n  Rep_nImage 1 = (1::'a)\n  Rep_nImage (?x * ?xa) = Rep_nImage ?x * Rep_nImage ?xa\n\ngoal (8 subgoals):\n 1. \\<And>x. 1 * x = x\n 2. \\<And>x. x \\<le> x * 1\n 3. \\<And>x. x \\<squnion> top = top\n 4. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 5. \\<And>a b c. a * b * c = a * (b * c)\n 6. \\<And>a. a * 1 = a\n 7. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 8. \\<And>x. x * bot = bot", "apply fastforce"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x. x \\<le> x * 1\n 2. \\<And>x. x \\<squnion> top = top\n 3. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 4. \\<And>a b c. a * b * c = a * (b * c)\n 5. \\<And>a. a * 1 = a\n 6. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 7. \\<And>x. x * bot = bot", "apply (simp add: one_nImage.rep_eq times_nImage.rep_eq less_eq_nImage.rep_eq)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x. x \\<squnion> top = top\n 2. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 3. \\<And>a b c. a * b * c = a * (b * c)\n 4. \\<And>a. a * 1 = a\n 5. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 6. \\<And>x. x * bot = bot", "apply (smt (verit, del_insts) sup_nImage.rep_eq Rep_nImage Rep_nImage_inject mem_Collect_eq n_sub_one sup.absorb2 top_nImage.rep_eq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y z. x * y * z \\<le> x * (y * z)\n 2. \\<And>a b c. a * b * c = a * (b * c)\n 3. \\<And>a. a * 1 = a\n 4. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 5. \\<And>x. x * bot = bot", "apply (simp add: less_eq_nImage.rep_eq mult.assoc times_nImage.rep_eq)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. a * 1 = a\n 3. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 4. \\<And>x. x * bot = bot", "using Rep_nImage_inject mult.assoc times_nImage.rep_eq"], ["proof (prove)\nusing this:\n  (Rep_nImage ?x = Rep_nImage ?y) = (?x = ?y)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  Rep_nImage (?x * ?xa) = Rep_nImage ?x * Rep_nImage ?xa\n\ngoal (4 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a. a * 1 = a\n 3. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 4. \\<And>x. x * bot = bot", "apply fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a. a * 1 = a\n 2. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 3. \\<And>x. x * bot = bot", "using Rep_nImage_inject one_nImage.rep_eq times_nImage.rep_eq"], ["proof (prove)\nusing this:\n  (Rep_nImage ?x = Rep_nImage ?y) = (?x = ?y)\n  Rep_nImage 1 = (1::'a)\n  Rep_nImage (?x * ?xa) = Rep_nImage ?x * Rep_nImage ?xa\n\ngoal (3 subgoals):\n 1. \\<And>a. a * 1 = a\n 2. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 3. \\<And>x. x * bot = bot", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z. x * (y \\<squnion> z) = x * y \\<squnion> x * z\n 2. \\<And>x. x * bot = bot", "apply (metis (mono_tags, lifting) sup_nImage.rep_eq times_nImage.rep_eq Rep_nImage_inject mult_left_dist_sup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x * bot = bot", "by (smt (z3) Rep_nImage_inject bot_nImage.rep_eq n_mult_right_bot simp_nImage times_nImage.rep_eq)"], ["", "end"], ["", "text \\<open>Theorem 15\\<close>"], ["", "instantiation nImage :: (n_semiring) bounded_distrib_lattice\nbegin"], ["", "lift_definition inf_nImage :: \"'a nImage \\<Rightarrow> 'a nImage \\<Rightarrow> 'a nImage\" is times"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>\\<exists>y. a1 = n y; \\<exists>y. a2 = n y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. a1 * a2 = n y", "by (metis n_export)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a nImage, bounded_distrib_lattice_class)", "apply intro_classes"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> x\n 2. \\<And>x y. x \\<sqinter> y \\<le> y\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 4. \\<And>a. a \\<le> top\n 5. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "apply (metis (mono_tags) inf_nImage.rep_eq less_eq_nImage.rep_eq n_mult_left_lower_bound simp_nImage)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> y\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 3. \\<And>a. a \\<le> top\n 4. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "apply (metis (mono_tags) inf_nImage.rep_eq less_eq_nImage.rep_eq n_mult_right_lower_bound simp_nImage)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>a. a \\<le> top\n 3. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "apply (smt (z3) inf_nImage_def le_iff_sup less_eq_nImage.rep_eq mult_right_dist_sup n_mult_left_absorb_sup simp_nImage times_nImage.rep_eq times_nImage_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<le> top\n 2. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "by (smt (z3) Rep_nImage_inject inf_nImage.rep_eq n_sup_right_dist_mult simp_nImage sup.commute sup_nImage.rep_eq)"], ["", "end"], ["", "class n_itering = bounded_itering + n_semiring\nbegin"], ["", "lemma mult_L_circ:\n  \"(x * L)\\<^sup>\\<circ> = 1 \\<squnion> x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L)\\<^sup>\\<circ> = Rf x L", "by (metis L_left_zero circ_mult mult_assoc)"], ["", "lemma mult_L_circ_mult:\n  \"(x * L)\\<^sup>\\<circ> * y = y \\<squnion> x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L)\\<^sup>\\<circ> * y = y \\<squnion> x * L", "by (metis L_left_zero mult_L_circ mult_assoc mult_left_one mult_right_dist_sup)"], ["", "lemma circ_L:\n  \"L\\<^sup>\\<circ> = L \\<squnion> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L\\<^sup>\\<circ> = L \\<squnion> (1::'a)", "by (metis L_left_zero sup_commute circ_left_unfold)"], ["", "lemma circ_n_L:\n  \"x\\<^sup>\\<circ> * n(x) * L = x\\<^sup>\\<circ> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ> * n x * L = x\\<^sup>\\<circ> * bot", "by (metis sup_bot_left circ_left_unfold circ_plus_same mult_left_zero n_L_split n_dist_sup n_mult_bot n_one ni_def ni_split)"], ["", "lemma n_circ_left_unfold:\n  \"n(x\\<^sup>\\<circ>) = n(x * x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x\\<^sup>\\<circ>) = n (x * x\\<^sup>\\<circ>)", "by (metis circ_n_L circ_plus_same n_mult n_mult_bot)"], ["", "lemma ni_circ:\n  \"ni(x)\\<^sup>\\<circ> = 1 \\<squnion> ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x\\<^sup>\\<circ> = (1::'a) \\<squnion> ni x", "by (simp add: mult_L_circ ni_def)"], ["", "lemma circ_ni:\n  \"x\\<^sup>\\<circ> * ni(x) = x\\<^sup>\\<circ> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ> * ni x = x\\<^sup>\\<circ> * bot", "using circ_n_L ni_def mult_assoc"], ["proof (prove)\nusing this:\n  ?x\\<^sup>\\<circ> * n ?x * L = ?x\\<^sup>\\<circ> * bot\n  ni ?x = n ?x * L\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ> * ni x = x\\<^sup>\\<circ> * bot", "by auto"], ["", "lemma ni_circ_left_unfold:\n  \"ni(x\\<^sup>\\<circ>) = ni(x * x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x\\<^sup>\\<circ>) = ni (x * x\\<^sup>\\<circ>)", "by (simp add: ni_def n_circ_left_unfold)"], ["", "lemma n_circ_import:\n  \"n(y) * x \\<le> x * n(y) \\<Longrightarrow> n(y) * x\\<^sup>\\<circ> = n(y) * (n(y) * x)\\<^sup>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * x \\<le> x * n y \\<Longrightarrow>\n    n y * x\\<^sup>\\<circ> = n y * (n y * x)\\<^sup>\\<circ>", "by (simp add: circ_import n_mult_idempotent n_sub_one)"], ["", "end"], ["", "class n_omega_itering = left_omega_conway_semiring + n_itering +\n  assumes circ_circ: \"x\\<^sup>\\<circ>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>\"\nbegin"], ["", "lemma L_below_one_circ:\n  \"L \\<le> 1\\<^sup>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<le> (1::'a)\\<^sup>\\<circ>", "by (metis sup_left_divisibility circ_circ circ_one)"], ["", "lemma circ_below_L_sup_star:\n  \"x\\<^sup>\\<circ> \\<le> L \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ> \\<le> L \\<squnion> x\\<^sup>\\<star>", "by (metis circ_circ circ_increasing)"], ["", "lemma L_sup_circ_sup_star:\n  \"L \\<squnion> x\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<squnion> x\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>", "by (metis circ_circ circ_star star_circ)"], ["", "lemma circ_one_L:\n  \"1\\<^sup>\\<circ> = L \\<squnion> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a)\\<^sup>\\<circ> = L \\<squnion> (1::'a)", "using circ_circ circ_one star_one"], ["proof (prove)\nusing this:\n  ?x\\<^sup>\\<circ>\\<^sup>\\<circ> = L \\<squnion> ?x\\<^sup>\\<star>\n  (1::'a)\\<^sup>\\<circ> = (1::'a)\\<^sup>\\<circ>\\<^sup>\\<circ>\n  (1::'a)\\<^sup>\\<star> = (1::'a)\n\ngoal (1 subgoal):\n 1. (1::'a)\\<^sup>\\<circ> = L \\<squnion> (1::'a)", "by auto"], ["", "lemma one_circ_zero:\n  \"L = 1\\<^sup>\\<circ> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L = (1::'a)\\<^sup>\\<circ> * bot", "by (metis L_left_zero circ_L circ_ni circ_one_L circ_plus_same ni_L)"], ["", "lemma circ_not_simulate:\n  \"(\\<forall>x y z . x * z \\<le> z * y \\<longrightarrow> x\\<^sup>\\<circ> * z \\<le> z * y\\<^sup>\\<circ>) \\<longrightarrow> 1 = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z.\n        x * z \\<le> z * y \\<longrightarrow>\n        x\\<^sup>\\<circ> * z \\<le> z * y\\<^sup>\\<circ>) \\<longrightarrow>\n    (1::'a) = bot", "by (metis L_left_zero circ_one_L order.eq_iff mult_left_one mult_left_zero mult_right_sub_dist_sup_left n_L n_bot bot_least)"], ["", "lemma star_circ_L:\n  \"x\\<^sup>\\<star>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<star>", "by (simp add: circ_circ star_circ)"], ["", "lemma circ_circ_2:\n  \"x\\<^sup>\\<circ>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ>\\<^sup>\\<circ> = L \\<squnion> x\\<^sup>\\<circ>", "by (simp add: L_sup_circ_sup_star circ_circ)"], ["", "lemma circ_sup_6:\n  \"L \\<squnion> (x \\<squnion> y)\\<^sup>\\<circ> = (x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<squnion> (x \\<squnion> y)\\<^sup>\\<circ> =\n    (x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ>", "by (metis circ_circ_2 sup_assoc sup_commute circ_sup_1 circ_circ_sup circ_decompose_4)"], ["", "lemma circ_sup_7:\n  \"(x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ> = L \\<squnion> (x \\<squnion> y)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ> =\n    L \\<squnion> (x \\<squnion> y)\\<^sup>\\<star>", "using L_sup_circ_sup_star circ_sup_6"], ["proof (prove)\nusing this:\n  L \\<squnion> ?x\\<^sup>\\<circ> = L \\<squnion> ?x\\<^sup>\\<star>\n  L \\<squnion> (?x \\<squnion> ?y)\\<^sup>\\<circ> =\n  (?x\\<^sup>\\<circ> * ?y\\<^sup>\\<circ>)\\<^sup>\\<circ>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<circ> * y\\<^sup>\\<circ>)\\<^sup>\\<circ> =\n    L \\<squnion> (x \\<squnion> y)\\<^sup>\\<star>", "by auto"], ["", "end"], ["", "class n_omega_algebra_2 = bounded_left_zero_omega_algebra + n_semiring + Omega +\n  assumes Omega_def: \"x\\<^sup>\\<Omega> = n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star>\"\nbegin"], ["", "lemma mult_L_star:\n  \"(x * L)\\<^sup>\\<star> = 1 \\<squnion> x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L)\\<^sup>\\<star> = Rf x L", "by (simp add: L_left_zero transitive_star mult_assoc)"], ["", "lemma mult_L_omega:\n  \"(x * L)\\<^sup>\\<omega> = x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L)\\<^sup>\\<omega> = x * L", "by (metis L_left_zero omega_slide)"], ["", "lemma mult_L_sup_star:\n  \"(x * L \\<squnion> y)\\<^sup>\\<star> = y\\<^sup>\\<star> \\<squnion> y\\<^sup>\\<star> * x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L \\<squnion> y)\\<^sup>\\<star> =\n    y\\<^sup>\\<star> \\<squnion> y\\<^sup>\\<star> * x * L", "by (metis L_left_zero star.mult_zero_sup_circ_2 sup_commute mult_assoc)"], ["", "lemma mult_L_sup_omega:\n  \"(x * L \\<squnion> y)\\<^sup>\\<omega> = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L \\<squnion> y)\\<^sup>\\<omega> =\n    y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * x * L", "by (metis L_left_zero mult_bot_add_omega sup_commute mult_assoc)"], ["", "lemma mult_L_sup_circ:\n  \"(x * L \\<squnion> y)\\<^sup>\\<Omega> = n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> \\<squnion> y\\<^sup>\\<star> * x * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * L \\<squnion> y)\\<^sup>\\<Omega> =\n    n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> \\<squnion>\n    y\\<^sup>\\<star> * x * L", "by (smt sup_assoc sup_commute Omega_def le_iff_sup mult_L_sup_omega mult_L_sup_star mult_right_dist_sup n_L_decreasing n_dist_sup)"], ["", "lemma circ_sup_n:\n  \"(x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> = n((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion> ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n(x\\<^sup>\\<omega>) * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> =\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L)", "by (smt L_left_zero sup_assoc sup_commute Omega_def mult_L_sup_circ mult_assoc mult_left_dist_sup mult_right_dist_sup)"], ["", "text \\<open>Theorem 20.6\\<close>"], ["", "lemma n_omega_induct:\n  \"n(y) \\<le> n(x * y \\<squnion> z) \\<Longrightarrow> n(y) \\<le> n(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y \\<le> n (x * y \\<squnion> z) \\<Longrightarrow>\n    n y \\<le> n (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)", "by (smt sup_commute mult_assoc n_dist_sup n_galois n_mult omega_induct)"], ["", "lemma n_Omega_left_unfold:\n  \"1 \\<squnion> x * x\\<^sup>\\<Omega> = x\\<^sup>\\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "have \"1 \\<squnion> x * x\\<^sup>\\<Omega> = 1 \\<squnion> x * n(x\\<^sup>\\<omega>) * L \\<squnion> x * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) =\n    Rf (x * n (x\\<^sup>\\<omega>)) L \\<squnion> x\\<^sup>+", "by (simp add: Omega_def semiring.distrib_left sup_assoc mult_assoc)"], ["proof (state)\nthis:\n  Rf x (x\\<^sup>\\<Omega>) =\n  Rf (x * n (x\\<^sup>\\<omega>)) L \\<squnion> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  Rf x (x\\<^sup>\\<Omega>) =\n  Rf (x * n (x\\<^sup>\\<omega>)) L \\<squnion> x\\<^sup>+\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "have \"... = n(x * x\\<^sup>\\<omega>) * L \\<squnion> (1 \\<squnion> x * x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rf (x * n (x\\<^sup>\\<omega>)) L \\<squnion> x\\<^sup>+ =\n    n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+)", "by (metis sup_assoc sup_commute sup_bot_left mult_left_dist_sup n_L_split)"], ["proof (state)\nthis:\n  Rf (x * n (x\\<^sup>\\<omega>)) L \\<squnion> x\\<^sup>+ =\n  n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+)\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  Rf (x * n (x\\<^sup>\\<omega>)) L \\<squnion> x\\<^sup>+ =\n  n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+)\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "have \"... = n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+) =\n    n (x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star>", "using omega_unfold star_left_unfold_equal"], ["proof (prove)\nusing this:\n  ?y\\<^sup>\\<omega> = ?y * ?y\\<^sup>\\<omega>\n  (1::'a) \\<squnion> ?x\\<^sup>+ = ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+) =\n    n (x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+) =\n  n (x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  n (x * x\\<^sup>\\<omega>) * L \\<squnion> ((1::'a) \\<squnion> x\\<^sup>+) =\n  n (x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "have \"... = x\\<^sup>\\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> = x\\<^sup>\\<Omega>", "by (simp add: Omega_def)"], ["proof (state)\nthis:\n  n (x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> = x\\<^sup>\\<Omega>\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "finally"], ["proof (chain)\npicking this:\n  Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>\n\ngoal (1 subgoal):\n 1. Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>", "."], ["proof (state)\nthis:\n  Rf x (x\\<^sup>\\<Omega>) = x\\<^sup>\\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma n_Omega_circ_sup:\n  \"(x \\<squnion> y)\\<^sup>\\<Omega> = (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "have \"(x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> = n((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion> ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n(x\\<^sup>\\<omega>) * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> =\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L)", "by (simp add: circ_sup_n)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> =\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n   (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L)\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> =\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n   (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L)\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "have \"... = n((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion> n((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L) =\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n    L \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>", "using n_L_split sup.left_commute sup_commute"], ["proof (prove)\nusing this:\n  ?x * n ?y * L = ?x * bot \\<squnion> n (?x * ?y) * L\n  ?b \\<squnion> (?a \\<squnion> ?c) = ?a \\<squnion> (?b \\<squnion> ?c)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L) =\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n    L \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n   (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L) =\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> \\<squnion>\n   (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * L) =\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "have \"... = n((x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n    L \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> =\n    n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n       (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n    L \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>", "by (smt sup_assoc sup_bot_left mult_left_dist_sup mult_right_dist_sup n_dist_sup)"], ["proof (state)\nthis:\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> =\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n  L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega>) * L \\<squnion>\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * bot \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> =\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n  L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "have \"... = (x \\<squnion> y)\\<^sup>\\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n       (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n    L \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> =\n    (x \\<squnion> y)\\<^sup>\\<Omega>", "by (simp add: Omega_def omega_decompose star.circ_sup_9)"], ["proof (state)\nthis:\n  n ((x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n     (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) *\n  L \\<squnion>\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<star> =\n  (x \\<squnion> y)\\<^sup>\\<Omega>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> =\n  (x \\<squnion> y)\\<^sup>\\<Omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega> =\n  (x \\<squnion> y)\\<^sup>\\<Omega>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<Omega> =\n    (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", ".."], ["proof (state)\nthis:\n  (x \\<squnion> y)\\<^sup>\\<Omega> =\n  (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma n_Omega_circ_simulate_right_sup:\n  assumes \"z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w\"\n    shows \"z * x\\<^sup>\\<Omega> \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w", "by (simp add: assms)"], ["proof (state)\nthis:\n  z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "also"], ["proof (state)\nthis:\n  z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"... = y * n(y\\<^sup>\\<omega>) * L \\<squnion> y * y\\<^sup>\\<star> * z \\<squnion> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * y\\<^sup>\\<Omega> * z \\<squnion> w =\n    y * n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w", "using L_left_zero Omega_def mult_right_dist_sup semiring.distrib_left mult_assoc"], ["proof (prove)\nusing this:\n  L * ?x = L\n  ?x\\<^sup>\\<Omega> = n (?x\\<^sup>\\<omega>) * L \\<squnion> ?x\\<^sup>\\<star>\n  (?x \\<squnion> ?y) * ?z = ?x * ?z \\<squnion> ?y * ?z\n  ?a * (?b \\<squnion> ?c) = ?a * ?b \\<squnion> ?a * ?c\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. y * y\\<^sup>\\<Omega> * z \\<squnion> w =\n    y * n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w", "by auto"], ["proof (state)\nthis:\n  y * y\\<^sup>\\<Omega> * z \\<squnion> w =\n  y * n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "finally"], ["proof (chain)\npicking this:\n  z * x\n  \\<le> y * n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w", "have 1: \"z * x \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y * y\\<^sup>\\<star> * z \\<squnion> w\""], ["proof (prove)\nusing this:\n  z * x\n  \\<le> y * n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w", "by (metis sup_assoc sup_commute sup_bot_left mult_assoc mult_left_dist_sup n_L_split omega_unfold)"], ["proof (state)\nthis:\n  z * x \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "hence \"(n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) * x \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * (n(y\\<^sup>\\<omega>) * L \\<squnion> y * y\\<^sup>\\<star> * z \\<squnion> w) \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  z * x \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n     y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n     y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n    x\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> *\n          (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n           w) \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt L_left_zero sup_assoc sup_ge1 sup_ge2 le_iff_sup mult_assoc mult_left_dist_sup mult_right_dist_sup star.circ_back_loop_fixpoint)"], ["proof (state)\nthis:\n  (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> *\n        (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n         w) \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "also"], ["proof (state)\nthis:\n  (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> *\n        (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n         w) \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"... = n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> *\n    (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n     w) \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n    n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "using semiring.distrib_left sup_assoc mult_assoc"], ["proof (prove)\nusing this:\n  ?a * (?b \\<squnion> ?c) = ?a * ?b \\<squnion> ?a * ?c\n  ?x \\<squnion> ?y \\<squnion> ?z = ?x \\<squnion> (?y \\<squnion> ?z)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> *\n    (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n     w) \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n    n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> *\n  (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n   w) \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "also"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> *\n  (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion>\n   w) \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"... = n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n    n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt (verit, ccfv_SIG) le_supI1 order.refl semiring.add_mono star.circ_back_loop_prefixpoint sup.bounded_iff sup.coboundedI1 sup.mono sup_left_divisibility sup_right_divisibility sup_same_context)"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "also"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"... = n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n    n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt sup_assoc sup_commute sup_idem mult_assoc mult_left_dist_sup n_L_split star_mult_omega)"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "also"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"... \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (meson mult_left_isotone order_refl semiring.add_left_mono star.circ_mult_upper_bound star.right_plus_below_circ sup_left_isotone)"], ["proof (state)\nthis:\n  n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "finally"], ["proof (chain)\npicking this:\n  (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "have 2: \"z * x\\<^sup>\\<star> \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<star>\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt le_supI1 le_sup_iff sup_ge1 star.circ_loop_fixpoint star_right_induct)"], ["proof (state)\nthis:\n  z * x\\<^sup>\\<star>\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"z * x * x\\<^sup>\\<omega> \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y * y\\<^sup>\\<star> * z * x\\<^sup>\\<omega> \\<squnion> w * x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x * x\\<^sup>\\<omega>\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n          w * x\\<^sup>\\<omega>", "using 1"], ["proof (prove)\nusing this:\n  z * x \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x * x\\<^sup>\\<omega>\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n          w * x\\<^sup>\\<omega>", "by (smt (verit, del_insts) L_left_zero mult_assoc mult_left_isotone mult_right_dist_sup)"], ["proof (state)\nthis:\n  z * x * x\\<^sup>\\<omega>\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n        w * x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "hence \"n(z * x * x\\<^sup>\\<omega>) \\<le> n(y * y\\<^sup>\\<star> * z * x\\<^sup>\\<omega> \\<squnion> n(y\\<^sup>\\<omega>) * L \\<squnion> w * x\\<^sup>\\<omega>)\""], ["proof (prove)\nusing this:\n  z * x * x\\<^sup>\\<omega>\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n        w * x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. n (z * x * x\\<^sup>\\<omega>)\n    \\<le> n (y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n             n (y\\<^sup>\\<omega>) * L \\<squnion>\n             w * x\\<^sup>\\<omega>)", "by (simp add: n_isotone sup_commute)"], ["proof (state)\nthis:\n  n (z * x * x\\<^sup>\\<omega>)\n  \\<le> n (y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n           n (y\\<^sup>\\<omega>) * L \\<squnion>\n           w * x\\<^sup>\\<omega>)\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "hence \"n(z * x\\<^sup>\\<omega>) \\<le> n(y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega>)\""], ["proof (prove)\nusing this:\n  n (z * x * x\\<^sup>\\<omega>)\n  \\<le> n (y\\<^sup>+ * z * x\\<^sup>\\<omega> \\<squnion>\n           n (y\\<^sup>\\<omega>) * L \\<squnion>\n           w * x\\<^sup>\\<omega>)\n\ngoal (1 subgoal):\n 1. n (z * x\\<^sup>\\<omega>)\n    \\<le> n (y\\<^sup>\\<omega> \\<squnion>\n             y\\<^sup>\\<star> * w * x\\<^sup>\\<omega>)", "by (smt (verit, del_insts) sup_assoc sup_commute left_plus_omega le_iff_sup mult_assoc mult_left_dist_sup n_L_decreasing n_omega_induct omega_unfold star.left_plus_circ star_mult_omega)"], ["proof (state)\nthis:\n  n (z * x\\<^sup>\\<omega>)\n  \\<le> n (y\\<^sup>\\<omega> \\<squnion>\n           y\\<^sup>\\<star> * w * x\\<^sup>\\<omega>)\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "hence \"n(z * x\\<^sup>\\<omega>) * L \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L\""], ["proof (prove)\nusing this:\n  n (z * x\\<^sup>\\<omega>)\n  \\<le> n (y\\<^sup>\\<omega> \\<squnion>\n           y\\<^sup>\\<star> * w * x\\<^sup>\\<omega>)\n\ngoal (1 subgoal):\n 1. n (z * x\\<^sup>\\<omega>) * L\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L", "by (metis n_dist_sup n_galois n_mult n_n_L)"], ["proof (state)\nthis:\n  n (z * x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "hence \"z * n(x\\<^sup>\\<omega>) * L \\<le> z * bot \\<squnion> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L\""], ["proof (prove)\nusing this:\n  n (z * x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n\ngoal (1 subgoal):\n 1. z * n (x\\<^sup>\\<omega>) * L\n    \\<le> z * bot \\<squnion> n (y\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L", "using n_L_split semiring.add_left_mono sup_assoc"], ["proof (prove)\nusing this:\n  n (z * x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n  ?x * n ?y * L = ?x * bot \\<squnion> n (?x * ?y) * L\n  ?a \\<le> ?b \\<Longrightarrow> ?c \\<squnion> ?a \\<le> ?c \\<squnion> ?b\n  ?x \\<squnion> ?y \\<squnion> ?z = ?x \\<squnion> (?y \\<squnion> ?z)\n\ngoal (1 subgoal):\n 1. z * n (x\\<^sup>\\<omega>) * L\n    \\<le> z * bot \\<squnion> n (y\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L", "by auto"], ["proof (state)\nthis:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> z * bot \\<squnion> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "also"], ["proof (state)\nthis:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> z * bot \\<squnion> n (y\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "have \"... \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * bot \\<squnion> n (y\\<^sup>\\<omega>) * L \\<squnion>\n    y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L", "by (smt (z3) order.trans mult_1_left mult_right_sub_dist_sup_left semiring.add_right_mono star_left_unfold_equal sup_commute zero_right_mult_decreasing)"], ["proof (state)\nthis:\n  z * bot \\<squnion> n (y\\<^sup>\\<omega>) * L \\<squnion>\n  y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "finally"], ["proof (chain)\npicking this:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L", "have \"z * n(x\\<^sup>\\<omega>) * L \\<le> n(y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * n(x\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n\ngoal (1 subgoal):\n 1. z * n (x\\<^sup>\\<omega>) * L\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "using le_supI1"], ["proof (prove)\nusing this:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L\n  ?x \\<le> ?a \\<Longrightarrow> ?x \\<le> ?a \\<squnion> ?b\n\ngoal (1 subgoal):\n 1. z * n (x\\<^sup>\\<omega>) * L\n    \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "using 2"], ["proof (prove)\nusing this:\n  z * n (x\\<^sup>\\<omega>) * L\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n  z * x\\<^sup>\\<star>\n  \\<le> n (y\\<^sup>\\<omega>) * L \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * n (x\\<^sup>\\<omega>) * L \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<Omega>\n    \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)", "by (smt L_left_zero Omega_def sup_assoc le_iff_sup mult_assoc mult_left_dist_sup mult_right_dist_sup)"], ["proof (state)\nthis:\n  z * x\\<^sup>\\<Omega>\n  \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma n_Omega_circ_simulate_left_sup:\n  assumes \"x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w\"\n    shows \"x\\<^sup>\\<Omega> * z \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "have \"x * (z * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) = x * z * n(y\\<^sup>\\<omega>) * L \\<squnion> x * z * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x * x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x * x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\n    (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     n (x\\<^sup>\\<omega>) * L \\<squnion>\n     x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n     x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) =\n    x * z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x * z * y\\<^sup>\\<star> \\<squnion>\n    n (x\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>+ * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>+ * w * y\\<^sup>\\<star>", "by (smt sup_assoc sup_commute mult_assoc mult_left_dist_sup n_L_split omega_unfold)"], ["proof (state)\nthis:\n  x *\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   n (x\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) =\n  x * z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  x *\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   n (x\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) =\n  x * z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "have \"... \\<le> (z * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) * n(y\\<^sup>\\<omega>) * L \\<squnion> (z * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x * z * y\\<^sup>\\<star> \\<squnion>\n    n (x\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>+ * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>+ * w * y\\<^sup>\\<star>\n    \\<le> (z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n           z * y\\<^sup>\\<star> \\<squnion>\n           w) *\n          n (y\\<^sup>\\<omega>) *\n          L \\<squnion>\n          (z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n           z * y\\<^sup>\\<star> \\<squnion>\n           w) *\n          y\\<^sup>\\<star> \\<squnion>\n          n (x\\<^sup>\\<omega>) * L \\<squnion>\n          x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt assms Omega_def sup_assoc sup_ge2 le_iff_sup mult_assoc mult_left_dist_sup mult_right_dist_sup star.circ_loop_fixpoint)"], ["proof (state)\nthis:\n  x * z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n  \\<le> (z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        n (y\\<^sup>\\<omega>) *\n        L \\<squnion>\n        (z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        y\\<^sup>\\<star> \\<squnion>\n        n (x\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  x * z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n  \\<le> (z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        n (y\\<^sup>\\<omega>) *\n        L \\<squnion>\n        (z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        y\\<^sup>\\<star> \\<squnion>\n        n (x\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "have \"... = z * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> * n(y\\<^sup>\\<omega>) * L \\<squnion> w * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     w) *\n    n (y\\<^sup>\\<omega>) *\n    L \\<squnion>\n    (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     w) *\n    y\\<^sup>\\<star> \\<squnion>\n    n (x\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n    z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    z * y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    z * y\\<^sup>\\<star> \\<squnion>\n    w * y\\<^sup>\\<star> \\<squnion>\n    n (x\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt L_left_zero sup_assoc sup_commute sup_idem mult_assoc mult_right_dist_sup star.circ_transitive_equal)"], ["proof (state)\nthis:\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   w) *\n  n (y\\<^sup>\\<omega>) *\n  L \\<squnion>\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   w) *\n  y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n  z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "also"], ["proof (state)\nthis:\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   w) *\n  n (y\\<^sup>\\<omega>) *\n  L \\<squnion>\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   w) *\n  y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n  z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "have \"... = z * n(y\\<^sup>\\<omega>) * L \\<squnion> w * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    z * y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    z * y\\<^sup>\\<star> \\<squnion>\n    w * y\\<^sup>\\<star> \\<squnion>\n    n (x\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n    z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    z * y\\<^sup>\\<star> \\<squnion>\n    w * y\\<^sup>\\<star> \\<squnion>\n    n (x\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt sup_assoc sup_commute sup_idem le_iff_sup mult_assoc n_L_split star_mult_omega zero_right_mult_decreasing)"], ["proof (state)\nthis:\n  z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n  z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  z * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  n (x\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "finally"], ["proof (chain)\npicking this:\n  x *\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   n (x\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n  \\<le> z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        z * y\\<^sup>\\<star> \\<squnion>\n        w * y\\<^sup>\\<star> \\<squnion>\n        n (x\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "have \"x * (z * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) \\<le> z * n(y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion> n(x\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * n(y\\<^sup>\\<omega>) * L \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x *\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   n (x\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n  \\<le> z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        z * y\\<^sup>\\<star> \\<squnion>\n        w * y\\<^sup>\\<star> \\<squnion>\n        n (x\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x *\n    (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     n (x\\<^sup>\\<omega>) * L \\<squnion>\n     x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n     x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n    \\<le> z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n          z * y\\<^sup>\\<star> \\<squnion>\n          n (x\\<^sup>\\<omega>) * L \\<squnion>\n          x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt sup_assoc sup_commute sup_idem mult_assoc star.circ_loop_fixpoint)"], ["proof (state)\nthis:\n  x *\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   n (x\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n  \\<le> z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        z * y\\<^sup>\\<star> \\<squnion>\n        n (x\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "thus \"x\\<^sup>\\<Omega> * z \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>\""], ["proof (prove)\nusing this:\n  x *\n  (z * n (y\\<^sup>\\<omega>) * L \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   n (x\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n  \\<le> z * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        z * y\\<^sup>\\<star> \\<squnion>\n        n (x\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * n (y\\<^sup>\\<omega>) * L \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<Omega> * z\n    \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "by (smt (verit, del_insts) L_left_zero Omega_def sup_assoc le_supI1 le_sup_iff sup_ge1 mult_assoc mult_left_dist_sup mult_right_dist_sup star.circ_back_loop_fixpoint star_left_induct)"], ["proof (state)\nthis:\n  x\\<^sup>\\<Omega> * z\n  \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>Theorem 2.6 and Theorem 19\\<close>"], ["", "sublocale n_omega_algebra_2 < nL_omega: itering where circ = Omega"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.itering Omega (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<Omega> =\n       (x\\<^sup>\\<Omega> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>\n 2. \\<And>x y. (x * y)\\<^sup>\\<Omega> = Rf (x * (y * x)\\<^sup>\\<Omega>) y\n 3. \\<And>z x y w.\n       z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w \\<longrightarrow>\n       z * x\\<^sup>\\<Omega>\n       \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)\n 4. \\<And>x z y w.\n       x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w \\<longrightarrow>\n       x\\<^sup>\\<Omega> * z\n       \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "apply (simp add: n_Omega_circ_sup)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y. (x * y)\\<^sup>\\<Omega> = Rf (x * (y * x)\\<^sup>\\<Omega>) y\n 2. \\<And>z x y w.\n       z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w \\<longrightarrow>\n       z * x\\<^sup>\\<Omega>\n       \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)\n 3. \\<And>x z y w.\n       x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w \\<longrightarrow>\n       x\\<^sup>\\<Omega> * z\n       \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "apply (smt L_left_zero sup_assoc sup_commute sup_bot_left Omega_def mult_assoc mult_left_dist_sup mult_right_dist_sup n_L_split omega_slide star.circ_mult)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z x y w.\n       z * x \\<le> y * y\\<^sup>\\<Omega> * z \\<squnion> w \\<longrightarrow>\n       z * x\\<^sup>\\<Omega>\n       \\<le> y\\<^sup>\\<Omega> * (z \\<squnion> w * x\\<^sup>\\<Omega>)\n 2. \\<And>x z y w.\n       x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w \\<longrightarrow>\n       x\\<^sup>\\<Omega> * z\n       \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "apply (simp add: n_Omega_circ_simulate_right_sup)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w \\<longrightarrow>\n       x\\<^sup>\\<Omega> * z\n       \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "using n_Omega_circ_simulate_left_sup"], ["proof (prove)\nusing this:\n  ?x * ?z \\<le> ?z * ?y\\<^sup>\\<Omega> \\<squnion> ?w \\<Longrightarrow>\n  ?x\\<^sup>\\<Omega> * ?z\n  \\<le> (?z \\<squnion> ?x\\<^sup>\\<Omega> * ?w) * ?y\\<^sup>\\<Omega>\n\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z \\<le> z * y\\<^sup>\\<Omega> \\<squnion> w \\<longrightarrow>\n       x\\<^sup>\\<Omega> * z\n       \\<le> (z \\<squnion> x\\<^sup>\\<Omega> * w) * y\\<^sup>\\<Omega>", "by auto"], ["", "sublocale n_omega_algebra_2 < nL_omega: n_omega_itering where circ = Omega"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.n_omega_itering Omega (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot top\n     n L star omega", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x\\<^sup>\\<Omega>\\<^sup>\\<Omega> = L \\<squnion> x\\<^sup>\\<star>", "by (smt Omega_def sup_assoc sup_commute le_iff_sup mult_L_sup_star mult_left_one n_L_split n_top ni_below_L ni_def star_involutive star_mult_omega star_omega_top zero_right_mult_decreasing)"], ["", "sublocale n_omega_algebra_2 < nL_omega: left_zero_kleene_conway_semiring where circ = Omega"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_zero_kleene_conway_semiring Omega (1::'a) (*) (\\<squnion>)\n     (\\<le>) (<) bot star", ".."], ["", "sublocale n_omega_algebra_2 < nL_star: left_omega_conway_semiring where circ = star"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_omega_conway_semiring star (1::'a) (*) (\\<squnion>) (\\<le>)\n     (<) bot star omega", ".."], ["", "context n_omega_algebra_2\nbegin"], ["", "lemma circ_sup_8:\n  \"n((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n ((x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>) * L\n    \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<Omega> * x\\<^sup>\\<Omega>", "by (metis sup_ge1 nL_omega.circ_sup_4 Omega_def mult_left_isotone n_isotone omega_sum_unfold_3 order_trans)"], ["", "lemma n_split_omega_omega:\n  \"x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> * bot \\<squnion> n(x\\<^sup>\\<omega>) * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> * bot \\<squnion> n (x\\<^sup>\\<omega>) * top", "by (metis n_split n_top_L omega_vector)"], ["", "text \\<open>Theorem 20.1\\<close>"], ["", "lemma n_below_n_star:\n  \"n(x) \\<le> n(x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<le> n (x\\<^sup>\\<star>)", "by (simp add: n_isotone star.circ_increasing)"], ["", "text \\<open>Theorem 20.2\\<close>"], ["", "lemma n_star_below_n_omega:\n  \"n(x\\<^sup>\\<star>) \\<le> n(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x\\<^sup>\\<star>) \\<le> n (x\\<^sup>\\<omega>)", "by (metis n_mult_left_upper_bound star_mult_omega)"], ["", "lemma n_below_n_omega:\n  \"n(x) \\<le> n(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<le> n (x\\<^sup>\\<omega>)", "using order.trans n_below_n_star n_star_below_n_omega"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  n ?x \\<le> n (?x\\<^sup>\\<star>)\n  n (?x\\<^sup>\\<star>) \\<le> n (?x\\<^sup>\\<omega>)\n\ngoal (1 subgoal):\n 1. n x \\<le> n (x\\<^sup>\\<omega>)", "by blast"], ["", "text \\<open>Theorem 20.4\\<close>"], ["", "lemma star_n_L:\n  \"x\\<^sup>\\<star> * n(x) * L = x\\<^sup>\\<star> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * n x * L = x\\<^sup>\\<star> * bot", "by (metis sup_bot_left mult_left_zero n_L_split n_dist_sup n_mult_bot n_one ni_def ni_split star_left_unfold_equal star_plus)"], ["", "lemma star_L_split:\n  assumes \"y \\<le> z\"\n      and \"x * z * L \\<le> x * bot \\<squnion> z * L\"\n    shows \"x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "have \"x * (x\\<^sup>\\<star> * bot \\<squnion> z * L) \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * z * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n    \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * z * L", "by (metis sup_bot_right order.eq_iff mult_assoc mult_left_dist_sup star.circ_loop_fixpoint)"], ["proof (state)\nthis:\n  x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "also"], ["proof (state)\nthis:\n  x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "have \"... \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<squnion> x * z * L\n    \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L", "using assms(2) semiring.add_left_mono sup_assoc"], ["proof (prove)\nusing this:\n  x * z * L \\<le> x * bot \\<squnion> z * L\n  ?a \\<le> ?b \\<Longrightarrow> ?c \\<squnion> ?a \\<le> ?c \\<squnion> ?b\n  ?x \\<squnion> ?y \\<squnion> ?z = ?x \\<squnion> (?y \\<squnion> ?z)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<squnion> x * z * L\n    \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L", "by auto"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> * bot \\<squnion> x * z * L\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> * bot \\<squnion> x * z * L\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "have \"... = x\\<^sup>\\<star> * bot \\<squnion> z * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L =\n    x\\<^sup>\\<star> * bot \\<squnion> z * L", "using mult_left_isotone star.circ_increasing sup.absorb_iff2 sup_commute"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n  ?x \\<le> ?x\\<^sup>\\<star>\n  (?a \\<le> ?b) = (?a \\<squnion> ?b = ?b)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L =\n    x\\<^sup>\\<star> * bot \\<squnion> z * L", "by auto"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> * bot \\<squnion> x * bot \\<squnion> z * L =\n  x\\<^sup>\\<star> * bot \\<squnion> z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "finally"], ["proof (chain)\npicking this:\n  x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "have \"y * L \\<squnion> x * (x\\<^sup>\\<star> * bot \\<squnion> z * L) \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\""], ["proof (prove)\nusing this:\n  x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\n\ngoal (1 subgoal):\n 1. y * L \\<squnion> x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n    \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "by (metis assms(1) le_sup_iff sup_ge2 mult_left_isotone order_trans)"], ["proof (state)\nthis:\n  y * L \\<squnion> x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "thus ?thesis"], ["proof (prove)\nusing this:\n  y * L \\<squnion> x * (x\\<^sup>\\<star> * bot \\<squnion> z * L)\n  \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L", "by (simp add: star_left_induct mult_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> z * L\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_L_split_same:\n  \"x * y * L \\<le> x * bot \\<squnion> y * L \\<Longrightarrow> x\\<^sup>\\<star> * y * L = x\\<^sup>\\<star> * bot \\<squnion> y * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y * L \\<le> x * bot \\<squnion> y * L \\<Longrightarrow>\n    x\\<^sup>\\<star> * y * L = x\\<^sup>\\<star> * bot \\<squnion> y * L", "apply (rule order.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x * y * L \\<le> x * bot \\<squnion> y * L \\<Longrightarrow>\n    x\\<^sup>\\<star> * y * L \\<le> x\\<^sup>\\<star> * bot \\<squnion> y * L\n 2. x * y * L \\<le> x * bot \\<squnion> y * L \\<Longrightarrow>\n    x\\<^sup>\\<star> * bot \\<squnion> y * L \\<le> x\\<^sup>\\<star> * y * L", "apply (simp add: star_L_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y * L \\<le> x * bot \\<squnion> y * L \\<Longrightarrow>\n    x\\<^sup>\\<star> * bot \\<squnion> y * L \\<le> x\\<^sup>\\<star> * y * L", "by (metis bot_least le_supI mult_isotone nL_star.star_below_circ star.circ_loop_fixpoint sup.cobounded2 mult_assoc)"], ["", "lemma star_n_L_split_equal:\n  \"n(x * y) \\<le> n(y) \\<Longrightarrow> x\\<^sup>\\<star> * n(y) * L = x\\<^sup>\\<star> * bot \\<squnion> n(y) * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * y) \\<le> n y \\<Longrightarrow>\n    x\\<^sup>\\<star> * n y * L = x\\<^sup>\\<star> * bot \\<squnion> n y * L", "by (simp add: n_mult_right_upper_bound star_L_split_same)"], ["", "lemma n_star_mult:\n  \"n(x * y) \\<le> n(y) \\<Longrightarrow> n(x\\<^sup>\\<star> * y) = n(x\\<^sup>\\<star>) \\<squnion> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * y) \\<le> n y \\<Longrightarrow>\n    n (x\\<^sup>\\<star> * y) = n (x\\<^sup>\\<star>) \\<squnion> n y", "by (metis n_dist_sup n_mult n_mult_bot n_n_L star_n_L_split_equal)"], ["", "text \\<open>Theorem 20.3\\<close>"], ["", "lemma n_omega_mult:\n  \"n(x\\<^sup>\\<omega> * y) = n(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x\\<^sup>\\<omega> * y) = n (x\\<^sup>\\<omega>)", "by (simp add: n_isotone n_mult_left_upper_bound omega_sub_vector order.eq_iff)"], ["", "lemma n_star_left_unfold:\n  \"n(x\\<^sup>\\<star>) = n(x * x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x\\<^sup>\\<star>) = n (x\\<^sup>+)", "by (metis n_mult n_mult_bot star.circ_plus_same star_n_L)"], ["", "lemma ni_star_below_ni_omega:\n  \"ni(x\\<^sup>\\<star>) \\<le> ni(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x\\<^sup>\\<star>) \\<le> ni (x\\<^sup>\\<omega>)", "by (simp add: ni_n_order n_star_below_n_omega)"], ["", "lemma ni_below_ni_omega:\n  \"ni(x) \\<le> ni(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x \\<le> ni (x\\<^sup>\\<omega>)", "by (simp add: ni_n_order n_below_n_omega)"], ["", "lemma ni_star:\n  \"ni(x)\\<^sup>\\<star> = 1 \\<squnion> ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x\\<^sup>\\<star> = (1::'a) \\<squnion> ni x", "by (simp add: mult_L_star ni_def)"], ["", "lemma ni_omega:\n  \"ni(x)\\<^sup>\\<omega> = ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni x\\<^sup>\\<omega> = ni x", "using mult_L_omega ni_def"], ["proof (prove)\nusing this:\n  (?x * L)\\<^sup>\\<omega> = ?x * L\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. ni x\\<^sup>\\<omega> = ni x", "by auto"], ["", "lemma ni_omega_induct:\n  \"ni(y) \\<le> ni(x * y \\<squnion> z) \\<Longrightarrow> ni(y) \\<le> ni(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni y \\<le> ni (x * y \\<squnion> z) \\<Longrightarrow>\n    ni y \\<le> ni (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)", "using n_omega_induct ni_n_order"], ["proof (prove)\nusing this:\n  n ?y \\<le> n (?x * ?y \\<squnion> ?z) \\<Longrightarrow>\n  n ?y \\<le> n (?x\\<^sup>\\<omega> \\<squnion> ?x\\<^sup>\\<star> * ?z)\n  (ni ?x \\<le> ni ?y) = (n ?x \\<le> n ?y)\n\ngoal (1 subgoal):\n 1. ni y \\<le> ni (x * y \\<squnion> z) \\<Longrightarrow>\n    ni y \\<le> ni (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z)", "by blast"], ["", "lemma star_ni:\n  \"x\\<^sup>\\<star> * ni(x) = x\\<^sup>\\<star> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * ni x = x\\<^sup>\\<star> * bot", "using ni_def mult_assoc star_n_L"], ["proof (prove)\nusing this:\n  ni ?x = n ?x * L\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?x\\<^sup>\\<star> * n ?x * L = ?x\\<^sup>\\<star> * bot\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * ni x = x\\<^sup>\\<star> * bot", "by auto"], ["", "lemma star_ni_split_equal:\n  \"ni(x * y) \\<le> ni(y) \\<Longrightarrow> x\\<^sup>\\<star> * ni(y) = x\\<^sup>\\<star> * bot \\<squnion> ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x * y) \\<le> ni y \\<Longrightarrow>\n    x\\<^sup>\\<star> * ni y = x\\<^sup>\\<star> * bot \\<squnion> ni y", "using ni_def ni_mult_right_upper_bound mult_assoc star_L_split_same"], ["proof (prove)\nusing this:\n  ni ?x = n ?x * L\n  (ni (?x * ?y) \\<le> ni ?z) =\n  (ni ?x \\<le> ni ?z \\<and> ?x * ni ?y \\<le> ?x * bot \\<squnion> ni ?z)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?x * ?y * L \\<le> ?x * bot \\<squnion> ?y * L \\<Longrightarrow>\n  ?x\\<^sup>\\<star> * ?y * L = ?x\\<^sup>\\<star> * bot \\<squnion> ?y * L\n\ngoal (1 subgoal):\n 1. ni (x * y) \\<le> ni y \\<Longrightarrow>\n    x\\<^sup>\\<star> * ni y = x\\<^sup>\\<star> * bot \\<squnion> ni y", "by auto"], ["", "lemma ni_star_mult:\n  \"ni(x * y) \\<le> ni(y) \\<Longrightarrow> ni(x\\<^sup>\\<star> * y) = ni(x\\<^sup>\\<star>) \\<squnion> ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x * y) \\<le> ni y \\<Longrightarrow>\n    ni (x\\<^sup>\\<star> * y) = ni (x\\<^sup>\\<star>) \\<squnion> ni y", "using mult_right_dist_sup ni_def ni_n_order n_star_mult"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y) * ?z = ?x * ?z \\<squnion> ?y * ?z\n  ni ?x = n ?x * L\n  (ni ?x \\<le> ni ?y) = (n ?x \\<le> n ?y)\n  n (?x * ?y) \\<le> n ?y \\<Longrightarrow>\n  n (?x\\<^sup>\\<star> * ?y) = n (?x\\<^sup>\\<star>) \\<squnion> n ?y\n\ngoal (1 subgoal):\n 1. ni (x * y) \\<le> ni y \\<Longrightarrow>\n    ni (x\\<^sup>\\<star> * y) = ni (x\\<^sup>\\<star>) \\<squnion> ni y", "by auto"], ["", "lemma ni_omega_mult:\n  \"ni(x\\<^sup>\\<omega> * y) = ni(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x\\<^sup>\\<omega> * y) = ni (x\\<^sup>\\<omega>)", "by (simp add: ni_def n_omega_mult)"], ["", "lemma ni_star_left_unfold:\n  \"ni(x\\<^sup>\\<star>) = ni(x * x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x\\<^sup>\\<star>) = ni (x\\<^sup>+)", "by (simp add: ni_def n_star_left_unfold)"], ["", "lemma n_star_import:\n  assumes \"n(y) * x \\<le> x * n(y)\"\n    shows \"n(y) * x\\<^sup>\\<star> = n(y) * (n(y) * x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * x\\<^sup>\\<star> = n y * (n y * x)\\<^sup>\\<star>", "proof (rule order.antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. n y * x\\<^sup>\\<star> \\<le> n y * (n y * x)\\<^sup>\\<star>\n 2. n y * (n y * x)\\<^sup>\\<star> \\<le> n y * x\\<^sup>\\<star>", "have \"n(y) * (n(y) * x)\\<^sup>\\<star> * x \\<le> n(y) * (n(y) * x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * (n y * x)\\<^sup>\\<star> * x \\<le> n y * (n y * x)\\<^sup>\\<star>", "by (smt assms mult_assoc mult_right_dist_sup mult_right_sub_dist_sup_left n_mult_idempotent n_preserves_equation star.circ_back_loop_fixpoint)"], ["proof (state)\nthis:\n  n y * (n y * x)\\<^sup>\\<star> * x \\<le> n y * (n y * x)\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. n y * x\\<^sup>\\<star> \\<le> n y * (n y * x)\\<^sup>\\<star>\n 2. n y * (n y * x)\\<^sup>\\<star> \\<le> n y * x\\<^sup>\\<star>", "thus \"n(y) * x\\<^sup>\\<star> \\<le> n(y) * (n(y) * x)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  n y * (n y * x)\\<^sup>\\<star> * x \\<le> n y * (n y * x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. n y * x\\<^sup>\\<star> \\<le> n y * (n y * x)\\<^sup>\\<star>", "using assms eq_refl n_mult_idempotent n_sub_one star.circ_import"], ["proof (prove)\nusing this:\n  n y * (n y * x)\\<^sup>\\<star> * x \\<le> n y * (n y * x)\\<^sup>\\<star>\n  n y * x \\<le> x * n y\n  ?x = ?y \\<Longrightarrow> ?x \\<le> ?y\n  idempotent (n ?x)\n  coreflexive (n ?x)\n  \\<lbrakk>dense_rel ?p; coreflexive ?p; ?p * ?x \\<le> ?x * ?p\\<rbrakk>\n  \\<Longrightarrow> ?p * ?x\\<^sup>\\<star> = ?p * (?p * ?x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. n y * x\\<^sup>\\<star> \\<le> n y * (n y * x)\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  n y * x\\<^sup>\\<star> \\<le> n y * (n y * x)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. n y * (n y * x)\\<^sup>\\<star> \\<le> n y * x\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n y * (n y * x)\\<^sup>\\<star> \\<le> n y * x\\<^sup>\\<star>", "show \"n(y) * (n(y) * x)\\<^sup>\\<star> \\<le> n(y) * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * (n y * x)\\<^sup>\\<star> \\<le> n y * x\\<^sup>\\<star>", "by (simp add: assms n_mult_idempotent n_sub_one star.circ_import)"], ["proof (state)\nthis:\n  n y * (n y * x)\\<^sup>\\<star> \\<le> n y * x\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma n_omega_export:\n  \"n(y) * x \\<le> x * n(y) \\<Longrightarrow> n(y) * x\\<^sup>\\<omega> = (n(y) * x)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * x \\<le> x * n y \\<Longrightarrow>\n    n y * x\\<^sup>\\<omega> = (n y * x)\\<^sup>\\<omega>", "apply (rule order.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n y * x \\<le> x * n y \\<Longrightarrow>\n    n y * x\\<^sup>\\<omega> \\<le> (n y * x)\\<^sup>\\<omega>\n 2. n y * x \\<le> x * n y \\<Longrightarrow>\n    (n y * x)\\<^sup>\\<omega> \\<le> n y * x\\<^sup>\\<omega>", "apply (simp add: n_preserves_equation omega_simulation)"], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * x \\<le> x * n y \\<Longrightarrow>\n    (n y * x)\\<^sup>\\<omega> \\<le> n y * x\\<^sup>\\<omega>", "by (metis mult_right_isotone mult_1_right n_sub_one omega_isotone omega_slide)"], ["", "lemma n_omega_import:\n  \"n(y) * x \\<le> x * n(y) \\<Longrightarrow> n(y) * x\\<^sup>\\<omega> = n(y) * (n(y) * x)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n y * x \\<le> x * n y \\<Longrightarrow>\n    n y * x\\<^sup>\\<omega> = n y * (n y * x)\\<^sup>\\<omega>", "by (simp add: n_mult_idempotent omega_import)"], ["", "text \\<open>Theorem 20.5\\<close>"], ["", "lemma star_n_omega_top:\n  \"x\\<^sup>\\<star> * n(x\\<^sup>\\<omega>) * top = x\\<^sup>\\<star> * bot \\<squnion> n(x\\<^sup>\\<omega>) * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * n (x\\<^sup>\\<omega>) * top =\n    x\\<^sup>\\<star> * bot \\<squnion> n (x\\<^sup>\\<omega>) * top", "by (smt (verit, del_insts) le_supI le_sup_iff sup_right_divisibility order.antisym mult_assoc nL_star.circ_mult_omega nL_star.star_zero_below_circ_mult n_top_split star.circ_loop_fixpoint)"], ["", "(*\nlemma n_star_induct_sup: \"n(z \\<squnion> x * y) \\<le> n(y) \\<Longrightarrow> n(x\\<^sup>\\<star> * z) \\<le> n(y)\" oops\n*)"], ["", "end"], ["", "end"]]}