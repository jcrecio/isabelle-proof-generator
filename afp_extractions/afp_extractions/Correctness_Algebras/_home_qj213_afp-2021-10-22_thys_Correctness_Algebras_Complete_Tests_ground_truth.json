{"file_name": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras/Complete_Tests.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras", "problem_names": ["lemma Sup_isotone:\n  \"test_set B \\<Longrightarrow> A \\<subseteq> B \\<Longrightarrow> Sup A \\<le> Sup B\"", "lemma mult_right_dist_sup:\n  assumes \"test_set A\"\n    shows \"Sup A * -p = Sup { x * -p | x . x \\<in> A }\"", "lemma mult_left_dist_sup:\n  assumes \"test_set A\"\n  shows \"-p * Sup A = Sup { -p * x | x . x \\<in> A }\"", "lemma Sum_test:\n  \"test_seq t \\<Longrightarrow> Sum t = --Sum t\"", "lemma Sum_upper:\n  \"test_seq t \\<Longrightarrow> t x \\<le> Sum t\"", "lemma Sum_least:\n  \"test_seq t \\<Longrightarrow> (\\<forall>n . t n \\<le> -p) \\<Longrightarrow> Sum t \\<le> -p\"", "lemma mult_right_dist_Sum:\n  \"test_seq t \\<Longrightarrow> (\\<forall>n . t n * -p \\<le> -q) \\<Longrightarrow> Sum t * -p \\<le> -q\"", "lemma mult_left_dist_Sum:\n  \"test_seq t \\<Longrightarrow> (\\<forall>n . -p * t n \\<le> -q) \\<Longrightarrow> -p * Sum t \\<le> -q\"", "lemma pSum_below_Sum:\n  \"test_seq t \\<Longrightarrow> pSum t m \\<le> Sum t\"", "lemma pSum_sup:\n  assumes \"test_seq t\"\n    shows \"pSum t m = Sup { t i | i . i \\<in> {..<m} }\"", "lemma Sum_range:\n  \"Sum f = Sup (range f)\"", "lemma Prod_range:\n  \"Prod f = Inf (range f)\""], "translations": [["", "lemma Sup_isotone:\n  \"test_set B \\<Longrightarrow> A \\<subseteq> B \\<Longrightarrow> Sup A \\<le> Sup B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test_set B; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> Sup A \\<le> Sup B", "by (metis sup_least sup_test sup_upper test_set_closed subset_eq)"], ["", "lemma mult_right_dist_sup:\n  assumes \"test_set A\"\n    shows \"Sup A * -p = Sup { x * -p | x . x \\<in> A }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "have 1: \"test_set { x * -p | x . x \\<in> A }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_set {x * - p |x. x \\<in> A}", "by (simp add: assms mult_right_dist_test_set)"], ["proof (state)\nthis:\n  test_set {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "have 2: \"Sup { x * -p | x . x \\<in> A } \\<le> Sup A * -p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup {x * - p |x. x \\<in> A} \\<le> Sup A * - p", "by (smt (verit, del_insts) assms mem_Collect_eq tests_dual.sub_sup_left_isotone sub_mult_closed sup_test sup_least sup_upper test_set_def)"], ["proof (state)\nthis:\n  Sup {x * - p |x. x \\<in> A} \\<le> Sup A * - p\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "have \"\\<forall>x\\<in>A . x \\<le> --(--Sup { x * -p | x . x \\<in> A } \\<squnion> --p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "assume 3: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "hence \"x * -p \\<squnion> --p \\<le> Sup { x * -p | x . x \\<in> A } \\<squnion> --p\""], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x * - p \\<squnion> - - p\n    \\<le> Sup {x * - p |x. x \\<in> A} \\<squnion> - - p", "using 1"], ["proof (prove)\nusing this:\n  x \\<in> A\n  test_set {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. x * - p \\<squnion> - - p\n    \\<le> Sup {x * - p |x. x \\<in> A} \\<squnion> - - p", "by (smt (verit, del_insts) assms mem_Collect_eq tests_dual.sub_inf_left_isotone sub_mult_closed sup_upper test_set_def sup_test)"], ["proof (state)\nthis:\n  x * - p \\<squnion> - - p\n  \\<le> Sup {x * - p |x. x \\<in> A} \\<squnion> - - p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "thus \"x \\<le> --(--Sup { x * -p | x . x \\<in> A } \\<squnion> --p)\""], ["proof (prove)\nusing this:\n  x * - p \\<squnion> - - p\n  \\<le> Sup {x * - p |x. x \\<in> A} \\<squnion> - - p\n\ngoal (1 subgoal):\n 1. x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "using 1 3"], ["proof (prove)\nusing this:\n  x * - p \\<squnion> - - p\n  \\<le> Sup {x * - p |x. x \\<in> A} \\<squnion> - - p\n  test_set {x * - p |x. x \\<in> A}\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "by (smt (z3) assms tests_dual.inf_closed sub_comm test_set_def sup_test sub_mult_closed tests_dual.sba_dual.shunting_right tests_dual.sba_dual.sub_sup_left_isotone tests_dual.inf_absorb tests_dual.inf_less_eq_cases_3)"], ["proof (state)\nthis:\n  x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A.\n     x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "hence \"Sup A \\<le> --(--Sup { x * -p | x . x \\<in> A } \\<squnion> --p)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A.\n     x \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)\n\ngoal (1 subgoal):\n 1. Sup A \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)", "by (simp add: assms sup_least)"], ["proof (state)\nthis:\n  Sup A \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "hence \"Sup A * -p \\<le> Sup { x * -p | x . x \\<in> A }\""], ["proof (prove)\nusing this:\n  Sup A \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)\n\ngoal (1 subgoal):\n 1. Sup A * - p \\<le> Sup {x * - p |x. x \\<in> A}", "using 1"], ["proof (prove)\nusing this:\n  Sup A \\<le> - - (- - Sup {x * - p |x. x \\<in> A} \\<squnion> - - p)\n  test_set {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. Sup A * - p \\<le> Sup {x * - p |x. x \\<in> A}", "by (smt (z3) assms sup_test tests_dual.sba_dual.shunting tests_dual.sub_commutative tests_dual.sub_sup_closed tests_dual.sub_sup_demorgan)"], ["proof (state)\nthis:\n  Sup A * - p \\<le> Sup {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "thus ?thesis"], ["proof (prove)\nusing this:\n  Sup A * - p \\<le> Sup {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "using 1 2"], ["proof (prove)\nusing this:\n  Sup A * - p \\<le> Sup {x * - p |x. x \\<in> A}\n  test_set {x * - p |x. x \\<in> A}\n  Sup {x * - p |x. x \\<in> A} \\<le> Sup A * - p\n\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "by (smt (z3) assms sup_test tests_dual.sba_dual.sub_sup_closed tests_dual.antisymmetric tests_dual.inf_demorgan tests_dual.inf_idempotent)"], ["proof (state)\nthis:\n  Sup A * - p = Sup {x * - p |x. x \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_left_dist_sup:\n  assumes \"test_set A\"\n  shows \"-p * Sup A = Sup { -p * x | x . x \\<in> A }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "have 1: \"Sup A * -p = Sup { x * -p | x . x \\<in> A }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup A * - p = Sup {x * - p |x. x \\<in> A}", "by (simp add: assms mult_right_dist_sup)"], ["proof (state)\nthis:\n  Sup A * - p = Sup {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "have 2: \"-p * Sup A = Sup A * -p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p * Sup A = Sup A * - p", "by (metis assms sub_comm sup_test)"], ["proof (state)\nthis:\n  - p * Sup A = Sup A * - p\n\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "have \"{ -p * x | x . x \\<in> A } = { x * -p | x . x \\<in> A }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {- p * x |x. x \\<in> A} = {x * - p |x. x \\<in> A}", "by (metis assms test_set_def tests_dual.sub_commutative)"], ["proof (state)\nthis:\n  {- p * x |x. x \\<in> A} = {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {- p * x |x. x \\<in> A} = {x * - p |x. x \\<in> A}\n\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "using 1 2"], ["proof (prove)\nusing this:\n  {- p * x |x. x \\<in> A} = {x * - p |x. x \\<in> A}\n  Sup A * - p = Sup {x * - p |x. x \\<in> A}\n  - p * Sup A = Sup A * - p\n\ngoal (1 subgoal):\n 1. - p * Sup A = Sup {- p * x |x. x \\<in> A}", "by simp"], ["proof (state)\nthis:\n  - p * Sup A = Sup {- p * x |x. x \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition Sum :: \"(nat \\<Rightarrow> 'a) \\<Rightarrow> 'a\"\n  where \"Sum f \\<equiv> Sup { f n | n::nat . True }\""], ["", "lemma Sum_test:\n  \"test_seq t \\<Longrightarrow> Sum t = --Sum t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_seq t \\<Longrightarrow>\n    complete_tests_class.Sum t = - - complete_tests_class.Sum t", "using Sum_def sup_test test_seq_test_set"], ["proof (prove)\nusing this:\n  complete_tests_class.Sum ?f \\<equiv> Sup {?f n |n. True}\n  test_set ?A \\<longrightarrow> Sup ?A = - - Sup ?A\n  test_seq ?t \\<Longrightarrow> test_set {?t n |n. True}\n\ngoal (1 subgoal):\n 1. test_seq t \\<Longrightarrow>\n    complete_tests_class.Sum t = - - complete_tests_class.Sum t", "by auto"], ["", "lemma Sum_upper:\n  \"test_seq t \\<Longrightarrow> t x \\<le> Sum t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_seq t \\<Longrightarrow> t x \\<le> complete_tests_class.Sum t", "using Sum_def sup_upper test_seq_test_set"], ["proof (prove)\nusing this:\n  complete_tests_class.Sum ?f \\<equiv> Sup {?f n |n. True}\n  test_set ?A \\<and> ?x \\<in> ?A \\<longrightarrow> ?x \\<le> Sup ?A\n  test_seq ?t \\<Longrightarrow> test_set {?t n |n. True}\n\ngoal (1 subgoal):\n 1. test_seq t \\<Longrightarrow> t x \\<le> complete_tests_class.Sum t", "by auto"], ["", "lemma Sum_least:\n  \"test_seq t \\<Longrightarrow> (\\<forall>n . t n \\<le> -p) \\<Longrightarrow> Sum t \\<le> -p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test_seq t; \\<forall>n. t n \\<le> - p\\<rbrakk>\n    \\<Longrightarrow> complete_tests_class.Sum t \\<le> - p", "using Sum_def sup_least test_seq_test_set"], ["proof (prove)\nusing this:\n  complete_tests_class.Sum ?f \\<equiv> Sup {?f n |n. True}\n  test_set ?A \\<and> (\\<forall>x\\<in>?A. x \\<le> - ?y) \\<longrightarrow>\n  Sup ?A \\<le> - ?y\n  test_seq ?t \\<Longrightarrow> test_set {?t n |n. True}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>test_seq t; \\<forall>n. t n \\<le> - p\\<rbrakk>\n    \\<Longrightarrow> complete_tests_class.Sum t \\<le> - p", "by force"], ["", "lemma mult_right_dist_Sum:\n  \"test_seq t \\<Longrightarrow> (\\<forall>n . t n * -p \\<le> -q) \\<Longrightarrow> Sum t * -p \\<le> -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test_seq t; \\<forall>n. t n * - p \\<le> - q\\<rbrakk>\n    \\<Longrightarrow> complete_tests_class.Sum t * - p \\<le> - q", "by (smt (verit, del_insts) CollectD Sum_def sup_least sup_test test_seq_test_set test_set_def tests_dual.sba_dual.shunting_right tests_dual.sba_dual.sub_sup_closed)"], ["", "lemma mult_left_dist_Sum:\n  \"test_seq t \\<Longrightarrow> (\\<forall>n . -p * t n \\<le> -q) \\<Longrightarrow> -p * Sum t \\<le> -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>test_seq t; \\<forall>n. - p * t n \\<le> - q\\<rbrakk>\n    \\<Longrightarrow> - p * complete_tests_class.Sum t \\<le> - q", "by (smt (verit, del_insts) Sum_def mem_Collect_eq mult_left_dist_sup sub_mult_closed sup_least test_seq_test_set test_set_def)"], ["", "lemma pSum_below_Sum:\n  \"test_seq t \\<Longrightarrow> pSum t m \\<le> Sum t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_seq t \\<Longrightarrow> pSum t m \\<le> complete_tests_class.Sum t", "using Sum_test Sum_upper nat_test_def pSum_below_sum test_seq_def mult_right_dist_Sum"], ["proof (prove)\nusing this:\n  test_seq ?t \\<Longrightarrow>\n  complete_tests_class.Sum ?t = - - complete_tests_class.Sum ?t\n  test_seq ?t \\<Longrightarrow> ?t ?x \\<le> complete_tests_class.Sum ?t\n  nat_test ?t ?s \\<equiv>\n  (\\<forall>n. ?t n = - - ?t n) \\<and>\n  ?s = - - ?s \\<and>\n  (\\<forall>n. ?t n \\<le> ?s) \\<and>\n  (\\<forall>x y.\n      (\\<forall>n. ?t n * - x \\<le> - y) \\<longrightarrow>\n      ?s * - x \\<le> - y)\n  nat_test ?t ?s \\<Longrightarrow> pSum ?t ?x \\<le> ?s\n  test_seq ?t \\<equiv> \\<forall>n. ?t n = - - ?t n\n  \\<lbrakk>test_seq ?t; \\<forall>n. ?t n * - ?p \\<le> - ?q\\<rbrakk>\n  \\<Longrightarrow> complete_tests_class.Sum ?t * - ?p \\<le> - ?q\n\ngoal (1 subgoal):\n 1. test_seq t \\<Longrightarrow> pSum t m \\<le> complete_tests_class.Sum t", "by auto"], ["", "lemma pSum_sup:\n  assumes \"test_seq t\"\n    shows \"pSum t m = Sup { t i | i . i \\<in> {..<m} }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "have 1: \"test_set { t i | i . i \\<in> {..<m} }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_set {t i |i. i \\<in> {..<m}}", "using assms test_seq_test_set test_set_def"], ["proof (prove)\nusing this:\n  test_seq t\n  test_seq ?t \\<Longrightarrow> test_set {?t n |n. True}\n  test_set ?A \\<equiv> \\<forall>x\\<in>?A. x = - - x\n\ngoal (1 subgoal):\n 1. test_set {t i |i. i \\<in> {..<m}}", "by auto"], ["proof (state)\nthis:\n  test_set {t i |i. i \\<in> {..<m}}\n\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "have \"\\<forall>y\\<in>{ t i | i . i \\<in> {..<m} } . y \\<le> --pSum t m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{t i |i. i \\<in> {..<m}}. y \\<le> - - pSum t m", "using assms pSum_test pSum_upper"], ["proof (prove)\nusing this:\n  test_seq t\n  test_seq ?t \\<Longrightarrow> pSum ?t ?m = - - pSum ?t ?m\n  \\<lbrakk>test_seq ?t; ?i < ?m\\<rbrakk>\n  \\<Longrightarrow> ?t ?i \\<le> pSum ?t ?m\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{t i |i. i \\<in> {..<m}}. y \\<le> - - pSum t m", "by force"], ["proof (state)\nthis:\n  \\<forall>y\\<in>{t i |i. i \\<in> {..<m}}. y \\<le> - - pSum t m\n\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "hence 2: \"Sup { t i | i . i \\<in> {..<m} } \\<le> --pSum t m\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>{t i |i. i \\<in> {..<m}}. y \\<le> - - pSum t m\n\ngoal (1 subgoal):\n 1. Sup {t i |i. i \\<in> {..<m}} \\<le> - - pSum t m", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>{t i |i. i \\<in> {..<m}}. y \\<le> - - pSum t m\n  test_set {t i |i. i \\<in> {..<m}}\n\ngoal (1 subgoal):\n 1. Sup {t i |i. i \\<in> {..<m}} \\<le> - - pSum t m", "by (simp add: sup_least)"], ["proof (state)\nthis:\n  Sup {t i |i. i \\<in> {..<m}} \\<le> - - pSum t m\n\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "have \"pSum t m \\<le> Sup { t i | i . i \\<in> {..<m} }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}}", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. pSum t 0 \\<le> Sup {t i |i. i \\<in> {..<0}}\n 2. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. pSum t 0 \\<le> Sup {t i |i. i \\<in> {..<0}}\n 2. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. pSum t 0 \\<le> Sup {t i |i. i \\<in> {..<0}}", "by (smt (verit, ccfv_SIG) Collect_empty_eq empty_iff lessThan_0 pSum.simps(1) sup_test test_set_def tests_dual.top_greatest)"], ["proof (state)\nthis:\n  pSum t 0 \\<le> Sup {t i |i. i \\<in> {..<0}}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "case (Suc n)"], ["proof (state)\nthis:\n  pSum t n \\<le> Sup {t i |i. i \\<in> {..<n}}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "have 4: \"test_set {t i |i. i \\<in> {..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_set {t i |i. i \\<in> {..<n}}", "using assms test_seq_def test_set_def"], ["proof (prove)\nusing this:\n  test_seq t\n  test_seq ?t \\<equiv> \\<forall>n. ?t n = - - ?t n\n  test_set ?A \\<equiv> \\<forall>x\\<in>?A. x = - - x\n\ngoal (1 subgoal):\n 1. test_set {t i |i. i \\<in> {..<n}}", "by auto"], ["proof (state)\nthis:\n  test_set {t i |i. i \\<in> {..<n}}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "have 5: \"test_set {t i |i. i < Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_set {t i |i. i < Suc n}", "using assms test_seq_def test_set_def"], ["proof (prove)\nusing this:\n  test_seq t\n  test_seq ?t \\<equiv> \\<forall>n. ?t n = - - ?t n\n  test_set ?A \\<equiv> \\<forall>x\\<in>?A. x = - - x\n\ngoal (1 subgoal):\n 1. test_set {t i |i. i < Suc n}", "by force"], ["proof (state)\nthis:\n  test_set {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "hence 6: \"Sup {t i |i. i < Suc n} = --Sup {t i |i. i < Suc n}\""], ["proof (prove)\nusing this:\n  test_set {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. Sup {t i |i. i < Suc n} = - - Sup {t i |i. i < Suc n}", "using sup_test"], ["proof (prove)\nusing this:\n  test_set {t i |i. i < Suc n}\n  test_set ?A \\<longrightarrow> Sup ?A = - - Sup ?A\n\ngoal (1 subgoal):\n 1. Sup {t i |i. i < Suc n} = - - Sup {t i |i. i < Suc n}", "by auto"], ["proof (state)\nthis:\n  Sup {t i |i. i < Suc n} = - - Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "hence \"\\<forall>x\\<in>{t i |i. i \\<in> {..<n}} . x \\<le> --Sup {t i |i. i < Suc n}\""], ["proof (prove)\nusing this:\n  Sup {t i |i. i < Suc n} = - - Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{t i |i. i \\<in> {..<n}}.\n       x \\<le> - - Sup {t i |i. i < Suc n}", "using 5 less_Suc_eq sup_upper"], ["proof (prove)\nusing this:\n  Sup {t i |i. i < Suc n} = - - Sup {t i |i. i < Suc n}\n  test_set {t i |i. i < Suc n}\n  (?m < Suc ?n) = (?m < ?n \\<or> ?m = ?n)\n  test_set ?A \\<and> ?x \\<in> ?A \\<longrightarrow> ?x \\<le> Sup ?A\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{t i |i. i \\<in> {..<n}}.\n       x \\<le> - - Sup {t i |i. i < Suc n}", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>{t i |i. i \\<in> {..<n}}.\n     x \\<le> - - Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "hence 7: \"Sup {t i |i. i \\<in> {..<n}} \\<le> --Sup {t i |i. i < Suc n}\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{t i |i. i \\<in> {..<n}}.\n     x \\<le> - - Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. Sup {t i |i. i \\<in> {..<n}} \\<le> - - Sup {t i |i. i < Suc n}", "using 4"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{t i |i. i \\<in> {..<n}}.\n     x \\<le> - - Sup {t i |i. i < Suc n}\n  test_set {t i |i. i \\<in> {..<n}}\n\ngoal (1 subgoal):\n 1. Sup {t i |i. i \\<in> {..<n}} \\<le> - - Sup {t i |i. i < Suc n}", "by (simp add: sup_least)"], ["proof (state)\nthis:\n  Sup {t i |i. i \\<in> {..<n}} \\<le> - - Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "have \"t n \\<in> {t i |i. i < Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t n \\<in> {t i |i. i < Suc n}", "by auto"], ["proof (state)\nthis:\n  t n \\<in> {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "hence \"t n \\<le> Sup {t i |i. i < Suc n}\""], ["proof (prove)\nusing this:\n  t n \\<in> {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. t n \\<le> Sup {t i |i. i < Suc n}", "using 5"], ["proof (prove)\nusing this:\n  t n \\<in> {t i |i. i < Suc n}\n  test_set {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. t n \\<le> Sup {t i |i. i < Suc n}", "by (simp add: sup_upper)"], ["proof (state)\nthis:\n  t n \\<le> Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "hence \"pSum t n \\<squnion> t n \\<le> Sup {t i |i. i <Suc n}\""], ["proof (prove)\nusing this:\n  t n \\<le> Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. pSum t n \\<squnion> t n \\<le> Sup {t i |i. i < Suc n}", "using Suc 4 6 7"], ["proof (prove)\nusing this:\n  t n \\<le> Sup {t i |i. i < Suc n}\n  pSum t n \\<le> Sup {t i |i. i \\<in> {..<n}}\n  test_set {t i |i. i \\<in> {..<n}}\n  Sup {t i |i. i < Suc n} = - - Sup {t i |i. i < Suc n}\n  Sup {t i |i. i \\<in> {..<n}} \\<le> - - Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. pSum t n \\<squnion> t n \\<le> Sup {t i |i. i < Suc n}", "by (smt assms tests_dual.greatest_lower_bound test_seq_def pSum_test tests_dual.sba_dual.transitive sup_test)"], ["proof (state)\nthis:\n  pSum t n \\<squnion> t n \\<le> Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}} \\<Longrightarrow>\n       pSum t (Suc m) \\<le> Sup {t i |i. i \\<in> {..<Suc m}}", "thus ?case"], ["proof (prove)\nusing this:\n  pSum t n \\<squnion> t n \\<le> Sup {t i |i. i < Suc n}\n\ngoal (1 subgoal):\n 1. pSum t (Suc n) \\<le> Sup {t i |i. i \\<in> {..<Suc n}}", "by simp"], ["proof (state)\nthis:\n  pSum t (Suc n) \\<le> Sup {t i |i. i \\<in> {..<Suc n}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}}\n\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "thus ?thesis"], ["proof (prove)\nusing this:\n  pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}}\n\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "using 1 2"], ["proof (prove)\nusing this:\n  pSum t m \\<le> Sup {t i |i. i \\<in> {..<m}}\n  test_set {t i |i. i \\<in> {..<m}}\n  Sup {t i |i. i \\<in> {..<m}} \\<le> - - pSum t m\n\ngoal (1 subgoal):\n 1. pSum t m = Sup {t i |i. i \\<in> {..<m}}", "by (smt assms tests_dual.antisymmetric sup_test pSum_test)"], ["proof (state)\nthis:\n  pSum t m = Sup {t i |i. i \\<in> {..<m}}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition Prod :: \"(nat \\<Rightarrow> 'a) \\<Rightarrow> 'a\"\n  where \"Prod f \\<equiv> Inf { f n | n::nat . True }\""], ["", "lemma Sum_range:\n  \"Sum f = Sup (range f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complete_tests_class.Sum f = Sup (range f)", "by (simp add: Sum_def image_def)"], ["", "lemma Prod_range:\n  \"Prod f = Inf (range f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complete_tests_class.Prod f = Inf (range f)", "by (simp add: Prod_def image_def)"], ["", "end"], ["", "end"]]}