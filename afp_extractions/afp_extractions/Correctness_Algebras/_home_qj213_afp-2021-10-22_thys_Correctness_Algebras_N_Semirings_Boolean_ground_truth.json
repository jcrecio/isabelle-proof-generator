{"file_name": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras/N_Semirings_Boolean.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras", "problem_names": ["lemma n_an_def:\n  \"n(x) = an(an(x) * L)\"", "lemma an_complement_bot:\n  \"an(x) * n(x) = bot\"", "lemma an_n_def:\n  \"an(x) = n(an(x) * L)\"", "lemma an_case_split_left:\n  \"an(z) * x \\<le> y \\<and> n(z) * x \\<le> y \\<longleftrightarrow> x \\<le> y\"", "lemma an_case_split_right:\n  \"x * an(z) \\<le> y \\<and> x * n(z) \\<le> y \\<longleftrightarrow> x \\<le> y\"", "lemma split_sub:\n  \"x * y \\<le> z \\<squnion> x * top\"", "lemma n_complement_bot:\n  \"n(x) * an(x) = bot\"", "lemma an_bot:\n  \"an(bot) = 1\"", "lemma an_one:\n  \"an(1) = 1\"", "lemma an_L:\n  \"an(L) = bot\"", "lemma an_top:\n  \"an(top) = bot\"", "lemma an_export_n:\n  \"an(n(x) * y) = an(x) \\<squnion> an(y)\"", "lemma n_export_an:\n  \"n(an(x) * y) = an(x) * n(y)\"", "lemma n_an_mult_commutative:\n  \"n(x) * an(y) = an(y) * n(x)\"", "lemma an_mult_commutative:\n  \"an(x) * an(y) = an(y) * an(x)\"", "lemma an_mult_idempotent:\n  \"an(x) * an(x) = an(x)\"", "lemma an_sub_one:\n  \"an(x) \\<le> 1\"", "lemma an_antitone:\n  \"x \\<le> y \\<Longrightarrow> an(y) \\<le> an(x)\"", "lemma an_mult_left_upper_bound:\n  \"an(x * y) \\<le> an(x)\"", "lemma an_mult_right_zero:\n  \"an(x) * bot = bot\"", "lemma n_mult_an:\n  \"n(x * an(y)) = n(x)\"", "lemma an_mult_n:\n  \"an(x * n(y)) = an(x)\"", "lemma an_mult_an:\n  \"an(x * an(y)) = an(x)\"", "lemma an_mult_left_absorb_sup:\n  \"an(x) * (an(x) \\<squnion> an(y)) = an(x)\"", "lemma an_mult_right_absorb_sup:\n  \"(an(x) \\<squnion> an(y)) * an(y) = an(y)\"", "lemma an_sup_left_absorb_mult:\n  \"an(x) \\<squnion> an(x) * an(y) = an(x)\"", "lemma an_sup_right_absorb_mult:\n  \"an(x) * an(y) \\<squnion> an(y) = an(y)\"", "lemma an_sup_left_dist_mult:\n  \"an(x) \\<squnion> an(y) * an(z) = (an(x) \\<squnion> an(y)) * (an(x) \\<squnion> an(z))\"", "lemma an_sup_right_dist_mult:\n  \"an(x) * an(y) \\<squnion> an(z) = (an(x) \\<squnion> an(z)) * (an(y) \\<squnion> an(z))\"", "lemma an_n_order:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> n(y) \\<le> n(x)\"", "lemma an_order:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> an(x) * an(y) = an(x)\"", "lemma an_mult_left_lower_bound:\n  \"an(x) * an(y) \\<le> an(x)\"", "lemma an_mult_right_lower_bound:\n  \"an(x) * an(y) \\<le> an(y)\"", "lemma an_n_mult_left_lower_bound:\n  \"an(x) * n(y) \\<le> an(x)\"", "lemma an_n_mult_right_lower_bound:\n  \"an(x) * n(y) \\<le> n(y)\"", "lemma n_an_mult_left_lower_bound:\n  \"n(x) * an(y) \\<le> n(x)\"", "lemma n_an_mult_right_lower_bound:\n  \"n(x) * an(y) \\<le> an(y)\"", "lemma an_mult_least_upper_bound:\n  \"an(x) \\<le> an(y) \\<and> an(x) \\<le> an(z) \\<longleftrightarrow> an(x) \\<le> an(y) * an(z)\"", "lemma an_mult_left_divisibility:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> (\\<exists>z . an(x) = an(y) * an(z))\"", "lemma an_mult_right_divisibility:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> (\\<exists>z . an(x) = an(z) * an(y))\"", "lemma an_split_top:\n  \"an(x * L) * x * top \\<le> x * bot\"", "lemma an_n_L:\n  \"an(n(x) * L) = an(x)\"", "lemma an_galois:\n  \"an(y) \\<le> an(x) \\<longleftrightarrow> n(x) * L \\<le> y\"", "lemma an_mult:\n  \"an(x * n(y) * L) = an(x * y)\"", "lemma n_mult_top:\n  \"an(x * n(y) * top) = an(x * y)\"", "lemma an_n_equal:\n  \"an(x) = an(y) \\<longleftrightarrow> n(x) = n(y)\"", "lemma an_top_L:\n  \"an(x * top) = an(x * L)\"", "lemma an_case_split_left_equal:\n  \"an(z) * x = an(z) * y \\<Longrightarrow> n(z) * x = n(z) * y \\<Longrightarrow> x = y\"", "lemma an_case_split_right_equal:\n  \"x * an(z) = y * an(z) \\<Longrightarrow> x * n(z) = y * n(z) \\<Longrightarrow> x = y\"", "lemma an_equal_complement:\n  \"n(x) \\<squnion> an(y) = 1 \\<and> n(x) * an(y) = bot \\<longleftrightarrow> an(x) = an(y)\"", "lemma n_equal_complement:\n  \"n(x) \\<squnion> an(y) = 1 \\<and> n(x) * an(y) = bot \\<longleftrightarrow> n(x) = n(y)\"", "lemma an_shunting:\n  \"an(z) * x \\<le> y \\<longleftrightarrow> x \\<le> y \\<squnion> n(z) * top\"", "lemma an_shunting_an:\n  \"an(z) * an(x) \\<le> an(y) \\<longleftrightarrow> an(x) \\<le> n(z) \\<squnion> an(y)\"", "lemma an_L_zero:\n  \"an(x * L) * x = an(x * L) * x * bot\"", "lemma n_plus_complement_intro_n:\n  \"n(x) \\<squnion> an(x) * n(y) = n(x) \\<squnion> n(y)\"", "lemma n_plus_complement_intro_an:\n  \"n(x) \\<squnion> an(x) * an(y) = n(x) \\<squnion> an(y)\"", "lemma an_plus_complement_intro_n:\n  \"an(x) \\<squnion> n(x) * n(y) = an(x) \\<squnion> n(y)\"", "lemma an_plus_complement_intro_an:\n  \"an(x) \\<squnion> n(x) * an(y) = an(x) \\<squnion> an(y)\"", "lemma n_mult_complement_intro_n:\n  \"n(x) * (an(x) \\<squnion> n(y)) = n(x) * n(y)\"", "lemma n_mult_complement_intro_an:\n  \"n(x) * (an(x) \\<squnion> an(y)) = n(x) * an(y)\"", "lemma an_mult_complement_intro_n:\n  \"an(x) * (n(x) \\<squnion> n(y)) = an(x) * n(y)\"", "lemma an_mult_complement_intro_an:\n  \"an(x) * (n(x) \\<squnion> an(y)) = an(x) * an(y)\"", "lemma an_preserves_equation:\n  \"an(y) * x \\<le> x * an(y) \\<longleftrightarrow> an(y) * x = an(y) * x * an(y)\"", "lemma wnf_lemma_1:\n  \"(n(p * L) * n(q * L) \\<squnion> an(p * L) * an(r * L)) * n(p * L) = n(p * L) * n(q * L)\"", "lemma wnf_lemma_2:\n  \"(n(p * L) * n(q * L) \\<squnion> an(r * L) * an(q * L)) * n(q * L) = n(p * L) * n(q * L)\"", "lemma wnf_lemma_3:\n  \"(n(p * L) * n(r * L) \\<squnion> an(p * L) * an(q * L)) * an(p * L) = an(p * L) * an(q * L)\"", "lemma wnf_lemma_4:\n  \"(n(r * L) * n(q * L) \\<squnion> an(p * L) * an(q * L)) * an(q * L) = an(p * L) * an(q * L)\"", "lemma wnf_lemma_5:\n  \"n(p \\<squnion> q) * (n(q) * x \\<squnion> an(q) * y) = n(q) * x \\<squnion> an(q) * n(p) * y\"", "lemma ani_bot:\n  \"ani(bot) = L\"", "lemma ani_one:\n  \"ani(1) = L\"", "lemma ani_L:\n  \"ani(L) = bot\"", "lemma ani_top:\n  \"ani(top) = bot\"", "lemma ani_complement:\n  \"ani(x) \\<squnion> ni(x) = L\"", "lemma ani_mult_zero:\n  \"ani(x) = ani(x * bot)\"", "lemma ani_antitone:\n  \"y \\<le> x \\<Longrightarrow> ani(x) \\<le> ani(y)\"", "lemma ani_mult_left_upper_bound:\n  \"ani(x * y) \\<le> ani(x)\"", "lemma ani_involutive:\n  \"ani(ani(x)) = ni(x)\"", "lemma ani_below_L:\n  \"ani(x) \\<le> L\"", "lemma ani_left_zero:\n  \"ani(x) * y = ani(x)\"", "lemma ani_top_L:\n  \"ani(x * top) = ani(x * L)\"", "lemma ani_ni_order:\n  \"ani(x) \\<le> ani(y) \\<longleftrightarrow> ni(y) \\<le> ni(x)\"", "lemma ani_ni_equal:\n  \"ani(x) = ani(y) \\<longleftrightarrow> ni(x) = ni(y)\"", "lemma ni_ani:\n  \"ni(ani(x)) = ani(x)\"", "lemma ani_ni:\n  \"ani(ni(x)) = ani(x)\"", "lemma ani_mult:\n  \"ani(x * ni(y)) = ani(x * y)\"", "lemma ani_an_order:\n  \"ani(x) \\<le> ani(y) \\<longleftrightarrow> an(x) \\<le> an(y)\"", "lemma ani_an_equal:\n  \"ani(x) = ani(y) \\<longleftrightarrow> an(x) = an(y)\"", "lemma n_mult_ani:\n  \"n(x) * ani(x) = bot\"", "lemma an_mult_ni:\n  \"an(x) * ni(x) = bot\"", "lemma n_mult_ni:\n  \"n(x) * ni(x) = ni(x)\"", "lemma an_mult_ani:\n  \"an(x) * ani(x) = ani(x)\"", "lemma ani_ni_meet:\n  \"x \\<le> ani(y) \\<Longrightarrow> x \\<le> ni(y) \\<Longrightarrow> x = bot\"", "lemma ani_galois:\n  \"ani(x) \\<le> y \\<longleftrightarrow> ni(x \\<squnion> y) = L\"", "lemma an_ani:\n  \"an(ani(x)) = n(x)\"", "lemma n_ani:\n  \"n(ani(x)) = an(x)\"", "lemma an_ni:\n  \"an(ni(x)) = an(x)\"", "lemma ani_an:\n  \"ani(an(x)) = L\"", "lemma ani_n:\n  \"ani(n(x)) = L\"", "lemma ni_an:\n  \"ni(an(x)) = bot\"", "lemma ani_mult_n:\n  \"ani(x * n(y)) = ani(x)\"", "lemma ani_mult_an:\n  \"ani(x * an(y)) = ani(x)\"", "lemma ani_export_n:\n  \"ani(n(x) * y) = ani(x) \\<squnion> ani(y)\"", "lemma ani_export_an:\n  \"ani(an(x) * y) = ni(x) \\<squnion> ani(y)\"", "lemma ni_export_an:\n  \"ni(an(x) * y) = an(x) * ni(y)\"", "lemma ani_mult_top:\n  \"ani(x * n(y) * top) = ani(x * y)\"", "lemma ani_an_bot:\n  \"ani(x) = bot \\<longleftrightarrow> an(x) = bot\"", "lemma ani_an_L:\n  \"ani(x) = L \\<longleftrightarrow> an(x) = 1\"", "lemma an_circ_left_unfold:\n  \"an(x\\<^sup>\\<circ>) = an(x * x\\<^sup>\\<circ>)\"", "lemma an_circ_x_n_circ:\n  \"an(x\\<^sup>\\<circ>) * x * n(x\\<^sup>\\<circ>) \\<le> x * bot\"", "lemma an_circ_invariant:\n  \"an(x\\<^sup>\\<circ>) * x \\<le> x * an(x\\<^sup>\\<circ>)\"", "lemma ani_circ:\n  \"ani(x)\\<^sup>\\<circ> = 1 \\<squnion> ani(x)\"", "lemma ani_circ_left_unfold:\n  \"ani(x\\<^sup>\\<circ>) = ani(x * x\\<^sup>\\<circ>)\"", "lemma an_circ_import:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<circ> = an(y) * (an(y) * x)\\<^sup>\\<circ>\"", "lemma preserves_L:\n  \"preserves L (-p)\"", "lemma an_split_omega_omega:\n  \"an(x\\<^sup>\\<omega>) * x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> * bot\"", "lemma an_omega_below_an_star:\n  \"an(x\\<^sup>\\<omega>) \\<le> an(x\\<^sup>\\<star>)\"", "lemma an_omega_below_an:\n  \"an(x\\<^sup>\\<omega>) \\<le> an(x)\"", "lemma an_omega_induct:\n  \"an(x * y \\<squnion> z) \\<le> an(y) \\<Longrightarrow> an(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z) \\<le> an(y)\"", "lemma an_star_mult:\n  \"an(y) \\<le> an(x * y) \\<Longrightarrow> an(x\\<^sup>\\<star> * y) = an(x\\<^sup>\\<star>) * an(y)\"", "lemma an_omega_mult:\n  \"an(x\\<^sup>\\<omega> * y) = an(x\\<^sup>\\<omega>)\"", "lemma an_star_left_unfold:\n  \"an(x\\<^sup>\\<star>) = an(x * x\\<^sup>\\<star>)\"", "lemma an_star_x_n_star:\n  \"an(x\\<^sup>\\<star>) * x * n(x\\<^sup>\\<star>) \\<le> x * bot\"", "lemma an_star_invariant:\n  \"an(x\\<^sup>\\<star>) * x \\<le> x * an(x\\<^sup>\\<star>)\"", "lemma n_an_star_unfold_invariant:\n  \"n(an(x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an(x) * n(x * an(x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\"", "lemma ani_omega_below_ani_star:\n  \"ani(x\\<^sup>\\<omega>) \\<le> ani(x\\<^sup>\\<star>)\"", "lemma ani_omega_below_ani:\n  \"ani(x\\<^sup>\\<omega>) \\<le> ani(x)\"", "lemma ani_star:\n  \"ani(x)\\<^sup>\\<star> = 1 \\<squnion> ani(x)\"", "lemma ani_omega:\n  \"ani(x)\\<^sup>\\<omega> = ani(x) * L\"", "lemma ani_omega_induct:\n  \"ani(x * y \\<squnion> z) \\<le> ani(y) \\<Longrightarrow> ani(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z) \\<le> ani(y)\"", "lemma ani_omega_mult:\n  \"ani(x\\<^sup>\\<omega> * y) = ani(x\\<^sup>\\<omega>)\"", "lemma ani_star_left_unfold:\n  \"ani(x\\<^sup>\\<star>) = ani(x * x\\<^sup>\\<star>)\"", "lemma an_star_import:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<star> = an(y) * (an(y) * x)\\<^sup>\\<star>\"", "lemma an_omega_export:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<omega> = (an(y) * x)\\<^sup>\\<omega>\"", "lemma an_omega_import:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<omega> = an(y) * (an(y) * x)\\<^sup>\\<omega>\"", "lemma preserves_star:\n  \"nL_omega.preserves x (-p) \\<Longrightarrow> nL_omega.preserves (x\\<^sup>\\<star>) (-p)\""], "translations": [["", "lemma n_an_def:\n  \"n(x) = an(an(x) * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x = an (an x * L)", "by (metis an_dist_sup an_export an_split bot_least mult_right_isotone semiring.add_nonneg_eq_0_iff sup.orderE top_greatest vector_bot_closed)"], ["", "text \\<open>Theorem 21\\<close>"], ["", "lemma an_complement_bot:\n  \"an(x) * n(x) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * n x = bot", "by (metis an_dist_sup an_split bot_least le_iff_sup mult_left_zero sup_commute n_an_def)"], ["", "text \\<open>Theorem 21\\<close>"], ["", "lemma an_n_def:\n  \"an(x) = n(an(x) * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x = n (an x * L)", "by (smt (verit, ccfv_threshold) an_complement_bot an_complement mult.right_neutral mult_left_dist_sup mult_right_dist_sup sup_commute n_an_def)"], ["", "lemma an_case_split_left:\n  \"an(z) * x \\<le> y \\<and> n(z) * x \\<le> y \\<longleftrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an z * x \\<le> y \\<and> n z * x \\<le> y) = (x \\<le> y)", "by (metis le_sup_iff an_complement mult_left_one mult_right_dist_sup)"], ["", "lemma an_case_split_right:\n  \"x * an(z) \\<le> y \\<and> x * n(z) \\<le> y \\<longleftrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * an z \\<le> y \\<and> x * n z \\<le> y) = (x \\<le> y)", "by (metis le_sup_iff an_complement mult_1_right mult_left_dist_sup)"], ["", "lemma split_sub:\n  \"x * y \\<le> z \\<squnion> x * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<le> z \\<squnion> x * top", "by (simp add: le_supI2 mult_right_isotone)"], ["", "text \\<open>Theorem 21\\<close>"], ["", "subclass n_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.n_semiring n L top (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (7 subgoals):\n 1. n bot = bot\n 2. n top = (1::'a)\n 3. \\<And>x y. n (x \\<squnion> y) = n x \\<squnion> n y\n 4. \\<And>x y. n (n x * y) = n x * n y\n 5. \\<And>x. n x = n (x * bot) * n x\n 6. \\<And>x y. x * n y * L = x * bot \\<squnion> n (x * y) * L\n 7. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "apply (metis an_dist_sup an_split mult_left_zero sup.absorb2 sup_bot_left sup_commute n_an_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. n top = (1::'a)\n 2. \\<And>x y. n (x \\<squnion> y) = n x \\<squnion> n y\n 3. \\<And>x y. n (n x * y) = n x * n y\n 4. \\<And>x. n x = n (x * bot) * n x\n 5. \\<And>x y. x * n y * L = x * bot \\<squnion> n (x * y) * L\n 6. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "apply (metis sup_left_top an_complement an_dist_sup an_export mult_assoc n_an_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y. n (x \\<squnion> y) = n x \\<squnion> n y\n 2. \\<And>x y. n (n x * y) = n x * n y\n 3. \\<And>x. n x = n (x * bot) * n x\n 4. \\<And>x y. x * n y * L = x * bot \\<squnion> n (x * y) * L\n 5. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "apply (metis an_dist_sup an_export mult_assoc n_an_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y. n (n x * y) = n x * n y\n 2. \\<And>x. n x = n (x * bot) * n x\n 3. \\<And>x y. x * n y * L = x * bot \\<squnion> n (x * y) * L\n 4. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "apply (metis an_dist_sup an_export an_n_def mult_right_dist_sup n_an_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. n x = n (x * bot) * n x\n 2. \\<And>x y. x * n y * L = x * bot \\<squnion> n (x * y) * L\n 3. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "apply (metis sup_idem an_dist_sup an_mult_zero n_an_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y. x * n y * L = x * bot \\<squnion> n (x * y) * L\n 2. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "apply (simp add: an_L_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> x * bot \\<squnion> n (x * L) * top", "by (meson an_case_split_left an_split le_supI1 split_sub)"], ["", "lemma n_complement_bot:\n  \"n(x) * an(x) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * an x = bot", "by (metis an_complement_bot an_n_def n_an_def)"], ["", "lemma an_bot:\n  \"an(bot) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an bot = (1::'a)", "by (metis sup_bot_right an_complement n_bot)"], ["", "lemma an_one:\n  \"an(1) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (1::'a) = (1::'a)", "by (metis sup_bot_right an_complement n_one)"], ["", "lemma an_L:\n  \"an(L) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an L = bot", "using an_one n_one n_an_def"], ["proof (prove)\nusing this:\n  an (1::'a) = (1::'a)\n  n (1::'a) = bot\n  n ?x = an (an ?x * L)\n\ngoal (1 subgoal):\n 1. an L = bot", "by auto"], ["", "lemma an_top:\n  \"an(top) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an top = bot", "by (metis mult_left_one n_complement_bot n_top)"], ["", "lemma an_export_n:\n  \"an(n(x) * y) = an(x) \\<squnion> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (n x * y) = an x \\<squnion> an y", "by (metis an_export an_n_def n_an_def)"], ["", "lemma n_export_an:\n  \"n(an(x) * y) = an(x) * n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (an x * y) = an x * n y", "by (metis an_n_def n_export)"], ["", "lemma n_an_mult_commutative:\n  \"n(x) * an(y) = an(y) * n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * an y = an y * n x", "by (metis sup_commute an_dist_sup n_an_def)"], ["", "lemma an_mult_commutative:\n  \"an(x) * an(y) = an(y) * an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * an y = an y * an x", "by (metis sup_commute an_dist_sup)"], ["", "lemma an_mult_idempotent:\n  \"an(x) * an(x) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. idempotent (an x)", "by (metis sup_idem an_dist_sup)"], ["", "lemma an_sub_one:\n  \"an(x) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coreflexive (an x)", "using an_complement sup.cobounded1"], ["proof (prove)\nusing this:\n  an ?x \\<squnion> n ?x = (1::'a)\n  ?a \\<le> ?a \\<squnion> ?b\n\ngoal (1 subgoal):\n 1. coreflexive (an x)", "by fastforce"], ["", "text \\<open>Theorem 21\\<close>"], ["", "lemma an_antitone:\n  \"x \\<le> y \\<Longrightarrow> an(y) \\<le> an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> an y \\<le> an x", "by (metis an_n_def an_dist_sup n_order sup.absorb1)"], ["", "lemma an_mult_left_upper_bound:\n  \"an(x * y) \\<le> an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * y) \\<le> an x", "by (metis an_antitone an_mult_zero mult_right_isotone bot_least)"], ["", "lemma an_mult_right_zero:\n  \"an(x) * bot = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * bot = bot", "by (metis an_n_def n_mult_right_bot)"], ["", "lemma n_mult_an:\n  \"n(x * an(y)) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (x * an y) = n x", "by (metis an_n_def n_mult_n)"], ["", "lemma an_mult_n:\n  \"an(x * n(y)) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * n y) = an x", "by (metis an_n_def n_an_def n_mult_n)"], ["", "lemma an_mult_an:\n  \"an(x * an(y)) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * an y) = an x", "by (metis an_mult_n an_n_def)"], ["", "lemma an_mult_left_absorb_sup:\n  \"an(x) * (an(x) \\<squnion> an(y)) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * (an x \\<squnion> an y) = an x", "by (metis an_n_def n_mult_left_absorb_sup)"], ["", "lemma an_mult_right_absorb_sup:\n  \"(an(x) \\<squnion> an(y)) * an(y) = an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x \\<squnion> an y) * an y = an y", "by (metis an_n_def n_mult_right_absorb_sup)"], ["", "lemma an_sup_left_absorb_mult:\n  \"an(x) \\<squnion> an(x) * an(y) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x \\<squnion> an x * an y = an x", "using an_case_split_right sup_absorb1"], ["proof (prove)\nusing this:\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n  ?y \\<le> ?x \\<Longrightarrow> ?x \\<squnion> ?y = ?x\n\ngoal (1 subgoal):\n 1. an x \\<squnion> an x * an y = an x", "by blast"], ["", "lemma an_sup_right_absorb_mult:\n  \"an(x) * an(y) \\<squnion> an(y) = an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * an y \\<squnion> an y = an y", "using an_case_split_left sup_absorb2"], ["proof (prove)\nusing this:\n  (an ?z * ?x \\<le> ?y \\<and> n ?z * ?x \\<le> ?y) = (?x \\<le> ?y)\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?y = ?y\n\ngoal (1 subgoal):\n 1. an x * an y \\<squnion> an y = an y", "by blast"], ["", "lemma an_sup_left_dist_mult:\n  \"an(x) \\<squnion> an(y) * an(z) = (an(x) \\<squnion> an(y)) * (an(x) \\<squnion> an(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x \\<squnion> an y * an z =\n    (an x \\<squnion> an y) * (an x \\<squnion> an z)", "by (metis an_n_def n_sup_left_dist_mult)"], ["", "lemma an_sup_right_dist_mult:\n  \"an(x) * an(y) \\<squnion> an(z) = (an(x) \\<squnion> an(z)) * (an(y) \\<squnion> an(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * an y \\<squnion> an z =\n    (an x \\<squnion> an z) * (an y \\<squnion> an z)", "by (simp add: an_sup_left_dist_mult sup_commute)"], ["", "lemma an_n_order:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> n(y) \\<le> n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x \\<le> an y) = (n y \\<le> n x)", "by (smt (verit) an_n_def an_dist_sup le_iff_sup n_dist_sup n_mult_right_absorb_sup sup.orderE n_an_def)"], ["", "lemma an_order:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> an(x) * an(y) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x \\<le> an y) = (an x * an y = an x)", "by (metis an_n_def n_order)"], ["", "lemma an_mult_left_lower_bound:\n  \"an(x) * an(y) \\<le> an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * an y \\<le> an x", "using an_case_split_right"], ["proof (prove)\nusing this:\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. an x * an y \\<le> an x", "by blast"], ["", "lemma an_mult_right_lower_bound:\n  \"an(x) * an(y) \\<le> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * an y \\<le> an y", "by (simp add: an_sup_right_absorb_mult le_iff_sup)"], ["", "lemma an_n_mult_left_lower_bound:\n  \"an(x) * n(y) \\<le> an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * n y \\<le> an x", "using an_case_split_right"], ["proof (prove)\nusing this:\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. an x * n y \\<le> an x", "by blast"], ["", "lemma an_n_mult_right_lower_bound:\n  \"an(x) * n(y) \\<le> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * n y \\<le> n y", "using an_case_split_left"], ["proof (prove)\nusing this:\n  (an ?z * ?x \\<le> ?y \\<and> n ?z * ?x \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. an x * n y \\<le> n y", "by auto"], ["", "lemma n_an_mult_left_lower_bound:\n  \"n(x) * an(y) \\<le> n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * an y \\<le> n x", "using an_case_split_right"], ["proof (prove)\nusing this:\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. n x * an y \\<le> n x", "by auto"], ["", "lemma n_an_mult_right_lower_bound:\n  \"n(x) * an(y) \\<le> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * an y \\<le> an y", "using an_case_split_left"], ["proof (prove)\nusing this:\n  (an ?z * ?x \\<le> ?y \\<and> n ?z * ?x \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. n x * an y \\<le> an y", "by blast"], ["", "lemma an_mult_least_upper_bound:\n  \"an(x) \\<le> an(y) \\<and> an(x) \\<le> an(z) \\<longleftrightarrow> an(x) \\<le> an(y) * an(z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x \\<le> an y \\<and> an x \\<le> an z) = (an x \\<le> an y * an z)", "by (metis an_mult_idempotent an_mult_left_lower_bound an_mult_right_lower_bound order.trans mult_isotone)"], ["", "lemma an_mult_left_divisibility:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> (\\<exists>z . an(x) = an(y) * an(z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x \\<le> an y) = (\\<exists>z. an x = an y * an z)", "by (metis an_mult_commutative an_mult_left_lower_bound an_order)"], ["", "lemma an_mult_right_divisibility:\n  \"an(x) \\<le> an(y) \\<longleftrightarrow> (\\<exists>z . an(x) = an(z) * an(y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x \\<le> an y) = (\\<exists>z. an x = an z * an y)", "by (simp add: an_mult_commutative an_mult_left_divisibility)"], ["", "lemma an_split_top:\n  \"an(x * L) * x * top \\<le> x * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * L) * x * top \\<le> x * bot", "by (metis an_split mult_assoc mult_left_isotone mult_left_zero)"], ["", "lemma an_n_L:\n  \"an(n(x) * L) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (n x * L) = an x", "using an_n_def n_an_def"], ["proof (prove)\nusing this:\n  an ?x = n (an ?x * L)\n  n ?x = an (an ?x * L)\n\ngoal (1 subgoal):\n 1. an (n x * L) = an x", "by auto"], ["", "lemma an_galois:\n  \"an(y) \\<le> an(x) \\<longleftrightarrow> n(x) * L \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an y \\<le> an x) = (n x * L \\<le> y)", "by (simp add: an_n_order n_galois)"], ["", "lemma an_mult:\n  \"an(x * n(y) * L) = an(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * n y * L) = an (x * y)", "by (metis an_n_L n_mult)"], ["", "lemma n_mult_top:\n  \"an(x * n(y) * top) = an(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * n y * top) = an (x * y)", "by (metis an_n_L n_mult_top)"], ["", "lemma an_n_equal:\n  \"an(x) = an(y) \\<longleftrightarrow> n(x) = n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an x = an y) = (n x = n y)", "by (metis an_n_L n_an_def)"], ["", "lemma an_top_L:\n  \"an(x * top) = an(x * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * top) = an (x * L)", "by (simp add: an_n_equal n_top_L)"], ["", "lemma an_case_split_left_equal:\n  \"an(z) * x = an(z) * y \\<Longrightarrow> n(z) * x = n(z) * y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>an z * x = an z * y; n z * x = n z * y\\<rbrakk>\n    \\<Longrightarrow> x = y", "using an_complement case_split_left_equal"], ["proof (prove)\nusing this:\n  an ?x \\<squnion> n ?x = (1::'a)\n  \\<lbrakk>?w \\<squnion> ?z = (1::'a); ?w * ?x = ?w * ?y;\n   ?z * ?x = ?z * ?y\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>an z * x = an z * y; n z * x = n z * y\\<rbrakk>\n    \\<Longrightarrow> x = y", "by blast"], ["", "lemma an_case_split_right_equal:\n  \"x * an(z) = y * an(z) \\<Longrightarrow> x * n(z) = y * n(z) \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x * an z = y * an z; x * n z = y * n z\\<rbrakk>\n    \\<Longrightarrow> x = y", "using an_complement case_split_right_equal"], ["proof (prove)\nusing this:\n  an ?x \\<squnion> n ?x = (1::'a)\n  \\<lbrakk>?w \\<squnion> ?z = (1::'a); ?x * ?w = ?y * ?w;\n   ?x * ?z = ?y * ?z\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x * an z = y * an z; x * n z = y * n z\\<rbrakk>\n    \\<Longrightarrow> x = y", "by blast"], ["", "lemma an_equal_complement:\n  \"n(x) \\<squnion> an(y) = 1 \\<and> n(x) * an(y) = bot \\<longleftrightarrow> an(x) = an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<squnion> an y = (1::'a) \\<and> n x * an y = bot) = (an x = an y)", "by (metis sup_commute an_complement an_dist_sup mult_left_one mult_right_dist_sup n_complement_bot)"], ["", "lemma n_equal_complement:\n  \"n(x) \\<squnion> an(y) = 1 \\<and> n(x) * an(y) = bot \\<longleftrightarrow> n(x) = n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n x \\<squnion> an y = (1::'a) \\<and> n x * an y = bot) = (n x = n y)", "by (simp add: an_equal_complement an_n_equal)"], ["", "lemma an_shunting:\n  \"an(z) * x \\<le> y \\<longleftrightarrow> x \\<le> y \\<squnion> n(z) * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an z * x \\<le> y) = (x \\<le> y \\<squnion> n z * top)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. an z * x \\<le> y \\<Longrightarrow> x \\<le> y \\<squnion> n z * top\n 2. x \\<le> y \\<squnion> n z * top \\<Longrightarrow> an z * x \\<le> y", "apply (meson an_case_split_left le_supI1 split_sub)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<squnion> n z * top \\<Longrightarrow> an z * x \\<le> y", "by (metis sup_bot_right an_case_split_left an_complement_bot mult_assoc mult_left_dist_sup mult_left_zero mult_right_isotone order_refl order_trans)"], ["", "lemma an_shunting_an:\n  \"an(z) * an(x) \\<le> an(y) \\<longleftrightarrow> an(x) \\<le> n(z) \\<squnion> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an z * an x \\<le> an y) = (an x \\<le> n z \\<squnion> an y)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. an z * an x \\<le> an y \\<Longrightarrow> an x \\<le> n z \\<squnion> an y\n 2. an x \\<le> n z \\<squnion> an y \\<Longrightarrow> an z * an x \\<le> an y", "apply (smt sup_ge1 sup_ge2 an_case_split_left n_an_mult_left_lower_bound order_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. an x \\<le> n z \\<squnion> an y \\<Longrightarrow> an z * an x \\<le> an y", "by (metis sup_bot_left sup_ge2 an_case_split_left an_complement_bot mult_left_dist_sup mult_right_isotone order_trans)"], ["", "lemma an_L_zero:\n  \"an(x * L) * x = an(x * L) * x * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * L) * x = an (x * L) * x * bot", "by (metis an_complement_bot n_split_equal sup_monoid.add_0_right vector_bot_closed mult_assoc n_export_an)"], ["", "lemma n_plus_complement_intro_n:\n  \"n(x) \\<squnion> an(x) * n(y) = n(x) \\<squnion> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<squnion> an x * n y = n x \\<squnion> n y", "by (metis sup_commute an_complement an_n_def mult_1_right n_sup_right_dist_mult n_an_mult_commutative)"], ["", "lemma n_plus_complement_intro_an:\n  \"n(x) \\<squnion> an(x) * an(y) = n(x) \\<squnion> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x \\<squnion> an x * an y = n x \\<squnion> an y", "by (metis an_n_def n_plus_complement_intro_n)"], ["", "lemma an_plus_complement_intro_n:\n  \"an(x) \\<squnion> n(x) * n(y) = an(x) \\<squnion> n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x \\<squnion> n x * n y = an x \\<squnion> n y", "by (metis an_n_def n_an_def n_plus_complement_intro_n)"], ["", "lemma an_plus_complement_intro_an:\n  \"an(x) \\<squnion> n(x) * an(y) = an(x) \\<squnion> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x \\<squnion> n x * an y = an x \\<squnion> an y", "by (metis an_n_def an_plus_complement_intro_n)"], ["", "lemma n_mult_complement_intro_n:\n  \"n(x) * (an(x) \\<squnion> n(y)) = n(x) * n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * (an x \\<squnion> n y) = n x * n y", "by (simp add: mult_left_dist_sup n_complement_bot)"], ["", "lemma n_mult_complement_intro_an:\n  \"n(x) * (an(x) \\<squnion> an(y)) = n(x) * an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * (an x \\<squnion> an y) = n x * an y", "by (simp add: semiring.distrib_left n_complement_bot)"], ["", "lemma an_mult_complement_intro_n:\n  \"an(x) * (n(x) \\<squnion> n(y)) = an(x) * n(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * (n x \\<squnion> n y) = an x * n y", "by (simp add: an_complement_bot mult_left_dist_sup)"], ["", "lemma an_mult_complement_intro_an:\n  \"an(x) * (n(x) \\<squnion> an(y)) = an(x) * an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * (n x \\<squnion> an y) = an x * an y", "by (simp add: an_complement_bot semiring.distrib_left)"], ["", "lemma an_preserves_equation:\n  \"an(y) * x \\<le> x * an(y) \\<longleftrightarrow> an(y) * x = an(y) * x * an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (an y * x \\<le> x * an y) = (an y * x = an y * x * an y)", "by (metis an_n_def n_preserves_equation)"], ["", "lemma wnf_lemma_1:\n  \"(n(p * L) * n(q * L) \\<squnion> an(p * L) * an(r * L)) * n(p * L) = n(p * L) * n(q * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n (p * L) * n (q * L) \\<squnion> an (p * L) * an (r * L)) * n (p * L) =\n    n (p * L) * n (q * L)", "by (smt sup_commute an_n_def n_sup_left_absorb_mult n_sup_right_dist_mult n_export n_mult_commutative n_mult_complement_intro_n)"], ["", "lemma wnf_lemma_2:\n  \"(n(p * L) * n(q * L) \\<squnion> an(r * L) * an(q * L)) * n(q * L) = n(p * L) * n(q * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n (p * L) * n (q * L) \\<squnion> an (r * L) * an (q * L)) * n (q * L) =\n    n (p * L) * n (q * L)", "by (metis an_mult_commutative n_mult_commutative wnf_lemma_1)"], ["", "lemma wnf_lemma_3:\n  \"(n(p * L) * n(r * L) \\<squnion> an(p * L) * an(q * L)) * an(p * L) = an(p * L) * an(q * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n (p * L) * n (r * L) \\<squnion> an (p * L) * an (q * L)) *\n    an (p * L) =\n    an (p * L) * an (q * L)", "by (metis an_n_def sup_commute wnf_lemma_1 n_an_def)"], ["", "lemma wnf_lemma_4:\n  \"(n(r * L) * n(q * L) \\<squnion> an(p * L) * an(q * L)) * an(q * L) = an(p * L) * an(q * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n (r * L) * n (q * L) \\<squnion> an (p * L) * an (q * L)) *\n    an (q * L) =\n    an (p * L) * an (q * L)", "by (metis an_mult_commutative n_mult_commutative wnf_lemma_3)"], ["", "lemma wnf_lemma_5:\n  \"n(p \\<squnion> q) * (n(q) * x \\<squnion> an(q) * y) = n(q) * x \\<squnion> an(q) * n(p) * y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (p \\<squnion> q) * (n q * x \\<squnion> an q * y) =\n    n q * x \\<squnion> an q * n p * y", "by (smt sup_bot_right mult_assoc mult_left_dist_sup n_an_mult_commutative n_complement_bot n_dist_sup n_mult_right_absorb_sup)"], ["", "definition ani :: \"'a \\<Rightarrow> 'a\"\n  where \"ani x \\<equiv> an(x) * L\""], ["", "lemma ani_bot:\n  \"ani(bot) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani bot = L", "using an_bot ani_def"], ["proof (prove)\nusing this:\n  an bot = (1::'a)\n  ani ?x \\<equiv> an ?x * L\n\ngoal (1 subgoal):\n 1. ani bot = L", "by auto"], ["", "lemma ani_one:\n  \"ani(1) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (1::'a) = L", "using an_one ani_def"], ["proof (prove)\nusing this:\n  an (1::'a) = (1::'a)\n  ani ?x \\<equiv> an ?x * L\n\ngoal (1 subgoal):\n 1. ani (1::'a) = L", "by auto"], ["", "lemma ani_L:\n  \"ani(L) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani L = bot", "by (simp add: an_L ani_def)"], ["", "lemma ani_top:\n  \"ani(top) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani top = bot", "by (simp add: an_top ani_def)"], ["", "lemma ani_complement:\n  \"ani(x) \\<squnion> ni(x) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x \\<squnion> ni x = L", "by (metis an_complement ani_def mult_right_dist_sup n_top ni_def ni_top)"], ["", "lemma ani_mult_zero:\n  \"ani(x) = ani(x * bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x = ani (x * bot)", "using ani_def an_mult_zero"], ["proof (prove)\nusing this:\n  ani ?x \\<equiv> an ?x * L\n  an ?x = an (?x * bot)\n\ngoal (1 subgoal):\n 1. ani x = ani (x * bot)", "by auto"], ["", "lemma ani_antitone:\n  \"y \\<le> x \\<Longrightarrow> ani(x) \\<le> ani(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x \\<Longrightarrow> ani x \\<le> ani y", "by (simp add: an_antitone ani_def mult_left_isotone)"], ["", "lemma ani_mult_left_upper_bound:\n  \"ani(x * y) \\<le> ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * y) \\<le> ani x", "by (simp add: an_mult_left_upper_bound ani_def mult_left_isotone)"], ["", "lemma ani_involutive:\n  \"ani(ani(x)) = ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (ani x) = ni x", "by (simp add: ani_def ni_def n_an_def)"], ["", "lemma ani_below_L:\n  \"ani(x) \\<le> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x \\<le> L", "using an_case_split_left ani_def"], ["proof (prove)\nusing this:\n  (an ?z * ?x \\<le> ?y \\<and> n ?z * ?x \\<le> ?y) = (?x \\<le> ?y)\n  ani ?x \\<equiv> an ?x * L\n\ngoal (1 subgoal):\n 1. ani x \\<le> L", "by auto"], ["", "lemma ani_left_zero:\n  \"ani(x) * y = ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x * y = ani x", "by (simp add: ani_def L_left_zero mult_assoc)"], ["", "lemma ani_top_L:\n  \"ani(x * top) = ani(x * L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * top) = ani (x * L)", "by (simp add: an_top_L ani_def)"], ["", "lemma ani_ni_order:\n  \"ani(x) \\<le> ani(y) \\<longleftrightarrow> ni(y) \\<le> ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x \\<le> ani y) = (ni y \\<le> ni x)", "by (metis an_n_L ani_antitone ani_def ani_involutive ni_def)"], ["", "lemma ani_ni_equal:\n  \"ani(x) = ani(y) \\<longleftrightarrow> ni(x) = ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x = ani y) = (ni x = ni y)", "by (metis ani_ni_order order.antisym order_refl)"], ["", "lemma ni_ani:\n  \"ni(ani(x)) = ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (ani x) = ani x", "using an_n_def ani_def ni_def"], ["proof (prove)\nusing this:\n  an ?x = n (an ?x * L)\n  ani ?x \\<equiv> an ?x * L\n  ni ?x = n ?x * L\n\ngoal (1 subgoal):\n 1. ni (ani x) = ani x", "by auto"], ["", "lemma ani_ni:\n  \"ani(ni(x)) = ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (ni x) = ani x", "by (simp add: an_n_L ani_def ni_def)"], ["", "lemma ani_mult:\n  \"ani(x * ni(y)) = ani(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * ni y) = ani (x * y)", "using ani_ni_equal ni_mult"], ["proof (prove)\nusing this:\n  (ani ?x = ani ?y) = (ni ?x = ni ?y)\n  ni (?x * ni ?y) = ni (?x * ?y)\n\ngoal (1 subgoal):\n 1. ani (x * ni y) = ani (x * y)", "by blast"], ["", "lemma ani_an_order:\n  \"ani(x) \\<le> ani(y) \\<longleftrightarrow> an(x) \\<le> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x \\<le> ani y) = (an x \\<le> an y)", "using an_galois ani_ni_order ni_def ni_galois"], ["proof (prove)\nusing this:\n  (an ?y \\<le> an ?x) = (n ?x * L \\<le> ?y)\n  (ani ?x \\<le> ani ?y) = (ni ?y \\<le> ni ?x)\n  ni ?x = n ?x * L\n  (ni ?x \\<le> ni ?y) = (ni ?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. (ani x \\<le> ani y) = (an x \\<le> an y)", "by auto"], ["", "lemma ani_an_equal:\n  \"ani(x) = ani(y) \\<longleftrightarrow> an(x) = an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x = ani y) = (an x = an y)", "by (metis an_n_def ani_def)"], ["", "lemma n_mult_ani:\n  \"n(x) * ani(x) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * ani x = bot", "by (metis an_L ani_L ani_def mult_assoc n_complement_bot)"], ["", "lemma an_mult_ni:\n  \"an(x) * ni(x) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * ni x = bot", "by (metis an_n_def ani_def n_an_def n_mult_ani ni_def)"], ["", "lemma n_mult_ni:\n  \"n(x) * ni(x) = ni(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n x * ni x = ni x", "by (metis n_export n_order ni_def ni_export order_refl)"], ["", "lemma an_mult_ani:\n  \"an(x) * ani(x) = ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an x * ani x = ani x", "by (metis an_n_def ani_def n_mult_ni ni_def)"], ["", "lemma ani_ni_meet:\n  \"x \\<le> ani(y) \\<Longrightarrow> x \\<le> ni(y) \\<Longrightarrow> x = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> ani y; x \\<le> ni y\\<rbrakk> \\<Longrightarrow> x = bot", "by (metis an_case_split_left an_mult_ni bot_unique mult_right_isotone n_mult_ani)"], ["", "lemma ani_galois:\n  \"ani(x) \\<le> y \\<longleftrightarrow> ni(x \\<squnion> y) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x \\<le> y) = (ni (x \\<squnion> y) = L)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ani x \\<le> y \\<Longrightarrow> ni (x \\<squnion> y) = L\n 2. ni (x \\<squnion> y) = L \\<Longrightarrow> ani x \\<le> y", "apply (smt (z3) an_L an_mult_commutative an_mult_right_zero ani_def an_dist_sup ni_L ni_n_equal sup.absorb1 mult_assoc n_an_def n_complement_bot)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (x \\<squnion> y) = L \\<Longrightarrow> ani x \\<le> y", "by (metis an_L an_galois an_mult_ni an_n_def an_shunting_an ani_def an_dist_sup an_export idempotent_bot_closed n_bot transitive_bot_closed)"], ["", "lemma an_ani:\n  \"an(ani(x)) = n(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (ani x) = n x", "by (simp add: ani_def n_an_def)"], ["", "lemma n_ani:\n  \"n(ani(x)) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (ani x) = an x", "using an_n_def ani_def"], ["proof (prove)\nusing this:\n  an ?x = n (an ?x * L)\n  ani ?x \\<equiv> an ?x * L\n\ngoal (1 subgoal):\n 1. n (ani x) = an x", "by auto"], ["", "lemma an_ni:\n  \"an(ni(x)) = an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (ni x) = an x", "by (simp add: an_n_L ni_def)"], ["", "lemma ani_an:\n  \"ani(an(x)) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (an x) = L", "by (metis an_mult_right_zero an_mult_zero an_bot ani_def mult_left_one)"], ["", "lemma ani_n:\n  \"ani(n(x)) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (n x) = L", "by (simp add: ani_an n_an_def)"], ["", "lemma ni_an:\n  \"ni(an(x)) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (an x) = bot", "using an_L ani_an ani_def ni_n_bot n_an_def"], ["proof (prove)\nusing this:\n  an L = bot\n  ani (an ?x) = L\n  ani ?x \\<equiv> an ?x * L\n  (ni ?x = bot) = (n ?x = bot)\n  n ?x = an (an ?x * L)\n\ngoal (1 subgoal):\n 1. ni (an x) = bot", "by force"], ["", "lemma ani_mult_n:\n  \"ani(x * n(y)) = ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * n y) = ani x", "by (simp add: an_mult_n ani_def)"], ["", "lemma ani_mult_an:\n  \"ani(x * an(y)) = ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * an y) = ani x", "by (simp add: an_mult_an ani_def)"], ["", "lemma ani_export_n:\n  \"ani(n(x) * y) = ani(x) \\<squnion> ani(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (n x * y) = ani x \\<squnion> ani y", "by (simp add: an_export_n ani_def mult_right_dist_sup)"], ["", "lemma ani_export_an:\n  \"ani(an(x) * y) = ni(x) \\<squnion> ani(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (an x * y) = ni x \\<squnion> ani y", "by (simp add: ani_def an_export ni_def semiring.distrib_right)"], ["", "lemma ni_export_an:\n  \"ni(an(x) * y) = an(x) * ni(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ni (an x * y) = an x * ni y", "by (simp add: an_mult_right_zero ni_split)"], ["", "lemma ani_mult_top:\n  \"ani(x * n(y) * top) = ani(x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * n y * top) = ani (x * y)", "using ani_def n_mult_top"], ["proof (prove)\nusing this:\n  ani ?x \\<equiv> an ?x * L\n  an (?x * n ?y * top) = an (?x * ?y)\n\ngoal (1 subgoal):\n 1. ani (x * n y * top) = ani (x * y)", "by auto"], ["", "lemma ani_an_bot:\n  \"ani(x) = bot \\<longleftrightarrow> an(x) = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x = bot) = (an x = bot)", "using an_L ani_L ani_an_equal"], ["proof (prove)\nusing this:\n  an L = bot\n  ani L = bot\n  (ani ?x = ani ?y) = (an ?x = an ?y)\n\ngoal (1 subgoal):\n 1. (ani x = bot) = (an x = bot)", "by force"], ["", "lemma ani_an_L:\n  \"ani(x) = L \\<longleftrightarrow> an(x) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ani x = L) = (an x = (1::'a))", "using an_bot ani_an_equal ani_bot"], ["proof (prove)\nusing this:\n  an bot = (1::'a)\n  (ani ?x = ani ?y) = (an ?x = an ?y)\n  ani bot = L\n\ngoal (1 subgoal):\n 1. (ani x = L) = (an x = (1::'a))", "by force"], ["", "text \\<open>Theorem 21\\<close>"], ["", "subclass tests"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.tests (1::'a) (*) uminus (\\<squnion>) bot (\\<le>) (<)", "apply unfold_locales"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x y z. - x * (- y * - z) = - x * - y * - z\n 2. \\<And>x y. - x * - y = - y * - x\n 3. \\<And>x y. - x = - (- - x * - y) * - (- - x * - - y)\n 4. \\<And>x y. - x * - y = - - (- x * - y)\n 5. bot = (THE x. \\<forall>y. x = - y * - - y)\n 6. (1::'a) = - bot\n 7. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 8. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 9. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply (simp add: mult_assoc)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x y. - x * - y = - y * - x\n 2. \\<And>x y. - x = - (- - x * - y) * - (- - x * - - y)\n 3. \\<And>x y. - x * - y = - - (- x * - y)\n 4. bot = (THE x. \\<forall>y. x = - y * - - y)\n 5. (1::'a) = - bot\n 6. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 7. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 8. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply (simp add: an_mult_commutative an_uminus)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x y. - x = - (- - x * - y) * - (- - x * - - y)\n 2. \\<And>x y. - x * - y = - - (- x * - y)\n 3. bot = (THE x. \\<forall>y. x = - y * - - y)\n 4. (1::'a) = - bot\n 5. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 6. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 7. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply (smt an_sup_left_dist_mult an_export_n an_n_L an_uminus n_an_def n_complement_bot n_export)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y. - x * - y = - - (- x * - y)\n 2. bot = (THE x. \\<forall>y. x = - y * - - y)\n 3. (1::'a) = - bot\n 4. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 5. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 6. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply (metis an_dist_sup an_n_def an_uminus n_an_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. bot = (THE x. \\<forall>y. x = - y * - - y)\n 2. (1::'a) = - bot\n 3. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 4. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 5. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "using an_complement_bot an_uminus n_an_def"], ["proof (prove)\nusing this:\n  an ?x * n ?x = bot\n  - ?x = an (?x * L)\n  n ?x = an (an ?x * L)\n\ngoal (5 subgoals):\n 1. bot = (THE x. \\<forall>y. x = - y * - - y)\n 2. (1::'a) = - bot\n 3. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 4. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 5. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. (1::'a) = - bot\n 2. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 3. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 4. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply (simp add: an_bot an_uminus)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 2. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 3. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "using an_export_n an_mult an_uminus n_an_def"], ["proof (prove)\nusing this:\n  an (n ?x * ?y) = an ?x \\<squnion> an ?y\n  an (?x * n ?y * L) = an (?x * ?y)\n  - ?x = an (?x * L)\n  n ?x = an (an ?x * L)\n\ngoal (3 subgoals):\n 1. \\<And>x y. - x \\<squnion> - y = - (- - x * - - y)\n 2. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 3. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 2. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "using an_order an_uminus"], ["proof (prove)\nusing this:\n  (an ?x \\<le> an ?y) = (an ?x * an ?y = an ?x)\n  - ?x = an (?x * L)\n\ngoal (2 subgoals):\n 1. \\<And>x y. (- x \\<le> - y) = (- x * - y = - x)\n 2. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (- x < - y) = (- x \\<le> - y \\<and> \\<not> - y \\<le> - x)", "by (simp add: less_le_not_le)"], ["", "end"], ["", "class an_itering = n_itering + an_semiring + while +\n  assumes while_circ_def: \"p \\<star> y = (p * y)\\<^sup>\\<circ> * -p\"\nbegin"], ["", "subclass test_itering"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.test_itering (\\<star>) circ (1::'a) (*) (\\<squnion>) (\\<le>) (<)\n     bot uminus", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p y. p \\<star> y = (p * y)\\<^sup>\\<circ> * - p", "by (rule while_circ_def)"], ["", "lemma an_circ_left_unfold:\n  \"an(x\\<^sup>\\<circ>) = an(x * x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) = an (x * x\\<^sup>\\<circ>)", "by (metis an_dist_sup an_one circ_left_unfold mult_left_one)"], ["", "lemma an_circ_x_n_circ:\n  \"an(x\\<^sup>\\<circ>) * x * n(x\\<^sup>\\<circ>) \\<le> x * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x * n (x\\<^sup>\\<circ>) \\<le> x * bot", "by (metis an_circ_left_unfold an_mult an_split mult_assoc n_mult_right_bot)"], ["", "lemma an_circ_invariant:\n  \"an(x\\<^sup>\\<circ>) * x \\<le> x * an(x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)", "have 1: \"an(x\\<^sup>\\<circ>) * x * an(x\\<^sup>\\<circ>) \\<le> x * an(x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x * an (x\\<^sup>\\<circ>)\n    \\<le> x * an (x\\<^sup>\\<circ>)", "by (metis an_case_split_left mult_assoc order_refl)"], ["proof (state)\nthis:\n  an (x\\<^sup>\\<circ>) * x * an (x\\<^sup>\\<circ>)\n  \\<le> x * an (x\\<^sup>\\<circ>)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)", "have \"an(x\\<^sup>\\<circ>) * x * n(x\\<^sup>\\<circ>) \\<le> x * an(x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x * n (x\\<^sup>\\<circ>)\n    \\<le> x * an (x\\<^sup>\\<circ>)", "by (metis an_circ_x_n_circ order_trans mult_right_isotone bot_least)"], ["proof (state)\nthis:\n  an (x\\<^sup>\\<circ>) * x * n (x\\<^sup>\\<circ>)\n  \\<le> x * an (x\\<^sup>\\<circ>)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  an (x\\<^sup>\\<circ>) * x * n (x\\<^sup>\\<circ>)\n  \\<le> x * an (x\\<^sup>\\<circ>)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)", "using 1 an_case_split_right"], ["proof (prove)\nusing this:\n  an (x\\<^sup>\\<circ>) * x * n (x\\<^sup>\\<circ>)\n  \\<le> x * an (x\\<^sup>\\<circ>)\n  an (x\\<^sup>\\<circ>) * x * an (x\\<^sup>\\<circ>)\n  \\<le> x * an (x\\<^sup>\\<circ>)\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)", "by blast"], ["proof (state)\nthis:\n  an (x\\<^sup>\\<circ>) * x \\<le> x * an (x\\<^sup>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ani_circ:\n  \"ani(x)\\<^sup>\\<circ> = 1 \\<squnion> ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x\\<^sup>\\<circ> = (1::'a) \\<squnion> ani x", "by (simp add: ani_def mult_L_circ)"], ["", "lemma ani_circ_left_unfold:\n  \"ani(x\\<^sup>\\<circ>) = ani(x * x\\<^sup>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x\\<^sup>\\<circ>) = ani (x * x\\<^sup>\\<circ>)", "by (simp add: an_circ_left_unfold ani_def)"], ["", "lemma an_circ_import:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<circ> = an(y) * (an(y) * x)\\<^sup>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an y * x \\<le> x * an y \\<Longrightarrow>\n    an y * x\\<^sup>\\<circ> = an y * (an y * x)\\<^sup>\\<circ>", "by (metis an_n_def n_circ_import)"], ["", "lemma preserves_L:\n  \"preserves L (-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preserves L (- p)", "using L_left_zero preserves_equation_test mult_assoc"], ["proof (prove)\nusing this:\n  L * ?x = L\n  preserves ?x (- ?p) =\n  (- ?p * ?x = - ?p * ?x * - ?p \\<and> - - ?p * ?x = - - ?p * ?x * - - ?p)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. preserves L (- p)", "by force"], ["", "end"], ["", "class an_omega_algebra = n_omega_algebra_2 + an_semiring + while +\n  assumes while_Omega_def: \"p \\<star> y = (p * y)\\<^sup>\\<Omega> * -p\"\nbegin"], ["", "lemma an_split_omega_omega:\n  \"an(x\\<^sup>\\<omega>) * x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<omega>) * x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> * bot", "by (meson an_antitone an_split mult_left_isotone omega_sub_vector order_trans)"], ["", "lemma an_omega_below_an_star:\n  \"an(x\\<^sup>\\<omega>) \\<le> an(x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<omega>) \\<le> an (x\\<^sup>\\<star>)", "by (simp add: an_n_order n_star_below_n_omega)"], ["", "lemma an_omega_below_an:\n  \"an(x\\<^sup>\\<omega>) \\<le> an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<omega>) \\<le> an x", "by (simp add: an_n_order n_below_n_omega)"], ["", "lemma an_omega_induct:\n  \"an(x * y \\<squnion> z) \\<le> an(y) \\<Longrightarrow> an(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z) \\<le> an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x * y \\<squnion> z) \\<le> an y \\<Longrightarrow>\n    an (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z) \\<le> an y", "by (simp add: an_n_order n_omega_induct)"], ["", "lemma an_star_mult:\n  \"an(y) \\<le> an(x * y) \\<Longrightarrow> an(x\\<^sup>\\<star> * y) = an(x\\<^sup>\\<star>) * an(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an y \\<le> an (x * y) \\<Longrightarrow>\n    an (x\\<^sup>\\<star> * y) = an (x\\<^sup>\\<star>) * an y", "by (metis an_dist_sup an_n_L an_n_order n_dist_sup n_star_mult)"], ["", "lemma an_omega_mult:\n  \"an(x\\<^sup>\\<omega> * y) = an(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<omega> * y) = an (x\\<^sup>\\<omega>)", "by (simp add: an_n_equal n_omega_mult)"], ["", "lemma an_star_left_unfold:\n  \"an(x\\<^sup>\\<star>) = an(x * x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) = an (x\\<^sup>+)", "by (simp add: an_n_equal n_star_left_unfold)"], ["", "lemma an_star_x_n_star:\n  \"an(x\\<^sup>\\<star>) * x * n(x\\<^sup>\\<star>) \\<le> x * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x * n (x\\<^sup>\\<star>) \\<le> x * bot", "by (metis an_n_L an_split n_mult n_mult_right_bot n_star_left_unfold mult_assoc)"], ["", "lemma an_star_invariant:\n  \"an(x\\<^sup>\\<star>) * x \\<le> x * an(x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)", "have 1: \"an(x\\<^sup>\\<star>) * x * an(x\\<^sup>\\<star>) \\<le> x * an(x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x * an (x\\<^sup>\\<star>)\n    \\<le> x * an (x\\<^sup>\\<star>)", "using an_case_split_left mult_assoc"], ["proof (prove)\nusing this:\n  (an ?z * ?x \\<le> ?y \\<and> n ?z * ?x \\<le> ?y) = (?x \\<le> ?y)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x * an (x\\<^sup>\\<star>)\n    \\<le> x * an (x\\<^sup>\\<star>)", "by auto"], ["proof (state)\nthis:\n  an (x\\<^sup>\\<star>) * x * an (x\\<^sup>\\<star>)\n  \\<le> x * an (x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)", "have \"an(x\\<^sup>\\<star>) * x * n(x\\<^sup>\\<star>) \\<le> x * an(x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x * n (x\\<^sup>\\<star>)\n    \\<le> x * an (x\\<^sup>\\<star>)", "by (metis an_star_x_n_star order_trans mult_right_isotone bot_least)"], ["proof (state)\nthis:\n  an (x\\<^sup>\\<star>) * x * n (x\\<^sup>\\<star>)\n  \\<le> x * an (x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  an (x\\<^sup>\\<star>) * x * n (x\\<^sup>\\<star>)\n  \\<le> x * an (x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)", "using 1 an_case_split_right"], ["proof (prove)\nusing this:\n  an (x\\<^sup>\\<star>) * x * n (x\\<^sup>\\<star>)\n  \\<le> x * an (x\\<^sup>\\<star>)\n  an (x\\<^sup>\\<star>) * x * an (x\\<^sup>\\<star>)\n  \\<le> x * an (x\\<^sup>\\<star>)\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)", "by auto"], ["proof (state)\nthis:\n  an (x\\<^sup>\\<star>) * x \\<le> x * an (x\\<^sup>\\<star>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma n_an_star_unfold_invariant:\n  \"n(an(x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an(x) * n(x * an(x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\n    \\<le> an x * n (x * an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\n    \\<le> an x * n (x * an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)", "have \"n(an(x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an x", "using an_star_left_unfold an_case_split_right an_mult_left_upper_bound n_export_an"], ["proof (prove)\nusing this:\n  an (?x\\<^sup>\\<star>) = an (?x\\<^sup>+)\n  (?x * an ?z \\<le> ?y \\<and> ?x * n ?z \\<le> ?y) = (?x \\<le> ?y)\n  an (?x * ?y) \\<le> an ?x\n  n (an ?x * ?y) = an ?x * n ?y\n\ngoal (1 subgoal):\n 1. n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an x", "by fastforce"], ["proof (state)\nthis:\n  n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an x\n\ngoal (1 subgoal):\n 1. n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\n    \\<le> an x * n (x * an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>) \\<le> an x\n\ngoal (1 subgoal):\n 1. n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\n    \\<le> an x * n (x * an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)", "by (smt an_star_invariant le_iff_sup mult_assoc mult_right_dist_sup n_isotone n_order omega_unfold)"], ["proof (state)\nthis:\n  n (an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\n  \\<le> an x * n (x * an (x\\<^sup>\\<star>) * x\\<^sup>\\<omega>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ani_omega_below_ani_star:\n  \"ani(x\\<^sup>\\<omega>) \\<le> ani(x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x\\<^sup>\\<omega>) \\<le> ani (x\\<^sup>\\<star>)", "by (simp add: an_omega_below_an_star ani_an_order)"], ["", "lemma ani_omega_below_ani:\n  \"ani(x\\<^sup>\\<omega>) \\<le> ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x\\<^sup>\\<omega>) \\<le> ani x", "by (simp add: an_omega_below_an ani_an_order)"], ["", "lemma ani_star:\n  \"ani(x)\\<^sup>\\<star> = 1 \\<squnion> ani(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x\\<^sup>\\<star> = (1::'a) \\<squnion> ani x", "by (simp add: ani_def mult_L_star)"], ["", "lemma ani_omega:\n  \"ani(x)\\<^sup>\\<omega> = ani(x) * L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani x\\<^sup>\\<omega> = ani x * L", "by (simp add: L_left_zero ani_def mult_L_omega mult_assoc)"], ["", "lemma ani_omega_induct:\n  \"ani(x * y \\<squnion> z) \\<le> ani(y) \\<Longrightarrow> ani(x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z) \\<le> ani(y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x * y \\<squnion> z) \\<le> ani y \\<Longrightarrow>\n    ani (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z) \\<le> ani y", "by (simp add: an_omega_induct ani_an_order)"], ["", "lemma ani_omega_mult:\n  \"ani(x\\<^sup>\\<omega> * y) = ani(x\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x\\<^sup>\\<omega> * y) = ani (x\\<^sup>\\<omega>)", "by (simp add: an_omega_mult ani_def)"], ["", "lemma ani_star_left_unfold:\n  \"ani(x\\<^sup>\\<star>) = ani(x * x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ani (x\\<^sup>\\<star>) = ani (x\\<^sup>+)", "by (simp add: an_star_left_unfold ani_def)"], ["", "lemma an_star_import:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<star> = an(y) * (an(y) * x)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an y * x \\<le> x * an y \\<Longrightarrow>\n    an y * x\\<^sup>\\<star> = an y * (an y * x)\\<^sup>\\<star>", "by (metis an_n_def n_star_import)"], ["", "lemma an_omega_export:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<omega> = (an(y) * x)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an y * x \\<le> x * an y \\<Longrightarrow>\n    an y * x\\<^sup>\\<omega> = (an y * x)\\<^sup>\\<omega>", "by (metis an_n_def n_omega_export)"], ["", "lemma an_omega_import:\n  \"an(y) * x \\<le> x * an(y) \\<Longrightarrow> an(y) * x\\<^sup>\\<omega> = an(y) * (an(y) * x)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. an y * x \\<le> x * an y \\<Longrightarrow>\n    an y * x\\<^sup>\\<omega> = an y * (an y * x)\\<^sup>\\<omega>", "by (simp add: an_mult_idempotent omega_import)"], ["", "end"], ["", "text \\<open>Theorem 22\\<close>"], ["", "sublocale an_omega_algebra < nL_omega: an_itering where circ = Omega"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.an_itering (\\<star>) Omega (1::'a) (*) (\\<squnion>) (\\<le>) (<)\n     bot top n L uminus an", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p y. p \\<star> y = (p * y)\\<^sup>\\<Omega> * - p", "by (rule while_Omega_def)"], ["", "context an_omega_algebra\nbegin"], ["", "lemma preserves_star:\n  \"nL_omega.preserves x (-p) \\<Longrightarrow> nL_omega.preserves (x\\<^sup>\\<star>) (-p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. test_itering.preserves (*) (\\<le>) uminus x (- p) \\<Longrightarrow>\n    test_itering.preserves (*) (\\<le>) uminus (x\\<^sup>\\<star>) (- p)", "by (simp add: nL_omega.preserves_def star.circ_simulate)"], ["", "end"], ["", "end"]]}