{"file_name": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras/Omega_Algebras.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras", "problem_names": ["lemma star_bot_below_omega:\n  \"x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega>\"", "lemma star_bot_below_omega_bot:\n  \"x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega> * bot\"", "lemma omega_induct_mult:\n  \"y \\<le> x * y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>\"", "lemma omega_sub_dist:\n  \"x\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\"", "lemma omega_isotone:\n  \"x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\"", "lemma omega_induct_equal:\n  \"y = z \\<squnion> x * y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z\"", "lemma omega_bot:\n  \"bot\\<^sup>\\<omega> = bot\"", "lemma omega_one_greatest:\n  \"x \\<le> 1\\<^sup>\\<omega>\"", "lemma star_mult_omega:\n  \"x\\<^sup>\\<star> * x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma omega_sub_vector:\n  \"x\\<^sup>\\<omega> * y \\<le> x\\<^sup>\\<omega>\"", "lemma omega_simulation:\n  \"z * x \\<le> y * z \\<Longrightarrow> z * x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\"", "lemma omega_omega:\n  \"x\\<^sup>\\<omega>\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\"", "lemma left_plus_omega:\n  \"(x * x\\<^sup>\\<star>)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma omega_slide:\n  \"x * (y * x)\\<^sup>\\<omega> = (x * y)\\<^sup>\\<omega>\"", "lemma omega_simulation_2:\n  \"y * x \\<le> x * y \\<Longrightarrow> (x * y)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\"", "lemma wagner:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> = x * (x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> z \\<Longrightarrow> (x \\<squnion> y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z\"", "lemma right_plus_omega:\n  \"(x\\<^sup>\\<star> * x)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma omega_sub_dist_1:\n  \"(x * y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\"", "lemma omega_sub_dist_2:\n  \"(x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\"", "lemma omega_star:\n  \"(x\\<^sup>\\<omega>)\\<^sup>\\<star> = 1 \\<squnion> x\\<^sup>\\<omega>\"", "lemma omega_mult_omega_star:\n  \"x\\<^sup>\\<omega> * x\\<^sup>\\<omega>\\<^sup>\\<star> = x\\<^sup>\\<omega>\"", "lemma omega_sum_unfold_1:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * y * (x \\<squnion> y)\\<^sup>\\<omega>\"", "lemma omega_sum_unfold_2:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>\"", "lemma omega_sum_unfold_3:\n  \"(x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\"", "lemma omega_decompose:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> = (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>\"", "lemma omega_loop_fixpoint:\n  \"y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z) \\<squnion> z = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\"", "lemma omega_loop_greatest_fixpoint:\n  \"y * x \\<squnion> z = x \\<Longrightarrow> x \\<le> y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\"", "lemma omega_square:\n  \"x\\<^sup>\\<omega> = (x * x)\\<^sup>\\<omega>\"", "lemma mult_bot_omega:\n  \"(x * bot)\\<^sup>\\<omega> = x * bot\"", "lemma mult_bot_add_omega:\n  \"(x \\<squnion> y * bot)\\<^sup>\\<omega> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * y * bot\"", "lemma omega_mult_star:\n  \"x\\<^sup>\\<omega> * x\\<^sup>\\<star> = x\\<^sup>\\<omega>\"", "lemma omega_loop_is_greatest_fixpoint:\n  \"is_greatest_fixpoint (\\<lambda>x . y * x \\<squnion> z) (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z)\"", "lemma omega_loop_nu:\n  \"\\<nu> (\\<lambda>x . y * x \\<squnion> z) = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\"", "lemma omega_loop_bot_is_greatest_fixpoint:\n  \"is_greatest_fixpoint (\\<lambda>x . y * x) (y\\<^sup>\\<omega>)\"", "lemma omega_loop_bot_nu:\n  \"\\<nu> (\\<lambda>x . y * x) = y\\<^sup>\\<omega>\"", "lemma affine_has_greatest_fixpoint:\n  \"has_greatest_fixpoint (\\<lambda>x . y * x \\<squnion> z)\"", "lemma omega_separate_unfold:\n  \"(x\\<^sup>\\<star> * y)\\<^sup>\\<omega> = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * x * (x\\<^sup>\\<star> * y)\\<^sup>\\<omega>\"", "lemma omega_bot_left_slide:\n  \"(x * y)\\<^sup>\\<star> * ((x * y)\\<^sup>\\<omega> * bot \\<squnion> 1) * x \\<le> x * (y * x)\\<^sup>\\<star> * ((y * x)\\<^sup>\\<omega> * bot \\<squnion> 1)\"", "lemma omega_bot_add_1:\n  \"(x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1) = x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\"", "lemma star_omega_greatest:\n  \"x\\<^sup>\\<star>\\<^sup>\\<omega> = 1\\<^sup>\\<omega>\"", "lemma omega_vector_greatest:\n  \"x\\<^sup>\\<omega> * 1\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma mult_greatest_omega:\n  \"(x * 1\\<^sup>\\<omega>)\\<^sup>\\<omega> \\<le> x * 1\\<^sup>\\<omega>\"", "lemma omega_mult_star_2:\n  \"x\\<^sup>\\<omega> * y\\<^sup>\\<star> = x\\<^sup>\\<omega>\"", "lemma omega_import:\n  assumes \"p \\<le> p * p\"\n      and \"p * x \\<le> x * p\"\n    shows \"p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>\"", "lemma star_omega_absorb:\n  \"y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> = (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>\"", "lemma omega_circ_simulate_right_plus: \n  assumes \"z * x \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * z \\<squnion> w\"\n    shows \"z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\"", "lemma omega_circ_simulate_left_plus:\n  assumes \"x * z \\<le> z * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion> w\"\n    shows \"(x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z \\<le> (z \\<squnion> (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)\"", "lemma omega_translate:\n  \"x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) = x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>\"", "lemma omega_circ_simulate_right:\n  assumes \"z * x \\<le> y * z \\<squnion> w\"\n    shows \"z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\"", "lemma circ_below_omega_star:\n  \"x\\<^sup>\\<circ> \\<le> x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>\"", "lemma omega_mult_circ:\n  \"x\\<^sup>\\<omega> * x\\<^sup>\\<circ> = x\\<^sup>\\<omega>\"", "lemma circ_mult_omega:\n  \"x\\<^sup>\\<circ> * x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma circ_omega_greatest:\n  \"x\\<^sup>\\<circ>\\<^sup>\\<omega> = 1\\<^sup>\\<omega>\"", "lemma omega_circ:\n  \"x\\<^sup>\\<omega>\\<^sup>\\<circ> = 1 \\<squnion> x\\<^sup>\\<omega>\"", "lemma omega_one:\n  \"1\\<^sup>\\<omega> = top\"", "lemma star_omega_top:\n  \"x\\<^sup>\\<star>\\<^sup>\\<omega> = top\"", "lemma omega_vector:\n  \"x\\<^sup>\\<omega> * top = x\\<^sup>\\<omega>\"", "lemma mult_top_omega:\n  \"(x * top)\\<^sup>\\<omega> \\<le> x * top\"", "lemma circ_omega:\n  \"x\\<^sup>\\<circ>\\<^sup>\\<omega> = top\"", "lemma omega_translate_3:\n  \"x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) = x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> 1)\"", "lemma omega_translate_2:\n  \"x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>\""], "translations": [["", "lemma star_bot_below_omega:\n  \"x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega>", "using omega_unfold star_left_induct_equal"], ["proof (prove)\nusing this:\n  ?y\\<^sup>\\<omega> = ?y * ?y\\<^sup>\\<omega>\n  ?z \\<squnion> ?x * ?y = ?y \\<Longrightarrow>\n  ?x\\<^sup>\\<star> * ?z \\<le> ?y\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega>", "by auto"], ["", "lemma star_bot_below_omega_bot:\n  \"x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * bot \\<le> x\\<^sup>\\<omega> * bot", "by (metis omega_unfold star_left_induct_equal sup_monoid.add_0_left mult_assoc)"], ["", "lemma omega_induct_mult:\n  \"y \\<le> x * y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x * y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>", "by (metis bot_least omega_induct sup.absorb1 sup.absorb2 star_bot_below_omega)"], ["", "lemma omega_sub_dist:\n  \"x\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>", "by (metis eq_refl mult_isotone omega_unfold sup.cobounded1 omega_induct_mult)"], ["", "lemma omega_isotone:\n  \"x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "using sup_left_divisibility omega_sub_dist"], ["proof (prove)\nusing this:\n  (?x \\<le> ?y) = (\\<exists>z. ?x \\<squnion> z = ?y)\n  ?x\\<^sup>\\<omega> \\<le> (?x \\<squnion> ?y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "by fastforce"], ["", "lemma omega_induct_equal:\n  \"y = z \\<squnion> x * y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = z \\<squnion> x * y \\<Longrightarrow>\n    y \\<le> x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z", "by (simp add: omega_induct)"], ["", "lemma omega_bot:\n  \"bot\\<^sup>\\<omega> = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot\\<^sup>\\<omega> = bot", "by (metis mult_left_zero omega_unfold)"], ["", "lemma omega_one_greatest:\n  \"x \\<le> 1\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (1::'a)\\<^sup>\\<omega>", "by (simp add: omega_induct_mult)"], ["", "lemma star_mult_omega:\n  \"x\\<^sup>\\<star> * x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * x\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "by (metis order.antisym omega_unfold star.circ_loop_fixpoint star_left_induct_mult_equal sup.cobounded2)"], ["", "lemma omega_sub_vector:\n  \"x\\<^sup>\\<omega> * y \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * y \\<le> x\\<^sup>\\<omega>", "by (metis mult_semi_associative omega_unfold omega_induct_mult)"], ["", "lemma omega_simulation:\n  \"z * x \\<le> y * z \\<Longrightarrow> z * x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x \\<le> y * z \\<Longrightarrow>\n    z * x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "by (smt (verit, ccfv_threshold) mult_isotone omega_unfold order_lesseq_imp mult_assoc omega_induct_mult)"], ["", "lemma omega_omega:\n  \"x\\<^sup>\\<omega>\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by (metis omega_unfold omega_sub_vector)"], ["", "lemma left_plus_omega:\n  \"(x * x\\<^sup>\\<star>)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>+\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "by (metis order.antisym mult_assoc omega_induct_mult omega_unfold order_refl star.left_plus_circ star_mult_omega)"], ["", "lemma omega_slide:\n  \"x * (y * x)\\<^sup>\\<omega> = (x * y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y * x)\\<^sup>\\<omega> = (x * y)\\<^sup>\\<omega>", "by (metis order.antisym mult_assoc mult_right_isotone omega_simulation omega_unfold order_refl)"], ["", "lemma omega_simulation_2:\n  \"y * x \\<le> x * y \\<Longrightarrow> (x * y)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    (x * y)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by (metis mult_right_isotone sup.absorb2 omega_induct_mult omega_slide omega_sub_dist)"], ["", "lemma wagner:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> = x * (x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> z \\<Longrightarrow> (x \\<squnion> y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega> =\n    x * (x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> z \\<Longrightarrow>\n    (x \\<squnion> y)\\<^sup>\\<omega> =\n    x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * z", "by (smt (verit, ccfv_SIG) order.refl star_left_induct sup.absorb2 sup_assoc sup_commute omega_induct_equal omega_sub_dist)"], ["", "lemma right_plus_omega:\n  \"(x\\<^sup>\\<star> * x)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * x)\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "by (metis left_plus_omega omega_slide star_mult_omega)"], ["", "lemma omega_sub_dist_1:\n  \"(x * y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * y\\<^sup>\\<star>)\\<^sup>\\<omega>\n    \\<le> (x \\<squnion> y)\\<^sup>\\<omega>", "by (metis left_plus_omega mult_isotone star.circ_sub_dist sup.cobounded1 sup_monoid.add_commute omega_isotone)"], ["", "lemma omega_sub_dist_2:\n  \"(x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>\\<omega>\n    \\<le> (x \\<squnion> y)\\<^sup>\\<omega>", "by (metis mult_isotone star.circ_sub_dist sup.cobounded2 omega_isotone right_plus_omega)"], ["", "lemma omega_star:\n  \"(x\\<^sup>\\<omega>)\\<^sup>\\<star> = 1 \\<squnion> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\\<^sup>\\<star> = (1::'a) \\<squnion> x\\<^sup>\\<omega>", "by (metis antisym_conv star.circ_mult_increasing star_left_unfold_equal omega_sub_vector)"], ["", "lemma omega_mult_omega_star:\n  \"x\\<^sup>\\<omega> * x\\<^sup>\\<omega>\\<^sup>\\<star> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\\<^sup>+ = x\\<^sup>\\<omega>", "by (simp add: order.antisym star.circ_mult_increasing omega_sub_vector)"], ["", "lemma omega_sum_unfold_1:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * y * (x \\<squnion> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega> =\n    x\\<^sup>\\<omega> \\<squnion>\n    x\\<^sup>\\<star> * y * (x \\<squnion> y)\\<^sup>\\<omega>", "by (metis mult_right_dist_sup omega_unfold mult_assoc wagner)"], ["", "lemma omega_sum_unfold_2:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega>\n    \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n          (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>", "using omega_induct_equal omega_sum_unfold_1"], ["proof (prove)\nusing this:\n  ?y = ?z \\<squnion> ?x * ?y \\<Longrightarrow>\n  ?y \\<le> ?x\\<^sup>\\<omega> \\<squnion> ?x\\<^sup>\\<star> * ?z\n  (?x \\<squnion> ?y)\\<^sup>\\<omega> =\n  ?x\\<^sup>\\<omega> \\<squnion>\n  ?x\\<^sup>\\<star> * ?y * (?x \\<squnion> ?y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega>\n    \\<le> (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n          (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>", "by auto"], ["", "lemma omega_sum_unfold_3:\n  \"(x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> \\<le> (x \\<squnion> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>\n    \\<le> (x \\<squnion> y)\\<^sup>\\<omega>", "using star_left_induct_equal omega_sum_unfold_1"], ["proof (prove)\nusing this:\n  ?z \\<squnion> ?x * ?y = ?y \\<Longrightarrow>\n  ?x\\<^sup>\\<star> * ?z \\<le> ?y\n  (?x \\<squnion> ?y)\\<^sup>\\<omega> =\n  ?x\\<^sup>\\<omega> \\<squnion>\n  ?x\\<^sup>\\<star> * ?y * (?x \\<squnion> ?y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>\n    \\<le> (x \\<squnion> y)\\<^sup>\\<omega>", "by auto"], ["", "lemma omega_decompose:\n  \"(x \\<squnion> y)\\<^sup>\\<omega> = (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion> (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega> =\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> \\<squnion>\n    (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega>", "by (metis sup.absorb1 sup_same_context omega_sub_dist_2 omega_sum_unfold_2 omega_sum_unfold_3)"], ["", "lemma omega_loop_fixpoint:\n  \"y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z) \\<squnion> z = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z) \\<squnion> z =\n    y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z", "apply (rule order.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z) \\<squnion> z\n    \\<le> y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\n 2. y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\n    \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z) \\<squnion> z", "apply (smt (verit, ccfv_threshold) eq_refl mult_isotone mult_left_sub_dist_sup omega_induct omega_unfold star.circ_loop_fixpoint sup_assoc sup_commute sup_right_isotone)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\n    \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z) \\<squnion> z", "by (smt (z3) mult_left_sub_dist_sup omega_unfold star.circ_loop_fixpoint sup.left_commute sup_commute sup_right_isotone)"], ["", "lemma omega_loop_greatest_fixpoint:\n  \"y * x \\<squnion> z = x \\<Longrightarrow> x \\<le> y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<squnion> z = x \\<Longrightarrow>\n    x \\<le> y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z", "by (simp add: sup_commute omega_induct_equal)"], ["", "lemma omega_square:\n  \"x\\<^sup>\\<omega> = (x * x)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (x * x)\\<^sup>\\<omega>", "using order.antisym omega_unfold order_refl mult_assoc omega_induct_mult omega_simulation_2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  ?y\\<^sup>\\<omega> = ?y * ?y\\<^sup>\\<omega>\n  ?x \\<le> ?x\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?y \\<le> ?x * ?y \\<Longrightarrow> ?y \\<le> ?x\\<^sup>\\<omega>\n  ?y * ?x \\<le> ?x * ?y \\<Longrightarrow>\n  (?x * ?y)\\<^sup>\\<omega> \\<le> ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (x * x)\\<^sup>\\<omega>", "by auto"], ["", "lemma mult_bot_omega:\n  \"(x * bot)\\<^sup>\\<omega> = x * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * bot)\\<^sup>\\<omega> = x * bot", "by (metis mult_left_zero omega_slide)"], ["", "lemma mult_bot_add_omega:\n  \"(x \\<squnion> y * bot)\\<^sup>\\<omega> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * y * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y * bot)\\<^sup>\\<omega> =\n    x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star> * y * bot", "by (metis mult_left_zero sup_commute mult_assoc mult_bot_omega omega_decompose omega_loop_fixpoint)"], ["", "lemma omega_mult_star:\n  \"x\\<^sup>\\<omega> * x\\<^sup>\\<star> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * x\\<^sup>\\<star> = x\\<^sup>\\<omega>", "by (meson antisym_conv star.circ_back_loop_prefixpoint sup.boundedE omega_sub_vector)"], ["", "lemma omega_loop_is_greatest_fixpoint:\n  \"is_greatest_fixpoint (\\<lambda>x . y * x \\<squnion> z) (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_fixpoint (\\<lambda>x. y * x \\<squnion> z)\n     (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z)", "by (simp add: is_greatest_fixpoint_def omega_loop_fixpoint omega_loop_greatest_fixpoint)"], ["", "lemma omega_loop_nu:\n  \"\\<nu> (\\<lambda>x . y * x \\<squnion> z) = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (\\<lambda>x. y * x \\<squnion> z) =\n    y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * z", "by (metis greatest_fixpoint_same omega_loop_is_greatest_fixpoint)"], ["", "lemma omega_loop_bot_is_greatest_fixpoint:\n  \"is_greatest_fixpoint (\\<lambda>x . y * x) (y\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_greatest_fixpoint ((*) y) (y\\<^sup>\\<omega>)", "using is_greatest_fixpoint_def omega_unfold omega_induct_mult"], ["proof (prove)\nusing this:\n  is_greatest_fixpoint ?f ?x \\<equiv>\n  ?f ?x = ?x \\<and> (\\<forall>y. ?f y = y \\<longrightarrow> y \\<le> ?x)\n  ?y\\<^sup>\\<omega> = ?y * ?y\\<^sup>\\<omega>\n  ?y \\<le> ?x * ?y \\<Longrightarrow> ?y \\<le> ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. is_greatest_fixpoint ((*) y) (y\\<^sup>\\<omega>)", "by auto"], ["", "lemma omega_loop_bot_nu:\n  \"\\<nu> (\\<lambda>x . y * x) = y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> (*) y = y\\<^sup>\\<omega>", "by (metis greatest_fixpoint_same omega_loop_bot_is_greatest_fixpoint)"], ["", "lemma affine_has_greatest_fixpoint:\n  \"has_greatest_fixpoint (\\<lambda>x . y * x \\<squnion> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (\\<lambda>x. y * x \\<squnion> z)", "using has_greatest_fixpoint_def omega_loop_is_greatest_fixpoint"], ["proof (prove)\nusing this:\n  has_greatest_fixpoint ?f \\<equiv> \\<exists>x. is_greatest_fixpoint ?f x\n  is_greatest_fixpoint (\\<lambda>x. ?y * x \\<squnion> ?z)\n   (?y\\<^sup>\\<omega> \\<squnion> ?y\\<^sup>\\<star> * ?z)\n\ngoal (1 subgoal):\n 1. has_greatest_fixpoint (\\<lambda>x. y * x \\<squnion> z)", "by blast"], ["", "lemma omega_separate_unfold:\n  \"(x\\<^sup>\\<star> * y)\\<^sup>\\<omega> = y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * x * (x\\<^sup>\\<star> * y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> =\n    y\\<^sup>\\<omega> \\<squnion>\n    y\\<^sup>\\<star> * x * (x\\<^sup>\\<star> * y)\\<^sup>\\<omega>", "by (metis star.circ_loop_fixpoint sup_commute mult_assoc omega_slide omega_sum_unfold_1)"], ["", "lemma omega_bot_left_slide:\n  \"(x * y)\\<^sup>\\<star> * ((x * y)\\<^sup>\\<omega> * bot \\<squnion> 1) * x \\<le> x * (y * x)\\<^sup>\\<star> * ((y * x)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * y)\\<^sup>\\<star> *\n    ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    x\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x * y)\\<^sup>\\<star> *\n    ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    x\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"x \\<squnion> x * (y * x) * (y * x)\\<^sup>\\<star> * ((y * x)\\<^sup>\\<omega> * bot \\<squnion> 1) \\<le> x * (y * x)\\<^sup>\\<star> * ((y * x)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion>\n    x * (y * x) * (y * x)\\<^sup>\\<star> *\n    ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (metis sup_commute mult_assoc mult_right_isotone star.circ_back_loop_prefixpoint star.mult_zero_sup_circ star.mult_zero_circ le_supE le_supI order.refl star.circ_increasing star.circ_mult_upper_bound)"], ["proof (state)\nthis:\n  x \\<squnion>\n  x * (y * x) * (y * x)\\<^sup>\\<star> *\n  ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  \\<le> x * (y * x)\\<^sup>\\<star> *\n        ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x * y)\\<^sup>\\<star> *\n    ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    x\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"((x * y)\\<^sup>\\<omega> * bot \\<squnion> 1) * x \\<squnion> x * y * (x * (y * x)\\<^sup>\\<star> * ((y * x)\\<^sup>\\<omega> * bot \\<squnion> 1)) \\<le> x * (y * x)\\<^sup>\\<star> * ((y * x)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  x \\<squnion>\n  x * (y * x) * (y * x)\\<^sup>\\<star> *\n  ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  \\<le> x * (y * x)\\<^sup>\\<star> *\n        ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * x \\<squnion>\n    x * y *\n    (x * (y * x)\\<^sup>\\<star> *\n     ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (smt (z3) sup.absorb_iff2 sup_assoc mult_assoc mult_left_one mult_left_sub_dist_sup_left mult_left_zero mult_right_dist_sup omega_slide star_mult_omega)"], ["proof (state)\nthis:\n  ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * x \\<squnion>\n  x * y *\n  (x * (y * x)\\<^sup>\\<star> *\n   ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n  \\<le> x * (y * x)\\<^sup>\\<star> *\n        ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x * y)\\<^sup>\\<star> *\n    ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    x\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * x \\<squnion>\n  x * y *\n  (x * (y * x)\\<^sup>\\<star> *\n   ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n  \\<le> x * (y * x)\\<^sup>\\<star> *\n        ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x * y)\\<^sup>\\<star> *\n    ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    x\n    \\<le> x * (y * x)\\<^sup>\\<star> *\n          ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (simp add: star_left_induct mult_assoc)"], ["proof (state)\nthis:\n  (x * y)\\<^sup>\\<star> *\n  ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  x\n  \\<le> x * (y * x)\\<^sup>\\<star> *\n        ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma omega_bot_add_1:\n  \"(x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1) = x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n    x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))", "proof (rule order.antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have 1: \"(x \\<squnion> y) * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1) \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y) * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by (smt (z3) eq_refl star.circ_mult_upper_bound star.circ_sub_dist_1 star.mult_zero_circ star.mult_zero_sup_circ star_sup_1 sup_assoc sup_commute mult_assoc)"], ["proof (state)\nthis:\n  (x \\<squnion> y) * x\\<^sup>\\<star> *\n  (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have 2: \"1 \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflexive\n     (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n      (y * x\\<^sup>\\<star> *\n       (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n      ((y * x\\<^sup>\\<star> *\n        (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n       bot \\<squnion>\n       (1::'a)))", "using reflexive_mult_closed star.circ_reflexive sup_ge2"], ["proof (prove)\nusing this:\n  \\<lbrakk>reflexive ?x; reflexive ?y\\<rbrakk>\n  \\<Longrightarrow> reflexive (?x * ?y)\n  reflexive (?x\\<^sup>\\<star>)\n  ?y \\<le> ?x \\<squnion> ?y\n\ngoal (1 subgoal):\n 1. reflexive\n     (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n      (y * x\\<^sup>\\<star> *\n       (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n      ((y * x\\<^sup>\\<star> *\n        (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n       bot \\<squnion>\n       (1::'a)))", "by auto"], ["proof (state)\nthis:\n  reflexive\n   (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a)))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"(y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot \\<le> (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n    \\<le> (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n          bot", "by (metis mult_1_right mult_left_isotone mult_left_sub_dist_sup_right omega_isotone)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n  \\<le> (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n        bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "also"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n  \\<le> (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n        bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have 3: \"... \\<le> (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n    bot\n    \\<le> (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by (metis mult_isotone mult_left_one star.circ_reflexive sup_commute sup_ge2)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "finally"], ["proof (chain)\npicking this:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n  \\<le> (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))", "have 4: \"(x\\<^sup>\\<star> * y)\\<^sup>\\<omega> * bot \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n  \\<le> (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> * bot\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by (smt mult_assoc mult_right_isotone omega_slide)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot \\<le> y * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> * x\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n    \\<le> y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n          x\\<^sup>\\<star> *\n          x\\<^sup>\\<omega> *\n          bot *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n          bot", "using mult_isotone mult_left_sub_dist_sup_left mult_left_zero order.refl star_isotone sup_commute mult_assoc star_mult_omega"], ["proof (prove)\nusing this:\n  \\<lbrakk>?w \\<le> ?y; ?x \\<le> ?z\\<rbrakk>\n  \\<Longrightarrow> ?w * ?x \\<le> ?y * ?z\n  ?x * ?y \\<le> ?x * (?y \\<squnion> ?z)\n  bot * ?x = bot\n  ?a \\<le> ?a\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>\\<star> \\<le> ?y\\<^sup>\\<star>\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?x\\<^sup>\\<star> * ?x\\<^sup>\\<omega> = ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n    \\<le> y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n          x\\<^sup>\\<star> *\n          x\\<^sup>\\<omega> *\n          bot *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n          bot", "by auto"], ["proof (state)\nthis:\n  y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> y *\n        (x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n        x\\<^sup>\\<star> *\n        x\\<^sup>\\<omega> *\n        bot *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n        bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "also"], ["proof (state)\nthis:\n  y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> y *\n        (x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n        x\\<^sup>\\<star> *\n        x\\<^sup>\\<omega> *\n        bot *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n        bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"... \\<le> y * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * y)\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y *\n    (x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n    x\\<^sup>\\<star> *\n    x\\<^sup>\\<omega> *\n    bot *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n    bot\n    \\<le> y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n          (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n           y)\\<^sup>\\<omega> *\n          bot", "by (smt mult_assoc mult_left_isotone mult_left_sub_dist_sup_left omega_slide)"], ["proof (state)\nthis:\n  y *\n  (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n  x\\<^sup>\\<star> *\n  x\\<^sup>\\<omega> *\n  bot *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> y *\n        (x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n        (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "also"], ["proof (state)\nthis:\n  y *\n  (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n  x\\<^sup>\\<star> *\n  x\\<^sup>\\<omega> *\n  bot *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> y *\n        (x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n        (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"... = y * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * y)\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y *\n    (x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n    (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n     y)\\<^sup>\\<omega> *\n    bot =\n    y *\n    (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n     y)\\<^sup>\\<omega> *\n    bot", "using mult_left_one mult_left_zero mult_right_dist_sup mult_assoc star_mult_omega"], ["proof (prove)\nusing this:\n  (1::'a) * ?x = ?x\n  bot * ?x = bot\n  (?x \\<squnion> ?y) * ?z = ?x * ?z \\<squnion> ?y * ?z\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?x\\<^sup>\\<star> * ?x\\<^sup>\\<omega> = ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. y *\n    (x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n    (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n     y)\\<^sup>\\<omega> *\n    bot =\n    y *\n    (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n     y)\\<^sup>\\<omega> *\n    bot", "by auto"], ["proof (state)\nthis:\n  y *\n  (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> y))\\<^sup>\\<star> *\n  (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n   y)\\<^sup>\\<omega> *\n  bot =\n  y *\n  (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n   y)\\<^sup>\\<omega> *\n  bot\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "finally"], ["proof (chain)\npicking this:\n  y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> y *\n        (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot", "have \"x\\<^sup>\\<star> * y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> y *\n        (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>+ * x\\<^sup>\\<omega> * bot\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "using 3"], ["proof (prove)\nusing this:\n  y * (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> y *\n        (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>+ * x\\<^sup>\\<omega> * bot\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by (smt mult_assoc mult_right_isotone omega_slide order_trans)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> * y)\\<^sup>+ * x\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"(x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<star> * y)\\<^sup>+ * x\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by (smt (verit, ccfv_threshold) sup_assoc sup_commute le_iff_sup mult_assoc mult_isotone mult_left_one mult_1_right mult_right_sub_dist_sup_left order_trans star.circ_loop_fixpoint star.circ_reflexive star.mult_zero_circ)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"(x \\<squnion> y)\\<^sup>\\<omega> * bot \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega> * bot\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "using 4"], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n  (x\\<^sup>\\<star> * y)\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<omega> * bot\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by (smt (z3) mult_right_dist_sup sup.orderE sup_assoc sup_right_divisibility omega_decompose)"], ["proof (state)\nthis:\n  (x \\<squnion> y)\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (2 subgoals):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))\n 2. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "thus \"(x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1) \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (x \\<squnion> y)\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "using 1 2 star_left_induct mult_assoc"], ["proof (prove)\nusing this:\n  (x \\<squnion> y)\\<^sup>\\<omega> * bot\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n  (x \\<squnion> y) * x\\<^sup>\\<star> *\n  (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n  reflexive\n   (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a)))\n  ?z \\<squnion> ?y * ?x \\<le> ?x \\<longrightarrow>\n  ?y\\<^sup>\\<star> * ?z \\<le> ?x\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n          (y * x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n          ((y * x\\<^sup>\\<star> *\n            (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n           bot \\<squnion>\n           (1::'a))", "by force"], ["proof (state)\nthis:\n  (x \\<squnion> y)\\<^sup>\\<star> *\n  ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  \\<le> x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        (y * x\\<^sup>\\<star> *\n         (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n        ((y * x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have 5: \"x\\<^sup>\\<omega> * bot \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * bot\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (metis bot_least le_supI1 le_supI2 mult_isotone star.circ_loop_fixpoint sup.cobounded1 omega_isotone)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have 6: \"(y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (metis sup_commute mult_left_isotone omega_sub_dist_1 mult_assoc mult_left_sub_dist_sup_left order_trans star_mult_omega)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have 7: \"(y * x\\<^sup>\\<star>)\\<^sup>\\<star> \\<le> (x \\<squnion> y)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star>)\\<^sup>\\<star> \\<le> (x \\<squnion> y)\\<^sup>\\<star>", "by (metis mult_left_one mult_right_sub_dist_sup_left star.circ_sup_1 star.circ_plus_one)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<star> \\<le> (x \\<squnion> y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"(y * x\\<^sup>\\<star>)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<star> \\<le> (x \\<squnion> y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star>)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (smt sup_assoc le_iff_sup mult_assoc mult_isotone mult_right_dist_sup omega_sub_dist)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"(x\\<^sup>\\<omega> * bot \\<squnion> y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> y * x\\<^sup>\\<star>)\\<^sup>\\<omega> *\n    bot\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "using 6"], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<star> * x\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> y * x\\<^sup>\\<star>)\\<^sup>\\<omega> *\n    bot\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (smt sup_commute sup.bounded_iff mult_assoc mult_right_dist_sup mult_bot_add_omega omega_unfold omega_bot)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega> * bot \\<squnion> y * x\\<^sup>\\<star>)\\<^sup>\\<omega> *\n  bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"(y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<le> y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<omega> * bot \\<squnion> y * x\\<^sup>\\<star>)\\<^sup>\\<omega> *\n  bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n    bot\n    \\<le> y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (smt mult_assoc mult_left_one mult_left_zero mult_right_dist_sup mult_right_isotone omega_slide)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "also"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"... \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "using 7"], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star>)\\<^sup>\\<star> \\<le> (x \\<squnion> y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> *\n    ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (metis mult_left_isotone order_refl star.circ_mult_upper_bound star_left_induct_mult_iff)"], ["proof (state)\nthis:\n  y * x\\<^sup>\\<star> * (x \\<squnion> y)\\<^sup>\\<star> *\n  ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "finally"], ["proof (chain)\npicking this:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "have \"(y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1) \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "using 5"], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n  bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  x\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (smt (z3) le_supE star.circ_mult_upper_bound star.circ_sub_dist_1 star.mult_zero_circ star.mult_zero_sup_circ star_involutive star_isotone sup_commute)"], ["proof (state)\nthis:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "hence \"(x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1) \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "using 5"], ["proof (prove)\nusing this:\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  x\\<^sup>\\<omega> * bot\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (metis sup_commute mult_assoc star.circ_isotone star.circ_mult_upper_bound star.mult_zero_sup_circ star.mult_zero_circ star_involutive)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "thus \"x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) * (y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<star> * ((y * x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\\<^sup>\\<omega> * bot \\<squnion> 1) \\<le> (x \\<squnion> y)\\<^sup>\\<star> * ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> 1)\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    (y * x\\<^sup>\\<star> *\n     (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n    ((y * x\\<^sup>\\<star> *\n      (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n     bot \\<squnion>\n     (1::'a))\n    \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n          ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))", "by (smt sup_assoc sup_commute mult_assoc star.circ_mult_upper_bound star.circ_sub_dist star.mult_zero_sup_circ star.mult_zero_circ)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  (y * x\\<^sup>\\<star> *\n   (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((y * x\\<^sup>\\<star> *\n    (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  \\<le> (x \\<squnion> y)\\<^sup>\\<star> *\n        ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_omega_greatest:\n  \"x\\<^sup>\\<star>\\<^sup>\\<omega> = 1\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star>\\<^sup>\\<omega> = (1::'a)\\<^sup>\\<omega>", "by (metis sup_commute le_iff_sup omega_one_greatest omega_sub_dist star.circ_plus_one)"], ["", "lemma omega_vector_greatest:\n  \"x\\<^sup>\\<omega> * 1\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * (1::'a)\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "by (metis order.antisym mult_isotone omega_mult_omega_star omega_one_greatest omega_sub_vector)"], ["", "lemma mult_greatest_omega:\n  \"(x * 1\\<^sup>\\<omega>)\\<^sup>\\<omega> \\<le> x * 1\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * (1::'a)\\<^sup>\\<omega>)\\<^sup>\\<omega>\n    \\<le> x * (1::'a)\\<^sup>\\<omega>", "by (metis mult_right_isotone omega_slide omega_sub_vector)"], ["", "lemma omega_mult_star_2:\n  \"x\\<^sup>\\<omega> * y\\<^sup>\\<star> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * y\\<^sup>\\<star> = x\\<^sup>\\<omega>", "by (meson order.antisym le_supE star.circ_back_loop_prefixpoint omega_sub_vector)"], ["", "lemma omega_import:\n  assumes \"p \\<le> p * p\"\n      and \"p * x \\<le> x * p\"\n    shows \"p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "have \"p * x\\<^sup>\\<omega> \\<le> p * (p * x) * x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> \\<le> p * (p * x) * x\\<^sup>\\<omega>", "by (metis assms(1) mult_assoc mult_left_isotone omega_unfold)"], ["proof (state)\nthis:\n  p * x\\<^sup>\\<omega> \\<le> p * (p * x) * x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  p * x\\<^sup>\\<omega> \\<le> p * (p * x) * x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "have \"... \\<le> p * x * p * x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (p * x) * x\\<^sup>\\<omega> \\<le> p * x * p * x\\<^sup>\\<omega>", "by (metis assms(2) mult_assoc mult_left_isotone mult_right_isotone)"], ["proof (state)\nthis:\n  p * (p * x) * x\\<^sup>\\<omega> \\<le> p * x * p * x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "finally"], ["proof (chain)\npicking this:\n  p * x\\<^sup>\\<omega> \\<le> p * x * p * x\\<^sup>\\<omega>", "have \"p * x\\<^sup>\\<omega> \\<le> (p * x)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  p * x\\<^sup>\\<omega> \\<le> p * x * p * x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> \\<le> (p * x)\\<^sup>\\<omega>", "by (simp add: mult_assoc omega_induct_mult)"], ["proof (state)\nthis:\n  p * x\\<^sup>\\<omega> \\<le> (p * x)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "hence \"p * x\\<^sup>\\<omega> \\<le> p * (p * x)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  p * x\\<^sup>\\<omega> \\<le> (p * x)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> \\<le> p * (p * x)\\<^sup>\\<omega>", "by (metis assms(1) mult_assoc mult_left_isotone mult_right_isotone order_trans)"], ["proof (state)\nthis:\n  p * x\\<^sup>\\<omega> \\<le> p * (p * x)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "thus \"p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  p * x\\<^sup>\\<omega> \\<le> p * (p * x)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>", "by (metis assms(2) sup_left_divisibility order.antisym mult_right_isotone omega_induct_mult omega_slide omega_sub_dist)"], ["proof (state)\nthis:\n  p * x\\<^sup>\\<omega> = p * (p * x)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*\nlemma omega_circ_simulate_right_plus: \"z * x \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * z \\<squnion> w \\<longrightarrow> z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\" nitpick [expect=genuine,card=4] oops\nlemma omega_circ_simulate_left_plus: \"x * z \\<le> z * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion> w \\<longrightarrow> (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z \\<le> (z \\<squnion> (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)\" nitpick [expect=genuine,card=5] oops\n*)"], ["", "end"], ["", "text \\<open>Theorem 50.2\\<close>"], ["", "sublocale left_omega_algebra < comb0: left_conway_semiring where circ = \"(\\<lambda>x . x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_conway_semiring\n     (\\<lambda>x.\n         x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       Rf x\n        (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n 3. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a)))", "apply (smt sup_assoc sup_commute le_iff_sup mult_assoc mult_left_sub_dist_sup_left omega_unfold star.circ_loop_fixpoint star_mult_omega)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n 2. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a)))", "using omega_bot_left_slide mult_assoc"], ["proof (prove)\nusing this:\n  (?x * ?y)\\<^sup>\\<star> *\n  ((?x * ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  ?x\n  \\<le> ?x * (?y * ?x)\\<^sup>\\<star> *\n        ((?y * ?x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n 2. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a)))", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a)))", "using omega_bot_add_1 mult_assoc"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y)\\<^sup>\\<star> *\n  ((?x \\<squnion> ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  (?y * ?x\\<^sup>\\<star> *\n   (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<star> *\n  ((?y * ?x\\<^sup>\\<star> *\n    (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a))\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<omega> *\n         bot \\<squnion>\n         (1::'a)))", "by simp"], ["", "class left_zero_omega_algebra = left_zero_kleene_algebra + left_omega_algebra\nbegin"], ["", "lemma star_omega_absorb:\n  \"y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> = (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n    y\\<^sup>\\<omega> =\n    (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n    y\\<^sup>\\<omega> =\n    (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>", "have \"y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> = y\\<^sup>\\<star> * y\\<^sup>\\<star> * x * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n    y\\<^sup>\\<omega> =\n    y\\<^sup>\\<star> * y\\<^sup>\\<star> * x *\n    (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n    y\\<^sup>\\<omega> \\<squnion>\n    y\\<^sup>\\<star> * y\\<^sup>\\<omega>", "by (metis sup_commute mult_assoc mult_right_dist_sup star.circ_back_loop_fixpoint star.circ_plus_same)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> =\n  y\\<^sup>\\<star> * y\\<^sup>\\<star> * x *\n  (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n  y\\<^sup>\\<omega> \\<squnion>\n  y\\<^sup>\\<star> * y\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n    y\\<^sup>\\<omega> =\n    (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> =\n  y\\<^sup>\\<star> * y\\<^sup>\\<star> * x *\n  (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n  y\\<^sup>\\<omega> \\<squnion>\n  y\\<^sup>\\<star> * y\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> *\n    y\\<^sup>\\<omega> =\n    (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>", "by (metis mult_assoc star.circ_loop_fixpoint star.circ_transitive_equal star_mult_omega)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> * (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega> =\n  (y\\<^sup>\\<star> * x)\\<^sup>\\<star> * y\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma omega_circ_simulate_right_plus: \n  assumes \"z * x \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * z \\<squnion> w\"\n    shows \"z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "have 1: \"z * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y * y\\<^sup>\\<star> * z \\<squnion> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w", "by (metis assms mult_assoc mult_left_dist_sup mult_left_zero mult_right_dist_sup omega_unfold)"], ["proof (state)\nthis:\n  z * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "hence \"(y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> y * y\\<^sup>\\<star> * z \\<squnion> w) \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  z * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n     y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n     y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n    x\n    \\<le> y\\<^sup>\\<omega> * bot \\<squnion>\n          y\\<^sup>\\<star> *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion>\n           w) \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt sup_assoc sup_ge1 sup_ge2 le_iff_sup mult_assoc mult_left_dist_sup mult_left_zero mult_right_dist_sup star.circ_back_loop_fixpoint)"], ["proof (state)\nthis:\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> *\n        (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion>\n         w) \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "also"], ["proof (state)\nthis:\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> *\n        (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion>\n         w) \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "have \"... = y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> * bot \\<squnion>\n    y\\<^sup>\\<star> *\n    (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion>\n     w) \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n    y\\<^sup>\\<omega> * bot \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt sup_assoc sup_ge2 le_iff_sup mult_assoc mult_left_dist_sup star.circ_back_loop_fixpoint star_mult_omega)"], ["proof (state)\nthis:\n  y\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> *\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w) \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  y\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "also"], ["proof (state)\nthis:\n  y\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> *\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w) \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star> =\n  y\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "have \"... \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> * bot \\<squnion>\n    y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n    y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n    \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (smt sup_commute sup_left_isotone mult_left_isotone star.circ_increasing star.circ_plus_same star.circ_transitive_equal)"], ["proof (state)\nthis:\n  y\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * y * y\\<^sup>\\<star> * z \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n  y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "finally"], ["proof (chain)\npicking this:\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "have \"z \\<squnion> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z \\<squnion>\n    (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n     y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n     y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n    x\n    \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (metis (no_types, lifting) le_supE le_supI star.circ_loop_fixpoint sup.cobounded1)"], ["proof (state)\nthis:\n  z \\<squnion>\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "hence 2: \"z * x\\<^sup>\\<star> \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  z \\<squnion>\n  (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n   y\\<^sup>\\<star> * w * x\\<^sup>\\<star>) *\n  x\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<star>\n    \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n          y\\<^sup>\\<star> * w * x\\<^sup>\\<star>", "by (simp add: star_right_induct)"], ["proof (state)\nthis:\n  z * x\\<^sup>\\<star>\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "have \"z * x\\<^sup>\\<omega> * bot \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y * y\\<^sup>\\<star> * z \\<squnion> w) * x\\<^sup>\\<omega> * bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<omega> * bot\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w) *\n          x\\<^sup>\\<omega> *\n          bot", "using 1"], ["proof (prove)\nusing this:\n  z * x \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<omega> * bot\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w) *\n          x\\<^sup>\\<omega> *\n          bot", "by (smt sup_left_divisibility mult_assoc mult_right_sub_dist_sup_left omega_unfold)"], ["proof (state)\nthis:\n  z * x\\<^sup>\\<omega> * bot\n  \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w) *\n        x\\<^sup>\\<omega> *\n        bot\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "hence \"z * x\\<^sup>\\<omega> * bot \\<le> y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> w * x\\<^sup>\\<omega> * bot)\""], ["proof (prove)\nusing this:\n  z * x\\<^sup>\\<omega> * bot\n  \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>+ * z \\<squnion> w) *\n        x\\<^sup>\\<omega> *\n        bot\n\ngoal (1 subgoal):\n 1. z * x\\<^sup>\\<omega> * bot\n    \\<le> y\\<^sup>\\<omega> \\<squnion>\n          y\\<^sup>\\<star> *\n          (y\\<^sup>\\<omega> * bot \\<squnion> w * x\\<^sup>\\<omega> * bot)", "by (smt sup_assoc sup_commute left_plus_omega mult_assoc mult_left_zero mult_right_dist_sup omega_induct star.left_plus_circ)"], ["proof (state)\nthis:\n  z * x\\<^sup>\\<omega> * bot\n  \\<le> y\\<^sup>\\<omega> \\<squnion>\n        y\\<^sup>\\<star> *\n        (y\\<^sup>\\<omega> * bot \\<squnion> w * x\\<^sup>\\<omega> * bot)\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "thus \"z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\""], ["proof (prove)\nusing this:\n  z * x\\<^sup>\\<omega> * bot\n  \\<le> y\\<^sup>\\<omega> \\<squnion>\n        y\\<^sup>\\<star> *\n        (y\\<^sup>\\<omega> * bot \\<squnion> w * x\\<^sup>\\<omega> * bot)\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "using 2"], ["proof (prove)\nusing this:\n  z * x\\<^sup>\\<omega> * bot\n  \\<le> y\\<^sup>\\<omega> \\<squnion>\n        y\\<^sup>\\<star> *\n        (y\\<^sup>\\<omega> * bot \\<squnion> w * x\\<^sup>\\<omega> * bot)\n  z * x\\<^sup>\\<star>\n  \\<le> y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star> * z \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<omega> * bot \\<squnion>\n        y\\<^sup>\\<star> * w * x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "by (smt sup_assoc sup_commute le_iff_sup mult_assoc mult_left_dist_sup mult_left_zero mult_right_dist_sup omega_unfold omega_bot star_mult_omega zero_right_mult_decreasing)"], ["proof (state)\nthis:\n  z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n  \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n        (z \\<squnion>\n         w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma omega_circ_simulate_left_plus:\n  assumes \"x * z \\<le> z * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion> w\"\n    shows \"(x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z \\<le> (z \\<squnion> (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "have \"x * (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) = x * z * y\\<^sup>\\<omega> * bot \\<squnion> x * z * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x * x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x * x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x *\n    (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     x\\<^sup>\\<omega> * bot \\<squnion>\n     x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n     x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) =\n    x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n    x * z * y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>+ * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>+ * w * y\\<^sup>\\<star>", "by (smt mult_assoc mult_left_dist_sup omega_unfold)"], ["proof (state)\nthis:\n  x *\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   x\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) =\n  x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "also"], ["proof (state)\nthis:\n  x *\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   x\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>) =\n  x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "have \"... \\<le> x * z * y\\<^sup>\\<omega> * bot \\<squnion> x * z * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n    x * z * y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>+ * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>+ * w * y\\<^sup>\\<star>\n    \\<le> x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n          x * z * y\\<^sup>\\<star> \\<squnion>\n          x\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (metis sup_mono sup_right_isotone mult_left_isotone star.left_plus_below_circ)"], ["proof (state)\nthis:\n  x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n  \\<le> x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n        x * z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "also"], ["proof (state)\nthis:\n  x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>+ * w * y\\<^sup>\\<star>\n  \\<le> x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n        x * z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "have \"... \\<le> (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) * y\\<^sup>\\<omega> * bot \\<squnion> (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n    x * z * y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n    \\<le> (z * y\\<^sup>\\<omega> * bot \\<squnion>\n           z * y\\<^sup>\\<star> \\<squnion>\n           w) *\n          y\\<^sup>\\<omega> *\n          bot \\<squnion>\n          (z * y\\<^sup>\\<omega> * bot \\<squnion>\n           z * y\\<^sup>\\<star> \\<squnion>\n           w) *\n          y\\<^sup>\\<star> \\<squnion>\n          x\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (metis assms sup_left_isotone mult_assoc mult_left_dist_sup mult_left_isotone)"], ["proof (state)\nthis:\n  x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n  \\<le> (z * y\\<^sup>\\<omega> * bot \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        y\\<^sup>\\<omega> *\n        bot \\<squnion>\n        (z * y\\<^sup>\\<omega> * bot \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "also"], ["proof (state)\nthis:\n  x * z * y\\<^sup>\\<omega> * bot \\<squnion>\n  x * z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n  \\<le> (z * y\\<^sup>\\<omega> * bot \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        y\\<^sup>\\<omega> *\n        bot \\<squnion>\n        (z * y\\<^sup>\\<omega> * bot \\<squnion>\n         z * y\\<^sup>\\<star> \\<squnion>\n         w) *\n        y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "have \"... = z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> * y\\<^sup>\\<omega> * bot \\<squnion> w * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> * y\\<^sup>\\<star> \\<squnion> w * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     w) *\n    y\\<^sup>\\<omega> *\n    bot \\<squnion>\n    (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n     w) *\n    y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n    z * y\\<^sup>\\<omega> * bot \\<squnion>\n    z * y\\<^sup>\\<star> * y\\<^sup>\\<omega> * bot \\<squnion>\n    w * y\\<^sup>\\<omega> * bot \\<squnion>\n    z * y\\<^sup>\\<omega> * bot \\<squnion>\n    z * y\\<^sup>\\<star> * y\\<^sup>\\<star> \\<squnion>\n    w * y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt sup_assoc mult_assoc mult_left_zero mult_right_dist_sup)"], ["proof (state)\nthis:\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) *\n  y\\<^sup>\\<omega> *\n  bot \\<squnion>\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) *\n  y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n  z * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<star> * y\\<^sup>\\<omega> * bot \\<squnion>\n  w * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<star> * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "also"], ["proof (state)\nthis:\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) *\n  y\\<^sup>\\<omega> *\n  bot \\<squnion>\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> w) *\n  y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n  z * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<star> * y\\<^sup>\\<omega> * bot \\<squnion>\n  w * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<star> * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "have \"... = z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * y\\<^sup>\\<omega> * bot \\<squnion>\n    z * y\\<^sup>\\<star> * y\\<^sup>\\<omega> * bot \\<squnion>\n    w * y\\<^sup>\\<omega> * bot \\<squnion>\n    z * y\\<^sup>\\<omega> * bot \\<squnion>\n    z * y\\<^sup>\\<star> * y\\<^sup>\\<star> \\<squnion>\n    w * y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n    z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n    x\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n    x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt (verit, ccfv_threshold) sup_assoc sup_commute sup_idem mult_assoc mult_right_dist_sup star.circ_loop_fixpoint star.circ_transitive_equal star_mult_omega)"], ["proof (state)\nthis:\n  z * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<star> * y\\<^sup>\\<omega> * bot \\<squnion>\n  w * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<omega> * bot \\<squnion>\n  z * y\\<^sup>\\<star> * y\\<^sup>\\<star> \\<squnion>\n  w * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star> =\n  z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n  x\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n  x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "finally"], ["proof (chain)\npicking this:\n  x *\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   x\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n  \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "have \"x\\<^sup>\\<star> * z \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x *\n  (z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n   x\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n   x\\<^sup>\\<star> * w * y\\<^sup>\\<star>)\n  \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * z\n    \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion>\n          z * y\\<^sup>\\<star> \\<squnion>\n          x\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt (z3) le_supE sup_least sup_ge1 star.circ_back_loop_fixpoint star_left_induct)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> * z\n  \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "hence \"(x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion> x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> * z\n  \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion>\n          z * y\\<^sup>\\<star> \\<squnion>\n          x\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n          x\\<^sup>\\<star> * w * y\\<^sup>\\<star>", "by (smt (z3) sup.left_commute sup_commute sup_least sup_ge1 mult_assoc mult_left_zero mult_right_dist_sup)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n  \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "thus \"(x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z \\<le> (z \\<squnion> (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n  \\<le> z * y\\<^sup>\\<omega> * bot \\<squnion> z * y\\<^sup>\\<star> \\<squnion>\n        x\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<omega> * bot \\<squnion>\n        x\\<^sup>\\<star> * w * y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n    \\<le> (z \\<squnion>\n           (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n          (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "by (smt sup_assoc mult_assoc mult_left_dist_sup mult_left_zero mult_right_dist_sup)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n  \\<le> (z \\<squnion>\n         (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n        (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma omega_translate:\n  \"x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) = x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n    x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>", "by (metis mult_assoc mult_left_dist_sup mult_1_right star_mult_omega)"], ["", "lemma omega_circ_simulate_right:\n  assumes \"z * x \\<le> y * z \\<squnion> w\"\n    shows \"z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "have \"... \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * z \\<squnion> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * z \\<squnion> w\n    \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          z \\<squnion>\n          w", "using comb0.circ_mult_increasing mult_isotone sup_left_isotone omega_translate"], ["proof (prove)\nusing this:\n  ?x \\<le> ?x *\n           (?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n  \\<lbrakk>?w \\<le> ?y; ?x \\<le> ?z\\<rbrakk>\n  \\<Longrightarrow> ?w * ?x \\<le> ?y * ?z\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y * z \\<squnion> w\n    \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          z \\<squnion>\n          w", "by auto"], ["proof (state)\nthis:\n  y * z \\<squnion> w\n  \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n        z \\<squnion>\n        w\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "thus \"z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) * (z \\<squnion> w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\""], ["proof (prove)\nusing this:\n  y * z \\<squnion> w\n  \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n        z \\<squnion>\n        w\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "using assms order_trans omega_circ_simulate_right_plus"], ["proof (prove)\nusing this:\n  y * z \\<squnion> w\n  \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n        z \\<squnion>\n        w\n  z * x \\<le> y * z \\<squnion> w\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n  ?z * ?x\n  \\<le> ?y * (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) *\n        ?z \\<squnion>\n        ?w \\<Longrightarrow>\n  ?z * (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>)\n  \\<le> (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) *\n        (?z \\<squnion>\n         ?w * (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>))\n\ngoal (1 subgoal):\n 1. z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n    \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n          (z \\<squnion>\n           w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))", "by blast"], ["proof (state)\nthis:\n  z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n  \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n        (z \\<squnion>\n         w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "sublocale left_zero_omega_algebra < comb1: left_conway_semiring_1 where circ = \"(\\<lambda>x . x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_conway_semiring_1\n     (\\<lambda>x.\n         x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x *\n       ((y * x)\\<^sup>\\<star> *\n        ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n       \\<le> (x * y)\\<^sup>\\<star> *\n             ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n             x", "by (smt order.eq_iff mult_assoc mult_left_dist_sup mult_left_zero mult_right_dist_sup mult_1_right omega_slide star_slide)"], ["", "sublocale left_zero_omega_algebra < comb0: itering where circ = \"(\\<lambda>x . x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.itering\n     (\\<lambda>x.\n         x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        y)\\<^sup>\\<star> *\n       ((x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot \\<squnion>\n        (1::'a)) *\n       (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       Rf (x *\n           ((y * x)\\<^sup>\\<star> *\n            ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n        y\n 3. \\<And>z x y w.\n       z * x\n       \\<le> y *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n       \\<le> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n             (z \\<squnion>\n              w *\n              (x\\<^sup>\\<star> *\n               (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n 4. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "using comb1.circ_sup_9"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y)\\<^sup>\\<star> *\n  ((?x \\<squnion> ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  (?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n   ?y)\\<^sup>\\<star> *\n  ((?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    ?y)\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a)) *\n  (?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n        y)\\<^sup>\\<star> *\n       ((x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n         y)\\<^sup>\\<omega> *\n        bot \\<squnion>\n        (1::'a)) *\n       (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       Rf (x *\n           ((y * x)\\<^sup>\\<star> *\n            ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n        y\n 3. \\<And>z x y w.\n       z * x\n       \\<le> y *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n       \\<le> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n             (z \\<squnion>\n              w *\n              (x\\<^sup>\\<star> *\n               (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n 4. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       Rf (x *\n           ((y * x)\\<^sup>\\<star> *\n            ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n        y\n 2. \\<And>z x y w.\n       z * x\n       \\<le> y *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n       \\<le> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n             (z \\<squnion>\n              w *\n              (x\\<^sup>\\<star> *\n               (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n 3. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "using comb1.circ_mult_1"], ["proof (prove)\nusing this:\n  (?x * ?y)\\<^sup>\\<star> *\n  ((?x * ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  Rf (?x *\n      ((?y * ?x)\\<^sup>\\<star> *\n       ((?y * ?x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n   ?y\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<star> *\n       ((x * y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n       Rf (x *\n           ((y * x)\\<^sup>\\<star> *\n            ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n        y\n 2. \\<And>z x y w.\n       z * x\n       \\<le> y *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n       \\<le> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n             (z \\<squnion>\n              w *\n              (x\\<^sup>\\<star> *\n               (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n 3. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z x y w.\n       z * x\n       \\<le> y *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n       \\<le> y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n             (z \\<squnion>\n              w *\n              (x\\<^sup>\\<star> *\n               (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\n 2. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "apply (metis omega_circ_simulate_right_plus omega_translate)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "using omega_circ_simulate_left_plus omega_translate"], ["proof (prove)\nusing this:\n  ?x * ?z\n  \\<le> ?z *\n        (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) \\<squnion>\n        ?w \\<Longrightarrow>\n  (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>) * ?z\n  \\<le> (?z \\<squnion>\n         (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>) * ?w) *\n        (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>)\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<star> *\n              (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) \\<squnion>\n             w \\<longrightarrow>\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) * z\n       \\<le> (z \\<squnion>\n              x\\<^sup>\\<star> *\n              (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n              w) *\n             (y\\<^sup>\\<star> * (y\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))", "by auto"], ["", "text \\<open>Theorem 2.2\\<close>"], ["", "sublocale left_zero_omega_algebra < comb2: itering where circ = \"(\\<lambda>x . x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.itering\n     (\\<lambda>x. x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) (1::'a)\n     (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion>\n       (x \\<squnion> y)\\<^sup>\\<star> =\n       (((x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) *\n         y)\\<^sup>\\<omega> *\n        bot \\<squnion>\n        ((x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) *\n         y)\\<^sup>\\<star>) *\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<omega> * bot \\<squnion> (x * y)\\<^sup>\\<star> =\n       Rf (x *\n           ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (y * x)\\<^sup>\\<star>))\n        y\n 3. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n 4. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "using comb1.circ_sup_9 omega_translate"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y)\\<^sup>\\<star> *\n  ((?x \\<squnion> ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  (?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n   ?y)\\<^sup>\\<star> *\n  ((?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n    ?y)\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (1::'a)) *\n  (?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<omega> * bot \\<squnion>\n       (x \\<squnion> y)\\<^sup>\\<star> =\n       (((x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) *\n         y)\\<^sup>\\<omega> *\n        bot \\<squnion>\n        ((x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) *\n         y)\\<^sup>\\<star>) *\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<omega> * bot \\<squnion> (x * y)\\<^sup>\\<star> =\n       Rf (x *\n           ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (y * x)\\<^sup>\\<star>))\n        y\n 3. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n 4. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<omega> * bot \\<squnion> (x * y)\\<^sup>\\<star> =\n       Rf (x *\n           ((y * x)\\<^sup>\\<omega> * bot \\<squnion> (y * x)\\<^sup>\\<star>))\n        y\n 2. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n 3. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "apply (metis comb1.circ_mult_1 omega_translate)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n 2. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "using omega_circ_simulate_right_plus"], ["proof (prove)\nusing this:\n  ?z * ?x\n  \\<le> ?y * (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) *\n        ?z \\<squnion>\n        ?w \\<Longrightarrow>\n  ?z * (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>)\n  \\<le> (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) *\n        (?z \\<squnion>\n         ?w * (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>))\n\ngoal (2 subgoals):\n 1. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>))\n 2. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z\n       \\<le> z *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> * bot \\<squnion> y\\<^sup>\\<star>)", "by (simp add: omega_circ_simulate_left_plus)"], ["", "class omega_algebra = kleene_algebra + left_zero_omega_algebra"], ["", "class left_omega_conway_semiring = left_omega_algebra + left_conway_semiring\nbegin"], ["", "subclass left_kleene_conway_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_kleene_conway_semiring circ (1::'a) (*) (\\<squnion>) (\\<le>)\n     (<) bot star", ".."], ["", "lemma circ_below_omega_star:\n  \"x\\<^sup>\\<circ> \\<le> x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ> \\<le> x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>", "by (metis circ_left_unfold mult_1_right omega_induct order_refl)"], ["", "lemma omega_mult_circ:\n  \"x\\<^sup>\\<omega> * x\\<^sup>\\<circ> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * x\\<^sup>\\<circ> = x\\<^sup>\\<omega>", "by (metis circ_star omega_mult_star_2)"], ["", "lemma circ_mult_omega:\n  \"x\\<^sup>\\<circ> * x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ> * x\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "by (metis order.antisym sup_right_divisibility circ_loop_fixpoint circ_plus_sub omega_simulation)"], ["", "lemma circ_omega_greatest:\n  \"x\\<^sup>\\<circ>\\<^sup>\\<omega> = 1\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ>\\<^sup>\\<omega> = (1::'a)\\<^sup>\\<omega>", "by (metis circ_star star_omega_greatest)"], ["", "lemma omega_circ:\n  \"x\\<^sup>\\<omega>\\<^sup>\\<circ> = 1 \\<squnion> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\\<^sup>\\<circ> = (1::'a) \\<squnion> x\\<^sup>\\<omega>", "by (metis order.antisym circ_left_unfold mult_left_sub_dist_sup_left mult_1_right omega_sub_vector)"], ["", "end"], ["", "class bounded_left_omega_algebra = bounded_left_kleene_algebra + left_omega_algebra\nbegin"], ["", "lemma omega_one:\n  \"1\\<^sup>\\<omega> = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a)\\<^sup>\\<omega> = top", "by (simp add: order.antisym omega_one_greatest)"], ["", "lemma star_omega_top:\n  \"x\\<^sup>\\<star>\\<^sup>\\<omega> = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star>\\<^sup>\\<omega> = top", "by (simp add: star_omega_greatest omega_one)"], ["", "lemma omega_vector:\n  \"x\\<^sup>\\<omega> * top = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector (x\\<^sup>\\<omega>)", "by (simp add: order.antisym omega_sub_vector top_right_mult_increasing)"], ["", "lemma mult_top_omega:\n  \"(x * top)\\<^sup>\\<omega> \\<le> x * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * top)\\<^sup>\\<omega> \\<le> x * top", "using mult_greatest_omega omega_one"], ["proof (prove)\nusing this:\n  (?x * (1::'a)\\<^sup>\\<omega>)\\<^sup>\\<omega>\n  \\<le> ?x * (1::'a)\\<^sup>\\<omega>\n  (1::'a)\\<^sup>\\<omega> = top\n\ngoal (1 subgoal):\n 1. (x * top)\\<^sup>\\<omega> \\<le> x * top", "by auto"], ["", "end"], ["", "sublocale bounded_left_omega_algebra < comb0: bounded_left_conway_semiring where circ = \"(\\<lambda>x . x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_left_conway_semiring\n     (\\<lambda>x.\n         x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot top", ".."], ["", "class bounded_left_zero_omega_algebra = bounded_left_zero_kleene_algebra + left_zero_omega_algebra\nbegin"], ["", "subclass bounded_left_omega_algebra"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_left_omega_algebra star (1::'a) (*) (\\<squnion>) (\\<le>)\n     (<) bot top omega", ".."], ["", "end"], ["", "sublocale bounded_left_zero_omega_algebra < comb0: bounded_itering where circ = \"(\\<lambda>x . x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_itering\n     (\\<lambda>x.\n         x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)))\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot top", ".."], ["", "class bounded_omega_algebra = bounded_kleene_algebra + omega_algebra\nbegin"], ["", "subclass bounded_left_zero_omega_algebra"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_left_zero_omega_algebra star (1::'a) (*) (\\<squnion>)\n     (\\<le>) (<) bot top omega", ".."], ["", "end"], ["", "class bounded_left_omega_conway_semiring = bounded_left_omega_algebra + left_omega_conway_semiring\nbegin"], ["", "subclass left_kleene_conway_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_kleene_conway_semiring circ (1::'a) (*) (\\<squnion>) (\\<le>)\n     (<) bot star", ".."], ["", "subclass bounded_left_conway_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bounded_left_conway_semiring circ (1::'a) (*) (\\<squnion>) (\\<le>)\n     (<) bot top", ".."], ["", "lemma circ_omega:\n  \"x\\<^sup>\\<circ>\\<^sup>\\<omega> = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<circ>\\<^sup>\\<omega> = top", "by (simp add: circ_omega_greatest omega_one)"], ["", "end"], ["", "class top_left_omega_algebra = bounded_left_omega_algebra +\n  assumes top_left_bot: \"top * x = top\"\nbegin"], ["", "lemma omega_translate_3:\n  \"x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> 1) = x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n    x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a))", "by (metis omega_one omega_vector_greatest top_left_bot mult_assoc)"], ["", "end"], ["", "text \\<open>Theorem 50.2\\<close>"], ["", "sublocale top_left_omega_algebra < comb4: left_conway_semiring where circ = \"(\\<lambda>x . x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.left_conway_semiring\n     (\\<lambda>x. x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)))\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       Rf x (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a))) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a))\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<star> * ((x * y)\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> \\<squnion> (1::'a)))\n 3. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<omega> \\<squnion>\n         (1::'a)))", "using comb0.circ_left_unfold omega_translate_3"], ["proof (prove)\nusing this:\n  Rf ?x (?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))) =\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> \\<squnion> (1::'a))\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       Rf x (x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a))) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a))\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<star> * ((x * y)\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> \\<squnion> (1::'a)))\n 3. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<omega> \\<squnion>\n         (1::'a)))", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<star> * ((x * y)\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> \\<squnion> (1::'a)))\n 2. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<omega> \\<squnion>\n         (1::'a)))", "using omega_bot_left_slide omega_translate_3 mult_assoc"], ["proof (prove)\nusing this:\n  (?x * ?y)\\<^sup>\\<star> *\n  ((?x * ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  ?x\n  \\<le> ?x * (?y * ?x)\\<^sup>\\<star> *\n        ((?y * ?x)\\<^sup>\\<omega> * bot \\<squnion> (1::'a))\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> \\<squnion> (1::'a))\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<star> * ((x * y)\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       x\n       \\<le> x *\n             ((y * x)\\<^sup>\\<star> *\n              ((y * x)\\<^sup>\\<omega> \\<squnion> (1::'a)))\n 2. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<omega> \\<squnion>\n         (1::'a)))", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<omega> \\<squnion>\n         (1::'a)))", "using comb0.circ_sup_1 omega_translate_3"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y)\\<^sup>\\<star> *\n  ((?x \\<squnion> ?y)\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) *\n  ((?y *\n    (?x\\<^sup>\\<star> *\n     (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<star> *\n   ((?y *\n     (?x\\<^sup>\\<star> *\n      (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a))))\\<^sup>\\<omega> *\n    bot \\<squnion>\n    (1::'a)))\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> * bot \\<squnion> (1::'a)) =\n  ?x\\<^sup>\\<star> * (?x\\<^sup>\\<omega> \\<squnion> (1::'a))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<star> *\n       ((x \\<squnion> y)\\<^sup>\\<omega> \\<squnion> (1::'a)) =\n       x\\<^sup>\\<star> * (x\\<^sup>\\<omega> \\<squnion> (1::'a)) *\n       ((y *\n         (x\\<^sup>\\<star> *\n          (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<star> *\n        ((y *\n          (x\\<^sup>\\<star> *\n           (x\\<^sup>\\<omega> \\<squnion> (1::'a))))\\<^sup>\\<omega> \\<squnion>\n         (1::'a)))", "by auto"], ["", "class top_left_bot_omega_algebra = bounded_left_zero_omega_algebra +\n  assumes top_left_bot: \"top * x = top\"\nbegin"], ["", "lemma omega_translate_2:\n  \"x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> = x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> * bot \\<squnion> x\\<^sup>\\<star> =\n    x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>", "by (metis mult_assoc omega_mult_star_2 star.circ_top top_left_bot)"], ["", "end"], ["", "text \\<open>Theorem 2.3\\<close>"], ["", "sublocale top_left_bot_omega_algebra < comb3: itering where circ = \"(\\<lambda>x . x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.itering (\\<lambda>x. x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n     (1::'a) (*) (\\<squnion>) (\\<le>) (<) bot", "apply unfold_locales"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<omega> \\<squnion>\n       (x \\<squnion> y)\\<^sup>\\<star> =\n       (((x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) *\n         y)\\<^sup>\\<omega> \\<squnion>\n        ((x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * y)\\<^sup>\\<star>) *\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<omega> \\<squnion> (x * y)\\<^sup>\\<star> =\n       Rf (x * ((y * x)\\<^sup>\\<omega> \\<squnion> (y * x)\\<^sup>\\<star>)) y\n 3. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>))\n 4. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "using comb2.circ_slide_1 comb2.circ_sup_1 omega_translate_2"], ["proof (prove)\nusing this:\n  ?x * ((?y * ?x)\\<^sup>\\<omega> * bot \\<squnion> (?y * ?x)\\<^sup>\\<star>) =\n  ((?x * ?y)\\<^sup>\\<omega> * bot \\<squnion> (?x * ?y)\\<^sup>\\<star>) * ?x\n  (?x \\<squnion> ?y)\\<^sup>\\<omega> * bot \\<squnion>\n  (?x \\<squnion> ?y)\\<^sup>\\<star> =\n  (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>) *\n  ((?y *\n    (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>))\\<^sup>\\<omega> *\n   bot \\<squnion>\n   (?y *\n    (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>))\\<^sup>\\<star>)\n  ?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star> =\n  ?x\\<^sup>\\<omega> \\<squnion> ?x\\<^sup>\\<star>\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<squnion> y)\\<^sup>\\<omega> \\<squnion>\n       (x \\<squnion> y)\\<^sup>\\<star> =\n       (((x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) *\n         y)\\<^sup>\\<omega> \\<squnion>\n        ((x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * y)\\<^sup>\\<star>) *\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n 2. \\<And>x y.\n       (x * y)\\<^sup>\\<omega> \\<squnion> (x * y)\\<^sup>\\<star> =\n       Rf (x * ((y * x)\\<^sup>\\<omega> \\<squnion> (y * x)\\<^sup>\\<star>)) y\n 3. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>))\n 4. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       (x * y)\\<^sup>\\<omega> \\<squnion> (x * y)\\<^sup>\\<star> =\n       Rf (x * ((y * x)\\<^sup>\\<omega> \\<squnion> (y * x)\\<^sup>\\<star>)) y\n 2. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>))\n 3. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "apply (metis comb2.circ_mult_1 omega_translate_2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>))\n 2. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "using omega_circ_simulate_right_plus omega_translate_2"], ["proof (prove)\nusing this:\n  ?z * ?x\n  \\<le> ?y * (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) *\n        ?z \\<squnion>\n        ?w \\<Longrightarrow>\n  ?z * (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>)\n  \\<le> (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) *\n        (?z \\<squnion>\n         ?w * (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>))\n  ?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star> =\n  ?x\\<^sup>\\<omega> \\<squnion> ?x\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. \\<And>z x y w.\n       z * x\n       \\<le> y * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             z \\<squnion>\n             w \\<longrightarrow>\n       z * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>)\n       \\<le> (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) *\n             (z \\<squnion>\n              w * (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>))\n 2. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "using omega_circ_simulate_left_plus omega_translate_2"], ["proof (prove)\nusing this:\n  ?x * ?z\n  \\<le> ?z *\n        (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>) \\<squnion>\n        ?w \\<Longrightarrow>\n  (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>) * ?z\n  \\<le> (?z \\<squnion>\n         (?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star>) * ?w) *\n        (?y\\<^sup>\\<omega> * bot \\<squnion> ?y\\<^sup>\\<star>)\n  ?x\\<^sup>\\<omega> * bot \\<squnion> ?x\\<^sup>\\<star> =\n  ?x\\<^sup>\\<omega> \\<squnion> ?x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>x z y w.\n       x * z\n       \\<le> z * (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>) \\<squnion>\n             w \\<longrightarrow>\n       (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * z\n       \\<le> (z \\<squnion>\n              (x\\<^sup>\\<omega> \\<squnion> x\\<^sup>\\<star>) * w) *\n             (y\\<^sup>\\<omega> \\<squnion> y\\<^sup>\\<star>)", "by auto"], ["", "class Omega =\n  fixes Omega :: \"'a \\<Rightarrow> 'a\" (\"_\\<^sup>\\<Omega>\" [100] 100)"], ["", "end"]]}