{"file_name": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras/Binary_Iterings.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Correctness_Algebras", "problem_names": ["lemma while_zero:\n  \"bot \\<star> x = x\"", "lemma while_mult_increasing:\n  \"x * y \\<le> x \\<star> y\"", "lemma while_one_increasing:\n  \"x \\<le> x \\<star> 1\"", "lemma while_increasing:\n  \"y \\<le> x \\<star> y\"", "lemma while_right_isotone:\n  \"y \\<le> z \\<Longrightarrow> x \\<star> y \\<le> x \\<star> z\"", "lemma while_left_isotone:\n  \"x \\<le> y \\<Longrightarrow> x \\<star> z \\<le> y \\<star> z\"", "lemma while_isotone:\n  \"w \\<le> x \\<Longrightarrow> y \\<le> z \\<Longrightarrow> w \\<star> y \\<le> x \\<star> z\"", "lemma while_left_unfold:\n  \"x \\<star> y = y \\<squnion> x * (x \\<star> y)\"", "lemma while_simulate_left_plus_1:\n  \"x * z \\<le> z * (y \\<star> 1) \\<Longrightarrow> x \\<star> (z * w) \\<le> z * (y \\<star> w) \\<squnion> (x \\<star> bot)\"", "lemma while_simulate_absorb:\n  \"y * x \\<le> x \\<Longrightarrow> y \\<star> x \\<le> x \\<squnion> (y \\<star> bot)\"", "lemma while_transitive:\n  \"x \\<star> (x \\<star> y) = x \\<star> y\"", "lemma while_slide:\n  \"(x * y) \\<star> (x * z) = x * ((y * x) \\<star> z)\"", "lemma while_zero_2:\n  \"(x * bot) \\<star> y = x * bot \\<squnion> y\"", "lemma while_mult_star_exchange:\n  \"x * (x \\<star> y) = x \\<star> (x * y)\"", "lemma while_right_unfold:\n  \"x \\<star> y = y \\<squnion> (x \\<star> (x * y))\"", "lemma while_one_mult_below:\n  \"(x \\<star> 1) * y \\<le> x \\<star> y\"", "lemma while_plus_one:\n  \"x \\<star> y = y \\<squnion> (x \\<star> y)\"", "lemma while_rtc_2:\n  \"y \\<squnion> x * y \\<squnion> (x \\<star> (x \\<star> y)) = x \\<star> y\"", "lemma while_left_plus_below:\n  \"x * (x \\<star> y) \\<le> x \\<star> y\"", "lemma while_right_plus_below:\n  \"x \\<star> (x * y) \\<le> x \\<star> y\"", "lemma while_right_plus_below_2:\n  \"(x \\<star> x) * y \\<le> x \\<star> y\"", "lemma while_mult_transitive:\n  \"x \\<le> z \\<star> y \\<Longrightarrow> y \\<le> z \\<star> w \\<Longrightarrow> x \\<le> z \\<star> w\"", "lemma while_mult_upper_bound:\n  \"x \\<le> z \\<star> 1 \\<Longrightarrow> y \\<le> z \\<star> w \\<Longrightarrow> x * y \\<le> z \\<star> w\"", "lemma while_one_mult_while_below:\n  \"(y \\<star> 1) * (y \\<star> v) \\<le> y \\<star> v\"", "lemma while_sub_dist:\n  \"x \\<star> z \\<le> (x \\<squnion> y) \\<star> z\"", "lemma while_sub_dist_1:\n  \"x * z \\<le> (x \\<squnion> y) \\<star> z\"", "lemma while_sub_dist_2:\n  \"x * y * z \\<le> (x \\<squnion> y) \\<star> z\"", "lemma while_sub_dist_3:\n  \"x \\<star> (y \\<star> z) \\<le> (x \\<squnion> y) \\<star> z\"", "lemma while_absorb_2:\n  \"x \\<le> y \\<Longrightarrow> y \\<star> (x \\<star> z) = y \\<star> z\"", "lemma while_simulate_right_plus_1:\n  \"z * x \\<le> y * (y \\<star> z) \\<Longrightarrow> z * (x \\<star> w) \\<le> y \\<star> (z * w)\"", "lemma while_sumstar_1_below:\n  \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) \\<le> ((x \\<star> 1) * y) \\<star> (x \\<star> z)\"", "lemma while_sumstar_2_below:\n  \"((x \\<star> 1) * y) \\<star> (x \\<star> z) \\<le> (x \\<star> y) \\<star> (x \\<star> z)\"", "lemma while_sup_1_below:\n  \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) \\<le> (x \\<squnion> y) \\<star> z\"", "lemma while_while_while:\n  \"((x \\<star> 1) \\<star> 1) \\<star> y = (x \\<star> 1) \\<star> y\"", "lemma while_one:\n  \"(1 \\<star> 1) \\<star> y = 1 \\<star> y\"", "lemma while_sup_below:\n  \"x \\<squnion> y \\<le> x \\<star> (y \\<star> 1)\"", "lemma while_sup_2:\n  \"(x \\<squnion> y) \\<star> z \\<le> (x \\<star> (y \\<star> 1)) \\<star> z\"", "lemma while_sup_one_left_unfold:\n  \"1 \\<le> x \\<Longrightarrow> x * (x \\<star> y) = x \\<star> y\"", "lemma while_sup_one_right_unfold:\n  \"1 \\<le> x \\<Longrightarrow> x \\<star> (x * y) = x \\<star> y\"", "lemma while_decompose_7:\n  \"(x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> ((x \\<squnion> y) \\<star> z))\"", "lemma while_decompose_8:\n  \"(x \\<squnion> y) \\<star> z = (x \\<squnion> y) \\<star> (x \\<star> (y \\<star> z))\"", "lemma while_decompose_9:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = x \\<star> (y \\<star> ((x \\<star> (y \\<star> 1)) \\<star> z))\"", "lemma while_decompose_10:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = (x \\<star> (y \\<star> 1)) \\<star> (x \\<star> (y \\<star> z))\"", "lemma while_back_loop_fixpoint:\n  \"z * (y \\<star> (y * x)) \\<squnion> z * x = z * (y \\<star> x)\"", "lemma while_back_loop_prefixpoint:\n  \"z * (y \\<star> 1) * y \\<squnion> z \\<le> z * (y \\<star> 1)\"", "lemma while_loop_is_fixpoint:\n  \"is_fixpoint (\\<lambda>x . y * x \\<squnion> z) (y \\<star> z)\"", "lemma while_back_loop_is_prefixpoint:\n  \"is_prefixpoint (\\<lambda>x . x * y \\<squnion> z) (z * (y \\<star> 1))\"", "lemma while_while_sup:\n  \"(1 \\<squnion> x) \\<star> y = (x \\<star> 1) \\<star> y\"", "lemma while_while_mult_sub:\n  \"x \\<star> (1 \\<star> y) \\<le> (x \\<star> 1) \\<star> y\"", "lemma while_right_plus:\n  \"(x \\<star> x) \\<star> y = x \\<star> y\"", "lemma while_left_plus:\n  \"(x * (x \\<star> 1)) \\<star> y = x \\<star> y\"", "lemma while_below_while_one:\n  \"x \\<star> x \\<le> x \\<star> 1\"", "lemma while_below_while_one_mult:\n  \"x * (x \\<star> x) \\<le> x * (x \\<star> 1)\"", "lemma while_sup_sub_sup_one:\n  \"x \\<star> (x \\<squnion> y) \\<le> x \\<star> (1 \\<squnion> y)\"", "lemma while_sup_sub_sup_one_mult:\n  \"x * (x \\<star> (x \\<squnion> y)) \\<le> x * (x \\<star> (1 \\<squnion> y))\"", "lemma while_elimination:\n  \"x * y = bot \\<Longrightarrow> x * (y \\<star> z) = x * z\"", "lemma while_square:\n  \"(x * x) \\<star> y \\<le> x \\<star> y\"", "lemma while_mult_sub_sup:\n  \"(x * y) \\<star> z \\<le> (x \\<squnion> y) \\<star> z\"", "lemma while_absorb_1:\n  \"x \\<le> y \\<Longrightarrow> x \\<star> (y \\<star> z) = y \\<star> z\"", "lemma while_absorb_3:\n  \"x \\<le> y \\<Longrightarrow> x \\<star> (y \\<star> z) = y \\<star> (x \\<star> z)\"", "lemma while_square_2:\n  \"(x * x) \\<star> ((x \\<squnion> 1) * y) \\<le> x \\<star> y\"", "lemma while_separate_unfold_below:\n  \"(y * (x \\<star> 1)) \\<star> z \\<le> (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z))))\"", "lemma while_mult_zero_sup:\n  \"(x \\<squnion> y * bot) \\<star> z = x \\<star> ((y * bot) \\<star> z)\"", "lemma while_sup_mult_zero:\n  \"(x \\<squnion> y * bot) \\<star> y = x \\<star> y\"", "lemma while_mult_zero_sup_2:\n  \"(x \\<squnion> y * bot) \\<star> z = (x \\<star> z) \\<squnion> (x \\<star> (y * bot))\"", "lemma while_sup_zero_star:\n  \"(x \\<squnion> y * bot) \\<star> z = x \\<star> (y * bot \\<squnion> z)\"", "lemma while_unfold_sum:\n  \"(x \\<squnion> y) \\<star> z = (x \\<star> z) \\<squnion> (x \\<star> (y * ((x \\<squnion> y) \\<star> z)))\"", "lemma while_simulate_left:\n  \"x * z \\<le> z * y \\<squnion> w \\<Longrightarrow> x \\<star> (z * v) \\<le> z * (y \\<star> v) \\<squnion> (x \\<star> (w * (y \\<star> v)))\"", "lemma while_simulate_right:\n  assumes \"z * x \\<le> y * z \\<squnion> w\"\n    shows \"z * (x \\<star> v) \\<le> y \\<star> (z * v \\<squnion> w * (x \\<star> v))\"", "lemma while_simulate:\n  \"z * x \\<le> y * z \\<Longrightarrow> z * (x \\<star> v) \\<le> y \\<star> (z * v)\"", "lemma while_while_mult:\n  \"1 \\<star> (x \\<star> y) = (x \\<star> 1) \\<star> y\"", "lemma while_simulate_left_1:\n  \"x * z \\<le> z * y \\<Longrightarrow> x \\<star> (z * v) \\<le> z * (y \\<star> v) \\<squnion> (x \\<star> bot)\"", "lemma while_associative_1:\n  assumes \"1 \\<le> z\"\n  shows \"x \\<star> (y * z) = (x \\<star> y) * z\"", "lemma while_associative_while_1:\n  \"x \\<star> (y * (z \\<star> 1)) = (x \\<star> y) * (z \\<star> 1)\"", "lemma while_one_while:\n  \"(x \\<star> 1) * (y \\<star> 1) = x \\<star> (y \\<star> 1)\"", "lemma while_decompose_5_below:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z \\<le> (y \\<star> (x \\<star> 1)) \\<star> z\"", "lemma while_decompose_5:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = (y \\<star> (x \\<star> 1)) \\<star> z\"", "lemma while_decompose_4:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = x \\<star> ((y \\<star> (x \\<star> 1)) \\<star> z)\"", "lemma while_simulate_2:\n  \"y * (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1) \\<longleftrightarrow> y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\"", "lemma while_simulate_1:\n  \"y * x \\<le> x * y \\<Longrightarrow> y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\"", "lemma while_simulate_3:\n  \"y * (x \\<star> 1) \\<le> x \\<star> 1 \\<Longrightarrow> y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\"", "lemma while_extra_while:\n  \"(y * (x \\<star> 1)) \\<star> z = (y * (y \\<star> (x \\<star> 1))) \\<star> z\"", "lemma while_separate_4:\n  assumes \"y * x \\<le> x * (x \\<star> (1 \\<squnion> y))\"\n    shows \"(x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\"", "lemma while_separate_5:\n  \"y * x \\<le> x * (x \\<star> (x \\<squnion> y)) \\<Longrightarrow> (x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\"", "lemma while_separate_6:\n  \"y * x \\<le> x * (x \\<squnion> y) \\<Longrightarrow> (x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\"", "lemma while_separate_1:\n  \"y * x \\<le> x * y \\<Longrightarrow> (x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\"", "lemma while_separate_mult_1:\n  \"y * x \\<le> x * y \\<Longrightarrow> (x * y) \\<star> z \\<le> x \\<star> (y \\<star> z)\"", "lemma separation:\n  assumes \"y * x \\<le> x * (y \\<star> 1)\"\n    shows \"(x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\"", "lemma while_separate_left:\n  \"y * x \\<le> x * (y \\<star> 1) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\"", "lemma while_simulate_4:\n  \"y * x \\<le> x * (x \\<star> (1 \\<squnion> y)) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\"", "lemma while_simulate_5:\n  \"y * x \\<le> x * (x \\<star> (x \\<squnion> y)) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\"", "lemma while_simulate_6:\n  \"y * x \\<le> x * (x \\<squnion> y) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\"", "lemma while_simulate_7:\n  \"y * x \\<le> x * y \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\"", "lemma while_while_mult_1:\n  \"x \\<star> (1 \\<star> y) = 1 \\<star> (x \\<star> y)\"", "lemma while_while_mult_2:\n  \"x \\<star> (1 \\<star> y) = (x \\<star> 1) \\<star> y\"", "lemma while_import:\n  assumes \"p \\<le> p * p \\<and> p \\<le> 1 \\<and> p * x \\<le> x * p\"\n    shows \"p * (x \\<star> y) = p * ((p * x) \\<star> y)\"", "lemma while_preserve:\n  assumes \"p \\<le> p * p\"\n      and \"p \\<le> 1\"\n      and \"p * x \\<le> x * p\"\n    shows \"p * (x \\<star> y) = p * (x \\<star> (p * y))\"", "lemma while_plus_below_while:\n  \"(x \\<star> 1) * x \\<le> x \\<star> 1\"", "lemma while_01:\n  \"(w * (x \\<star> 1)) \\<star> (y * z) \\<le> (x \\<star> w) \\<star> ((x \\<star> y) * z)\"", "lemma while_while_sub_associative:\n  \"x \\<star> (y \\<star> z) \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\"", "lemma while_induct:\n  \"x * z \\<le> z \\<and> y \\<le> z \\<and> x \\<star> 1 \\<le> z \\<Longrightarrow> x \\<star> y \\<le> z\"", "lemma while_right_top:\n  \"x \\<star> top = top\"", "lemma while_left_top:\n  \"top * (x \\<star> 1) = top\"", "lemma while_denest_1:\n  \"w * (x \\<star> (y * z)) \\<le> (w * (x \\<star> y)) \\<star> z\"", "lemma while_mult_sub_while_while:\n  \"x \\<star> (y * z) \\<le> (x \\<star> y) \\<star> z\"", "lemma while_zero_zero:\n  \"(x \\<star> bot) \\<star> bot = x \\<star> bot\"", "lemma while_mult_zero_zero:\n  \"(x * (y \\<star> bot)) \\<star> bot = x * (y \\<star> bot)\"", "lemma while_denest_2:\n  \"w * ((x \\<star> (y * w)) \\<star> z) = w * (((x \\<star> y) * w) \\<star> z)\"", "lemma while_denest_3:\n  \"(x \\<star> w) \\<star> (x \\<star> bot) = (x \\<star> w) \\<star> bot\"", "lemma while_02:\n  \"x \\<star> ((x \\<star> w) \\<star> ((x \\<star> y) * z)) = (x \\<star> w) \\<star> ((x \\<star> y) * z)\"", "lemma while_sumstar_3_below:\n  \"(x \\<star> y) \\<star> (x \\<star> z) \\<le> (x \\<star> y) \\<star> ((x \\<star> 1) * z)\"", "lemma while_sumstar_4_below:\n  \"(x \\<star> y) \\<star> ((x \\<star> 1) * z) \\<le> x \\<star> ((y * (x \\<star> 1)) \\<star> z)\"", "lemma while_sumstar_1:\n  \"(x \\<squnion> y) \\<star> z = (x \\<star> y) \\<star> ((x \\<star> 1) * z)\"", "lemma while_sumstar_2:\n  \"(x \\<squnion> y) \\<star> z = x \\<star> ((y * (x \\<star> 1)) \\<star> z)\"", "lemma while_sumstar_3:\n  \"(x \\<squnion> y) \\<star> z = ((x \\<star> 1) * y) \\<star> (x \\<star> z)\"", "lemma while_decompose_6:\n  \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) = y \\<star> ((x * (y \\<star> 1)) \\<star> z)\"", "lemma while_denest_4:\n  \"(x \\<star> w) \\<star> (x \\<star> (y * z)) = (x \\<star> w) \\<star> ((x \\<star> y) * z)\"", "lemma while_denest_5:\n  \"w * ((x \\<star> (y * w)) \\<star> (x \\<star> (y * z))) = w * (((x \\<star> y) * w) \\<star> ((x \\<star> y) * z))\"", "lemma while_denest_6:\n  \"(w * (x \\<star> y)) \\<star> z = z \\<squnion> w * ((x \\<squnion> y * w) \\<star> (y * z))\"", "lemma while_sum_below_one:\n  \"y * ((x \\<squnion> y) \\<star> z) \\<le> (y * (x \\<star> 1)) \\<star> z\"", "lemma while_separate_unfold:\n  \"(y * (x \\<star> 1)) \\<star> z = (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z))))\"", "lemma while_finite_associative:\n  \"x \\<star> bot = bot \\<Longrightarrow> (x \\<star> y) * z = x \\<star> (y * z)\"", "lemma atomicity_refinement:\n  assumes \"s = s * q\"\n      and \"x = q * x\"\n      and \"q * b = bot\"\n      and \"r * b \\<le> b * r\"\n      and \"r * l \\<le> l * r\"\n      and \"x * l \\<le> l * x\"\n      and \"b * l \\<le> l * b\"\n      and \"q * l \\<le> l * q\"\n      and \"r \\<star> q \\<le> q * (r \\<star> 1) \\<and> q \\<le> 1\"\n    shows \"s * ((x \\<squnion> b \\<squnion> r \\<squnion> l) \\<star> (q * z)) \\<le> s * ((x * (b \\<star> q) \\<squnion> r \\<squnion> l) \\<star> z)\""], "translations": [["", "lemma while_zero:\n  \"bot \\<star> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot \\<star> x = x", "by (metis sup_bot_right mult_left_zero while_productstar)"], ["", "text \\<open>Theorem 9.4\\<close>"], ["", "lemma while_mult_increasing:\n  \"x * y \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<le> x \\<star> y", "by (metis le_supI2 mult.left_neutral mult_left_sub_dist_sup_left while_productstar)"], ["", "text \\<open>Theorem 9.2\\<close>"], ["", "lemma while_one_increasing:\n  \"x \\<le> x \\<star> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x \\<star> (1::'a)", "by (metis mult.right_neutral while_mult_increasing)"], ["", "text \\<open>Theorem 9.3\\<close>"], ["", "lemma while_increasing:\n  \"y \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x \\<star> y", "by (metis sup_left_divisibility mult_left_one while_productstar)"], ["", "text \\<open>Theorem 9.42\\<close>"], ["", "lemma while_right_isotone:\n  \"y \\<le> z \\<Longrightarrow> x \\<star> y \\<le> x \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> z \\<Longrightarrow> x \\<star> y \\<le> x \\<star> z", "by (metis le_iff_sup while_left_dist_sup)"], ["", "text \\<open>Theorem 9.41\\<close>"], ["", "lemma while_left_isotone:\n  \"x \\<le> y \\<Longrightarrow> x \\<star> z \\<le> y \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<star> z \\<le> y \\<star> z", "using sup_left_divisibility while_sumstar while_increasing"], ["proof (prove)\nusing this:\n  (?x \\<le> ?y) = (\\<exists>z. ?x \\<squnion> z = ?y)\n  ?x \\<squnion> ?y \\<star> ?z = (?x \\<star> ?y) \\<star> ?x \\<star> ?z\n  ?y \\<le> ?x \\<star> ?y\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<star> z \\<le> y \\<star> z", "by auto"], ["", "lemma while_isotone:\n  \"w \\<le> x \\<Longrightarrow> y \\<le> z \\<Longrightarrow> w \\<star> y \\<le> x \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w \\<le> x; y \\<le> z\\<rbrakk>\n    \\<Longrightarrow> w \\<star> y \\<le> x \\<star> z", "by (meson order_lesseq_imp while_left_isotone while_right_isotone)"], ["", "text \\<open>Theorem 9.17\\<close>"], ["", "lemma while_left_unfold:\n  \"x \\<star> y = y \\<squnion> x * (x \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y = y \\<squnion> x * (x \\<star> y)", "by (metis mult_1_left mult_1_right while_productstar)"], ["", "lemma while_simulate_left_plus_1:\n  \"x * z \\<le> z * (y \\<star> 1) \\<Longrightarrow> x \\<star> (z * w) \\<le> z * (y \\<star> w) \\<squnion> (x \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z \\<le> z * (y \\<star> (1::'a)) \\<Longrightarrow>\n    x \\<star> z * w \\<le> z * (y \\<star> w) \\<squnion> (x \\<star> bot)", "by (metis sup_bot_right mult_left_zero while_simulate_left_plus)"], ["", "text \\<open>Theorem 11.1\\<close>"], ["", "lemma while_simulate_absorb:\n  \"y * x \\<le> x \\<Longrightarrow> y \\<star> x \\<le> x \\<squnion> (y \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x \\<Longrightarrow>\n    y \\<star> x \\<le> x \\<squnion> (y \\<star> bot)", "by (metis while_simulate_left_plus_1 while_zero mult_1_right)"], ["", "text \\<open>Theorem 9.10\\<close>"], ["", "lemma while_transitive:\n  \"x \\<star> (x \\<star> y) = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> x \\<star> y = x \\<star> y", "by (metis order.eq_iff sup_bot_right sup_ge2 while_left_dist_sup while_increasing while_left_unfold while_simulate_absorb)"], ["", "text \\<open>Theorem 9.25\\<close>"], ["", "lemma while_slide:\n  \"(x * y) \\<star> (x * z) = x * ((y * x) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<star> x * z = x * (y * x \\<star> z)", "by (metis mult_left_dist_sup while_productstar mult_assoc while_left_unfold)"], ["", "text \\<open>Theorem 9.21\\<close>"], ["", "lemma while_zero_2:\n  \"(x * bot) \\<star> y = x * bot \\<squnion> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * bot \\<star> y = x * bot \\<squnion> y", "by (metis mult_left_zero sup_commute mult_assoc while_left_unfold)"], ["", "text \\<open>Theorem 9.5\\<close>"], ["", "lemma while_mult_star_exchange:\n  \"x * (x \\<star> y) = x \\<star> (x * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> y) = x \\<star> x * y", "by (metis mult_left_one while_slide)"], ["", "text \\<open>Theorem 9.18\\<close>"], ["", "lemma while_right_unfold:\n  \"x \\<star> y = y \\<squnion> (x \\<star> (x * y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y = y \\<squnion> (x \\<star> x * y)", "by (metis while_left_unfold while_mult_star_exchange)"], ["", "text \\<open>Theorem 9.7\\<close>"], ["", "lemma while_one_mult_below:\n  \"(x \\<star> 1) * y \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * y \\<le> x \\<star> y", "by (metis mult_left_one while_sub_associative)"], ["", "lemma while_plus_one:\n  \"x \\<star> y = y \\<squnion> (x \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y = y \\<squnion> (x \\<star> y)", "by (simp add: sup.absorb2 while_increasing)"], ["", "text \\<open>Theorem 9.19\\<close>"], ["", "lemma while_rtc_2:\n  \"y \\<squnion> x * y \\<squnion> (x \\<star> (x \\<star> y)) = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<squnion> x * y \\<squnion> (x \\<star> x \\<star> y) = x \\<star> y", "by (simp add: sup_absorb2 while_increasing while_mult_increasing while_transitive)"], ["", "text \\<open>Theorem 9.6\\<close>"], ["", "lemma while_left_plus_below:\n  \"x * (x \\<star> y) \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> y) \\<le> x \\<star> y", "by (metis sup_right_divisibility while_left_unfold)"], ["", "lemma while_right_plus_below:\n  \"x \\<star> (x * y) \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> x * y \\<le> x \\<star> y", "using while_left_plus_below while_mult_star_exchange"], ["proof (prove)\nusing this:\n  ?x * (?x \\<star> ?y) \\<le> ?x \\<star> ?y\n  ?x * (?x \\<star> ?y) = ?x \\<star> ?x * ?y\n\ngoal (1 subgoal):\n 1. x \\<star> x * y \\<le> x \\<star> y", "by auto"], ["", "lemma while_right_plus_below_2:\n  \"(x \\<star> x) * y \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> x) * y \\<le> x \\<star> y", "by (smt order_trans while_right_plus_below while_sub_associative)"], ["", "text \\<open>Theorem 9.47\\<close>"], ["", "lemma while_mult_transitive:\n  \"x \\<le> z \\<star> y \\<Longrightarrow> y \\<le> z \\<star> w \\<Longrightarrow> x \\<le> z \\<star> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> z \\<star> y; y \\<le> z \\<star> w\\<rbrakk>\n    \\<Longrightarrow> x \\<le> z \\<star> w", "by (smt order_trans while_right_isotone while_transitive)"], ["", "text \\<open>Theorem 9.48\\<close>"], ["", "lemma while_mult_upper_bound:\n  \"x \\<le> z \\<star> 1 \\<Longrightarrow> y \\<le> z \\<star> w \\<Longrightarrow> x * y \\<le> z \\<star> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> z \\<star> (1::'a); y \\<le> z \\<star> w\\<rbrakk>\n    \\<Longrightarrow> x * y \\<le> z \\<star> w", "by (metis order.trans mult_isotone while_one_mult_below while_transitive)"], ["", "lemma while_one_mult_while_below:\n  \"(y \\<star> 1) * (y \\<star> v) \\<le> y \\<star> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<star> (1::'a)) * (y \\<star> v) \\<le> y \\<star> v", "by (simp add: while_mult_upper_bound)"], ["", "text \\<open>Theorem 9.34\\<close>"], ["", "lemma while_sub_dist:\n  \"x \\<star> z \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> z \\<le> x \\<squnion> y \\<star> z", "by (simp add: while_left_isotone)"], ["", "lemma while_sub_dist_1:\n  \"x * z \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z \\<le> x \\<squnion> y \\<star> z", "using order.trans while_mult_increasing while_sub_dist"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  ?x * ?y \\<le> ?x \\<star> ?y\n  ?x \\<star> ?z \\<le> ?x \\<squnion> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. x * z \\<le> x \\<squnion> y \\<star> z", "by blast"], ["", "lemma while_sub_dist_2:\n  \"x * y * z \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y * z \\<le> x \\<squnion> y \\<star> z", "by (metis sup_commute mult_assoc while_mult_transitive while_sub_dist_1)"], ["", "text \\<open>Theorem 9.36\\<close>"], ["", "lemma while_sub_dist_3:\n  \"x \\<star> (y \\<star> z) \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z \\<le> x \\<squnion> y \\<star> z", "by (metis sup_commute while_mult_transitive while_sub_dist)"], ["", "text \\<open>Theorem 9.44\\<close>"], ["", "lemma while_absorb_2:\n  \"x \\<le> y \\<Longrightarrow> y \\<star> (x \\<star> z) = y \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> y \\<star> x \\<star> z = y \\<star> z", "using sup_left_divisibility while_sumstar while_transitive"], ["proof (prove)\nusing this:\n  (?x \\<le> ?y) = (\\<exists>z. ?x \\<squnion> z = ?y)\n  ?x \\<squnion> ?y \\<star> ?z = (?x \\<star> ?y) \\<star> ?x \\<star> ?z\n  ?x \\<star> ?x \\<star> ?y = ?x \\<star> ?y\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> y \\<star> x \\<star> z = y \\<star> z", "by auto"], ["", "lemma while_simulate_right_plus_1:\n  \"z * x \\<le> y * (y \\<star> z) \\<Longrightarrow> z * (x \\<star> w) \\<le> y \\<star> (z * w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x \\<le> y * (y \\<star> z) \\<Longrightarrow>\n    z * (x \\<star> w) \\<le> y \\<star> z * w", "by (metis sup_bot_right mult_left_zero while_simulate_right_plus)"], ["", "text \\<open>Theorem 9.39\\<close>"], ["", "lemma while_sumstar_1_below:\n  \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) \\<le> ((x \\<star> 1) * y) \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have 1: \"x * (((x \\<star> 1) * y) \\<star> (x \\<star> z)) \\<le> ((x \\<star> 1) * y) \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * ((x \\<star> (1::'a)) * y \\<star> x \\<star> z)\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "by (smt sup_mono sup_ge2 mult_assoc mult_left_dist_sup mult_right_sub_dist_sup_right while_left_unfold)"], ["proof (state)\nthis:\n  x * ((x \\<star> (1::'a)) * y \\<star> x \\<star> z)\n  \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) \\<le> (x \\<star> z) \\<squnion> (x \\<star> (y * (((x \\<star> 1) * y) \\<star> ((x \\<star> 1) * z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> z) \\<squnion>\n          (x \\<star>\n           y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))", "by (metis eq_refl while_left_dist_sup while_productstar)"], ["proof (state)\nthis:\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star>\n         y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "also"], ["proof (state)\nthis:\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star>\n         y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have \"... \\<le> (x \\<star> z) \\<squnion> (x \\<star> ((x \\<star> 1) * y * (((x \\<star> 1) * y) \\<star> ((x \\<star> 1) * z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star>\n     y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n    \\<le> (x \\<star> z) \\<squnion>\n          (x \\<star>\n           (x \\<star> (1::'a)) * y *\n           ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))", "by (metis sup_right_isotone mult_assoc mult_left_one mult_right_sub_dist_sup_left while_left_unfold while_right_isotone)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star>\n         (x \\<star> (1::'a)) * y *\n         ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star>\n         (x \\<star> (1::'a)) * y *\n         ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have \"... \\<le> (x \\<star> z) \\<squnion> (x \\<star> (((x \\<star> 1) * y) \\<star> ((x \\<star> 1) * z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star>\n     (x \\<star> (1::'a)) * y *\n     ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n    \\<le> (x \\<star> z) \\<squnion>\n          (x \\<star>\n           (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)", "using semiring.add_left_mono while_left_plus_below while_right_isotone"], ["proof (prove)\nusing this:\n  ?a \\<le> ?b \\<Longrightarrow> ?c \\<squnion> ?a \\<le> ?c \\<squnion> ?b\n  ?x * (?x \\<star> ?y) \\<le> ?x \\<star> ?y\n  ?y \\<le> ?z \\<Longrightarrow> ?x \\<star> ?y \\<le> ?x \\<star> ?z\n\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star>\n     (x \\<star> (1::'a)) * y *\n     ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n    \\<le> (x \\<star> z) \\<squnion>\n          (x \\<star>\n           (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)", "by blast"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star>\n   (x \\<star> (1::'a)) * y *\n   ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star> (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star>\n   (x \\<star> (1::'a)) * y *\n   ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star> (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have \"... \\<le> x \\<star> (((x \\<star> 1) * y) \\<star> (x \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star> (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)\n    \\<le> x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "by (meson order.trans le_supI while_increasing while_one_mult_below while_right_isotone)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)\n  \\<le> x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)\n  \\<le> x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have \"... \\<le> (((x \\<star> 1) * y) \\<star> (x \\<star> z)) \\<squnion> (x \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n    \\<le> ((x \\<star> (1::'a)) * y \\<star> x \\<star> z) \\<squnion>\n          (x \\<star> bot)", "using 1 while_simulate_absorb"], ["proof (prove)\nusing this:\n  x * ((x \\<star> (1::'a)) * y \\<star> x \\<star> z)\n  \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n  ?y * ?x \\<le> ?x \\<Longrightarrow>\n  ?y \\<star> ?x \\<le> ?x \\<squnion> (?y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n    \\<le> ((x \\<star> (1::'a)) * y \\<star> x \\<star> z) \\<squnion>\n          (x \\<star> bot)", "by auto"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n  \\<le> ((x \\<star> (1::'a)) * y \\<star> x \\<star> z) \\<squnion>\n        (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "also"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n  \\<le> ((x \\<star> (1::'a)) * y \\<star> x \\<star> z) \\<squnion>\n        (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "have \"... = ((x \\<star> 1) * y) \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<star> (1::'a)) * y \\<star> x \\<star> z) \\<squnion>\n    (x \\<star> bot) =\n    (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "by (smt sup_assoc sup_commute sup_bot_left while_left_dist_sup while_left_unfold)"], ["proof (state)\nthis:\n  ((x \\<star> (1::'a)) * y \\<star> x \\<star> z) \\<squnion> (x \\<star> bot) =\n  (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "finally"], ["proof (chain)\npicking this:\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "."], ["proof (state)\nthis:\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_sumstar_2_below:\n  \"((x \\<star> 1) * y) \\<star> (x \\<star> z) \\<le> (x \\<star> y) \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * y \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> x \\<star> z", "by (simp add: while_left_isotone while_one_mult_below)"], ["", "text \\<open>Theorem 9.38\\<close>"], ["", "lemma while_sup_1_below:\n  \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "have \"((x \\<star> 1) * y) \\<star> ((x \\<star> 1) * z) \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<squnion> y \\<star> z", "using while_sumstar while_isotone while_one_mult_below"], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y \\<star> ?z = (?x \\<star> ?y) \\<star> ?x \\<star> ?z\n  \\<lbrakk>?w \\<le> ?x; ?y \\<le> ?z\\<rbrakk>\n  \\<Longrightarrow> ?w \\<star> ?y \\<le> ?x \\<star> ?z\n  (?x \\<star> (1::'a)) * ?y \\<le> ?x \\<star> ?y\n\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<squnion> y \\<star> z", "by auto"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z\n  \\<le> x \\<squnion> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "hence \"(y * (x \\<star> 1)) \\<star> z \\<le> z \\<squnion> y * ((x \\<squnion> y) \\<star> z)\""], ["proof (prove)\nusing this:\n  (x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z\n  \\<le> x \\<squnion> y \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> z \\<squnion> y * (x \\<squnion> y \\<star> z)", "by (metis sup_right_isotone mult_right_isotone while_productstar)"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> z \\<squnion> y * (x \\<squnion> y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "also"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> z \\<squnion> y * (x \\<squnion> y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "have \"... \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<squnion> y * (x \\<squnion> y \\<star> z)\n    \\<le> x \\<squnion> y \\<star> z", "by (metis sup_right_isotone sup_ge2 mult_left_isotone while_left_unfold)"], ["proof (state)\nthis:\n  z \\<squnion> y * (x \\<squnion> y \\<star> z) \\<le> x \\<squnion> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "finally"], ["proof (chain)\npicking this:\n  y * (x \\<star> (1::'a)) \\<star> z \\<le> x \\<squnion> y \\<star> z", "show ?thesis"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z \\<le> x \\<squnion> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "using while_mult_transitive while_sub_dist"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z \\<le> x \\<squnion> y \\<star> z\n  \\<lbrakk>?x \\<le> ?z \\<star> ?y; ?y \\<le> ?z \\<star> ?w\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> ?z \\<star> ?w\n  ?x \\<star> ?z \\<le> ?x \\<squnion> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> x \\<squnion> y \\<star> z", "by blast"], ["proof (state)\nthis:\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z \\<le> x \\<squnion> y \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 9.16\\<close>"], ["", "lemma while_while_while:\n  \"((x \\<star> 1) \\<star> 1) \\<star> y = (x \\<star> 1) \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<star> (1::'a)) \\<star> (1::'a)) \\<star> y =\n    (x \\<star> (1::'a)) \\<star> y", "by (smt (z3) sup.absorb1 while_sumstar while_absorb_2 while_increasing while_one_increasing)"], ["", "lemma while_one:\n  \"(1 \\<star> 1) \\<star> y = 1 \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) \\<star> (1::'a)) \\<star> y = (1::'a) \\<star> y", "by (metis while_while_while while_zero)"], ["", "text \\<open>Theorem 9.22\\<close>"], ["", "lemma while_sup_below:\n  \"x \\<squnion> y \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<le> x \\<star> y \\<star> (1::'a)", "by (metis le_supI le_supI1 while_left_dist_sup while_left_unfold while_one_increasing)"], ["", "text \\<open>Theorem 9.32\\<close>"], ["", "lemma while_sup_2:\n  \"(x \\<squnion> y) \\<star> z \\<le> (x \\<star> (y \\<star> 1)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z", "using while_left_isotone while_sup_below"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<star> ?z \\<le> ?y \\<star> ?z\n  ?x \\<squnion> ?y \\<le> ?x \\<star> ?y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z", "by auto"], ["", "text \\<open>Theorem 9.45\\<close>"], ["", "lemma while_sup_one_left_unfold:\n  \"1 \\<le> x \\<Longrightarrow> x * (x \\<star> y) = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflexive x \\<Longrightarrow> x * (x \\<star> y) = x \\<star> y", "by (metis order.antisym mult_1_left mult_left_isotone while_left_plus_below)"], ["", "lemma while_sup_one_right_unfold:\n  \"1 \\<le> x \\<Longrightarrow> x \\<star> (x * y) = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflexive x \\<Longrightarrow> x \\<star> x * y = x \\<star> y", "using while_mult_star_exchange while_sup_one_left_unfold"], ["proof (prove)\nusing this:\n  ?x * (?x \\<star> ?y) = ?x \\<star> ?x * ?y\n  reflexive ?x \\<Longrightarrow> ?x * (?x \\<star> ?y) = ?x \\<star> ?y\n\ngoal (1 subgoal):\n 1. reflexive x \\<Longrightarrow> x \\<star> x * y = x \\<star> y", "by auto"], ["", "text \\<open>Theorem 9.30\\<close>"], ["", "lemma while_decompose_7:\n  \"(x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> ((x \\<squnion> y) \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> x \\<squnion> y \\<star> z", "by (metis order.eq_iff order_trans while_increasing while_sub_dist_3 while_transitive)"], ["", "text \\<open>Theorem 9.31\\<close>"], ["", "lemma while_decompose_8:\n  \"(x \\<squnion> y) \\<star> z = (x \\<squnion> y) \\<star> (x \\<star> (y \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<squnion> y \\<star> x \\<star> y \\<star> z", "using while_absorb_2"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?y \\<star> ?x \\<star> ?z = ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<squnion> y \\<star> x \\<star> y \\<star> z", "by auto"], ["", "text \\<open>Theorem 9.27\\<close>"], ["", "lemma while_decompose_9:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = x \\<star> (y \\<star> ((x \\<star> (y \\<star> 1)) \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    x \\<star> y \\<star> (x \\<star> y \\<star> (1::'a)) \\<star> z", "by (smt sup_commute le_iff_sup order_trans while_sup_below while_increasing while_sub_dist_3)"], ["", "lemma while_decompose_10:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = (x \\<star> (y \\<star> 1)) \\<star> (x \\<star> (y \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "have 1: \"(x \\<star> (y \\<star> 1)) \\<star> z \\<le> (x \\<star> (y \\<star> 1)) \\<star> (x \\<star> (y \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z\n    \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "by (meson order.trans while_increasing while_right_isotone)"], ["proof (state)\nthis:\n  (x \\<star> y \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "have \"x \\<squnion> (y \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> (y \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "using while_increasing while_sup_below"], ["proof (prove)\nusing this:\n  ?y \\<le> ?x \\<star> ?y\n  ?x \\<squnion> ?y \\<le> ?x \\<star> ?y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<squnion> (y \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "by auto"], ["proof (state)\nthis:\n  x \\<squnion> (y \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "hence \"(x \\<star> (y \\<star> 1)) \\<star> (x \\<star> (y \\<star> z)) \\<le> (x \\<star> (y \\<star> 1)) \\<star> z\""], ["proof (prove)\nusing this:\n  x \\<squnion> (y \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n    \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z", "using while_absorb_2 while_sup_below"], ["proof (prove)\nusing this:\n  x \\<squnion> (y \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)\n  ?x \\<le> ?y \\<Longrightarrow> ?y \\<star> ?x \\<star> ?z = ?y \\<star> ?z\n  ?x \\<squnion> ?y \\<le> ?x \\<star> ?y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n    \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z", "by force"], ["proof (state)\nthis:\n  (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "using 1 order.antisym"], ["proof (prove)\nusing this:\n  (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> z\n  (x \\<star> y \\<star> (1::'a)) \\<star> z\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z", "by blast"], ["proof (state)\nthis:\n  (x \\<star> y \\<star> (1::'a)) \\<star> z =\n  (x \\<star> y \\<star> (1::'a)) \\<star> x \\<star> y \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_back_loop_fixpoint:\n  \"z * (y \\<star> (y * x)) \\<squnion> z * x = z * (y \\<star> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * (y \\<star> y * x) \\<squnion> z * x = z * (y \\<star> x)", "by (metis sup_commute mult_left_dist_sup while_right_unfold)"], ["", "lemma while_back_loop_prefixpoint:\n  \"z * (y \\<star> 1) * y \\<squnion> z \\<le> z * (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * (y \\<star> (1::'a)) * y \\<squnion> z \\<le> z * (y \\<star> (1::'a))", "by (metis le_supI le_supI2 mult_1_right mult_right_isotone mult_assoc while_increasing while_one_mult_below while_right_unfold)"], ["", "text \\<open>Theorem 9\\<close>"], ["", "lemma while_loop_is_fixpoint:\n  \"is_fixpoint (\\<lambda>x . y * x \\<squnion> z) (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_fixpoint (\\<lambda>x. y * x \\<squnion> z) (y \\<star> z)", "using is_fixpoint_def sup_commute while_left_unfold"], ["proof (prove)\nusing this:\n  is_fixpoint ?f ?x \\<equiv> ?f ?x = ?x\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<star> ?y = ?y \\<squnion> ?x * (?x \\<star> ?y)\n\ngoal (1 subgoal):\n 1. is_fixpoint (\\<lambda>x. y * x \\<squnion> z) (y \\<star> z)", "by auto"], ["", "text \\<open>Theorem 9\\<close>"], ["", "lemma while_back_loop_is_prefixpoint:\n  \"is_prefixpoint (\\<lambda>x . x * y \\<squnion> z) (z * (y \\<star> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_prefixpoint (\\<lambda>x. x * y \\<squnion> z)\n     (z * (y \\<star> (1::'a)))", "using is_prefixpoint_def while_back_loop_prefixpoint"], ["proof (prove)\nusing this:\n  is_prefixpoint ?f ?x \\<equiv> ?f ?x \\<le> ?x\n  ?z * (?y \\<star> (1::'a)) * ?y \\<squnion> ?z\n  \\<le> ?z * (?y \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. is_prefixpoint (\\<lambda>x. x * y \\<squnion> z)\n     (z * (y \\<star> (1::'a)))", "by auto"], ["", "text \\<open>Theorem 9.20\\<close>"], ["", "lemma while_while_sup:\n  \"(1 \\<squnion> x) \\<star> y = (x \\<star> 1) \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<squnion> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "by (metis sup_commute while_decompose_10 while_sumstar while_zero)"], ["", "lemma while_while_mult_sub:\n  \"x \\<star> (1 \\<star> y) \\<le> (x \\<star> 1) \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (1::'a) \\<star> y \\<le> (x \\<star> (1::'a)) \\<star> y", "by (metis sup_commute while_sub_dist_3 while_while_sup)"], ["", "text \\<open>Theorem 9.11\\<close>"], ["", "lemma while_right_plus:\n  \"(x \\<star> x) \\<star> y = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> x) \\<star> y = x \\<star> y", "by (metis sup_idem while_plus_one while_sumstar while_transitive)"], ["", "text \\<open>Theorem 9.12\\<close>"], ["", "lemma while_left_plus:\n  \"(x * (x \\<star> 1)) \\<star> y = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> (1::'a)) \\<star> y = x \\<star> y", "by (simp add: while_mult_star_exchange while_right_plus)"], ["", "text \\<open>Theorem 9.9\\<close>"], ["", "lemma while_below_while_one:\n  \"x \\<star> x \\<le> x \\<star> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> x \\<le> x \\<star> (1::'a)", "by (meson eq_refl while_mult_transitive while_one_increasing)"], ["", "lemma while_below_while_one_mult:\n  \"x * (x \\<star> x) \\<le> x * (x \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> x) \\<le> x * (x \\<star> (1::'a))", "by (simp add: mult_right_isotone while_below_while_one)"], ["", "text \\<open>Theorem 9.23\\<close>"], ["", "lemma while_sup_sub_sup_one:\n  \"x \\<star> (x \\<squnion> y) \\<le> x \\<star> (1 \\<squnion> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> x \\<squnion> y \\<le> x \\<star> (1::'a) \\<squnion> y", "using semiring.add_right_mono while_left_dist_sup while_below_while_one"], ["proof (prove)\nusing this:\n  ?a \\<le> ?b \\<Longrightarrow> ?a \\<squnion> ?c \\<le> ?b \\<squnion> ?c\n  ?x \\<star> ?y \\<squnion> ?z = (?x \\<star> ?y) \\<squnion> (?x \\<star> ?z)\n  ?x \\<star> ?x \\<le> ?x \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<star> x \\<squnion> y \\<le> x \\<star> (1::'a) \\<squnion> y", "by auto"], ["", "lemma while_sup_sub_sup_one_mult:\n  \"x * (x \\<star> (x \\<squnion> y)) \\<le> x * (x \\<star> (1 \\<squnion> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> x \\<squnion> y)\n    \\<le> x * (x \\<star> (1::'a) \\<squnion> y)", "by (simp add: mult_right_isotone while_sup_sub_sup_one)"], ["", "lemma while_elimination:\n  \"x * y = bot \\<Longrightarrow> x * (y \\<star> z) = x * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y = bot \\<Longrightarrow> x * (y \\<star> z) = x * z", "by (metis sup_bot_right mult_assoc mult_left_dist_sup mult_left_zero while_left_unfold)"], ["", "text \\<open>Theorem 9.8\\<close>"], ["", "lemma while_square:\n  \"(x * x) \\<star> y \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * x \\<star> y \\<le> x \\<star> y", "by (metis while_left_isotone while_mult_increasing while_right_plus)"], ["", "text \\<open>Theorem 9.35\\<close>"], ["", "lemma while_mult_sub_sup:\n  \"(x * y) \\<star> z \\<le> (x \\<squnion> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<star> z \\<le> x \\<squnion> y \\<star> z", "by (metis while_increasing while_isotone while_mult_increasing while_sumstar)"], ["", "text \\<open>Theorem 9.43\\<close>"], ["", "lemma while_absorb_1:\n  \"x \\<le> y \\<Longrightarrow> x \\<star> (y \\<star> z) = y \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<star> y \\<star> z = y \\<star> z", "by (metis order.antisym le_iff_sup while_increasing while_sub_dist_3)"], ["", "lemma while_absorb_3:\n  \"x \\<le> y \\<Longrightarrow> x \\<star> (y \\<star> z) = y \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    x \\<star> y \\<star> z = y \\<star> x \\<star> z", "by (simp add: while_absorb_1 while_absorb_2)"], ["", "text \\<open>Theorem 9.24\\<close>"], ["", "lemma while_square_2:\n  \"(x * x) \\<star> ((x \\<squnion> 1) * y) \\<le> x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * x \\<star> (x \\<squnion> (1::'a)) * y \\<le> x \\<star> y", "by (metis le_supI while_increasing while_mult_transitive while_mult_upper_bound while_one_increasing while_square)"], ["", "lemma while_separate_unfold_below:\n  \"(y * (x \\<star> 1)) \\<star> z \\<le> (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "have \"(y * (x \\<star> 1)) \\<star> z = (y \\<star> (y * x * (x \\<star> 1))) \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> y * x * (x \\<star> (1::'a))) \\<star> y \\<star> z", "by (metis mult_assoc mult_left_dist_sup mult_1_right while_left_unfold while_sumstar)"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  (y \\<star> y * x * (x \\<star> (1::'a))) \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "hence \"(y * (x \\<star> 1)) \\<star> z = (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> 1))) * ((y * (x \\<star> 1)) \\<star> z)\""], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  (y \\<star> y * x * (x \\<star> (1::'a))) \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> (1::'a))) *\n    (y * (x \\<star> (1::'a)) \\<star> z)", "using while_left_unfold"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  (y \\<star> y * x * (x \\<star> (1::'a))) \\<star> y \\<star> z\n  ?x \\<star> ?y = ?y \\<squnion> ?x * (?x \\<star> ?y)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> (1::'a))) *\n    (y * (x \\<star> (1::'a)) \\<star> z)", "by auto"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> (1::'a))) *\n  (y * (x \\<star> (1::'a)) \\<star> z)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "also"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> (1::'a))) *\n  (y * (x \\<star> (1::'a)) \\<star> z)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "have \"... \\<le> (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> 1)) * ((y * (x \\<star> 1)) \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> (1::'a))) *\n    (y * (x \\<star> (1::'a)) \\<star> z)\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star>\n           y * x * (x \\<star> (1::'a)) *\n           (y * (x \\<star> (1::'a)) \\<star> z))", "using sup_right_isotone while_sub_associative"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<squnion> ?x \\<le> ?z \\<squnion> ?y\n  (?x \\<star> ?y) * ?z \\<le> ?x \\<star> ?y * ?z\n\ngoal (1 subgoal):\n 1. (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> (1::'a))) *\n    (y * (x \\<star> (1::'a)) \\<star> z)\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star>\n           y * x * (x \\<star> (1::'a)) *\n           (y * (x \\<star> (1::'a)) \\<star> z))", "by auto"], ["proof (state)\nthis:\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> (1::'a))) *\n  (y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> (y \\<star> z) \\<squnion>\n        (y \\<star>\n         y * x * (x \\<star> (1::'a)) * (y * (x \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "also"], ["proof (state)\nthis:\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> (1::'a))) *\n  (y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> (y \\<star> z) \\<squnion>\n        (y \\<star>\n         y * x * (x \\<star> (1::'a)) * (y * (x \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "have \"... \\<le> (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<star> z) \\<squnion>\n    (y \\<star>\n     y * x * (x \\<star> (1::'a)) * (y * (x \\<star> (1::'a)) \\<star> z))\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "by (smt sup_right_isotone mult_assoc mult_right_isotone while_one_mult_below while_right_isotone)"], ["proof (state)\nthis:\n  (y \\<star> z) \\<squnion>\n  (y \\<star>\n   y * x * (x \\<star> (1::'a)) * (y * (x \\<star> (1::'a)) \\<star> z))\n  \\<le> (y \\<star> z) \\<squnion>\n        (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "finally"], ["proof (chain)\npicking this:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (y \\<star> z) \\<squnion>\n        (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "show ?thesis"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (y \\<star> z) \\<squnion>\n        (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> z) \\<squnion>\n          (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "."], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> (y \\<star> z) \\<squnion>\n        (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 9.33\\<close>"], ["", "lemma while_mult_zero_sup:\n  \"(x \\<squnion> y * bot) \\<star> z = x \\<star> ((y * bot) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "have \"(x \\<squnion> y * bot) \\<star> z = (x \\<star> (y * bot)) \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = (x \\<star> y * bot) \\<star> x \\<star> z", "by (simp add: while_sumstar)"], ["proof (state)\nthis:\n  x \\<squnion> y * bot \\<star> z = (x \\<star> y * bot) \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "also"], ["proof (state)\nthis:\n  x \\<squnion> y * bot \\<star> z = (x \\<star> y * bot) \\<star> x \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "have \"... = (x \\<star> z) \\<squnion> (x \\<star> (y * bot)) * ((x \\<star> (y * bot)) \\<star> (x \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y * bot) \\<star> x \\<star> z =\n    (x \\<star> z) \\<squnion>\n    (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)", "using while_left_unfold"], ["proof (prove)\nusing this:\n  ?x \\<star> ?y = ?y \\<squnion> ?x * (?x \\<star> ?y)\n\ngoal (1 subgoal):\n 1. (x \\<star> y * bot) \\<star> x \\<star> z =\n    (x \\<star> z) \\<squnion>\n    (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)", "by auto"], ["proof (state)\nthis:\n  (x \\<star> y * bot) \\<star> x \\<star> z =\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> y * bot) \\<star> x \\<star> z =\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "have \"... \\<le> (x \\<star> z) \\<squnion> (x \\<star> (y * bot))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)\n    \\<le> (x \\<star> z) \\<squnion> (x \\<star> y * bot)", "by (metis sup_right_isotone mult_assoc mult_left_zero while_sub_associative)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)\n  \\<le> (x \\<star> z) \\<squnion> (x \\<star> y * bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * bot) * ((x \\<star> y * bot) \\<star> x \\<star> z)\n  \\<le> (x \\<star> z) \\<squnion> (x \\<star> y * bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "have \"... = x \\<star> ((y * bot) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion> (x \\<star> y * bot) =\n    x \\<star> y * bot \\<star> z", "by (simp add: sup_commute while_left_dist_sup while_zero_2)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion> (x \\<star> y * bot) = x \\<star> y * bot \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "finally"], ["proof (chain)\npicking this:\n  x \\<squnion> y * bot \\<star> z \\<le> x \\<star> y * bot \\<star> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<squnion> y * bot \\<star> z \\<le> x \\<star> y * bot \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z", "by (simp add: order.antisym while_sub_dist_3)"], ["proof (state)\nthis:\n  x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_sup_mult_zero:\n  \"(x \\<squnion> y * bot) \\<star> y = x \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> y = x \\<star> y", "by (simp add: sup_absorb2 zero_right_mult_decreasing while_mult_zero_sup while_zero_2)"], ["", "lemma while_mult_zero_sup_2:\n  \"(x \\<squnion> y * bot) \\<star> z = (x \\<star> z) \\<squnion> (x \\<star> (y * bot))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z =\n    (x \\<star> z) \\<squnion> (x \\<star> y * bot)", "by (simp add: sup_commute while_left_dist_sup while_mult_zero_sup while_zero_2)"], ["", "lemma while_sup_zero_star:\n  \"(x \\<squnion> y * bot) \\<star> z = x \\<star> (y * bot \\<squnion> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y * bot \\<star> z = x \\<star> y * bot \\<squnion> z", "by (simp add: while_mult_zero_sup while_zero_2)"], ["", "lemma while_unfold_sum:\n  \"(x \\<squnion> y) \\<star> z = (x \\<star> z) \\<squnion> (x \\<star> (y * ((x \\<squnion> y) \\<star> z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z =\n    (x \\<star> z) \\<squnion> (x \\<star> y * (x \\<squnion> y \\<star> z))", "apply (rule order.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<squnion> y \\<star> z\n    \\<le> (x \\<star> z) \\<squnion>\n          (x \\<star> y * (x \\<squnion> y \\<star> z))\n 2. (x \\<star> z) \\<squnion> (x \\<star> y * (x \\<squnion> y \\<star> z))\n    \\<le> x \\<squnion> y \\<star> z", "apply (metis semiring.add_left_mono while_sub_associative while_sumstar while_left_unfold)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion> (x \\<star> y * (x \\<squnion> y \\<star> z))\n    \\<le> x \\<squnion> y \\<star> z", "by (metis le_supI while_decompose_7 while_mult_increasing while_right_isotone while_sub_dist)"], ["", "lemma while_simulate_left:\n  \"x * z \\<le> z * y \\<squnion> w \\<Longrightarrow> x \\<star> (z * v) \\<le> z * (y \\<star> v) \\<squnion> (x \\<star> (w * (y \\<star> v)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z \\<le> z * y \\<squnion> w \\<Longrightarrow>\n    x \\<star> z * v\n    \\<le> z * (y \\<star> v) \\<squnion> (x \\<star> w * (y \\<star> v))", "by (metis sup_left_isotone mult_right_isotone order_trans while_one_increasing while_simulate_left_plus)"], ["", "lemma while_simulate_right:\n  assumes \"z * x \\<le> y * z \\<squnion> w\"\n    shows \"z * (x \\<star> v) \\<le> y \\<star> (z * v \\<squnion> w * (x \\<star> v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * (x \\<star> v) \\<le> y \\<star> z * v \\<squnion> w * (x \\<star> v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z * (x \\<star> v) \\<le> y \\<star> z * v \\<squnion> w * (x \\<star> v)", "have \"y * z \\<squnion> w \\<le> y * (y \\<star> z) \\<squnion> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * z \\<squnion> w \\<le> y * (y \\<star> z) \\<squnion> w", "using sup_left_isotone while_increasing while_mult_star_exchange"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n  ?y \\<le> ?x \\<star> ?y\n  ?x * (?x \\<star> ?y) = ?x \\<star> ?x * ?y\n\ngoal (1 subgoal):\n 1. y * z \\<squnion> w \\<le> y * (y \\<star> z) \\<squnion> w", "by force"], ["proof (state)\nthis:\n  y * z \\<squnion> w \\<le> y * (y \\<star> z) \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * (x \\<star> v) \\<le> y \\<star> z * v \\<squnion> w * (x \\<star> v)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y * z \\<squnion> w \\<le> y * (y \\<star> z) \\<squnion> w\n\ngoal (1 subgoal):\n 1. z * (x \\<star> v) \\<le> y \\<star> z * v \\<squnion> w * (x \\<star> v)", "by (meson assms order.trans while_simulate_right_plus)"], ["proof (state)\nthis:\n  z * (x \\<star> v) \\<le> y \\<star> z * v \\<squnion> w * (x \\<star> v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_simulate:\n  \"z * x \\<le> y * z \\<Longrightarrow> z * (x \\<star> v) \\<le> y \\<star> (z * v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z * x \\<le> y * z \\<Longrightarrow>\n    z * (x \\<star> v) \\<le> y \\<star> z * v", "by (metis sup_bot_right mult_left_zero while_simulate_right)"], ["", "text \\<open>Theorem 9.14\\<close>"], ["", "lemma while_while_mult:\n  \"1 \\<star> (x \\<star> y) = (x \\<star> 1) \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "have \"(x \\<star> 1) \\<star> y \\<le> (x \\<star> 1) * ((x \\<star> 1) \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) \\<star> y\n    \\<le> (x \\<star> (1::'a)) * ((x \\<star> (1::'a)) \\<star> y)", "by (simp add: while_increasing while_sup_one_left_unfold)"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) \\<star> y\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> (1::'a)) \\<star> y)\n\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "also"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) \\<star> y\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> (1::'a)) \\<star> y)\n\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "have \"... \\<le> 1 \\<star> ((x \\<star> 1) * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * ((x \\<star> (1::'a)) \\<star> y)\n    \\<le> (1::'a) \\<star> (x \\<star> (1::'a)) * y", "by (simp add: while_one_mult_while_below while_simulate)"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * ((x \\<star> (1::'a)) \\<star> y)\n  \\<le> (1::'a) \\<star> (x \\<star> (1::'a)) * y\n\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "also"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * ((x \\<star> (1::'a)) \\<star> y)\n  \\<le> (1::'a) \\<star> (x \\<star> (1::'a)) * y\n\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "have \"... \\<le> 1 \\<star> (x \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<star> (x \\<star> (1::'a)) * y\n    \\<le> (1::'a) \\<star> x \\<star> y", "by (simp add: while_isotone while_one_mult_below)"], ["proof (state)\nthis:\n  (1::'a) \\<star> (x \\<star> (1::'a)) * y \\<le> (1::'a) \\<star> x \\<star> y\n\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "finally"], ["proof (chain)\npicking this:\n  (x \\<star> (1::'a)) \\<star> y \\<le> (1::'a) \\<star> x \\<star> y", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<star> (1::'a)) \\<star> y \\<le> (1::'a) \\<star> x \\<star> y\n\ngoal (1 subgoal):\n 1. (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y", "by (metis order.antisym while_sub_dist_3 while_while_sup)"], ["proof (state)\nthis:\n  (1::'a) \\<star> x \\<star> y = (x \\<star> (1::'a)) \\<star> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_simulate_left_1:\n  \"x * z \\<le> z * y \\<Longrightarrow> x \\<star> (z * v) \\<le> z * (y \\<star> v) \\<squnion> (x \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z \\<le> z * y \\<Longrightarrow>\n    x \\<star> z * v \\<le> z * (y \\<star> v) \\<squnion> (x \\<star> bot)", "by (meson order.trans mult_right_isotone while_one_increasing while_simulate_left_plus_1)"], ["", "text \\<open>Theorem 9.46\\<close>"], ["", "lemma while_associative_1:\n  assumes \"1 \\<le> z\"\n  shows \"x \\<star> (y * z) = (x \\<star> y) * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "have \"x \\<star> (y * z) \\<le> x \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * z \\<le> x \\<star> (x \\<star> y) * z", "by (simp add: mult_isotone while_increasing while_right_isotone)"], ["proof (state)\nthis:\n  x \\<star> y * z \\<le> x \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  x \\<star> y * z \\<le> x \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "have \"... \\<le> (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> y) * z\n    \\<le> (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)", "by (metis mult_assoc mult_right_sub_dist_sup_right while_left_unfold while_simulate_absorb while_zero)"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> y) * z\n  \\<le> (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> y) * z\n  \\<le> (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "have \"... \\<le> (x \\<star> y) * z \\<squnion> (x \\<star> bot) * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)\n    \\<le> (x \\<star> y) * z \\<squnion> (x \\<star> bot) * z", "by (metis assms le_supI sup_ge1 sup_ge2 case_split_right while_plus_one while_zero)"], ["proof (state)\nthis:\n  (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)\n  \\<le> (x \\<star> y) * z \\<squnion> (x \\<star> bot) * z\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> y) * (bot \\<star> z) \\<squnion> (x \\<star> bot)\n  \\<le> (x \\<star> y) * z \\<squnion> (x \\<star> bot) * z\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "have \"... = (x \\<star> y) * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) * z \\<squnion> (x \\<star> bot) * z = (x \\<star> y) * z", "by (metis sup_bot_right mult_right_dist_sup while_left_dist_sup)"], ["proof (state)\nthis:\n  (x \\<star> y) * z \\<squnion> (x \\<star> bot) * z = (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "finally"], ["proof (chain)\npicking this:\n  x \\<star> y * z \\<le> (x \\<star> y) * z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<star> y * z \\<le> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> y * z = (x \\<star> y) * z", "by (simp add: order.antisym while_sub_associative)"], ["proof (state)\nthis:\n  x \\<star> y * z = (x \\<star> y) * z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 9.29\\<close>"], ["", "lemma while_associative_while_1:\n  \"x \\<star> (y * (z \\<star> 1)) = (x \\<star> y) * (z \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * (z \\<star> (1::'a)) = (x \\<star> y) * (z \\<star> (1::'a))", "by (simp add: while_associative_1 while_increasing)"], ["", "text \\<open>Theorem 9.13\\<close>"], ["", "lemma while_one_while:\n  \"(x \\<star> 1) * (y \\<star> 1) = x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * (y \\<star> (1::'a)) = x \\<star> y \\<star> (1::'a)", "by (metis mult_left_one while_associative_while_1)"], ["", "lemma while_decompose_5_below:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z \\<le> (y \\<star> (x \\<star> 1)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z\n    \\<le> (y \\<star> x \\<star> (1::'a)) \\<star> z", "by (smt (z3) while_left_dist_sup while_sumstar while_absorb_2 while_one_increasing while_plus_one while_sub_dist)"], ["", "text \\<open>Theorem 9.26\\<close>"], ["", "lemma while_decompose_5:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = (y \\<star> (x \\<star> 1)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    (y \\<star> x \\<star> (1::'a)) \\<star> z", "by (simp add: order.antisym while_decompose_5_below)"], ["", "lemma while_decompose_4:\n  \"(x \\<star> (y \\<star> 1)) \\<star> z = x \\<star> ((y \\<star> (x \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    x \\<star> (y \\<star> x \\<star> (1::'a)) \\<star> z", "using while_absorb_1 while_decompose_5 while_sup_below"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<star> ?y \\<star> ?z = ?y \\<star> ?z\n  (?x \\<star> ?y \\<star> (1::'a)) \\<star> ?z =\n  (?y \\<star> ?x \\<star> (1::'a)) \\<star> ?z\n  ?x \\<squnion> ?y \\<le> ?x \\<star> ?y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<star> z =\n    x \\<star> (y \\<star> x \\<star> (1::'a)) \\<star> z", "by auto"], ["", "text \\<open>Theorem 11.7\\<close>"], ["", "lemma while_simulate_2:\n  \"y * (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1) \\<longleftrightarrow> y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)) =\n    (y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "assume \"y * (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "hence \"y * (x \\<star> 1) \\<le> (x \\<star> 1) * (y \\<star> 1)\""], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a))", "by (simp add: while_one_while)"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a))\n\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "hence \"y \\<star> ((x \\<star> 1) * 1) \\<le> (x \\<star> 1) * (y \\<star> 1) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. y \\<star> (x \\<star> (1::'a)) * (1::'a)\n    \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion>\n          (y \\<star> bot)", "using while_simulate_left_plus_1"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a))\n  ?x * ?z \\<le> ?z * (?y \\<star> (1::'a)) \\<Longrightarrow>\n  ?x \\<star> ?z * ?w \\<le> ?z * (?y \\<star> ?w) \\<squnion> (?x \\<star> bot)\n\ngoal (1 subgoal):\n 1. y \\<star> (x \\<star> (1::'a)) * (1::'a)\n    \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion>\n          (y \\<star> bot)", "by blast"], ["proof (state)\nthis:\n  y \\<star> (x \\<star> (1::'a)) * (1::'a)\n  \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "hence \"y \\<star> (x \\<star> 1) \\<le> (x \\<star> (y \\<star> 1)) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\nusing this:\n  y \\<star> (x \\<star> (1::'a)) * (1::'a)\n  \\<le> (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. y \\<star> x \\<star> (1::'a)\n    \\<le> (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "by (simp add: while_one_while)"], ["proof (state)\nthis:\n  y \\<star> x \\<star> (1::'a)\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "also"], ["proof (state)\nthis:\n  y \\<star> x \\<star> (1::'a)\n  \\<le> (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "have \"... = x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot) =\n    x \\<star> y \\<star> (1::'a)", "by (metis sup_commute le_iff_sup order_trans while_increasing while_right_isotone bot_least)"], ["proof (state)\nthis:\n  (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot) =\n  x \\<star> y \\<star> (1::'a)\n\ngoal (2 subgoals):\n 1. y * (x \\<star> (1::'a))\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n 2. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "finally"], ["proof (chain)\npicking this:\n  y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)", "show \"y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\nusing this:\n  y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)", "."], ["proof (state)\nthis:\n  y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "assume \"y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (state)\nthis:\n  y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. y \\<star> x \\<star> (1::'a)\n    \\<le> x \\<star> y \\<star> (1::'a) \\<Longrightarrow>\n    y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "thus \"y * (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\nusing this:\n  y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "using order_trans while_mult_increasing"], ["proof (prove)\nusing this:\n  y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n  ?x * ?y \\<le> ?x \\<star> ?y\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)", "by blast"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<le> x \\<star> y \\<star> (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_simulate_1:\n  \"y * x \\<le> x * y \\<Longrightarrow> y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)", "by (metis order_trans while_mult_increasing while_right_isotone while_simulate while_simulate_2)"], ["", "lemma while_simulate_3:\n  \"y * (x \\<star> 1) \\<le> x \\<star> 1 \\<Longrightarrow> y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<le> x \\<star> (1::'a) \\<Longrightarrow>\n    y \\<star> x \\<star> (1::'a) \\<le> x \\<star> y \\<star> (1::'a)", "by (meson order.trans while_increasing while_right_isotone while_simulate_2)"], ["", "text \\<open>Theorem 9.28\\<close>"], ["", "lemma while_extra_while:\n  \"(y * (x \\<star> 1)) \\<star> z = (y * (y \\<star> (x \\<star> 1))) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "have \"y * (y \\<star> (x \\<star> 1)) \\<le> y * (x \\<star> 1) * (y * (x \\<star> 1) \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (y \\<star> x \\<star> (1::'a))\n    \\<le> y * (x \\<star> (1::'a)) *\n          (y * (x \\<star> (1::'a)) \\<star> (1::'a))", "using while_back_loop_prefixpoint while_left_isotone while_mult_star_exchange"], ["proof (prove)\nusing this:\n  ?z * (?y \\<star> (1::'a)) * ?y \\<squnion> ?z\n  \\<le> ?z * (?y \\<star> (1::'a))\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<star> ?z \\<le> ?y \\<star> ?z\n  ?x * (?x \\<star> ?y) = ?x \\<star> ?x * ?y\n\ngoal (1 subgoal):\n 1. y * (y \\<star> x \\<star> (1::'a))\n    \\<le> y * (x \\<star> (1::'a)) *\n          (y * (x \\<star> (1::'a)) \\<star> (1::'a))", "by auto"], ["proof (state)\nthis:\n  y * (y \\<star> x \\<star> (1::'a))\n  \\<le> y * (x \\<star> (1::'a)) * (y * (x \\<star> (1::'a)) \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "hence 1: \"(y * (y \\<star> (x \\<star> 1))) \\<star> z \\<le> (y * (x \\<star> 1)) \\<star> z\""], ["proof (prove)\nusing this:\n  y * (y \\<star> x \\<star> (1::'a))\n  \\<le> y * (x \\<star> (1::'a)) * (y * (x \\<star> (1::'a)) \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n    \\<le> y * (x \\<star> (1::'a)) \\<star> z", "by (metis while_simulate_right_plus_1 mult_left_one)"], ["proof (state)\nthis:\n  y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "have \"(y * (x \\<star> 1)) \\<star> z \\<le> (y * (y \\<star> (x \\<star> 1))) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z\n    \\<le> y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "by (simp add: while_increasing while_left_isotone while_mult_star_exchange)"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "thus ?thesis"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "using 1 order.antisym"], ["proof (prove)\nusing this:\n  y * (x \\<star> (1::'a)) \\<star> z\n  \\<le> y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n  y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    y * (y \\<star> x \\<star> (1::'a)) \\<star> z", "by auto"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  y * (y \\<star> x \\<star> (1::'a)) \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 11.6\\<close>"], ["", "lemma while_separate_4:\n  assumes \"y * x \\<le> x * (x \\<star> (1 \\<squnion> y))\"\n    shows \"(x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"(1 \\<squnion> y) * x \\<le> x * (x \\<star> (1 \\<squnion> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) \\<squnion> y) * x \\<le> x * (x \\<star> (1::'a) \\<squnion> y)", "by (smt assms sup_assoc le_supI mult_left_one mult_left_sub_dist_sup_left mult_right_dist_sup mult_1_right while_left_unfold)"], ["proof (state)\nthis:\n  ((1::'a) \\<squnion> y) * x \\<le> x * (x \\<star> (1::'a) \\<squnion> y)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "hence 1: \"(1 \\<squnion> y) * (x \\<star> 1) \\<le> x \\<star> (1 \\<squnion> y)\""], ["proof (prove)\nusing this:\n  ((1::'a) \\<squnion> y) * x \\<le> x * (x \\<star> (1::'a) \\<squnion> y)\n\ngoal (1 subgoal):\n 1. ((1::'a) \\<squnion> y) * (x \\<star> (1::'a))\n    \\<le> x \\<star> (1::'a) \\<squnion> y", "by (metis mult_1_right while_simulate_right_plus_1)"], ["proof (state)\nthis:\n  ((1::'a) \\<squnion> y) * (x \\<star> (1::'a))\n  \\<le> x \\<star> (1::'a) \\<squnion> y\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"y * x * (x \\<star> 1) \\<le> x * (x \\<star> ((1 \\<squnion> y) * (x \\<star> 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x * (x \\<star> (1::'a))\n    \\<le> x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))", "by (smt assms le_iff_sup mult_assoc mult_right_dist_sup while_associative_1 while_increasing)"], ["proof (state)\nthis:\n  y * x * (x \\<star> (1::'a))\n  \\<le> x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  y * x * (x \\<star> (1::'a))\n  \\<le> x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... \\<le> x * (x \\<star> (1 \\<squnion> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))\n    \\<le> x * (x \\<star> (1::'a) \\<squnion> y)", "using 1 mult_right_isotone while_mult_transitive"], ["proof (prove)\nusing this:\n  ((1::'a) \\<squnion> y) * (x \\<star> (1::'a))\n  \\<le> x \\<star> (1::'a) \\<squnion> y\n  ?x \\<le> ?y \\<Longrightarrow> ?z * ?x \\<le> ?z * ?y\n  \\<lbrakk>?x \\<le> ?z \\<star> ?y; ?y \\<le> ?z \\<star> ?w\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> ?z \\<star> ?w\n\ngoal (1 subgoal):\n 1. x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))\n    \\<le> x * (x \\<star> (1::'a) \\<squnion> y)", "by blast"], ["proof (state)\nthis:\n  x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))\n  \\<le> x * (x \\<star> (1::'a) \\<squnion> y)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  x * (x \\<star> ((1::'a) \\<squnion> y) * (x \\<star> (1::'a)))\n  \\<le> x * (x \\<star> (1::'a) \\<squnion> y)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... \\<le> x * (x \\<star> 1) * (y \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> (1::'a) \\<squnion> y)\n    \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a))", "by (simp add: mult_right_isotone mult_assoc while_increasing while_one_increasing while_one_while while_right_isotone)"], ["proof (state)\nthis:\n  x * (x \\<star> (1::'a) \\<squnion> y)\n  \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "finally"], ["proof (chain)\npicking this:\n  y * x * (x \\<star> (1::'a))\n  \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a))", "have \"y \\<star> (x * (x \\<star> 1)) \\<le> x * (x \\<star> 1) * (y \\<star> 1) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\nusing this:\n  y * x * (x \\<star> (1::'a))\n  \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. y \\<star> x * (x \\<star> (1::'a))\n    \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion>\n          (y \\<star> bot)", "by (metis mult_assoc mult_1_right while_simulate_left_plus_1)"], ["proof (state)\nthis:\n  y \\<star> x * (x \\<star> (1::'a))\n  \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion>\n        (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "hence \"(y \\<star> 1) * (y \\<star> x) \\<le> x * (x \\<star> y \\<star> 1) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\nusing this:\n  y \\<star> x * (x \\<star> (1::'a))\n  \\<le> x * (x \\<star> (1::'a)) * (y \\<star> (1::'a)) \\<squnion>\n        (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. (y \\<star> (1::'a)) * (y \\<star> x)\n    \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "by (smt le_iff_sup mult_assoc mult_1_right order_refl order_trans while_absorb_2 while_left_dist_sup while_mult_star_exchange while_one_mult_below while_one_while while_plus_one)"], ["proof (state)\nthis:\n  (y \\<star> (1::'a)) * (y \\<star> x)\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "hence \"(y \\<star> 1) * ((y \\<star> x) \\<star> (y \\<star> z)) \\<le> x \\<star> ((y \\<star> 1) * (y \\<star> z) \\<squnion> (y \\<star> bot) * ((y \\<star> x) \\<star> (y \\<star> z)))\""], ["proof (prove)\nusing this:\n  (y \\<star> (1::'a)) * (y \\<star> x)\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n    \\<le> x \\<star>\n          (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n          (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)", "by (simp add: while_simulate_right_plus)"], ["proof (state)\nthis:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star>\n        (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n        (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star>\n        (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n        (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... \\<le> x \\<star> ((y \\<star> z) \\<squnion> (y \\<star> bot))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star>\n    (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n    (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n    \\<le> x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot)", "by (metis sup_mono mult_left_zero order_refl while_absorb_2 while_one_mult_below while_right_isotone while_sub_associative)"], ["proof (state)\nthis:\n  x \\<star>\n  (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n  (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  x \\<star>\n  (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n  (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... = x \\<star> y \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot) =\n    x \\<star> y \\<star> z", "using sup.absorb_iff1 while_right_isotone"], ["proof (prove)\nusing this:\n  (?b \\<le> ?a) = (?a \\<squnion> ?b = ?a)\n  ?y \\<le> ?z \\<Longrightarrow> ?x \\<star> ?y \\<le> ?x \\<star> ?z\n\ngoal (1 subgoal):\n 1. x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot) =\n    x \\<star> y \\<star> z", "by auto"], ["proof (state)\nthis:\n  x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot) = x \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "finally"], ["proof (chain)\npicking this:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> y \\<star> z", "show ?thesis"], ["proof (prove)\nusing this:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "by (smt sup_commute le_iff_sup mult_left_one mult_right_dist_sup while_plus_one while_sub_associative while_sumstar)"], ["proof (state)\nthis:\n  x \\<squnion> y \\<star> z = x \\<star> y \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_separate_5:\n  \"y * x \\<le> x * (x \\<star> (x \\<squnion> y)) \\<Longrightarrow> (x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * (x \\<star> x \\<squnion> y) \\<Longrightarrow>\n    x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "using order_lesseq_imp while_separate_4 while_sup_sub_sup_one_mult"], ["proof (prove)\nusing this:\n  (\\<forall>z\\<ge>?x. ?y \\<le> z) = (?y \\<le> ?x)\n  ?y * ?x \\<le> ?x * (?x \\<star> (1::'a) \\<squnion> ?y) \\<Longrightarrow>\n  ?x \\<squnion> ?y \\<star> ?z = ?x \\<star> ?y \\<star> ?z\n  ?x * (?x \\<star> ?x \\<squnion> ?y)\n  \\<le> ?x * (?x \\<star> (1::'a) \\<squnion> ?y)\n\ngoal (1 subgoal):\n 1. y * x \\<le> x * (x \\<star> x \\<squnion> y) \\<Longrightarrow>\n    x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "by blast"], ["", "lemma while_separate_6:\n  \"y * x \\<le> x * (x \\<squnion> y) \\<Longrightarrow> (x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * (x \\<squnion> y) \\<Longrightarrow>\n    x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "by (smt order_trans while_increasing while_mult_star_exchange while_separate_5)"], ["", "text \\<open>Theorem 11.4\\<close>"], ["", "lemma while_separate_1:\n  \"y * x \\<le> x * y \\<Longrightarrow> (x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "using mult_left_sub_dist_sup_right order_lesseq_imp while_separate_6"], ["proof (prove)\nusing this:\n  ?x * ?z \\<le> ?x * (?y \\<squnion> ?z)\n  (\\<forall>z\\<ge>?x. ?y \\<le> z) = (?y \\<le> ?x)\n  ?y * ?x \\<le> ?x * (?x \\<squnion> ?y) \\<Longrightarrow>\n  ?x \\<squnion> ?y \\<star> ?z = ?x \\<star> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "by blast"], ["", "text \\<open>Theorem 11.2\\<close>"], ["", "lemma while_separate_mult_1:\n  \"y * x \\<le> x * y \\<Longrightarrow> (x * y) \\<star> z \\<le> x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    x * y \\<star> z \\<le> x \\<star> y \\<star> z", "by (metis while_mult_sub_sup while_separate_1)"], ["", "text \\<open>Theorem 11.5\\<close>"], ["", "lemma separation:\n  assumes \"y * x \\<le> x * (y \\<star> 1)\"\n    shows \"(x \\<squnion> y) \\<star> z = x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"y \\<star> x \\<le> x * (y \\<star> 1) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<star> x \\<le> x * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "by (metis assms mult_1_right while_simulate_left_plus_1)"], ["proof (state)\nthis:\n  y \\<star> x \\<le> x * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  y \\<star> x \\<le> x * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... \\<le> x * (x \\<star> y \\<star> 1) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n    \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "using sup_left_isotone while_increasing while_mult_star_exchange"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n  ?y \\<le> ?x \\<star> ?y\n  ?x * (?x \\<star> ?y) = ?x \\<star> ?x * ?y\n\ngoal (1 subgoal):\n 1. x * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n    \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "by force"], ["proof (state)\nthis:\n  x * (y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "finally"], ["proof (chain)\npicking this:\n  y \\<star> x\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "have \"(y \\<star> 1) * (y \\<star> x) \\<le> x * (x \\<star> y \\<star> 1) \\<squnion> (y \\<star> bot)\""], ["proof (prove)\nusing this:\n  y \\<star> x\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. (y \\<star> (1::'a)) * (y \\<star> x)\n    \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "using order.trans while_one_mult_while_below"], ["proof (prove)\nusing this:\n  y \\<star> x\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  (?y \\<star> (1::'a)) * (?y \\<star> ?v) \\<le> ?y \\<star> ?v\n\ngoal (1 subgoal):\n 1. (y \\<star> (1::'a)) * (y \\<star> x)\n    \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)", "by blast"], ["proof (state)\nthis:\n  (y \\<star> (1::'a)) * (y \\<star> x)\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "hence \"(y \\<star> 1) * ((y \\<star> x) \\<star> (y \\<star> z)) \\<le> x \\<star> ((y \\<star> 1) * (y \\<star> z) \\<squnion> (y \\<star> bot) * ((y \\<star> x) \\<star> (y \\<star> z)))\""], ["proof (prove)\nusing this:\n  (y \\<star> (1::'a)) * (y \\<star> x)\n  \\<le> x * (x \\<star> y \\<star> (1::'a)) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n    \\<le> x \\<star>\n          (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n          (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)", "by (simp add: while_simulate_right_plus)"], ["proof (state)\nthis:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star>\n        (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n        (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star>\n        (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n        (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... \\<le> x \\<star> ((y \\<star> z) \\<squnion> (y \\<star> bot))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star>\n    (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n    (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n    \\<le> x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot)", "by (metis sup_mono mult_left_zero order_refl while_absorb_2 while_one_mult_below while_right_isotone while_sub_associative)"], ["proof (state)\nthis:\n  x \\<star>\n  (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n  (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "also"], ["proof (state)\nthis:\n  x \\<star>\n  (y \\<star> (1::'a)) * (y \\<star> z) \\<squnion>\n  (y \\<star> bot) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "have \"... = x \\<star> y \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot) =\n    x \\<star> y \\<star> z", "using sup.absorb_iff1 while_right_isotone"], ["proof (prove)\nusing this:\n  (?b \\<le> ?a) = (?a \\<squnion> ?b = ?a)\n  ?y \\<le> ?z \\<Longrightarrow> ?x \\<star> ?y \\<le> ?x \\<star> ?z\n\ngoal (1 subgoal):\n 1. x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot) =\n    x \\<star> y \\<star> z", "by auto"], ["proof (state)\nthis:\n  x \\<star> (y \\<star> z) \\<squnion> (y \\<star> bot) = x \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "finally"], ["proof (chain)\npicking this:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> y \\<star> z", "show ?thesis"], ["proof (prove)\nusing this:\n  (y \\<star> (1::'a)) * ((y \\<star> x) \\<star> y \\<star> z)\n  \\<le> x \\<star> y \\<star> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y \\<star> z", "by (smt sup_commute le_iff_sup mult_left_one mult_right_dist_sup while_plus_one while_sub_associative while_sumstar)"], ["proof (state)\nthis:\n  x \\<squnion> y \\<star> z = x \\<star> y \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 11.5\\<close>"], ["", "lemma while_separate_left:\n  \"y * x \\<le> x * (y \\<star> 1) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * (y \\<star> (1::'a)) \\<Longrightarrow>\n    y \\<star> x \\<star> z \\<le> x \\<star> y \\<star> z", "by (metis sup_commute separation while_sub_dist_3)"], ["", "text \\<open>Theorem 11.6\\<close>"], ["", "lemma while_simulate_4:\n  \"y * x \\<le> x * (x \\<star> (1 \\<squnion> y)) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * (x \\<star> (1::'a) \\<squnion> y) \\<Longrightarrow>\n    y \\<star> x \\<star> z \\<le> x \\<star> y \\<star> z", "by (metis sup_commute while_separate_4 while_sub_dist_3)"], ["", "lemma while_simulate_5:\n  \"y * x \\<le> x * (x \\<star> (x \\<squnion> y)) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * (x \\<star> x \\<squnion> y) \\<Longrightarrow>\n    y \\<star> x \\<star> z \\<le> x \\<star> y \\<star> z", "by (smt order_trans while_sup_sub_sup_one_mult while_simulate_4)"], ["", "lemma while_simulate_6:\n  \"y * x \\<le> x * (x \\<squnion> y) \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * (x \\<squnion> y) \\<Longrightarrow>\n    y \\<star> x \\<star> z \\<le> x \\<star> y \\<star> z", "by (smt order_trans while_increasing while_mult_star_exchange while_simulate_5)"], ["", "text \\<open>Theorem 11.3\\<close>"], ["", "lemma while_simulate_7:\n  \"y * x \\<le> x * y \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    y \\<star> x \\<star> z \\<le> x \\<star> y \\<star> z", "using mult_left_sub_dist_sup_right order_lesseq_imp while_simulate_6"], ["proof (prove)\nusing this:\n  ?x * ?z \\<le> ?x * (?y \\<squnion> ?z)\n  (\\<forall>z\\<ge>?x. ?y \\<le> z) = (?y \\<le> ?x)\n  ?y * ?x \\<le> ?x * (?x \\<squnion> ?y) \\<Longrightarrow>\n  ?y \\<star> ?x \\<star> ?z \\<le> ?x \\<star> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. y * x \\<le> x * y \\<Longrightarrow>\n    y \\<star> x \\<star> z \\<le> x \\<star> y \\<star> z", "by blast"], ["", "lemma while_while_mult_1:\n  \"x \\<star> (1 \\<star> y) = 1 \\<star> (x \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (1::'a) \\<star> y = (1::'a) \\<star> x \\<star> y", "by (metis sup_commute mult_left_one mult_1_right order_refl while_separate_1)"], ["", "text \\<open>Theorem 9.15\\<close>"], ["", "lemma while_while_mult_2:\n  \"x \\<star> (1 \\<star> y) = (x \\<star> 1) \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (1::'a) \\<star> y = (x \\<star> (1::'a)) \\<star> y", "by (simp add: while_while_mult while_while_mult_1)"], ["", "text \\<open>Theorem 11.8\\<close>"], ["", "lemma while_import:\n  assumes \"p \\<le> p * p \\<and> p \\<le> 1 \\<and> p * x \\<le> x * p\"\n    shows \"p * (x \\<star> y) = p * ((p * x) \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "have \"p * (x \\<star> y) \\<le> (p * x) \\<star> (p * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (x \\<star> y) \\<le> p * x \\<star> p * y", "using assms test_preserves_equation while_simulate"], ["proof (prove)\nusing this:\n  dense_rel p \\<and> coreflexive p \\<and> p * x \\<le> x * p\n  \\<lbrakk>dense_rel ?p; coreflexive ?p\\<rbrakk>\n  \\<Longrightarrow> (?p * ?x \\<le> ?x * ?p) = (?p * ?x = ?p * ?x * ?p)\n  ?z * ?x \\<le> ?y * ?z \\<Longrightarrow>\n  ?z * (?x \\<star> ?v) \\<le> ?y \\<star> ?z * ?v\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) \\<le> p * x \\<star> p * y", "by auto"], ["proof (state)\nthis:\n  p * (x \\<star> y) \\<le> p * x \\<star> p * y\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "also"], ["proof (state)\nthis:\n  p * (x \\<star> y) \\<le> p * x \\<star> p * y\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "have \"... \\<le> (p * x) \\<star> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * x \\<star> p * y \\<le> p * x \\<star> y", "by (metis assms le_iff_sup mult_left_one mult_right_dist_sup while_right_isotone)"], ["proof (state)\nthis:\n  p * x \\<star> p * y \\<le> p * x \\<star> y\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "finally"], ["proof (chain)\npicking this:\n  p * (x \\<star> y) \\<le> p * x \\<star> y", "have 2: \"p * (x \\<star> y) \\<le> p * ((p * x) \\<star> y)\""], ["proof (prove)\nusing this:\n  p * (x \\<star> y) \\<le> p * x \\<star> y\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) \\<le> p * (p * x \\<star> y)", "by (smt assms sup_commute le_iff_sup mult_assoc mult_left_dist_sup mult_1_right)"], ["proof (state)\nthis:\n  p * (x \\<star> y) \\<le> p * (p * x \\<star> y)\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "have \"p * ((p * x) \\<star> y) \\<le> p * (x \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (p * x \\<star> y) \\<le> p * (x \\<star> y)", "by (metis assms mult_left_isotone mult_left_one mult_right_isotone while_left_isotone)"], ["proof (state)\nthis:\n  p * (p * x \\<star> y) \\<le> p * (x \\<star> y)\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  p * (p * x \\<star> y) \\<le> p * (x \\<star> y)\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "using 2 order.antisym"], ["proof (prove)\nusing this:\n  p * (p * x \\<star> y) \\<le> p * (x \\<star> y)\n  p * (x \\<star> y) \\<le> p * (p * x \\<star> y)\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (p * x \\<star> y)", "by auto"], ["proof (state)\nthis:\n  p * (x \\<star> y) = p * (p * x \\<star> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 11.8\\<close>"], ["", "lemma while_preserve:\n  assumes \"p \\<le> p * p\"\n      and \"p \\<le> 1\"\n      and \"p * x \\<le> x * p\"\n    shows \"p * (x \\<star> y) = p * (x \\<star> (p * y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (x \\<star> y) = p * (x \\<star> p * y)", "proof (rule order.antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. p * (x \\<star> y) \\<le> p * (x \\<star> p * y)\n 2. p * (x \\<star> p * y) \\<le> p * (x \\<star> y)", "show \"p * (x \\<star> y) \\<le> p * (x \\<star> (p * y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (x \\<star> y) \\<le> p * (x \\<star> p * y)", "by (metis assms order.antisym coreflexive_transitive mult_right_isotone mult_assoc while_simulate)"], ["proof (state)\nthis:\n  p * (x \\<star> y) \\<le> p * (x \\<star> p * y)\n\ngoal (1 subgoal):\n 1. p * (x \\<star> p * y) \\<le> p * (x \\<star> y)", "show \"p * (x \\<star> (p * y)) \\<le> p * (x \\<star> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (x \\<star> p * y) \\<le> p * (x \\<star> y)", "by (metis assms(2) mult_left_isotone mult_left_one mult_right_isotone while_right_isotone)"], ["proof (state)\nthis:\n  p * (x \\<star> p * y) \\<le> p * (x \\<star> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_plus_below_while:\n  \"(x \\<star> 1) * x \\<le> x \\<star> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * x \\<le> x \\<star> (1::'a)", "by (simp add: while_mult_upper_bound while_one_increasing)"], ["", "text \\<open>Theorem 9.40\\<close>"], ["", "lemma while_01:\n  \"(w * (x \\<star> 1)) \\<star> (y * z) \\<le> (x \\<star> w) \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"(w * (x \\<star> 1)) \\<star> (y * z) = y * z \\<squnion> w * (((x \\<star> 1) * w) \\<star> ((x \\<star> 1) * y * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z =\n    y * z \\<squnion>\n    w * ((x \\<star> (1::'a)) * w \\<star> (x \\<star> (1::'a)) * y * z)", "by (metis mult_assoc while_productstar)"], ["proof (state)\nthis:\n  w * (x \\<star> (1::'a)) \\<star> y * z =\n  y * z \\<squnion>\n  w * ((x \\<star> (1::'a)) * w \\<star> (x \\<star> (1::'a)) * y * z)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  w * (x \\<star> (1::'a)) \\<star> y * z =\n  y * z \\<squnion>\n  w * ((x \\<star> (1::'a)) * w \\<star> (x \\<star> (1::'a)) * y * z)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"... \\<le> y * z \\<squnion> w * ((x \\<star> w) \\<star> ((x \\<star> y) * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * z \\<squnion>\n    w * ((x \\<star> (1::'a)) * w \\<star> (x \\<star> (1::'a)) * y * z)\n    \\<le> y * z \\<squnion> w * ((x \\<star> w) \\<star> (x \\<star> y) * z)", "by (metis sup_right_isotone mult_left_isotone mult_right_isotone while_isotone while_one_mult_below)"], ["proof (state)\nthis:\n  y * z \\<squnion>\n  w * ((x \\<star> (1::'a)) * w \\<star> (x \\<star> (1::'a)) * y * z)\n  \\<le> y * z \\<squnion> w * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  y * z \\<squnion>\n  w * ((x \\<star> (1::'a)) * w \\<star> (x \\<star> (1::'a)) * y * z)\n  \\<le> y * z \\<squnion> w * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"... \\<le> (x \\<star> y) * z \\<squnion> (x \\<star> w) * ((x \\<star> w) \\<star> ((x \\<star> y) * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * z \\<squnion> w * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n    \\<le> (x \\<star> y) * z \\<squnion>\n          (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)", "by (meson mult_left_isotone semiring.add_mono while_increasing)"], ["proof (state)\nthis:\n  y * z \\<squnion> w * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n  \\<le> (x \\<star> y) * z \\<squnion>\n        (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "finally"], ["proof (chain)\npicking this:\n  w * (x \\<star> (1::'a)) \\<star> y * z\n  \\<le> (x \\<star> y) * z \\<squnion>\n        (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)", "show ?thesis"], ["proof (prove)\nusing this:\n  w * (x \\<star> (1::'a)) \\<star> y * z\n  \\<le> (x \\<star> y) * z \\<squnion>\n        (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "using while_left_unfold"], ["proof (prove)\nusing this:\n  w * (x \\<star> (1::'a)) \\<star> y * z\n  \\<le> (x \\<star> y) * z \\<squnion>\n        (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n  ?x \\<star> ?y = ?y \\<squnion> ?x * (?x \\<star> ?y)\n\ngoal (1 subgoal):\n 1. w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "by auto"], ["proof (state)\nthis:\n  w * (x \\<star> (1::'a)) \\<star> y * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 9.37\\<close>"], ["", "lemma while_while_sub_associative:\n  \"x \\<star> (y \\<star> z) \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have 1: \"x * (x \\<star> 1) \\<le> (x \\<star> 1) * ((x \\<star> y) \\<star> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> (1::'a))\n    \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> (1::'a))", "by (metis le_supE while_back_loop_prefixpoint while_mult_increasing while_mult_transitive while_one_while)"], ["proof (state)\nthis:\n  x * (x \\<star> (1::'a))\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> (1::'a))\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have \"x \\<star> (y \\<star> z) \\<le> x \\<star> ((x \\<star> 1) * (y \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)", "by (metis mult_left_isotone mult_left_one while_increasing while_right_isotone)"], ["proof (state)\nthis:\n  x \\<star> y \\<star> z \\<le> x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "also"], ["proof (state)\nthis:\n  x \\<star> y \\<star> z \\<le> x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have \"... \\<le> (x \\<star> 1) * ((x \\<star> y) \\<star> (y \\<star> z)) \\<squnion> (x \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)\n    \\<le> (x \\<star> (1::'a)) *\n          ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n          (x \\<star> bot)", "using 1 while_simulate_left_plus_1"], ["proof (prove)\nusing this:\n  x * (x \\<star> (1::'a))\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> (1::'a))\n  ?x * ?z \\<le> ?z * (?y \\<star> (1::'a)) \\<Longrightarrow>\n  ?x \\<star> ?z * ?w \\<le> ?z * (?y \\<star> ?w) \\<squnion> (?x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)\n    \\<le> (x \\<star> (1::'a)) *\n          ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n          (x \\<star> bot)", "by auto"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n        (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "also"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> (1::'a)) * (y \\<star> z)\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n        (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have \"... \\<le> (x \\<star> 1) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n    (x \\<star> bot)\n    \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> z) \\<squnion>\n          (x \\<star> z)", "by (simp add: le_supI1 sup_commute while_absorb_2 while_increasing while_right_isotone)"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n  (x \\<star> bot)\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> z) \\<squnion>\n        (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "also"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> y \\<star> z) \\<squnion>\n  (x \\<star> bot)\n  \\<le> (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> z) \\<squnion>\n        (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have \"... = (x \\<star> 1) * z \\<squnion> (x \\<star> 1) * (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> z) \\<squnion>\n    (x \\<star> z) =\n    (x \\<star> (1::'a)) * z \\<squnion>\n    (x \\<star> (1::'a)) * (x \\<star> y) *\n    ((x \\<star> y) \\<star> z) \\<squnion>\n    (x \\<star> z)", "by (metis mult_assoc mult_left_dist_sup while_left_unfold)"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z) =\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> (1::'a)) * (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion>\n  (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "also"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z) =\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> (1::'a)) * (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion>\n  (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have \"... = (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * z \\<squnion>\n    (x \\<star> (1::'a)) * (x \\<star> y) *\n    ((x \\<star> y) \\<star> z) \\<squnion>\n    (x \\<star> z) =\n    (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "by (smt sup_assoc sup_commute le_iff_sup mult_left_one mult_right_dist_sup order_refl while_absorb_1 while_plus_one while_sub_associative)"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> (1::'a)) * (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion>\n  (x \\<star> z) =\n  (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "also"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> (1::'a)) * (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion>\n  (x \\<star> z) =\n  (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "have \"... \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "using sup_left_isotone while_left_plus_below"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?z \\<le> ?y \\<squnion> ?z\n  ?x * (?x \\<star> ?y) \\<le> ?x \\<star> ?y\n\ngoal (1 subgoal):\n 1. (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "by auto"], ["proof (state)\nthis:\n  (x \\<star> y) * ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n  \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "finally"], ["proof (chain)\npicking this:\n  x \\<star> y \\<star> z\n  \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<star> y \\<star> z\n  \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n\ngoal (1 subgoal):\n 1. x \\<star> y \\<star> z\n    \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)", "."], ["proof (state)\nthis:\n  x \\<star> y \\<star> z\n  \\<le> ((x \\<star> y) \\<star> z) \\<squnion> (x \\<star> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_induct:\n  \"x * z \\<le> z \\<and> y \\<le> z \\<and> x \\<star> 1 \\<le> z \\<Longrightarrow> x \\<star> y \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * z \\<le> z \\<and>\n    y \\<le> z \\<and> x \\<star> (1::'a) \\<le> z \\<Longrightarrow>\n    x \\<star> y \\<le> z", "by (metis le_supI1 sup_commute sup_bot_left le_iff_sup while_right_isotone while_simulate_absorb)"], ["", "(*\nlemma while_sumstar_4_below: \"(x \\<star> y) \\<star> ((x \\<star> 1) * z) \\<le> x \\<star> ((y * (x \\<star> 1)) \\<star> z)\" oops\nlemma while_sumstar_2: \"(x \\<squnion> y) \\<star> z = x \\<star> ((y * (x \\<star> 1)) \\<star> z)\" oops\nlemma while_sumstar_3: \"(x \\<squnion> y) \\<star> z = ((x \\<star> 1) * y) \\<star> (x \\<star> z)\" oops\nlemma while_decompose_6: \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) = y \\<star> ((x * (y \\<star> 1)) \\<star> z)\" oops\nlemma while_finite_associative: \"x \\<star> bot = bot \\<Longrightarrow> (x \\<star> y) * z = x \\<star> (y * z)\" oops\nlemma atomicity_refinement: \"s = s * q \\<Longrightarrow> x = q * x \\<Longrightarrow> q * b = bot \\<Longrightarrow> r * b \\<le> b * r \\<Longrightarrow> r * l \\<le> l * r \\<Longrightarrow> x * l \\<le> l * x \\<Longrightarrow> b * l \\<le> l * b \\<Longrightarrow> q * l \\<le> l * q \\<Longrightarrow> r \\<star> q \\<le> q * (r \\<star> 1) \\<Longrightarrow> q \\<le> 1 \\<Longrightarrow> s * ((x \\<squnion> b \\<squnion> r \\<squnion> l) \\<star> (q * z)) \\<le> s * ((x * (b \\<star> q) \\<squnion> r \\<squnion> l) \\<star> z)\" oops\n\nlemma while_separate_right_plus: \"y * x \\<le> x * (x \\<star> (1 \\<squnion> y)) \\<squnion> 1 \\<Longrightarrow> y \\<star> (x \\<star> z) \\<le> x \\<star> (y \\<star> z)\" oops\nlemma while_square_1: \"x \\<star> 1 = (x * x) \\<star> (x \\<squnion> 1)\" oops\nlemma while_absorb_below_one: \"y * x \\<le> x \\<Longrightarrow> y \\<star> x \\<le> 1 \\<star> x\" oops\nlemma \"y \\<star> (x \\<star> 1) \\<le> x \\<star> (y \\<star> 1) \\<Longrightarrow> (x \\<squnion> y) \\<star> 1 = x \\<star> (y \\<star> 1)\" oops\nlemma \"y * x \\<le> (1 \\<squnion> x) * (y \\<star> 1) \\<Longrightarrow> (x \\<squnion> y) \\<star> 1 = x \\<star> (y \\<star> 1)\" oops\n*)"], ["", "end"], ["", "class bounded_binary_itering = bounded_idempotent_left_zero_semiring + binary_itering\nbegin"], ["", "text \\<open>Theorem 9\\<close>"], ["", "lemma while_right_top:\n  \"x \\<star> top = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> top = top", "by (metis sup_left_top while_left_unfold)"], ["", "text \\<open>Theorem 9\\<close>"], ["", "lemma while_left_top:\n  \"top * (x \\<star> 1) = top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surjective (x \\<star> (1::'a))", "by (meson order.antisym le_supE top_greatest while_back_loop_prefixpoint)"], ["", "end"], ["", "class extended_binary_itering = binary_itering +\n  assumes while_denest_0: \"w * (x \\<star> (y * z)) \\<le> (w * (x \\<star> y)) \\<star> (w * (x \\<star> y) * z)\"\nbegin"], ["", "text \\<open>Theorem 10.2\\<close>"], ["", "lemma while_denest_1:\n  \"w * (x \\<star> (y * z)) \\<le> (w * (x \\<star> y)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (x \\<star> y * z) \\<le> w * (x \\<star> y) \\<star> z", "using while_denest_0 while_mult_increasing while_mult_transitive"], ["proof (prove)\nusing this:\n  ?w * (?x \\<star> ?y * ?z)\n  \\<le> ?w * (?x \\<star> ?y) \\<star> ?w * (?x \\<star> ?y) * ?z\n  ?x * ?y \\<le> ?x \\<star> ?y\n  \\<lbrakk>?x \\<le> ?z \\<star> ?y; ?y \\<le> ?z \\<star> ?w\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> ?z \\<star> ?w\n\ngoal (1 subgoal):\n 1. w * (x \\<star> y * z) \\<le> w * (x \\<star> y) \\<star> z", "by blast"], ["", "lemma while_mult_sub_while_while:\n  \"x \\<star> (y * z) \\<le> (x \\<star> y) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * z \\<le> (x \\<star> y) \\<star> z", "by (metis mult_left_one while_denest_1)"], ["", "lemma while_zero_zero:\n  \"(x \\<star> bot) \\<star> bot = x \\<star> bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> bot) \\<star> bot = x \\<star> bot", "by (metis order.antisym mult_left_zero sup_bot_left while_left_unfold while_sub_associative while_mult_sub_while_while)"], ["", "text \\<open>Theorem 10.11\\<close>"], ["", "lemma while_mult_zero_zero:\n  \"(x * (y \\<star> bot)) \\<star> bot = x * (y \\<star> bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y \\<star> bot) \\<star> bot = x * (y \\<star> bot)", "apply (rule order.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x * (y \\<star> bot) \\<star> bot \\<le> x * (y \\<star> bot)\n 2. x * (y \\<star> bot) \\<le> x * (y \\<star> bot) \\<star> bot", "apply (metis sup_bot_left while_left_unfold mult_assoc le_supI1 mult_left_zero mult_right_isotone while_left_dist_sup while_sub_associative)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (y \\<star> bot) \\<le> x * (y \\<star> bot) \\<star> bot", "by (metis mult_left_zero while_denest_1)"], ["", "text \\<open>Theorem 10.3\\<close>"], ["", "lemma while_denest_2:\n  \"w * ((x \\<star> (y * w)) \\<star> z) = w * (((x \\<star> y) * w) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * ((x \\<star> y * w) \\<star> z) = w * ((x \\<star> y) * w \\<star> z)", "apply (rule order.antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. w * ((x \\<star> y * w) \\<star> z)\n    \\<le> w * ((x \\<star> y) * w \\<star> z)\n 2. w * ((x \\<star> y) * w \\<star> z)\n    \\<le> w * ((x \\<star> y * w) \\<star> z)", "apply (metis mult_assoc while_denest_0 while_simulate_right_plus_1 while_slide)"], ["proof (prove)\ngoal (1 subgoal):\n 1. w * ((x \\<star> y) * w \\<star> z)\n    \\<le> w * ((x \\<star> y * w) \\<star> z)", "by (simp add: mult_isotone while_left_isotone while_sub_associative)"], ["", "text \\<open>Theorem 10.12\\<close>"], ["", "lemma while_denest_3:\n  \"(x \\<star> w) \\<star> (x \\<star> bot) = (x \\<star> w) \\<star> bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> bot = (x \\<star> w) \\<star> bot", "by (metis while_absorb_2 while_right_isotone while_zero_zero bot_least)"], ["", "text \\<open>Theorem 10.15\\<close>"], ["", "lemma while_02:\n  \"x \\<star> ((x \\<star> w) \\<star> ((x \\<star> y) * z)) = (x \\<star> w) \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"x * ((x \\<star> w) \\<star> ((x \\<star> y) * z)) = x * (x \\<star> y) * z \\<squnion> x * (x \\<star> w) * ((x \\<star> w) \\<star> ((x \\<star> y) * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * ((x \\<star> w) \\<star> (x \\<star> y) * z) =\n    x * (x \\<star> y) * z \\<squnion>\n    x * (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)", "by (metis mult_assoc mult_left_dist_sup while_left_unfold)"], ["proof (state)\nthis:\n  x * ((x \\<star> w) \\<star> (x \\<star> y) * z) =\n  x * (x \\<star> y) * z \\<squnion>\n  x * (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  x * ((x \\<star> w) \\<star> (x \\<star> y) * z) =\n  x * (x \\<star> y) * z \\<squnion>\n  x * (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"... \\<le> (x \\<star> w) \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (x \\<star> y) * z \\<squnion>\n    x * (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "by (metis sup_mono mult_right_sub_dist_sup_right while_left_unfold)"], ["proof (state)\nthis:\n  x * (x \\<star> y) * z \\<squnion>\n  x * (x \\<star> w) * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "finally"], ["proof (chain)\npicking this:\n  x * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"x \\<star> ((x \\<star> w) \\<star> ((x \\<star> y) * z)) \\<le> ((x \\<star> w) \\<star> ((x \\<star> y) * z)) \\<squnion> (x \\<star> bot)\""], ["proof (prove)\nusing this:\n  x * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z\n    \\<le> ((x \\<star> w) \\<star> (x \\<star> y) * z) \\<squnion>\n          (x \\<star> bot)", "using while_simulate_absorb"], ["proof (prove)\nusing this:\n  x * ((x \\<star> w) \\<star> (x \\<star> y) * z)\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n  ?y * ?x \\<le> ?x \\<Longrightarrow>\n  ?y \\<star> ?x \\<le> ?x \\<squnion> (?y \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z\n    \\<le> ((x \\<star> w) \\<star> (x \\<star> y) * z) \\<squnion>\n          (x \\<star> bot)", "by auto"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z\n  \\<le> ((x \\<star> w) \\<star> (x \\<star> y) * z) \\<squnion> (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z\n  \\<le> ((x \\<star> w) \\<star> (x \\<star> y) * z) \\<squnion> (x \\<star> bot)\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"... = (x \\<star> w) \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<star> w) \\<star> (x \\<star> y) * z) \\<squnion> (x \\<star> bot) =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "by (metis sup_commute le_iff_sup order_trans while_mult_sub_while_while while_right_isotone bot_least)"], ["proof (state)\nthis:\n  ((x \\<star> w) \\<star> (x \\<star> y) * z) \\<squnion> (x \\<star> bot) =\n  (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "finally"], ["proof (chain)\npicking this:\n  x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "by (simp add: order.antisym while_increasing)"], ["proof (state)\nthis:\n  x \\<star> (x \\<star> w) \\<star> (x \\<star> y) * z =\n  (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_sumstar_3_below:\n  \"(x \\<star> y) \\<star> (x \\<star> z) \\<le> (x \\<star> y) \\<star> ((x \\<star> 1) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "have \"(x \\<star> y) \\<star> (x \\<star> z) = (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> ((x \\<star> y) * (x \\<star> z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z =\n    (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))", "using while_right_unfold"], ["proof (prove)\nusing this:\n  ?x \\<star> ?y = ?y \\<squnion> (?x \\<star> ?x * ?y)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z =\n    (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))", "by blast"], ["proof (state)\nthis:\n  (x \\<star> y) \\<star> x \\<star> z =\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> y) \\<star> x \\<star> z =\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "have \"... \\<le> (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> (y * (x \\<star> z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))\n    \\<le> (x \\<star> z) \\<squnion>\n          ((x \\<star> y) \\<star> x \\<star> y * (x \\<star> z))", "by (meson sup_right_isotone while_right_isotone while_sub_associative)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))\n  \\<le> (x \\<star> z) \\<squnion>\n        ((x \\<star> y) \\<star> x \\<star> y * (x \\<star> z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> (x \\<star> y) * (x \\<star> z))\n  \\<le> (x \\<star> z) \\<squnion>\n        ((x \\<star> y) \\<star> x \\<star> y * (x \\<star> z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "have \"... \\<le> (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> ((x \\<star> y) \\<star> (x \\<star> z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star> x \\<star> y * (x \\<star> z))\n    \\<le> (x \\<star> z) \\<squnion>\n          ((x \\<star> y) \\<star>\n           x \\<star> (x \\<star> y) \\<star> x \\<star> z)", "by (smt sup_right_isotone order_trans while_increasing while_mult_upper_bound while_one_increasing while_right_isotone)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> x \\<star> y * (x \\<star> z))\n  \\<le> (x \\<star> z) \\<squnion>\n        ((x \\<star> y) \\<star> x \\<star> (x \\<star> y) \\<star> x \\<star> z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> x \\<star> y * (x \\<star> z))\n  \\<le> (x \\<star> z) \\<squnion>\n        ((x \\<star> y) \\<star> x \\<star> (x \\<star> y) \\<star> x \\<star> z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "have \"... \\<le> (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> ((x \\<star> y) \\<star> ((x \\<star> 1) * z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star> x \\<star> (x \\<star> y) \\<star> x \\<star> z)\n    \\<le> (x \\<star> z) \\<squnion>\n          ((x \\<star> y) \\<star>\n           x \\<star> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)", "by (metis sup_right_isotone mult_left_isotone mult_left_one order_trans while_increasing while_right_isotone while_sumstar while_transitive)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> x \\<star> (x \\<star> y) \\<star> x \\<star> z)\n  \\<le> (x \\<star> z) \\<squnion>\n        ((x \\<star> y) \\<star>\n         x \\<star> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star> x \\<star> (x \\<star> y) \\<star> x \\<star> z)\n  \\<le> (x \\<star> z) \\<squnion>\n        ((x \\<star> y) \\<star>\n         x \\<star> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "have \"... = (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> ((x \\<star> 1) * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star>\n     x \\<star> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z) =\n    (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)", "by (simp add: while_transitive while_02)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star>\n   x \\<star> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z) =\n  (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  ((x \\<star> y) \\<star>\n   x \\<star> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z) =\n  (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "have \"... = (x \\<star> y) \\<star> ((x \\<star> 1) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z) =\n    (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "by (smt sup_assoc mult_left_one mult_right_dist_sup while_02 while_left_dist_sup while_plus_one)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion> ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z) =\n  (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "finally"], ["proof (chain)\npicking this:\n  (x \\<star> y) \\<star> x \\<star> z\n  \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<star> y) \\<star> x \\<star> z\n  \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> x \\<star> z\n    \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "."], ["proof (state)\nthis:\n  (x \\<star> y) \\<star> x \\<star> z\n  \\<le> (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_sumstar_4_below:\n  \"(x \\<star> y) \\<star> ((x \\<star> 1) * z) \\<le> x \\<star> ((y * (x \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "have \"(x \\<star> y) \\<star> ((x \\<star> 1) * z) = (x \\<star> 1) * z \\<squnion> (x \\<star> y) * ((x \\<star> y) \\<star> ((x \\<star> 1) * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z =\n    (x \\<star> (1::'a)) * z \\<squnion>\n    (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)", "using while_left_unfold"], ["proof (prove)\nusing this:\n  ?x \\<star> ?y = ?y \\<squnion> ?x * (?x \\<star> ?y)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z =\n    (x \\<star> (1::'a)) * z \\<squnion>\n    (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)", "by auto"], ["proof (state)\nthis:\n  (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z =\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z =\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "have \"... \\<le> (x \\<star> z) \\<squnion> (x \\<star> (y * ((x \\<star> y) \\<star> ((x \\<star> 1) * z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> (1::'a)) * z \\<squnion>\n    (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n    \\<le> (x \\<star> z) \\<squnion>\n          (x \\<star> y * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z))", "by (meson sup_mono while_one_mult_below while_sub_associative)"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star> y * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> (1::'a)) * z \\<squnion>\n  (x \\<star> y) * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)\n  \\<le> (x \\<star> z) \\<squnion>\n        (x \\<star> y * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "have \"... = (x \\<star> z) \\<squnion> (x \\<star> (y * (((x \\<star> 1) * y) \\<star> ((x \\<star> 1) * z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star> y * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)) =\n    (x \\<star> z) \\<squnion>\n    (x \\<star>\n     y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))", "by (metis mult_left_one while_denest_2)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)) =\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "also"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * ((x \\<star> y) \\<star> (x \\<star> (1::'a)) * z)) =\n  (x \\<star> z) \\<squnion>\n  (x \\<star> y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z))\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "have \"... = x \\<star> ((y * (x \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> z) \\<squnion>\n    (x \\<star>\n     y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)) =\n    x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "by (metis while_left_dist_sup while_productstar)"], ["proof (state)\nthis:\n  (x \\<star> z) \\<squnion>\n  (x \\<star>\n   y * ((x \\<star> (1::'a)) * y \\<star> (x \\<star> (1::'a)) * z)) =\n  x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "finally"], ["proof (chain)\npicking this:\n  (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n  \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n  \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n    \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "."], ["proof (state)\nthis:\n  (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z\n  \\<le> x \\<star> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 10.10\\<close>"], ["", "lemma while_sumstar_1:\n  \"(x \\<squnion> y) \\<star> z = (x \\<star> y) \\<star> ((x \\<star> 1) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = (x \\<star> y) \\<star> (x \\<star> (1::'a)) * z", "by (smt order.eq_iff order_trans while_sup_1_below while_sumstar while_sumstar_3_below while_sumstar_4_below)"], ["", "text \\<open>Theorem 10.8\\<close>"], ["", "lemma while_sumstar_2:\n  \"(x \\<squnion> y) \\<star> z = x \\<star> ((y * (x \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "using order.antisym while_sup_1_below while_sumstar_1 while_sumstar_4_below"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  ?x \\<star> ?y * (?x \\<star> (1::'a)) \\<star> ?z\n  \\<le> ?x \\<squnion> ?y \\<star> ?z\n  ?x \\<squnion> ?y \\<star> ?z =\n  (?x \\<star> ?y) \\<star> (?x \\<star> (1::'a)) * ?z\n  (?x \\<star> ?y) \\<star> (?x \\<star> (1::'a)) * ?z\n  \\<le> ?x \\<star> ?y * (?x \\<star> (1::'a)) \\<star> ?z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = x \\<star> y * (x \\<star> (1::'a)) \\<star> z", "by auto"], ["", "text \\<open>Theorem 10.9\\<close>"], ["", "lemma while_sumstar_3:\n  \"(x \\<squnion> y) \\<star> z = ((x \\<star> 1) * y) \\<star> (x \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "using order.antisym while_sumstar while_sumstar_1_below while_sumstar_2_below while_sumstar_2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  ?x \\<squnion> ?y \\<star> ?z = (?x \\<star> ?y) \\<star> ?x \\<star> ?z\n  ?x \\<star> ?y * (?x \\<star> (1::'a)) \\<star> ?z\n  \\<le> (?x \\<star> (1::'a)) * ?y \\<star> ?x \\<star> ?z\n  (?x \\<star> (1::'a)) * ?y \\<star> ?x \\<star> ?z\n  \\<le> (?x \\<star> ?y) \\<star> ?x \\<star> ?z\n  ?x \\<squnion> ?y \\<star> ?z =\n  ?x \\<star> ?y * (?x \\<star> (1::'a)) \\<star> ?z\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<star> z = (x \\<star> (1::'a)) * y \\<star> x \\<star> z", "by force"], ["", "text \\<open>Theorem 10.6\\<close>"], ["", "lemma while_decompose_6:\n  \"x \\<star> ((y * (x \\<star> 1)) \\<star> z) = y \\<star> ((x * (y \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> y * (x \\<star> (1::'a)) \\<star> z =\n    y \\<star> x * (y \\<star> (1::'a)) \\<star> z", "by (metis sup_commute while_sumstar_2)"], ["", "text \\<open>Theorem 10.4\\<close>"], ["", "lemma while_denest_4:\n  \"(x \\<star> w) \\<star> (x \\<star> (y * z)) = (x \\<star> w) \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"(x \\<star> w) \\<star> (x \\<star> (y * z)) = x \\<star> ((w * (x \\<star> 1)) \\<star> (y * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    x \\<star> w * (x \\<star> (1::'a)) \\<star> y * z", "using while_sumstar while_sumstar_2"], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y \\<star> ?z = (?x \\<star> ?y) \\<star> ?x \\<star> ?z\n  ?x \\<squnion> ?y \\<star> ?z =\n  ?x \\<star> ?y * (?x \\<star> (1::'a)) \\<star> ?z\n\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    x \\<star> w * (x \\<star> (1::'a)) \\<star> y * z", "by force"], ["proof (state)\nthis:\n  (x \\<star> w) \\<star> x \\<star> y * z =\n  x \\<star> w * (x \\<star> (1::'a)) \\<star> y * z\n\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "also"], ["proof (state)\nthis:\n  (x \\<star> w) \\<star> x \\<star> y * z =\n  x \\<star> w * (x \\<star> (1::'a)) \\<star> y * z\n\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "have \"... \\<le> (x \\<star> w) \\<star> ((x \\<star> y) * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> w * (x \\<star> (1::'a)) \\<star> y * z\n    \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "by (metis while_01 while_right_isotone while_02)"], ["proof (state)\nthis:\n  x \\<star> w * (x \\<star> (1::'a)) \\<star> y * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "finally"], ["proof (chain)\npicking this:\n  (x \\<star> w) \\<star> x \\<star> y * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<star> w) \\<star> x \\<star> y * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "using order.antisym while_right_isotone while_sub_associative"], ["proof (prove)\nusing this:\n  (x \\<star> w) \\<star> x \\<star> y * z\n  \\<le> (x \\<star> w) \\<star> (x \\<star> y) * z\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?a\\<rbrakk> \\<Longrightarrow> ?a = ?b\n  ?y \\<le> ?z \\<Longrightarrow> ?x \\<star> ?y \\<le> ?x \\<star> ?z\n  (?x \\<star> ?y) * ?z \\<le> ?x \\<star> ?y * ?z\n\ngoal (1 subgoal):\n 1. (x \\<star> w) \\<star> x \\<star> y * z =\n    (x \\<star> w) \\<star> (x \\<star> y) * z", "by auto"], ["proof (state)\nthis:\n  (x \\<star> w) \\<star> x \\<star> y * z =\n  (x \\<star> w) \\<star> (x \\<star> y) * z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 10.13\\<close>"], ["", "lemma while_denest_5:\n  \"w * ((x \\<star> (y * w)) \\<star> (x \\<star> (y * z))) = w * (((x \\<star> y) * w) \\<star> ((x \\<star> y) * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * ((x \\<star> y * w) \\<star> x \\<star> y * z) =\n    w * ((x \\<star> y) * w \\<star> (x \\<star> y) * z)", "by (simp add: while_denest_2 while_denest_4)"], ["", "text \\<open>Theorem 10.5\\<close>"], ["", "lemma while_denest_6:\n  \"(w * (x \\<star> y)) \\<star> z = z \\<squnion> w * ((x \\<squnion> y * w) \\<star> (y * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (x \\<star> y) \\<star> z =\n    z \\<squnion> w * (x \\<squnion> y * w \\<star> y * z)", "by (metis while_denest_5 while_productstar while_sumstar)"], ["", "text \\<open>Theorem 10.1\\<close>"], ["", "lemma while_sum_below_one:\n  \"y * ((x \\<squnion> y) \\<star> z) \\<le> (y * (x \\<star> 1)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<squnion> y \\<star> z) \\<le> y * (x \\<star> (1::'a)) \\<star> z", "by (simp add: while_denest_6)"], ["", "text \\<open>Theorem 10.14\\<close>"], ["", "lemma while_separate_unfold:\n  \"(y * (x \\<star> 1)) \\<star> z = (y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "have \"y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z))) \\<le> y \\<star> (y * ((x \\<squnion> y) \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n    \\<le> y \\<star> y * (x \\<squnion> y \\<star> z)", "using mult_right_isotone while_left_plus_below while_right_isotone mult_assoc while_sumstar_2"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z * ?x \\<le> ?z * ?y\n  ?x * (?x \\<star> ?y) \\<le> ?x \\<star> ?y\n  ?y \\<le> ?z \\<Longrightarrow> ?x \\<star> ?y \\<le> ?x \\<star> ?z\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?x \\<squnion> ?y \\<star> ?z =\n  ?x \\<star> ?y * (?x \\<star> (1::'a)) \\<star> ?z\n\ngoal (1 subgoal):\n 1. y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n    \\<le> y \\<star> y * (x \\<squnion> y \\<star> z)", "by auto"], ["proof (state)\nthis:\n  y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> y \\<star> y * (x \\<squnion> y \\<star> z)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "also"], ["proof (state)\nthis:\n  y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> y \\<star> y * (x \\<squnion> y \\<star> z)\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "have \"... \\<le> (y * (x \\<star> 1)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<star> y * (x \\<squnion> y \\<star> z)\n    \\<le> y * (x \\<star> (1::'a)) \\<star> z", "by (metis sup_commute sup_ge1 while_absorb_1 while_mult_star_exchange while_sum_below_one)"], ["proof (state)\nthis:\n  y \\<star> y * (x \\<squnion> y \\<star> z)\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "finally"], ["proof (chain)\npicking this:\n  y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z", "have \"(y \\<star> z) \\<squnion> (y \\<star> (y * x * (x \\<star> ((y * (x \\<star> 1)) \\<star> z)))) \\<le> (y * (x \\<star> 1)) \\<star> z\""], ["proof (prove)\nusing this:\n  y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n    \\<le> y * (x \\<star> (1::'a)) \\<star> z", "using sup.bounded_iff while_back_loop_prefixpoint while_left_isotone"], ["proof (prove)\nusing this:\n  y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z)\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n  (?b \\<squnion> ?c \\<le> ?a) = (?b \\<le> ?a \\<and> ?c \\<le> ?a)\n  ?z * (?y \\<star> (1::'a)) * ?y \\<squnion> ?z\n  \\<le> ?z * (?y \\<star> (1::'a))\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<star> ?z \\<le> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n    \\<le> y * (x \\<star> (1::'a)) \\<star> z", "by auto"], ["proof (state)\nthis:\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n  \\<le> y * (x \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. y * (x \\<star> (1::'a)) \\<star> z =\n    (y \\<star> z) \\<squnion>\n    (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))", "by (simp add: order.antisym while_separate_unfold_below)"], ["proof (state)\nthis:\n  y * (x \\<star> (1::'a)) \\<star> z =\n  (y \\<star> z) \\<squnion>\n  (y \\<star> y * x * (x \\<star> y * (x \\<star> (1::'a)) \\<star> z))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 10.7\\<close>"], ["", "lemma while_finite_associative:\n  \"x \\<star> bot = bot \\<Longrightarrow> (x \\<star> y) * z = x \\<star> (y * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<star> bot = bot \\<Longrightarrow>\n    (x \\<star> y) * z = x \\<star> y * z", "by (metis while_denest_4 while_zero)"], ["", "text \\<open>Theorem 12\\<close>"], ["", "lemma atomicity_refinement:\n  assumes \"s = s * q\"\n      and \"x = q * x\"\n      and \"q * b = bot\"\n      and \"r * b \\<le> b * r\"\n      and \"r * l \\<le> l * r\"\n      and \"x * l \\<le> l * x\"\n      and \"b * l \\<le> l * b\"\n      and \"q * l \\<le> l * q\"\n      and \"r \\<star> q \\<le> q * (r \\<star> 1) \\<and> q \\<le> 1\"\n    shows \"s * ((x \\<squnion> b \\<squnion> r \\<squnion> l) \\<star> (q * z)) \\<le> s * ((x * (b \\<star> q) \\<squnion> r \\<squnion> l) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have 1: \"(x \\<squnion> b \\<squnion> r) * l \\<le> l * (x \\<squnion> b \\<squnion> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> b \\<squnion> r) * l\n    \\<le> l * (x \\<squnion> b \\<squnion> r)", "by (smt assms(5-7) mult_left_dist_sup semiring.add_mono semiring.distrib_right)"], ["proof (state)\nthis:\n  (x \\<squnion> b \\<squnion> r) * l \\<le> l * (x \\<squnion> b \\<squnion> r)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"q * ((x * (b \\<star> r \\<star> 1) * q) \\<star> z) \\<le> (x * (b \\<star> r \\<star> 1) * q) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n    \\<le> x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z", "using assms(9) order_lesseq_imp while_increasing while_mult_upper_bound"], ["proof (prove)\nusing this:\n  r \\<star> q \\<le> q * (r \\<star> (1::'a)) \\<and> coreflexive q\n  (\\<forall>z\\<ge>?x. ?y \\<le> z) = (?y \\<le> ?x)\n  ?y \\<le> ?x \\<star> ?y\n  \\<lbrakk>?x \\<le> ?z \\<star> (1::'a); ?y \\<le> ?z \\<star> ?w\\<rbrakk>\n  \\<Longrightarrow> ?x * ?y \\<le> ?z \\<star> ?w\n\ngoal (1 subgoal):\n 1. q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n    \\<le> x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z", "by blast"], ["proof (state)\nthis:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> (x * (b \\<star> ((r \\<star> 1) * q))) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z\n    \\<le> x * (b \\<star> (r \\<star> (1::'a)) * q) \\<star> z", "by (simp add: mult_right_isotone while_left_isotone while_sub_associative mult_assoc)"], ["proof (state)\nthis:\n  x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z\n  \\<le> x * (b \\<star> (r \\<star> (1::'a)) * q) \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z\n  \\<le> x * (b \\<star> (r \\<star> (1::'a)) * q) \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> (x * (b \\<star> r \\<star> q)) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (b \\<star> (r \\<star> (1::'a)) * q) \\<star> z\n    \\<le> x * (b \\<star> r \\<star> q) \\<star> z", "by (simp add: mult_right_isotone while_left_isotone while_one_mult_below while_right_isotone)"], ["proof (state)\nthis:\n  x * (b \\<star> (r \\<star> (1::'a)) * q) \\<star> z\n  \\<le> x * (b \\<star> r \\<star> q) \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  x * (b \\<star> (r \\<star> (1::'a)) * q) \\<star> z\n  \\<le> x * (b \\<star> r \\<star> q) \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> (x * (b \\<star> (q * (r \\<star> 1)))) \\<star> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * (b \\<star> r \\<star> q) \\<star> z\n    \\<le> x * (b \\<star> q * (r \\<star> (1::'a))) \\<star> z", "by (simp add: assms(9) mult_right_isotone while_left_isotone while_right_isotone)"], ["proof (state)\nthis:\n  x * (b \\<star> r \\<star> q) \\<star> z\n  \\<le> x * (b \\<star> q * (r \\<star> (1::'a))) \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "finally"], ["proof (chain)\npicking this:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> q * (r \\<star> (1::'a))) \\<star> z", "have 2: \"q * ((x * (b \\<star> r \\<star> 1) * q) \\<star> z) \\<le> (x * (b \\<star> q) * (r \\<star> 1)) \\<star> z\""], ["proof (prove)\nusing this:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> q * (r \\<star> (1::'a))) \\<star> z\n\ngoal (1 subgoal):\n 1. q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n    \\<le> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z", "using while_associative_while_1 mult_assoc"], ["proof (prove)\nusing this:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> q * (r \\<star> (1::'a))) \\<star> z\n  ?x \\<star> ?y * (?z \\<star> (1::'a)) =\n  (?x \\<star> ?y) * (?z \\<star> (1::'a))\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n    \\<le> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z", "by auto"], ["proof (state)\nthis:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"s * ((x \\<squnion> b \\<squnion> r \\<squnion> l) \\<star> (q * z)) = s * (l \\<star> (x \\<squnion> b \\<squnion> r) \\<star> (q * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z) =\n    s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z)", "using 1 sup_commute while_separate_1"], ["proof (prove)\nusing this:\n  (x \\<squnion> b \\<squnion> r) * l \\<le> l * (x \\<squnion> b \\<squnion> r)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?y * ?x \\<le> ?x * ?y \\<Longrightarrow>\n  ?x \\<squnion> ?y \\<star> ?z = ?x \\<star> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z) =\n    s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z)", "by fastforce"], ["proof (state)\nthis:\n  s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z) =\n  s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z) =\n  s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... = s * q * (l \\<star> b \\<star> r \\<star> (q * x * (b \\<star> r \\<star> 1)) \\<star> (q * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z) =\n    s * q *\n    (l \\<star>\n     b \\<star>\n     r \\<star> q * x * (b \\<star> r \\<star> (1::'a)) \\<star> q * z)", "by (smt assms(1,2,4) sup_assoc sup_commute while_sumstar_2 while_separate_1)"], ["proof (state)\nthis:\n  s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z) =\n  s * q *\n  (l \\<star>\n   b \\<star> r \\<star> q * x * (b \\<star> r \\<star> (1::'a)) \\<star> q * z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s * (l \\<star> x \\<squnion> b \\<squnion> r \\<star> q * z) =\n  s * q *\n  (l \\<star>\n   b \\<star> r \\<star> q * x * (b \\<star> r \\<star> (1::'a)) \\<star> q * z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... = s * q * (l \\<star> b \\<star> r \\<star> (q * ((x * (b \\<star> r \\<star> 1) * q) \\<star> z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * q *\n    (l \\<star>\n     b \\<star>\n     r \\<star> q * x * (b \\<star> r \\<star> (1::'a)) \\<star> q * z) =\n    s * q *\n    (l \\<star>\n     b \\<star>\n     r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))", "by (simp add: while_slide mult_assoc)"], ["proof (state)\nthis:\n  s * q *\n  (l \\<star>\n   b \\<star>\n   r \\<star> q * x * (b \\<star> r \\<star> (1::'a)) \\<star> q * z) =\n  s * q *\n  (l \\<star>\n   b \\<star>\n   r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s * q *\n  (l \\<star>\n   b \\<star>\n   r \\<star> q * x * (b \\<star> r \\<star> (1::'a)) \\<star> q * z) =\n  s * q *\n  (l \\<star>\n   b \\<star>\n   r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> s * q * (l \\<star> b \\<star> r \\<star> (x * (b \\<star> q) * (r \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * q *\n    (l \\<star>\n     b \\<star>\n     r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))\n    \\<le> s * q *\n          (l \\<star>\n           b \\<star>\n           r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)", "using 2"], ["proof (prove)\nusing this:\n  q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z)\n  \\<le> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z\n\ngoal (1 subgoal):\n 1. s * q *\n    (l \\<star>\n     b \\<star>\n     r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))\n    \\<le> s * q *\n          (l \\<star>\n           b \\<star>\n           r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)", "by (meson mult_right_isotone while_right_isotone)"], ["proof (state)\nthis:\n  s * q *\n  (l \\<star>\n   b \\<star>\n   r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))\n  \\<le> s * q *\n        (l \\<star>\n         b \\<star>\n         r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s * q *\n  (l \\<star>\n   b \\<star>\n   r \\<star> q * (x * (b \\<star> r \\<star> (1::'a)) * q \\<star> z))\n  \\<le> s * q *\n        (l \\<star>\n         b \\<star>\n         r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> s * (l \\<star> q * (b \\<star> r \\<star> (x * (b \\<star> q) * (r \\<star> 1)) \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * q *\n    (l \\<star>\n     b \\<star> r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n    \\<le> s *\n          (l \\<star>\n           q *\n           (b \\<star>\n            r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))", "by (simp add: assms(8) mult_right_isotone while_simulate mult_assoc)"], ["proof (state)\nthis:\n  s * q *\n  (l \\<star>\n   b \\<star> r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n  \\<le> s *\n        (l \\<star>\n         q *\n         (b \\<star>\n          r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s * q *\n  (l \\<star>\n   b \\<star> r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n  \\<le> s *\n        (l \\<star>\n         q *\n         (b \\<star>\n          r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... = s * (l \\<star> q * (r \\<star> (x * (b \\<star> q) * (r \\<star> 1)) \\<star> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s *\n    (l \\<star>\n     q *\n     (b \\<star>\n      r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)) =\n    s *\n    (l \\<star>\n     q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))", "using assms(3) while_elimination"], ["proof (prove)\nusing this:\n  q * b = bot\n  ?x * ?y = bot \\<Longrightarrow> ?x * (?y \\<star> ?z) = ?x * ?z\n\ngoal (1 subgoal):\n 1. s *\n    (l \\<star>\n     q *\n     (b \\<star>\n      r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)) =\n    s *\n    (l \\<star>\n     q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))", "by auto"], ["proof (state)\nthis:\n  s *\n  (l \\<star>\n   q *\n   (b \\<star>\n    r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)) =\n  s *\n  (l \\<star>\n   q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s *\n  (l \\<star>\n   q *\n   (b \\<star>\n    r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)) =\n  s *\n  (l \\<star>\n   q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> s * (l \\<star> r \\<star> (x * (b \\<star> q) * (r \\<star> 1)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s *\n    (l \\<star>\n     q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n    \\<le> s *\n          (l \\<star>\n           r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)", "by (meson assms(9) order.trans mult_right_isotone order.refl while_increasing while_mult_upper_bound while_right_isotone)"], ["proof (state)\nthis:\n  s *\n  (l \\<star>\n   q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n  \\<le> s *\n        (l \\<star>\n         r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s *\n  (l \\<star>\n   q * (r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z))\n  \\<le> s *\n        (l \\<star>\n         r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... = s * (l \\<star> (r \\<squnion> x * (b \\<star> q)) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s *\n    (l \\<star>\n     r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z) =\n    s * (l \\<star> r \\<squnion> x * (b \\<star> q) \\<star> z)", "by (simp add: while_sumstar_2)"], ["proof (state)\nthis:\n  s *\n  (l \\<star> r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z) =\n  s * (l \\<star> r \\<squnion> x * (b \\<star> q) \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "also"], ["proof (state)\nthis:\n  s *\n  (l \\<star> r \\<star> x * (b \\<star> q) * (r \\<star> (1::'a)) \\<star> z) =\n  s * (l \\<star> r \\<squnion> x * (b \\<star> q) \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "have \"... \\<le> s * ((x * (b \\<star> q) \\<squnion> r \\<squnion> l) \\<star> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s * (l \\<star> r \\<squnion> x * (b \\<star> q) \\<star> z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "using mult_right_isotone sup_commute while_sub_dist_3"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z * ?x \\<le> ?z * ?y\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<star> ?y \\<star> ?z \\<le> ?x \\<squnion> ?y \\<star> ?z\n\ngoal (1 subgoal):\n 1. s * (l \\<star> r \\<squnion> x * (b \\<star> q) \\<star> z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "by auto"], ["proof (state)\nthis:\n  s * (l \\<star> r \\<squnion> x * (b \\<star> q) \\<star> z)\n  \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "finally"], ["proof (chain)\npicking this:\n  s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n  \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n  \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)\n\ngoal (1 subgoal):\n 1. s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n    \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)", "."], ["proof (state)\nthis:\n  s * (x \\<squnion> b \\<squnion> r \\<squnion> l \\<star> q * z)\n  \\<le> s * (x * (b \\<star> q) \\<squnion> r \\<squnion> l \\<star> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "class bounded_extended_binary_itering = bounded_binary_itering + extended_binary_itering"], ["", "end"]]}