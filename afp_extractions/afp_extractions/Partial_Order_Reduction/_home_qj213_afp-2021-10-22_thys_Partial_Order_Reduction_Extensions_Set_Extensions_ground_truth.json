{"file_name": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction/Extensions/Set_Extensions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction", "problem_names": ["lemma set_not_emptyI[intro 0]: \"x \\<in> S \\<Longrightarrow> S \\<noteq> {}\"", "lemma sets_empty_iffI[intro 0]:\n    assumes \"\\<And> a. a \\<in> A \\<Longrightarrow> \\<exists> b. b \\<in> B\"\n    assumes \"\\<And> b. b \\<in> B \\<Longrightarrow> \\<exists> a. a \\<in> A\"\n    shows \"A = {} \\<longleftrightarrow> B = {}\"", "lemma disjointI[intro 0]:\n    assumes \"\\<And> x. x \\<in> A \\<Longrightarrow> x \\<in> B \\<Longrightarrow> False\"\n    shows \"A \\<inter> B = {}\"", "lemma range_subsetI[intro 0]:\n    assumes \"\\<And> x. f x \\<in> S\"\n    shows \"range f \\<subseteq> S\"", "lemma finite_imageI_range:\n    assumes \"finite (range f)\"\n    shows \"finite (f ` A)\"", "lemma inf_img_fin_domE':\n    assumes \"infinite A\"\n    assumes \"finite (f ` A)\"\n    obtains y\n    where \"y \\<in> f ` A\" \"infinite (A \\<inter> f -` {y})\"", "lemma vimage_singleton[simp]: \"f -` {y} = {x. f x = y}\"", "lemma these_alt_def: \"Option.these S = Some -` S\"", "lemma the_vimage_subset: \"the -` {a} \\<subseteq> {None, Some a}\"", "lemma finite_induct_reverse[consumes 1, case_names remove]:\n    assumes \"finite S\"\n    assumes \"\\<And> S. finite S \\<Longrightarrow> (\\<And> x. x \\<in> S \\<Longrightarrow> P (S - {x})) \\<Longrightarrow> P S\"\n    shows \"P S\"", "lemma zero_not_in_Suc_image[simp]: \"0 \\<notin> Suc ` A\"", "lemma Collect_split_Suc:\n    \"\\<not> P 0 \\<Longrightarrow> {i. P i} = Suc ` {i. P (Suc i)}\"\n    \"P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}\"", "lemma Collect_subsume[simp]:\n    assumes \"\\<And> x. x \\<in> A \\<Longrightarrow> P x\"\n    shows \"{x \\<in> A. P x} = A\"", "lemma Max_ge':\n    assumes \"finite A\" \"A \\<noteq> {}\"\n    assumes \"b \\<in> A\" \"a \\<le> b\"\n    shows \"a \\<le> Max A\"", "lemma least_contains[intro?, simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k \\<in> A\"\n    shows \"least A \\<in> A\"", "lemma least_contains'[intro?, simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"A \\<noteq> {}\"\n    shows \"least A \\<in> A\"", "lemma least_least[intro?, simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k \\<in> A\"\n    shows \"least A \\<le> k\"", "lemma least_unique:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k \\<in> A\" \"k \\<le> least A\"\n    shows \"k = least A\"", "lemma least_not_less:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k < least A\"\n    shows \"k \\<notin> A\"", "lemma leastI2_order[simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"A \\<noteq> {}\" \"\\<And> k. k \\<in> A \\<Longrightarrow> (\\<And> l. l \\<in> A \\<Longrightarrow> k \\<le> l) \\<Longrightarrow> P k\"\n    shows \"P (least A)\"", "lemma least_singleton[simp]:\n    fixes a :: \"'a :: wellorder\"\n    shows \"least {a} = a\"", "lemma least_image[simp]:\n    fixes f :: \"'a :: wellorder \\<Rightarrow> 'b :: wellorder\"\n    assumes \"A \\<noteq> {}\" \"\\<And> k l. k \\<in> A \\<Longrightarrow> l \\<in> A \\<Longrightarrow> k \\<le> l \\<Longrightarrow> f k \\<le> f l\"\n    shows \"least (f ` A) = f (least A)\"", "lemma least_le:\n    fixes A B :: \"'a :: wellorder set\"\n    assumes \"B \\<noteq> {}\"\n    assumes \"\\<And> i. i \\<le> least A \\<Longrightarrow> i \\<le> least B \\<Longrightarrow> i \\<in> B \\<Longrightarrow> i \\<in> A\"\n    shows \"least A \\<le> least B\"", "lemma least_eq:\n    fixes A B :: \"'a :: wellorder set\"\n    assumes \"A \\<noteq> {}\" \"B \\<noteq> {}\"\n    assumes \"\\<And> i. i \\<le> least A \\<Longrightarrow> i \\<le> least B \\<Longrightarrow> i \\<in> A \\<longleftrightarrow> i \\<in> B\"\n    shows \"least A = least B\"", "lemma least_Suc[simp]:\n    assumes \"A \\<noteq> {}\"\n    shows \"least (Suc ` A) = Suc (least A)\"", "lemma least_Suc_diff[simp]: \"Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\"", "lemma Max_diff_least[simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"finite A\" \"A - {least A} \\<noteq> {}\"\n    shows \"Max (A - {least A}) = Max A\"", "lemma nat_set_card_equality_less:\n    fixes A :: \"nat set\"\n    assumes \"x \\<in> A\" \"y \\<in> A\" \"card {z \\<in> A. z < x} = card {z \\<in> A. z < y}\"\n    shows \"x = y\"", "lemma nat_set_card_equality_le:\n    fixes A :: \"nat set\"\n    assumes \"x \\<in> A\" \"y \\<in> A\" \"card {z \\<in> A. z \\<le> x} = card {z \\<in> A. z \\<le> y}\"\n    shows \"x = y\"", "lemma nat_set_card_mono[simp]:\n    fixes A :: \"nat set\"\n    assumes \"x \\<in> A\"\n    shows \"card {z \\<in> A. z < x} < card {z \\<in> A. z < y} \\<longleftrightarrow> x < y\"", "lemma card_one[elim]:\n    assumes \"card A = 1\"\n    obtains a\n    where \"A = {a}\"", "lemma image_alt_def: \"f ` A = {f x |x. x \\<in> A}\"", "lemma supset_mono_inductive[mono]:\n    assumes \"\\<And> x. x \\<in> B \\<longrightarrow> x \\<in> C\"\n    shows \"A \\<subseteq> B \\<longrightarrow> A \\<subseteq> C\"", "lemma Collect_mono_inductive[mono]:\n    assumes \"\\<And> x. P x \\<longrightarrow> Q x\"\n    shows \"x \\<in> {x. P x} \\<longrightarrow> x \\<in> {x. Q x}\"", "lemma image_union_split:\n    assumes \"f ` (A \\<union> B) = g ` C\"\n    obtains D E\n    where \"f ` A = g ` D\" \"f ` B = g ` E\" \"D \\<subseteq> C\" \"E \\<subseteq> C\"", "lemma image_insert_split:\n    assumes \"inj g\" \"f ` insert a B = g ` C\"\n    obtains d E\n    where \"f a = g d\" \"f ` B = g ` E\" \"d \\<in> C\" \"E \\<subseteq> C\""], "translations": [["", "lemma set_not_emptyI[intro 0]: \"x \\<in> S \\<Longrightarrow> S \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> S \\<Longrightarrow> S \\<noteq> {}", "by auto"], ["", "lemma sets_empty_iffI[intro 0]:\n    assumes \"\\<And> a. a \\<in> A \\<Longrightarrow> \\<exists> b. b \\<in> B\"\n    assumes \"\\<And> b. b \\<in> B \\<Longrightarrow> \\<exists> a. a \\<in> A\"\n    shows \"A = {} \\<longleftrightarrow> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A = {}) = (B = {})", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> A \\<Longrightarrow> \\<exists>b. b \\<in> B\n  ?b \\<in> B \\<Longrightarrow> \\<exists>a. a \\<in> A\n\ngoal (1 subgoal):\n 1. (A = {}) = (B = {})", "by auto"], ["", "lemma disjointI[intro 0]:\n    assumes \"\\<And> x. x \\<in> A \\<Longrightarrow> x \\<in> B \\<Longrightarrow> False\"\n    shows \"A \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B = {}", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?x \\<in> B\\<rbrakk> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. A \\<inter> B = {}", "by auto"], ["", "lemma range_subsetI[intro 0]:\n    assumes \"\\<And> x. f x \\<in> S\"\n    shows \"range f \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range f \\<subseteq> S", "using assms"], ["proof (prove)\nusing this:\n  f ?x \\<in> S\n\ngoal (1 subgoal):\n 1. range f \\<subseteq> S", "by blast"], ["", "lemma finite_imageI_range:\n    assumes \"finite (range f)\"\n    shows \"finite (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (f ` A)", "using finite_subset image_mono subset_UNIV assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  ?A \\<subseteq> ?B \\<Longrightarrow> ?f ` ?A \\<subseteq> ?f ` ?B\n  ?A \\<subseteq> UNIV\n  finite (range f)\n\ngoal (1 subgoal):\n 1. finite (f ` A)", "by metis"], ["", "lemma inf_img_fin_domE':\n    assumes \"infinite A\"\n    assumes \"finite (f ` A)\"\n    obtains y\n    where \"y \\<in> f ` A\" \"infinite (A \\<inter> f -` {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> f ` A; infinite (A \\<inter> f -` {y})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>y.\n                \\<lbrakk>y \\<in> f ` A;\n                 infinite (A \\<inter> f -` {y})\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "assume 1: \"\\<not> thesis\""], ["proof (state)\nthis:\n  \\<not> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>y.\n                \\<lbrakk>y \\<in> f ` A;\n                 infinite (A \\<inter> f -` {y})\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 2: \"finite (\\<Union> y \\<in> f ` A. A \\<inter> f -` {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union>y\\<in>f ` A. A \\<inter> f -` {y})", "proof (rule finite_UN_I)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (f ` A)\n 2. \\<And>y. y \\<in> f ` A \\<Longrightarrow> finite (A \\<inter> f -` {y})", "show \"finite (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (f ` A)", "using assms(2)"], ["proof (prove)\nusing this:\n  finite (f ` A)\n\ngoal (1 subgoal):\n 1. finite (f ` A)", "by this"], ["proof (state)\nthis:\n  finite (f ` A)\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` A \\<Longrightarrow> finite (A \\<inter> f -` {y})", "show \"\\<And> y. y \\<in> f ` A \\<Longrightarrow> finite (A \\<inter> f -` {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` A \\<Longrightarrow> finite (A \\<inter> f -` {y})", "using that 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y \\<in> f ` A; infinite (A \\<inter> f -` {?y})\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<not> thesis\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` A \\<Longrightarrow> finite (A \\<inter> f -` {y})", "by blast"], ["proof (state)\nthis:\n  ?y \\<in> f ` A \\<Longrightarrow> finite (A \\<inter> f -` {?y})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (\\<Union>y\\<in>f ` A. A \\<inter> f -` {y})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>y.\n                \\<lbrakk>y \\<in> f ` A;\n                 infinite (A \\<inter> f -` {y})\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "have 3: \"A \\<subseteq> (\\<Union> y \\<in> f ` A. A \\<inter> f -` {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> (\\<Union>y\\<in>f ` A. A \\<inter> f -` {y})", "by blast"], ["proof (state)\nthis:\n  A \\<subseteq> (\\<Union>y\\<in>f ` A. A \\<inter> f -` {y})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>y.\n                \\<lbrakk>y \\<in> f ` A;\n                 infinite (A \\<inter> f -` {y})\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> thesis\\<rbrakk>\n    \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms(1) 2 3"], ["proof (prove)\nusing this:\n  infinite A\n  finite (\\<Union>y\\<in>f ` A. A \\<inter> f -` {y})\n  A \\<subseteq> (\\<Union>y\\<in>f ` A. A \\<inter> f -` {y})\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vimage_singleton[simp]: \"f -` {y} = {x. f x = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {y} = {x. f x = y}", "unfolding vimage_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. f x \\<in> {y}} = {x. f x = y}", "by simp"], ["", "lemma these_alt_def: \"Option.these S = Some -` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Option.these S = Some -` S", "unfolding Option.these_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. the ` {x \\<in> S. x \\<noteq> None} = Some -` S", "by force"], ["", "lemma the_vimage_subset: \"the -` {a} \\<subseteq> {None, Some a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the -` {a} \\<subseteq> {None, Some a}", "by auto"], ["", "lemma finite_induct_reverse[consumes 1, case_names remove]:\n    assumes \"finite S\"\n    assumes \"\\<And> S. finite S \\<Longrightarrow> (\\<And> x. x \\<in> S \\<Longrightarrow> P (S - {x})) \\<Longrightarrow> P S\"\n    shows \"P S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P S", "using assms(1)"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. P S", "proof (induct rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>finite A;\n        \\<And>B. B \\<subset> A \\<Longrightarrow> P B\\<rbrakk>\n       \\<Longrightarrow> P A", "case (psubset S)"], ["proof (state)\nthis:\n  finite S\n  ?B \\<subset> S \\<Longrightarrow> P ?B\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>finite A;\n        \\<And>B. B \\<subset> A \\<Longrightarrow> P B\\<rbrakk>\n       \\<Longrightarrow> P A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P S", "proof (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. finite S\n 2. \\<And>x. x \\<in> S \\<Longrightarrow> P (S - {x})", "show \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "using psubset(1)"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. finite S", "by this"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> P (S - {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> P (S - {x})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> P (S - {x})", "assume 0: \"x \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> P (S - {x})", "show \"P (S - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (S - {x})", "proof (rule psubset(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. S - {x} \\<subset> S", "show \"S - {x} \\<subset> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S - {x} \\<subset> S", "using 0"], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. S - {x} \\<subset> S", "by auto"], ["proof (state)\nthis:\n  S - {x} \\<subset> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (S - {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma zero_not_in_Suc_image[simp]: \"0 \\<notin> Suc ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> Suc ` A", "by auto"], ["", "lemma Collect_split_Suc:\n    \"\\<not> P 0 \\<Longrightarrow> {i. P i} = Suc ` {i. P (Suc i)}\"\n    \"P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> P 0 \\<Longrightarrow> {i. P i} = Suc ` {i. P (Suc i)}) &&&\n    (P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)})", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> P 0 \\<Longrightarrow> {i. P i} = Suc ` {i. P (Suc i)}\n 2. P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}", "assume \"\\<not> P 0\""], ["proof (state)\nthis:\n  \\<not> P 0\n\ngoal (2 subgoals):\n 1. \\<not> P 0 \\<Longrightarrow> {i. P i} = Suc ` {i. P (Suc i)}\n 2. P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}", "thus \"{i. P i} = Suc ` {i. P (Suc i)}\""], ["proof (prove)\nusing this:\n  \\<not> P 0\n\ngoal (1 subgoal):\n 1. {i. P i} = Suc ` {i. P (Suc i)}", "by (auto, metis image_eqI mem_Collect_eq nat.exhaust)"], ["proof (state)\nthis:\n  {i. P i} = Suc ` {i. P (Suc i)}\n\ngoal (1 subgoal):\n 1. P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}", "assume \"P 0\""], ["proof (state)\nthis:\n  P 0\n\ngoal (1 subgoal):\n 1. P 0 \\<Longrightarrow> {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}", "thus \"{i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}\""], ["proof (prove)\nusing this:\n  P 0\n\ngoal (1 subgoal):\n 1. {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}", "by (auto, metis imageI mem_Collect_eq not0_implies_Suc)"], ["proof (state)\nthis:\n  {i. P i} = {0} \\<union> Suc ` {i. P (Suc i)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Collect_subsume[simp]:\n    assumes \"\\<And> x. x \\<in> A \\<Longrightarrow> P x\"\n    shows \"{x \\<in> A. P x} = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. P x} = A", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> P ?x\n\ngoal (1 subgoal):\n 1. {x \\<in> A. P x} = A", "unfolding simp_implies_def"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> P ?x\n\ngoal (1 subgoal):\n 1. {x \\<in> A. P x} = A", "by auto"], ["", "lemma Max_ge':\n    assumes \"finite A\" \"A \\<noteq> {}\"\n    assumes \"b \\<in> A\" \"a \\<le> b\"\n    shows \"a \\<le> Max A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> Max A", "using assms Max_ge_iff"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  b \\<in> A\n  a \\<le> b\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> (?x \\<le> Max ?A) = (\\<exists>a\\<in>?A. ?x \\<le> a)\n\ngoal (1 subgoal):\n 1. a \\<le> Max A", "by auto"], ["", "abbreviation \"least A \\<equiv> LEAST k. k \\<in> A\""], ["", "lemma least_contains[intro?, simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k \\<in> A\"\n    shows \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by (metis LeastI)"], ["", "lemma least_contains'[intro?, simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"A \\<noteq> {}\"\n    shows \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by (metis LeastI equals0I)"], ["", "lemma least_least[intro?, simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k \\<in> A\"\n    shows \"least A \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<le> k", "using assms"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. least A \\<le> k", "by (metis Least_le)"], ["", "lemma least_unique:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k \\<in> A\" \"k \\<le> least A\"\n    shows \"k = least A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = least A", "using assms"], ["proof (prove)\nusing this:\n  k \\<in> A\n  k \\<le> least A\n\ngoal (1 subgoal):\n 1. k = least A", "by (metis Least_le antisym)"], ["", "lemma least_not_less:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"k < least A\"\n    shows \"k \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<notin> A", "using assms"], ["proof (prove)\nusing this:\n  k < least A\n\ngoal (1 subgoal):\n 1. k \\<notin> A", "by (metis not_less_Least)"], ["", "lemma leastI2_order[simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"A \\<noteq> {}\" \"\\<And> k. k \\<in> A \\<Longrightarrow> (\\<And> l. l \\<in> A \\<Longrightarrow> k \\<le> l) \\<Longrightarrow> P k\"\n    shows \"P (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (least A)", "proof (rule LeastI2_order)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?x \\<in> A\n 2. \\<And>y. y \\<in> A \\<Longrightarrow> ?x \\<le> y\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "show \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using assms(1)"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by rule"], ["proof (state)\nthis:\n  least A \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> least A \\<le> y\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> least A \\<le> y\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "fix k"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> least A \\<le> y\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "assume 1: \"k \\<in> A\""], ["proof (state)\nthis:\n  k \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A \\<Longrightarrow> least A \\<le> y\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "show \"least A \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<le> k", "using 1"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. least A \\<le> k", "by rule"], ["proof (state)\nthis:\n  least A \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "assume 1: \"k \\<in> A\" \"\\<forall> l. l \\<in> A \\<longrightarrow> k \\<le> l\""], ["proof (state)\nthis:\n  k \\<in> A\n  \\<forall>l. l \\<in> A \\<longrightarrow> k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> A;\n        \\<forall>y. y \\<in> A \\<longrightarrow> x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> P x", "show \"P k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k", "using assms(2) 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<in> A;\n   \\<And>l. l \\<in> A \\<Longrightarrow> ?k \\<le> l\\<rbrakk>\n  \\<Longrightarrow> P ?k\n  k \\<in> A\n  \\<forall>l. l \\<in> A \\<longrightarrow> k \\<le> l\n\ngoal (1 subgoal):\n 1. P k", "by auto"], ["proof (state)\nthis:\n  P k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_singleton[simp]:\n    fixes a :: \"'a :: wellorder\"\n    shows \"least {a} = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least {a} = a", "by (metis insert_not_empty least_contains' singletonD)"], ["", "lemma least_image[simp]:\n    fixes f :: \"'a :: wellorder \\<Rightarrow> 'b :: wellorder\"\n    assumes \"A \\<noteq> {}\" \"\\<And> k l. k \\<in> A \\<Longrightarrow> l \\<in> A \\<Longrightarrow> k \\<le> l \\<Longrightarrow> f k \\<le> f l\"\n    shows \"least (f ` A) = f (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (f ` A) = f (least A)", "proof (rule leastI2_order)"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. \\<And>k.\n       \\<lbrakk>k \\<in> A;\n        \\<And>l. l \\<in> A \\<Longrightarrow> k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> least (f ` A) = f k", "show \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using assms(1)"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k \\<in> A;\n        \\<And>l. l \\<in> A \\<Longrightarrow> k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> least (f ` A) = f k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k \\<in> A;\n        \\<And>l. l \\<in> A \\<Longrightarrow> k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> least (f ` A) = f k", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k \\<in> A;\n        \\<And>l. l \\<in> A \\<Longrightarrow> k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> least (f ` A) = f k", "assume 1: \"k \\<in> A\" \"\\<And> i. i \\<in> A \\<Longrightarrow> k \\<le> i\""], ["proof (state)\nthis:\n  k \\<in> A\n  ?i \\<in> A \\<Longrightarrow> k \\<le> ?i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>k \\<in> A;\n        \\<And>l. l \\<in> A \\<Longrightarrow> k \\<le> l\\<rbrakk>\n       \\<Longrightarrow> least (f ` A) = f k", "show \"least (f ` A) = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (f ` A) = f k", "proof (rule leastI2_order)"], ["proof (state)\ngoal (2 subgoals):\n 1. f ` A \\<noteq> {}\n 2. \\<And>ka.\n       \\<lbrakk>ka \\<in> f ` A;\n        \\<And>l. l \\<in> f ` A \\<Longrightarrow> ka \\<le> l\\<rbrakk>\n       \\<Longrightarrow> ka = f k", "show \"f ` A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A \\<noteq> {}", "using assms(1)"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f ` A \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  f ` A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>ka.\n       \\<lbrakk>ka \\<in> f ` A;\n        \\<And>l. l \\<in> f ` A \\<Longrightarrow> ka \\<le> l\\<rbrakk>\n       \\<Longrightarrow> ka = f k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ka.\n       \\<lbrakk>ka \\<in> f ` A;\n        \\<And>l. l \\<in> f ` A \\<Longrightarrow> ka \\<le> l\\<rbrakk>\n       \\<Longrightarrow> ka = f k", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ka.\n       \\<lbrakk>ka \\<in> f ` A;\n        \\<And>l. l \\<in> f ` A \\<Longrightarrow> ka \\<le> l\\<rbrakk>\n       \\<Longrightarrow> ka = f k", "assume 2: \"l \\<in> f ` A\" \"\\<And> i. i \\<in> f ` A \\<Longrightarrow> l \\<le> i\""], ["proof (state)\nthis:\n  l \\<in> f ` A\n  ?i \\<in> f ` A \\<Longrightarrow> l \\<le> ?i\n\ngoal (1 subgoal):\n 1. \\<And>ka.\n       \\<lbrakk>ka \\<in> f ` A;\n        \\<And>l. l \\<in> f ` A \\<Longrightarrow> ka \\<le> l\\<rbrakk>\n       \\<Longrightarrow> ka = f k", "show \"l = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l = f k", "using assms(2) 1 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<in> A; ?l \\<in> A; ?k \\<le> ?l\\<rbrakk>\n  \\<Longrightarrow> f ?k \\<le> f ?l\n  k \\<in> A\n  ?i \\<in> A \\<Longrightarrow> k \\<le> ?i\n  l \\<in> f ` A\n  ?i \\<in> f ` A \\<Longrightarrow> l \\<le> ?i\n\ngoal (1 subgoal):\n 1. l = f k", "by force"], ["proof (state)\nthis:\n  l = f k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  least (f ` A) = f k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_le:\n    fixes A B :: \"'a :: wellorder set\"\n    assumes \"B \\<noteq> {}\"\n    assumes \"\\<And> i. i \\<le> least A \\<Longrightarrow> i \\<le> least B \\<Longrightarrow> i \\<in> B \\<Longrightarrow> i \\<in> A\"\n    shows \"least A \\<le> least B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<le> least B", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> least A \\<le> least B \\<Longrightarrow> False", "assume 1: \"\\<not> least A \\<le> least B\""], ["proof (state)\nthis:\n  \\<not> least A \\<le> least B\n\ngoal (1 subgoal):\n 1. \\<not> least A \\<le> least B \\<Longrightarrow> False", "have 2: \"least B \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least B \\<in> A", "using assms(1, 2) 1"], ["proof (prove)\nusing this:\n  B \\<noteq> {}\n  \\<lbrakk>?i \\<le> least A; ?i \\<le> least B; ?i \\<in> B\\<rbrakk>\n  \\<Longrightarrow> ?i \\<in> A\n  \\<not> least A \\<le> least B\n\ngoal (1 subgoal):\n 1. least B \\<in> A", "by simp"], ["proof (state)\nthis:\n  least B \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> least A \\<le> least B \\<Longrightarrow> False", "have 3: \"least A \\<le> least B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<le> least B", "using 2"], ["proof (prove)\nusing this:\n  least B \\<in> A\n\ngoal (1 subgoal):\n 1. least A \\<le> least B", "by rule"], ["proof (state)\nthis:\n  least A \\<le> least B\n\ngoal (1 subgoal):\n 1. \\<not> least A \\<le> least B \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 1 3"], ["proof (prove)\nusing this:\n  \\<not> least A \\<le> least B\n  least A \\<le> least B\n\ngoal (1 subgoal):\n 1. False", "by rule"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_eq:\n    fixes A B :: \"'a :: wellorder set\"\n    assumes \"A \\<noteq> {}\" \"B \\<noteq> {}\"\n    assumes \"\\<And> i. i \\<le> least A \\<Longrightarrow> i \\<le> least B \\<Longrightarrow> i \\<in> A \\<longleftrightarrow> i \\<in> B\"\n    shows \"least A = least B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A = least B", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  \\<lbrakk>?i \\<le> least A; ?i \\<le> least B\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n\ngoal (1 subgoal):\n 1. least A = least B", "by (auto intro: antisym least_le)"], ["", "lemma least_Suc[simp]:\n    assumes \"A \\<noteq> {}\"\n    shows \"least (Suc ` A) = Suc (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (Suc ` A) = Suc (least A)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "obtain k where 10: \"k \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. k \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>k. k \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  k \\<in> A\n\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "have 11: \"Suc k \\<in> Suc ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k \\<in> Suc ` A", "using 10"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. Suc k \\<in> Suc ` A", "by auto"], ["proof (state)\nthis:\n  Suc k \\<in> Suc ` A\n\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "have 20: \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using 10 LeastI"], ["proof (prove)\nusing this:\n  k \\<in> A\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by metis"], ["proof (state)\nthis:\n  least A \\<in> A\n\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "have 21: \"least (Suc ` A) \\<in> Suc ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (Suc ` A) \\<in> Suc ` A", "using 11 LeastI"], ["proof (prove)\nusing this:\n  Suc k \\<in> Suc ` A\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n\ngoal (1 subgoal):\n 1. least (Suc ` A) \\<in> Suc ` A", "by metis"], ["proof (state)\nthis:\n  least (Suc ` A) \\<in> Suc ` A\n\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "have 30: \"\\<And> l. l \\<in> A \\<Longrightarrow> least A \\<le> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> A \\<Longrightarrow> least A \\<le> l", "using 10 Least_le"], ["proof (prove)\nusing this:\n  k \\<in> A\n  ?P ?k \\<Longrightarrow> (LEAST x. ?P x) \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> A \\<Longrightarrow> least A \\<le> l", "by metis"], ["proof (state)\nthis:\n  ?l \\<in> A \\<Longrightarrow> least A \\<le> ?l\n\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "have 31: \"\\<And> l. l \\<in> Suc ` A \\<Longrightarrow> least (Suc ` A) \\<le> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> Suc ` A \\<Longrightarrow> least (Suc ` A) \\<le> l", "using 11 Least_le"], ["proof (prove)\nusing this:\n  Suc k \\<in> Suc ` A\n  ?P ?k \\<Longrightarrow> (LEAST x. ?P x) \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> Suc ` A \\<Longrightarrow> least (Suc ` A) \\<le> l", "by metis"], ["proof (state)\nthis:\n  ?l \\<in> Suc ` A \\<Longrightarrow> least (Suc ` A) \\<le> ?l\n\ngoal (2 subgoals):\n 1. least (Suc ` A) \\<le> Suc (least A)\n 2. Suc (least A) \\<le> least (Suc ` A)", "show \"least (Suc ` A) \\<le> Suc (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (Suc ` A) \\<le> Suc (least A)", "using 20 31"], ["proof (prove)\nusing this:\n  least A \\<in> A\n  ?l \\<in> Suc ` A \\<Longrightarrow> least (Suc ` A) \\<le> ?l\n\ngoal (1 subgoal):\n 1. least (Suc ` A) \\<le> Suc (least A)", "by auto"], ["proof (state)\nthis:\n  least (Suc ` A) \\<le> Suc (least A)\n\ngoal (1 subgoal):\n 1. Suc (least A) \\<le> least (Suc ` A)", "show \"Suc (least A) \\<le> least (Suc ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (least A) \\<le> least (Suc ` A)", "using 21 30"], ["proof (prove)\nusing this:\n  least (Suc ` A) \\<in> Suc ` A\n  ?l \\<in> A \\<Longrightarrow> least A \\<le> ?l\n\ngoal (1 subgoal):\n 1. Suc (least A) \\<le> least (Suc ` A)", "by auto"], ["proof (state)\nthis:\n  Suc (least A) \\<le> least (Suc ` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_Suc_diff[simp]: \"Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "proof (cases \"A = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\n 2. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "case True"], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\n 2. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc ` {} - {least (Suc ` {})} = Suc ` ({} - {least {}})", "by simp"], ["proof (state)\nthis:\n  Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "case False"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "have \"Suc ` A - {least (Suc ` A)} = Suc ` A - {Suc (least A)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc ` A - {least (Suc ` A)} = Suc ` A - {Suc (least A)}", "using False"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Suc ` A - {least (Suc ` A)} = Suc ` A - {Suc (least A)}", "by simp"], ["proof (state)\nthis:\n  Suc ` A - {least (Suc ` A)} = Suc ` A - {Suc (least A)}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "also"], ["proof (state)\nthis:\n  Suc ` A - {least (Suc ` A)} = Suc ` A - {Suc (least A)}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "have \"\\<dots> = Suc ` A - Suc ` {least A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc ` A - {Suc (least A)} = Suc ` A - Suc ` {least A}", "by simp"], ["proof (state)\nthis:\n  Suc ` A - {Suc (least A)} = Suc ` A - Suc ` {least A}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "also"], ["proof (state)\nthis:\n  Suc ` A - {Suc (least A)} = Suc ` A - Suc ` {least A}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "have \"\\<dots> = Suc ` (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc ` A - Suc ` {least A} = Suc ` (A - {least A})", "by blast"], ["proof (state)\nthis:\n  Suc ` A - Suc ` {least A} = Suc ` (A - {least A})\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} \\<Longrightarrow>\n    Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "finally"], ["proof (chain)\npicking this:\n  Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\n\ngoal (1 subgoal):\n 1. Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})", "by this"], ["proof (state)\nthis:\n  Suc ` A - {least (Suc ` A)} = Suc ` (A - {least A})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_diff_least[simp]:\n    fixes A :: \"'a :: wellorder set\"\n    assumes \"finite A\" \"A - {least A} \\<noteq> {}\"\n    shows \"Max (A - {least A}) = Max A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "have 1: \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using assms(2)"], ["proof (prove)\nusing this:\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by auto"], ["proof (state)\nthis:\n  least A \\<in> A\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "obtain a where 2: \"a \\<in> A - {least A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> A - {least A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> A - {least A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "have \"Max A = Max (insert (least A) (A - {least A}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max A = Max (insert (least A) (A - {least A}))", "using insert_absorb 1"], ["proof (prove)\nusing this:\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n  least A \\<in> A\n\ngoal (1 subgoal):\n 1. Max A = Max (insert (least A) (A - {least A}))", "by force"], ["proof (state)\nthis:\n  Max A = Max (insert (least A) (A - {least A}))\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "also"], ["proof (state)\nthis:\n  Max A = Max (insert (least A) (A - {least A}))\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "have \"\\<dots> = max (least A) (Max (A - {least A}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (insert (least A) (A - {least A})) =\n    max (least A) (Max (A - {least A}))", "proof (rule Max_insert)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (A - {least A})\n 2. A - {least A} \\<noteq> {}", "show \"finite (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A - {least A})", "using assms(1)"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A - {least A})", "by auto"], ["proof (state)\nthis:\n  finite (A - {least A})\n\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "show \"A - {least A} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "using assms(2)"], ["proof (prove)\nusing this:\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  A - {least A} \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Max (insert (least A) (A - {least A})) =\n  max (least A) (Max (A - {least A}))\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "also"], ["proof (state)\nthis:\n  Max (insert (least A) (A - {least A})) =\n  max (least A) (Max (A - {least A}))\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "have \"\\<dots> = Max (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (least A) (Max (A - {least A})) = Max (A - {least A})", "proof (rule max_absorb2, rule Max_ge')"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (A - {least A})\n 2. A - {least A} \\<noteq> {}\n 3. ?b2 \\<in> A - {least A}\n 4. least A \\<le> ?b2", "show \"finite (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A - {least A})", "using assms(1)"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A - {least A})", "by auto"], ["proof (state)\nthis:\n  finite (A - {least A})\n\ngoal (3 subgoals):\n 1. A - {least A} \\<noteq> {}\n 2. ?b2 \\<in> A - {least A}\n 3. least A \\<le> ?b2", "show \"A - {least A} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "using assms(2)"], ["proof (prove)\nusing this:\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  A - {least A} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. ?b2 \\<in> A - {least A}\n 2. least A \\<le> ?b2", "show \"a \\<in> A - {least A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A - {least A}", "using 2"], ["proof (prove)\nusing this:\n  a \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. a \\<in> A - {least A}", "by this"], ["proof (state)\nthis:\n  a \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. least A \\<le> a", "show \"least A \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<le> a", "using 2"], ["proof (prove)\nusing this:\n  a \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. least A \\<le> a", "by simp"], ["proof (state)\nthis:\n  least A \\<le> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max (least A) (Max (A - {least A})) = Max (A - {least A})\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "finally"], ["proof (chain)\npicking this:\n  Max A = Max (A - {least A})", "show ?thesis"], ["proof (prove)\nusing this:\n  Max A = Max (A - {least A})\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "by rule"], ["proof (state)\nthis:\n  Max (A - {least A}) = Max A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_set_card_equality_less:\n    fixes A :: \"nat set\"\n    assumes \"x \\<in> A\" \"y \\<in> A\" \"card {z \\<in> A. z < x} = card {z \\<in> A. z < y}\"\n    shows \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof (cases x y rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "case less"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "have 0: \"finite {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {z \\<in> A. z < y}", "by simp"], ["proof (state)\nthis:\n  finite {z \\<in> A. z < y}\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "have 1: \"{z \\<in> A. z < x} \\<subset> {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<subset> {z \\<in> A. z < y}", "using assms(1, 2) less"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  x < y\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<subset> {z \\<in> A. z < y}", "by force"], ["proof (state)\nthis:\n  {z \\<in> A. z < x} \\<subset> {z \\<in> A. z < y}\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "have 2: \"card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "using psubset_card_mono 0 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  finite {z \\<in> A. z < y}\n  {z \\<in> A. z < x} \\<subset> {z \\<in> A. z < y}\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "by this"], ["proof (state)\nthis:\n  card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms(3) 2"], ["proof (prove)\nusing this:\n  card {z \\<in> A. z < x} = card {z \\<in> A. z < y}\n  card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x = y\n 2. y < x \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x = y\n 2. y < x \\<Longrightarrow> x = y", "case equal"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x = y\n 2. y < x \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using equal"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x = y", "by this"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "case greater"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "have 0: \"finite {z \\<in> A. z < x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {z \\<in> A. z < x}", "by simp"], ["proof (state)\nthis:\n  finite {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "have 1: \"{z \\<in> A. z < y} \\<subset> {z \\<in> A. z < x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. z < y} \\<subset> {z \\<in> A. z < x}", "using assms(1, 2) greater"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  y < x\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z < y} \\<subset> {z \\<in> A. z < x}", "by force"], ["proof (state)\nthis:\n  {z \\<in> A. z < y} \\<subset> {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "have 2: \"card {z \\<in> A. z < y} < card {z \\<in> A. z < x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < y} < card {z \\<in> A. z < x}", "using psubset_card_mono 0 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  finite {z \\<in> A. z < x}\n  {z \\<in> A. z < y} \\<subset> {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < y} < card {z \\<in> A. z < x}", "by this"], ["proof (state)\nthis:\n  card {z \\<in> A. z < y} < card {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms(3) 2"], ["proof (prove)\nusing this:\n  card {z \\<in> A. z < x} = card {z \\<in> A. z < y}\n  card {z \\<in> A. z < y} < card {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_set_card_equality_le:\n    fixes A :: \"nat set\"\n    assumes \"x \\<in> A\" \"y \\<in> A\" \"card {z \\<in> A. z \\<le> x} = card {z \\<in> A. z \\<le> y}\"\n    shows \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof (cases x y rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "case less"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "have 0: \"finite {z \\<in> A. z \\<le> y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {z \\<in> A. z \\<le> y}", "by simp"], ["proof (state)\nthis:\n  finite {z \\<in> A. z \\<le> y}\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "have 1: \"{z \\<in> A. z \\<le> x} \\<subset> {z \\<in> A. z \\<le> y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. z \\<le> x} \\<subset> {z \\<in> A. z \\<le> y}", "using assms(1, 2) less"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  x < y\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z \\<le> x} \\<subset> {z \\<in> A. z \\<le> y}", "by force"], ["proof (state)\nthis:\n  {z \\<in> A. z \\<le> x} \\<subset> {z \\<in> A. z \\<le> y}\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "have 2: \"card {z \\<in> A. z \\<le> x} < card {z \\<in> A. z \\<le> y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z \\<le> x} < card {z \\<in> A. z \\<le> y}", "using psubset_card_mono 0 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  finite {z \\<in> A. z \\<le> y}\n  {z \\<in> A. z \\<le> x} \\<subset> {z \\<in> A. z \\<le> y}\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z \\<le> x} < card {z \\<in> A. z \\<le> y}", "by this"], ["proof (state)\nthis:\n  card {z \\<in> A. z \\<le> x} < card {z \\<in> A. z \\<le> y}\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> x = y\n 2. x = y \\<Longrightarrow> x = y\n 3. y < x \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms(3) 2"], ["proof (prove)\nusing this:\n  card {z \\<in> A. z \\<le> x} = card {z \\<in> A. z \\<le> y}\n  card {z \\<in> A. z \\<le> x} < card {z \\<in> A. z \\<le> y}\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x = y\n 2. y < x \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x = y\n 2. y < x \\<Longrightarrow> x = y", "case equal"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> x = y\n 2. y < x \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using equal"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x = y", "by this"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "case greater"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "have 0: \"finite {z \\<in> A. z \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {z \\<in> A. z \\<le> x}", "by simp"], ["proof (state)\nthis:\n  finite {z \\<in> A. z \\<le> x}\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "have 1: \"{z \\<in> A. z \\<le> y} \\<subset> {z \\<in> A. z \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. z \\<le> y} \\<subset> {z \\<in> A. z \\<le> x}", "using assms(1, 2) greater"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  y < x\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z \\<le> y} \\<subset> {z \\<in> A. z \\<le> x}", "by force"], ["proof (state)\nthis:\n  {z \\<in> A. z \\<le> y} \\<subset> {z \\<in> A. z \\<le> x}\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "have 2: \"card {z \\<in> A. z \\<le> y} < card {z \\<in> A. z \\<le> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z \\<le> y} < card {z \\<in> A. z \\<le> x}", "using psubset_card_mono 0 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  finite {z \\<in> A. z \\<le> x}\n  {z \\<in> A. z \\<le> y} \\<subset> {z \\<in> A. z \\<le> x}\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z \\<le> y} < card {z \\<in> A. z \\<le> x}", "by this"], ["proof (state)\nthis:\n  card {z \\<in> A. z \\<le> y} < card {z \\<in> A. z \\<le> x}\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using assms(3) 2"], ["proof (prove)\nusing this:\n  card {z \\<in> A. z \\<le> x} = card {z \\<in> A. z \\<le> y}\n  card {z \\<in> A. z \\<le> y} < card {z \\<in> A. z \\<le> x}\n\ngoal (1 subgoal):\n 1. x = y", "by simp"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nat_set_card_mono[simp]:\n    fixes A :: \"nat set\"\n    assumes \"x \\<in> A\"\n    shows \"card {z \\<in> A. z < x} < card {z \\<in> A. z < y} \\<longleftrightarrow> x < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (card {z \\<in> A. z < x} < card {z \\<in> A. z < y}) = (x < y)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. card {z \\<in> A. z < x} < card {z \\<in> A. z < y} \\<Longrightarrow>\n    x < y\n 2. x < y \\<Longrightarrow>\n    card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "assume 1: \"card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\""], ["proof (state)\nthis:\n  card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\n\ngoal (2 subgoals):\n 1. card {z \\<in> A. z < x} < card {z \\<in> A. z < y} \\<Longrightarrow>\n    x < y\n 2. x < y \\<Longrightarrow>\n    card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "show \"x < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "assume 2: \"\\<not> x < y\""], ["proof (state)\nthis:\n  \\<not> x < y\n\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "have 3: \"card {z \\<in> A. z < y} \\<le> card {z \\<in> A. z < x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < y} \\<le> card {z \\<in> A. z < x}", "using 2"], ["proof (prove)\nusing this:\n  \\<not> x < y\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < y} \\<le> card {z \\<in> A. z < x}", "by (auto intro: card_mono)"], ["proof (state)\nthis:\n  card {z \\<in> A. z < y} \\<le> card {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. \\<not> x < y \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 1 3"], ["proof (prove)\nusing this:\n  card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\n  card {z \\<in> A. z < y} \\<le> card {z \\<in> A. z < x}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow>\n    card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow>\n    card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "assume 1: \"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow>\n    card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "show \"card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < x} < card {z \\<in> A. z < y}", "proof (intro psubset_card_mono psubsetI)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {z \\<in> A. z < y}\n 2. {z \\<in> A. z < x} \\<subseteq> {z \\<in> A. z < y}\n 3. {z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}", "show \"finite {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {z \\<in> A. z < y}", "by simp"], ["proof (state)\nthis:\n  finite {z \\<in> A. z < y}\n\ngoal (2 subgoals):\n 1. {z \\<in> A. z < x} \\<subseteq> {z \\<in> A. z < y}\n 2. {z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}", "show \"{z \\<in> A. z < x} \\<subseteq> {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<subseteq> {z \\<in> A. z < y}", "using 1"], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<subseteq> {z \\<in> A. z < y}", "by auto"], ["proof (state)\nthis:\n  {z \\<in> A. z < x} \\<subseteq> {z \\<in> A. z < y}\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}", "show \"{z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}", "using assms 1"], ["proof (prove)\nusing this:\n  x \\<in> A\n  x < y\n\ngoal (1 subgoal):\n 1. {z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}", "by blast"], ["proof (state)\nthis:\n  {z \\<in> A. z < x} \\<noteq> {z \\<in> A. z < y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {z \\<in> A. z < x} < card {z \\<in> A. z < y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_one[elim]:\n    assumes \"card A = 1\"\n    obtains a\n    where \"A = {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. A = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  card A = 1\n\ngoal (1 subgoal):\n 1. (\\<And>a. A = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis One_nat_def card_Suc_eq)"], ["", "lemma image_alt_def: \"f ` A = {f x |x. x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A = {f x |x. x \\<in> A}", "by auto"], ["", "lemma supset_mono_inductive[mono]:\n    assumes \"\\<And> x. x \\<in> B \\<longrightarrow> x \\<in> C\"\n    shows \"A \\<subseteq> B \\<longrightarrow> A \\<subseteq> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<longrightarrow> A \\<subseteq> C", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> B \\<longrightarrow> ?x \\<in> C\n\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<longrightarrow> A \\<subseteq> C", "by auto"], ["", "lemma Collect_mono_inductive[mono]:\n    assumes \"\\<And> x. P x \\<longrightarrow> Q x\"\n    shows \"x \\<in> {x. P x} \\<longrightarrow> x \\<in> {x. Q x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x. P x} \\<longrightarrow> x \\<in> {x. Q x}", "using assms"], ["proof (prove)\nusing this:\n  P ?x \\<longrightarrow> Q ?x\n\ngoal (1 subgoal):\n 1. x \\<in> {x. P x} \\<longrightarrow> x \\<in> {x. Q x}", "by auto"], ["", "lemma image_union_split:\n    assumes \"f ` (A \\<union> B) = g ` C\"\n    obtains D E\n    where \"f ` A = g ` D\" \"f ` B = g ` E\" \"D \\<subseteq> C\" \"E \\<subseteq> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>f ` A = g ` D; f ` B = g ` E; D \\<subseteq> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f ` (A \\<union> B) = g ` C\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>f ` A = g ` D; f ` B = g ` E; D \\<subseteq> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding image_Un"], ["proof (prove)\nusing this:\n  f ` A \\<union> f ` B = g ` C\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>f ` A = g ` D; f ` B = g ` E; D \\<subseteq> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (erased, lifting) inf_sup_ord(3) inf_sup_ord(4) subset_imageE)"], ["", "lemma image_insert_split:\n    assumes \"inj g\" \"f ` insert a B = g ` C\"\n    obtains d E\n    where \"f a = g d\" \"f ` B = g ` E\" \"d \\<in> C\" \"E \\<subseteq> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d E.\n        \\<lbrakk>f a = g d; f ` B = g ` E; d \\<in> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d E.\n        \\<lbrakk>f a = g d; f ` B = g ` E; d \\<in> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 1: \"f ` ({a} \\<union> B) = g ` C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` ({a} \\<union> B) = g ` C", "using assms(2)"], ["proof (prove)\nusing this:\n  f ` insert a B = g ` C\n\ngoal (1 subgoal):\n 1. f ` ({a} \\<union> B) = g ` C", "by simp"], ["proof (state)\nthis:\n  f ` ({a} \\<union> B) = g ` C\n\ngoal (1 subgoal):\n 1. (\\<And>d E.\n        \\<lbrakk>f a = g d; f ` B = g ` E; d \\<in> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain D E where 2: \"f ` {a} = g ` D\" \"f ` B = g ` E\" \"D \\<subseteq> C\" \"E \\<subseteq> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>f ` {a} = g ` D; f ` B = g ` E; D \\<subseteq> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using image_union_split 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f ` (?A \\<union> ?B) = ?g ` ?C;\n   \\<And>D E.\n      \\<lbrakk>?f ` ?A = ?g ` D; ?f ` ?B = ?g ` E; D \\<subseteq> ?C;\n       E \\<subseteq> ?C\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  f ` ({a} \\<union> B) = g ` C\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>f ` {a} = g ` D; f ` B = g ` E; D \\<subseteq> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  f ` {a} = g ` D\n  f ` B = g ` E\n  D \\<subseteq> C\n  E \\<subseteq> C\n\ngoal (1 subgoal):\n 1. (\\<And>d E.\n        \\<lbrakk>f a = g d; f ` B = g ` E; d \\<in> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain d where 3: \"D = {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d. D = {d} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms(1) 2(1)"], ["proof (prove)\nusing this:\n  inj g\n  f ` {a} = g ` D\n\ngoal (1 subgoal):\n 1. (\\<And>d. D = {d} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto, metis (erased, hide_lams) imageE\n      image_empty image_insert inj_image_eq_iff singletonI)"], ["proof (state)\nthis:\n  D = {d}\n\ngoal (1 subgoal):\n 1. (\\<And>d E.\n        \\<lbrakk>f a = g d; f ` B = g ` E; d \\<in> C;\n         E \\<subseteq> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using that 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>f a = g ?d; f ` B = g ` ?E; ?d \\<in> C; ?E \\<subseteq> C\\<rbrakk>\n  \\<Longrightarrow> thesis\n  f ` {a} = g ` D\n  f ` B = g ` E\n  D \\<subseteq> C\n  E \\<subseteq> C\n\ngoal (1 subgoal):\n 1. thesis", "unfolding 3"], ["proof (prove)\nusing this:\n  \\<lbrakk>f a = g ?d; f ` B = g ` ?E; ?d \\<in> C; ?E \\<subseteq> C\\<rbrakk>\n  \\<Longrightarrow> thesis\n  f ` {a} = g ` {d}\n  f ` B = g ` E\n  {d} \\<subseteq> C\n  E \\<subseteq> C\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}