{"file_name": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction/Basics/Word_Prefixes.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction", "problem_names": ["lemma prefix_fininfI[intro]:\n    assumes \"u @- w = v\"\n    shows \"u \\<le>\\<^sub>F\\<^sub>I v\"", "lemma prefix_fininfE[elim]:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v\"\n    obtains w\n    where \"v = u @- w\"", "lemma prefix_fininfI_empty[intro!]: \"[] \\<le>\\<^sub>F\\<^sub>I w\"", "lemma prefix_fininfI_item[intro!]:\n    assumes \"a = b\" \"u \\<le>\\<^sub>F\\<^sub>I v\"\n    shows \"a # u \\<le>\\<^sub>F\\<^sub>I b ## v\"", "lemma prefix_fininfE_item[elim!]:\n    assumes \"a # u \\<le>\\<^sub>F\\<^sub>I b ## v\"\n    obtains \"a = b\" \"u \\<le>\\<^sub>F\\<^sub>I v\"", "lemma prefix_fininf_item[simp]: \"a # u \\<le>\\<^sub>F\\<^sub>I a ## v \\<longleftrightarrow> u \\<le>\\<^sub>F\\<^sub>I v\"", "lemma prefix_fininf_list[simp]: \"w @ u \\<le>\\<^sub>F\\<^sub>I w @- v \\<longleftrightarrow> u \\<le>\\<^sub>F\\<^sub>I v\"", "lemma prefix_fininf_conc[intro]: \"u \\<le>\\<^sub>F\\<^sub>I u @- v\"", "lemma prefix_fininf_prefix[intro]: \"stake k w \\<le>\\<^sub>F\\<^sub>I w\"", "lemma prefix_fininf_set_range[dest]: \"u \\<le>\\<^sub>F\\<^sub>I v \\<Longrightarrow> set u \\<subseteq> sset v\"", "lemma prefix_fininf_absorb:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v @- w\" \"length u \\<le> length v\"\n    shows \"u \\<le> v\"", "lemma prefix_fininf_extend:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v @- w\" \"length v \\<le> length u\"\n    shows \"v \\<le> u\"", "lemma prefix_fininf_length:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I w\" \"v \\<le>\\<^sub>F\\<^sub>I w\" \"length u \\<le> length v\"\n    shows \"u \\<le> v\"", "lemma prefix_fininf_append:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v @- w\"\n    obtains (absorb) \"u \\<le> v\" | (extend) z where \"u = v @ z\" \"z \\<le>\\<^sub>F\\<^sub>I w\"", "lemma prefix_fin_prefix_fininf_trans[trans, intro]: \"u \\<le> v \\<Longrightarrow> v \\<le>\\<^sub>F\\<^sub>I w \\<Longrightarrow> u \\<le>\\<^sub>F\\<^sub>I w\"", "lemma prefix_finE_nth:\n    assumes \"u \\<le> v\" \"i < length u\"\n    shows \"u ! i = v ! i\"", "lemma prefix_fininfI_nth:\n    assumes \"\\<And> i. i < length u \\<Longrightarrow> u ! i = w !! i\"\n    shows \"u \\<le>\\<^sub>F\\<^sub>I w\"", "lemma chainI[intro?]:\n    assumes \"mono w\"\n    assumes \"\\<And> k. \\<exists> l. k < length (w l)\"\n    shows \"chain w\"", "lemma chainD_mono[dest?]:\n    assumes \"chain w\"\n    shows \"mono w\"", "lemma chainE_length[elim?]:\n    assumes \"chain w\"\n    obtains l\n    where \"k < length (w l)\"", "lemma chain_prefix_limit:\n    assumes \"chain w\"\n    shows \"w k \\<le>\\<^sub>F\\<^sub>I limit w\"", "lemma chain_construct_1:\n    assumes \"P 0 x\\<^sub>0\" \"\\<And> k x. P k x \\<Longrightarrow> \\<exists> x'. P (Suc k) x' \\<and> f x \\<le> f x'\"\n    assumes \"\\<And> k x. P k x \\<Longrightarrow> k \\<le> length (f x)\"\n    obtains Q\n    where \"\\<And> k. P k (Q k)\" \"chain (f \\<circ> Q)\"", "lemma chain_construct_2:\n    assumes \"P 0 x\\<^sub>0\" \"\\<And> k x. P k x \\<Longrightarrow> \\<exists> x'. P (Suc k) x' \\<and> f x \\<le> f x' \\<and> g x \\<le> g x'\"\n    assumes \"\\<And> k x. P k x \\<Longrightarrow> k \\<le> length (f x)\" \"\\<And> k x. P k x \\<Longrightarrow> k \\<le> length (g x)\"\n    obtains Q\n    where \"\\<And> k. P k (Q k)\" \"chain (f \\<circ> Q)\" \"chain (g \\<circ> Q)\"", "lemma chain_construct_2':\n    assumes \"P 0 u\\<^sub>0 v\\<^sub>0\" \"\\<And> k u v. P k u v \\<Longrightarrow> \\<exists> u' v'. P (Suc k) u' v' \\<and> u \\<le> u' \\<and> v \\<le> v'\"\n    assumes \"\\<And> k u v. P k u v \\<Longrightarrow> k \\<le> length u\" \"\\<And> k u v. P k u v \\<Longrightarrow> k \\<le> length v\"\n    obtains u v\n    where \"\\<And> k. P k (u k) (v k)\" \"chain u\" \"chain v\""], "translations": [["", "lemma prefix_fininfI[intro]:\n    assumes \"u @- w = v\"\n    shows \"u \\<le>\\<^sub>F\\<^sub>I v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>F\\<^sub>I v", "using assms"], ["proof (prove)\nusing this:\n  u @- w = v\n\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>F\\<^sub>I v", "unfolding prefix_fininf_def"], ["proof (prove)\nusing this:\n  u @- w = v\n\ngoal (1 subgoal):\n 1. \\<exists>w. u @- w = v", "by auto"], ["", "lemma prefix_fininfE[elim]:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v\"\n    obtains w\n    where \"v = u @- w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>w. v = u @- w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I v\n\ngoal (1 subgoal):\n 1. (\\<And>w. v = u @- w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding prefix_fininf_def"], ["proof (prove)\nusing this:\n  \\<exists>w. u @- w = v\n\ngoal (1 subgoal):\n 1. (\\<And>w. v = u @- w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["", "lemma prefix_fininfI_empty[intro!]: \"[] \\<le>\\<^sub>F\\<^sub>I w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<le>\\<^sub>F\\<^sub>I w", "by force"], ["", "lemma prefix_fininfI_item[intro!]:\n    assumes \"a = b\" \"u \\<le>\\<^sub>F\\<^sub>I v\"\n    shows \"a # u \\<le>\\<^sub>F\\<^sub>I b ## v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a # u \\<le>\\<^sub>F\\<^sub>I b ## v", "using assms"], ["proof (prove)\nusing this:\n  a = b\n  u \\<le>\\<^sub>F\\<^sub>I v\n\ngoal (1 subgoal):\n 1. a # u \\<le>\\<^sub>F\\<^sub>I b ## v", "by force"], ["", "lemma prefix_fininfE_item[elim!]:\n    assumes \"a # u \\<le>\\<^sub>F\\<^sub>I b ## v\"\n    obtains \"a = b\" \"u \\<le>\\<^sub>F\\<^sub>I v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a = b; u \\<le>\\<^sub>F\\<^sub>I v\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a # u \\<le>\\<^sub>F\\<^sub>I b ## v\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a = b; u \\<le>\\<^sub>F\\<^sub>I v\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["", "lemma prefix_fininf_item[simp]: \"a # u \\<le>\\<^sub>F\\<^sub>I a ## v \\<longleftrightarrow> u \\<le>\\<^sub>F\\<^sub>I v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a # u \\<le>\\<^sub>F\\<^sub>I a ## v) = (u \\<le>\\<^sub>F\\<^sub>I v)", "by force"], ["", "lemma prefix_fininf_list[simp]: \"w @ u \\<le>\\<^sub>F\\<^sub>I w @- v \\<longleftrightarrow> u \\<le>\\<^sub>F\\<^sub>I v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w @ u \\<le>\\<^sub>F\\<^sub>I w @- v) = (u \\<le>\\<^sub>F\\<^sub>I v)", "by (induct w, auto)"], ["", "lemma prefix_fininf_conc[intro]: \"u \\<le>\\<^sub>F\\<^sub>I u @- v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>F\\<^sub>I u @- v", "by auto"], ["", "lemma prefix_fininf_prefix[intro]: \"stake k w \\<le>\\<^sub>F\\<^sub>I w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake k w \\<le>\\<^sub>F\\<^sub>I w", "using stake_sdrop"], ["proof (prove)\nusing this:\n  stake ?n ?s @- sdrop ?n ?s = ?s\n\ngoal (1 subgoal):\n 1. stake k w \\<le>\\<^sub>F\\<^sub>I w", "by blast"], ["", "lemma prefix_fininf_set_range[dest]: \"u \\<le>\\<^sub>F\\<^sub>I v \\<Longrightarrow> set u \\<subseteq> sset v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>F\\<^sub>I v \\<Longrightarrow> set u \\<subseteq> sset v", "by auto"], ["", "lemma prefix_fininf_absorb:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v @- w\" \"length u \\<le> length v\"\n    shows \"u \\<le> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<le> v", "obtain x where 1: \"u @- x = v @- w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I v @- w\n\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u @- x = v @- w\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"u \\<le> u @ stake (length v - length u) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> u @ stake (length v - length u) x", "by rule"], ["proof (state)\nthis:\n  u \\<le> u @ stake (length v - length u) x\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  u \\<le> u @ stake (length v - length u) x\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = stake (length v) (u @- x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u @ stake (length v - length u) x = stake (length v) (u @- x)", "using assms(2)"], ["proof (prove)\nusing this:\n  length u \\<le> length v\n\ngoal (1 subgoal):\n 1. u @ stake (length v - length u) x = stake (length v) (u @- x)", "by (simp add: stake_shift)"], ["proof (state)\nthis:\n  u @ stake (length v - length u) x = stake (length v) (u @- x)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  u @ stake (length v - length u) x = stake (length v) (u @- x)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = stake (length v) (v @- w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length v) (u @- x) = stake (length v) (v @- w)", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length v) (v @- w) = stake (length v) (v @- w)", "by rule"], ["proof (state)\nthis:\n  stake (length v) (u @- x) = stake (length v) (v @- w)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  stake (length v) (u @- x) = stake (length v) (v @- w)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length v) (v @- w) = v", "using eq_shift"], ["proof (prove)\nusing this:\n  (?w = ?u @- ?v) =\n  (stake (length ?u) ?w = ?u \\<and> sdrop (length ?u) ?w = ?v)\n\ngoal (1 subgoal):\n 1. stake (length v) (v @- w) = v", "by blast"], ["proof (state)\nthis:\n  stake (length v) (v @- w) = v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "finally"], ["proof (chain)\npicking this:\n  u \\<le> v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "by this"], ["proof (state)\nthis:\n  u \\<le> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefix_fininf_extend:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v @- w\" \"length v \\<le> length u\"\n    shows \"v \\<le> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<le> u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<le> u", "obtain x where 1: \"u @- x = v @- w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I v @- w\n\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u @- x = v @- w\n\ngoal (1 subgoal):\n 1. v \\<le> u", "have \"v \\<le> v @ stake (length u - length v) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<le> v @ stake (length u - length v) w", "by rule"], ["proof (state)\nthis:\n  v \\<le> v @ stake (length u - length v) w\n\ngoal (1 subgoal):\n 1. v \\<le> u", "also"], ["proof (state)\nthis:\n  v \\<le> v @ stake (length u - length v) w\n\ngoal (1 subgoal):\n 1. v \\<le> u", "have \"\\<dots> = stake (length u) (v @- w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v @ stake (length u - length v) w = stake (length u) (v @- w)", "using assms(2)"], ["proof (prove)\nusing this:\n  length v \\<le> length u\n\ngoal (1 subgoal):\n 1. v @ stake (length u - length v) w = stake (length u) (v @- w)", "by (simp add: stake_shift)"], ["proof (state)\nthis:\n  v @ stake (length u - length v) w = stake (length u) (v @- w)\n\ngoal (1 subgoal):\n 1. v \\<le> u", "also"], ["proof (state)\nthis:\n  v @ stake (length u - length v) w = stake (length u) (v @- w)\n\ngoal (1 subgoal):\n 1. v \\<le> u", "have \"\\<dots> = stake (length u) (u @- x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (v @- w) = stake (length u) (u @- x)", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (v @- w) = stake (length u) (v @- w)", "by rule"], ["proof (state)\nthis:\n  stake (length u) (v @- w) = stake (length u) (u @- x)\n\ngoal (1 subgoal):\n 1. v \\<le> u", "also"], ["proof (state)\nthis:\n  stake (length u) (v @- w) = stake (length u) (u @- x)\n\ngoal (1 subgoal):\n 1. v \\<le> u", "have \"\\<dots> = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (u @- x) = u", "using eq_shift"], ["proof (prove)\nusing this:\n  (?w = ?u @- ?v) =\n  (stake (length ?u) ?w = ?u \\<and> sdrop (length ?u) ?w = ?v)\n\ngoal (1 subgoal):\n 1. stake (length u) (u @- x) = u", "by blast"], ["proof (state)\nthis:\n  stake (length u) (u @- x) = u\n\ngoal (1 subgoal):\n 1. v \\<le> u", "finally"], ["proof (chain)\npicking this:\n  v \\<le> u", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<le> u\n\ngoal (1 subgoal):\n 1. v \\<le> u", "by this"], ["proof (state)\nthis:\n  v \\<le> u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefix_fininf_length:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I w\" \"v \\<le>\\<^sub>F\\<^sub>I w\" \"length u \\<le> length v\"\n    shows \"u \\<le> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<le> v", "obtain u' v' where 1: \"w = u @- u'\" \"w = v @- v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u' v'.\n        \\<lbrakk>w = u @- u'; w = v @- v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I w\n  v \\<le>\\<^sub>F\\<^sub>I w\n\ngoal (1 subgoal):\n 1. (\\<And>u' v'.\n        \\<lbrakk>w = u @- u'; w = v @- v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast+"], ["proof (state)\nthis:\n  w = u @- u'\n  w = v @- v'\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"u = stake (length u) (u @- u')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = stake (length u) (u @- u')", "using shift_eq"], ["proof (prove)\nusing this:\n  (?u @- ?v = ?w) =\n  (?u = stake (length ?u) ?w \\<and> ?v = sdrop (length ?u) ?w)\n\ngoal (1 subgoal):\n 1. u = stake (length u) (u @- u')", "by blast"], ["proof (state)\nthis:\n  u = stake (length u) (u @- u')\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  u = stake (length u) (u @- u')\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = stake (length u) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (u @- u') = stake (length u) w", "unfolding 1(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (u @- u') = stake (length u) (u @- u')", "by rule"], ["proof (state)\nthis:\n  stake (length u) (u @- u') = stake (length u) w\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  stake (length u) (u @- u') = stake (length u) w\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = stake (length u) (v @- v')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) w = stake (length u) (v @- v')", "unfolding 1(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (v @- v') = stake (length u) (v @- v')", "by rule"], ["proof (state)\nthis:\n  stake (length u) w = stake (length u) (v @- v')\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  stake (length u) w = stake (length u) (v @- v')\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = take (length u) v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (v @- v') = take (length u) v", "using assms"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I w\n  v \\<le>\\<^sub>F\\<^sub>I w\n  length u \\<le> length v\n\ngoal (1 subgoal):\n 1. stake (length u) (v @- v') = take (length u) v", "by (simp add: min.absorb2 stake_append)"], ["proof (state)\nthis:\n  stake (length u) (v @- v') = take (length u) v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  stake (length u) (v @- v') = take (length u) v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> \\<le> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (length u) v \\<le> v", "by rule"], ["proof (state)\nthis:\n  take (length u) v \\<le> v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "finally"], ["proof (chain)\npicking this:\n  u \\<le> v", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "by this"], ["proof (state)\nthis:\n  u \\<le> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefix_fininf_append:\n    assumes \"u \\<le>\\<^sub>F\\<^sub>I v @- w\"\n    obtains (absorb) \"u \\<le> v\" | (extend) z where \"u = v @ z\" \"z \\<le>\\<^sub>F\\<^sub>I w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof (cases \"length u\" \"length v\" rule: le_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length u \\<le> length v\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "case le"], ["proof (state)\nthis:\n  length u \\<le> length v\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length u \\<le> length v\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain x where 1: \"u @- x = v @- w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I v @- w\n\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u @- x = v @- w\n\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length u \\<le> length v\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule absorb)"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"u \\<le> u @ stake (length v - length u) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> u @ stake (length v - length u) x", "by rule"], ["proof (state)\nthis:\n  u \\<le> u @ stake (length v - length u) x\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  u \\<le> u @ stake (length v - length u) x\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = stake (length v) (u @- x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u @ stake (length v - length u) x = stake (length v) (u @- x)", "using le"], ["proof (prove)\nusing this:\n  length u \\<le> length v\n\ngoal (1 subgoal):\n 1. u @ stake (length v - length u) x = stake (length v) (u @- x)", "by (simp add: stake_shift)"], ["proof (state)\nthis:\n  u @ stake (length v - length u) x = stake (length v) (u @- x)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  u @ stake (length v - length u) x = stake (length v) (u @- x)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = stake (length v) (v @- w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length v) (u @- x) = stake (length v) (v @- w)", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length v) (v @- w) = stake (length v) (v @- w)", "by rule"], ["proof (state)\nthis:\n  stake (length v) (u @- x) = stake (length v) (v @- w)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "also"], ["proof (state)\nthis:\n  stake (length v) (u @- x) = stake (length v) (v @- w)\n\ngoal (1 subgoal):\n 1. u \\<le> v", "have \"\\<dots> = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length v) (v @- w) = v", "using eq_shift"], ["proof (prove)\nusing this:\n  (?w = ?u @- ?v) =\n  (stake (length ?u) ?w = ?u \\<and> sdrop (length ?u) ?w = ?v)\n\ngoal (1 subgoal):\n 1. stake (length v) (v @- w) = v", "by blast"], ["proof (state)\nthis:\n  stake (length v) (v @- w) = v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "finally"], ["proof (chain)\npicking this:\n  u \\<le> v", "show \"u \\<le> v\""], ["proof (prove)\nusing this:\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "by this"], ["proof (state)\nthis:\n  u \\<le> v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "case ge"], ["proof (state)\nthis:\n  length v \\<le> length u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain x where 1: \"u @- x = v @- w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  u \\<le>\\<^sub>F\\<^sub>I v @- w\n\ngoal (1 subgoal):\n 1. (\\<And>x. u @- x = v @- w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u @- x = v @- w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le> v \\<Longrightarrow> thesis;\n     \\<And>z.\n        \\<lbrakk>u = v @ z; z \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     length v \\<le> length u\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule extend)"], ["proof (state)\ngoal (2 subgoals):\n 1. u = v @ ?z\n 2. ?z \\<le>\\<^sub>F\\<^sub>I w", "have \"u = stake (length u) (u @- x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = stake (length u) (u @- x)", "using shift_eq"], ["proof (prove)\nusing this:\n  (?u @- ?v = ?w) =\n  (?u = stake (length ?u) ?w \\<and> ?v = sdrop (length ?u) ?w)\n\ngoal (1 subgoal):\n 1. u = stake (length u) (u @- x)", "by auto"], ["proof (state)\nthis:\n  u = stake (length u) (u @- x)\n\ngoal (2 subgoals):\n 1. u = v @ ?z\n 2. ?z \\<le>\\<^sub>F\\<^sub>I w", "also"], ["proof (state)\nthis:\n  u = stake (length u) (u @- x)\n\ngoal (2 subgoals):\n 1. u = v @ ?z\n 2. ?z \\<le>\\<^sub>F\\<^sub>I w", "have \"\\<dots> = stake (length u) (v @- w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (u @- x) = stake (length u) (v @- w)", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (v @- w) = stake (length u) (v @- w)", "by rule"], ["proof (state)\nthis:\n  stake (length u) (u @- x) = stake (length u) (v @- w)\n\ngoal (2 subgoals):\n 1. u = v @ ?z\n 2. ?z \\<le>\\<^sub>F\\<^sub>I w", "also"], ["proof (state)\nthis:\n  stake (length u) (u @- x) = stake (length u) (v @- w)\n\ngoal (2 subgoals):\n 1. u = v @ ?z\n 2. ?z \\<le>\\<^sub>F\\<^sub>I w", "have \"\\<dots> = v @ stake (length u - length v) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u) (v @- w) = v @ stake (length u - length v) w", "using ge"], ["proof (prove)\nusing this:\n  length v \\<le> length u\n\ngoal (1 subgoal):\n 1. stake (length u) (v @- w) = v @ stake (length u - length v) w", "by (simp add: stake_shift)"], ["proof (state)\nthis:\n  stake (length u) (v @- w) = v @ stake (length u - length v) w\n\ngoal (2 subgoals):\n 1. u = v @ ?z\n 2. ?z \\<le>\\<^sub>F\\<^sub>I w", "finally"], ["proof (chain)\npicking this:\n  u = v @ stake (length u - length v) w", "show \"u = v @ stake (length u - length v) w\""], ["proof (prove)\nusing this:\n  u = v @ stake (length u - length v) w\n\ngoal (1 subgoal):\n 1. u = v @ stake (length u - length v) w", "by this"], ["proof (state)\nthis:\n  u = v @ stake (length u - length v) w\n\ngoal (1 subgoal):\n 1. stake (length u - length v) w \\<le>\\<^sub>F\\<^sub>I w", "show \"stake (length u - length v) w \\<le>\\<^sub>F\\<^sub>I w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stake (length u - length v) w \\<le>\\<^sub>F\\<^sub>I w", "by rule"], ["proof (state)\nthis:\n  stake (length u - length v) w \\<le>\\<^sub>F\\<^sub>I w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefix_fin_prefix_fininf_trans[trans, intro]: \"u \\<le> v \\<Longrightarrow> v \\<le>\\<^sub>F\\<^sub>I w \\<Longrightarrow> u \\<le>\\<^sub>F\\<^sub>I w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<le> v; v \\<le>\\<^sub>F\\<^sub>I w\\<rbrakk>\n    \\<Longrightarrow> u \\<le>\\<^sub>F\\<^sub>I w", "by (metis Prefix_Order.prefixE prefix_fininf_def shift_append)"], ["", "lemma prefix_finE_nth:\n    assumes \"u \\<le> v\" \"i < length u\"\n    shows \"u ! i = v ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! i = v ! i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u ! i = v ! i", "obtain w where 1: \"v = u @ w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>w. v = u @ w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. (\\<And>w. v = u @ w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  v = u @ w\n\ngoal (1 subgoal):\n 1. u ! i = v ! i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! i = v ! i", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. u ! i = (u @ w) ! i", "using assms(2)"], ["proof (prove)\nusing this:\n  i < length u\n\ngoal (1 subgoal):\n 1. u ! i = (u @ w) ! i", "by (simp add: nth_append)"], ["proof (state)\nthis:\n  u ! i = v ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefix_fininfI_nth:\n    assumes \"\\<And> i. i < length u \\<Longrightarrow> u ! i = w !! i\"\n    shows \"u \\<le>\\<^sub>F\\<^sub>I w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le>\\<^sub>F\\<^sub>I w", "proof (rule prefix_fininfI)"], ["proof (state)\ngoal (1 subgoal):\n 1. u @- ?w = w", "show \"u @- sdrop (length u) w = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u @- sdrop (length u) w = w", "by (simp add: assms list_eq_iff_nth_eq shift_eq)"], ["proof (state)\nthis:\n  u @- sdrop (length u) w = w\n\ngoal:\nNo subgoals!", "qed"], ["", "definition chain :: \"(nat \\<Rightarrow> 'a list) \\<Rightarrow> bool\"\n    where \"chain w \\<equiv> mono w \\<and> (\\<forall> k. \\<exists> l. k < length (w l))\""], ["", "definition limit :: \"(nat \\<Rightarrow> 'a list) \\<Rightarrow> 'a stream\"\n    where \"limit w \\<equiv> smap (\\<lambda> k. w (SOME l. k < length (w l)) ! k) nats\""], ["", "lemma chainI[intro?]:\n    assumes \"mono w\"\n    assumes \"\\<And> k. \\<exists> l. k < length (w l)\"\n    shows \"chain w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain w", "using assms"], ["proof (prove)\nusing this:\n  mono w\n  \\<exists>l. ?k < length (w l)\n\ngoal (1 subgoal):\n 1. chain w", "unfolding chain_def"], ["proof (prove)\nusing this:\n  mono w\n  \\<exists>l. ?k < length (w l)\n\ngoal (1 subgoal):\n 1. mono w \\<and> (\\<forall>k. \\<exists>l. k < length (w l))", "by auto"], ["", "lemma chainD_mono[dest?]:\n    assumes \"chain w\"\n    shows \"mono w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono w", "using assms"], ["proof (prove)\nusing this:\n  chain w\n\ngoal (1 subgoal):\n 1. mono w", "unfolding chain_def"], ["proof (prove)\nusing this:\n  mono w \\<and> (\\<forall>k. \\<exists>l. k < length (w l))\n\ngoal (1 subgoal):\n 1. mono w", "by auto"], ["", "lemma chainE_length[elim?]:\n    assumes \"chain w\"\n    obtains l\n    where \"k < length (w l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l. k < length (w l) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  chain w\n\ngoal (1 subgoal):\n 1. (\\<And>l. k < length (w l) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding chain_def"], ["proof (prove)\nusing this:\n  mono w \\<and> (\\<forall>k. \\<exists>l. k < length (w l))\n\ngoal (1 subgoal):\n 1. (\\<And>l. k < length (w l) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma chain_prefix_limit:\n    assumes \"chain w\"\n    shows \"w k \\<le>\\<^sub>F\\<^sub>I limit w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w k \\<le>\\<^sub>F\\<^sub>I limit w", "proof (rule prefix_fininfI_nth)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < length (w k) \\<Longrightarrow> w k ! i = limit w !! i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < length (w k) \\<Longrightarrow> w k ! i = limit w !! i", "assume 1: \"i < length (w k)\""], ["proof (state)\nthis:\n  i < length (w k)\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length (w k) \\<Longrightarrow> w k ! i = limit w !! i", "have 2: \"mono w\" \"\\<And> k. \\<exists> l. k < length (w l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono w &&& (\\<And>k. \\<exists>l. k < length (w l))", "using chainD_mono chainE_length assms"], ["proof (prove)\nusing this:\n  chain ?w \\<Longrightarrow> mono ?w\n  \\<lbrakk>chain ?w;\n   \\<And>l. ?k < length (?w l) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  chain w\n\ngoal (1 subgoal):\n 1. mono w &&& (\\<And>k. \\<exists>l. k < length (w l))", "by blast+"], ["proof (state)\nthis:\n  mono w\n  \\<exists>l. ?k < length (w l)\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length (w k) \\<Longrightarrow> w k ! i = limit w !! i", "have 3: \"i < length (w (SOME l. i < length (w l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length (w (SOME l. i < length (w l)))", "using someI_ex 2(2)"], ["proof (prove)\nusing this:\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (SOME x. ?P x)\n  \\<exists>l. ?k < length (w l)\n\ngoal (1 subgoal):\n 1. i < length (w (SOME l. i < length (w l)))", "by this"], ["proof (state)\nthis:\n  i < length (w (SOME l. i < length (w l)))\n\ngoal (1 subgoal):\n 1. \\<And>i. i < length (w k) \\<Longrightarrow> w k ! i = limit w !! i", "show \"w k ! i = limit w !! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w k ! i = limit w !! i", "proof (cases \"k\" \"SOME l. i < length (w l)\" rule: le_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<le> (SOME l. i < length (w l)) \\<Longrightarrow>\n    w k ! i = limit w !! i\n 2. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "case (le)"], ["proof (state)\nthis:\n  k \\<le> (SOME l. i < length (w l))\n\ngoal (2 subgoals):\n 1. k \\<le> (SOME l. i < length (w l)) \\<Longrightarrow>\n    w k ! i = limit w !! i\n 2. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "have 4: \"w k \\<le> w (SOME l. i < length (w l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w k \\<le> w (SOME l. i < length (w l))", "using monoD 2(1) le"], ["proof (prove)\nusing this:\n  \\<lbrakk>mono ?f; ?x \\<le> ?y\\<rbrakk> \\<Longrightarrow> ?f ?x \\<le> ?f ?y\n  mono w\n  k \\<le> (SOME l. i < length (w l))\n\ngoal (1 subgoal):\n 1. w k \\<le> w (SOME l. i < length (w l))", "by this"], ["proof (state)\nthis:\n  w k \\<le> w (SOME l. i < length (w l))\n\ngoal (2 subgoals):\n 1. k \\<le> (SOME l. i < length (w l)) \\<Longrightarrow>\n    w k ! i = limit w !! i\n 2. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. w k ! i = limit w !! i", "unfolding limit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w k ! i = smap (\\<lambda>k. w (SOME l. k < length (w l)) ! k) nats !! i", "using prefix_finE_nth 4 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le> ?v; ?i < length ?u\\<rbrakk>\n  \\<Longrightarrow> ?u ! ?i = ?v ! ?i\n  w k \\<le> w (SOME l. i < length (w l))\n  i < length (w k)\n\ngoal (1 subgoal):\n 1. w k ! i = smap (\\<lambda>k. w (SOME l. k < length (w l)) ! k) nats !! i", "by auto"], ["proof (state)\nthis:\n  w k ! i = limit w !! i\n\ngoal (1 subgoal):\n 1. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "case (ge)"], ["proof (state)\nthis:\n  (SOME l. i < length (w l)) \\<le> k\n\ngoal (1 subgoal):\n 1. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "have 4: \"w (SOME l. i < length (w l)) \\<le> w k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w (SOME l. i < length (w l)) \\<le> w k", "using monoD 2(1) ge"], ["proof (prove)\nusing this:\n  \\<lbrakk>mono ?f; ?x \\<le> ?y\\<rbrakk> \\<Longrightarrow> ?f ?x \\<le> ?f ?y\n  mono w\n  (SOME l. i < length (w l)) \\<le> k\n\ngoal (1 subgoal):\n 1. w (SOME l. i < length (w l)) \\<le> w k", "by this"], ["proof (state)\nthis:\n  w (SOME l. i < length (w l)) \\<le> w k\n\ngoal (1 subgoal):\n 1. (SOME l. i < length (w l)) \\<le> k \\<Longrightarrow>\n    w k ! i = limit w !! i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. w k ! i = limit w !! i", "unfolding limit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. w k ! i = smap (\\<lambda>k. w (SOME l. k < length (w l)) ! k) nats !! i", "using prefix_finE_nth 4 3"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u \\<le> ?v; ?i < length ?u\\<rbrakk>\n  \\<Longrightarrow> ?u ! ?i = ?v ! ?i\n  w (SOME l. i < length (w l)) \\<le> w k\n  i < length (w (SOME l. i < length (w l)))\n\ngoal (1 subgoal):\n 1. w k ! i = smap (\\<lambda>k. w (SOME l. k < length (w l)) ! k) nats !! i", "by auto"], ["proof (state)\nthis:\n  w k ! i = limit w !! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w k ! i = limit w !! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chain_construct_1:\n    assumes \"P 0 x\\<^sub>0\" \"\\<And> k x. P k x \\<Longrightarrow> \\<exists> x'. P (Suc k) x' \\<and> f x \\<le> f x'\"\n    assumes \"\\<And> k x. P k x \\<Longrightarrow> k \\<le> length (f x)\"\n    obtains Q\n    where \"\\<And> k. P k (Q k)\" \"chain (f \\<circ> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain x' where 1:\n      \"P 0 x\\<^sub>0\" \"\\<And> k x. P k x \\<Longrightarrow> P (Suc k) (x' k x) \\<and> f x \\<le> f (x' k x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P 0 x\\<^sub>0;\n         \\<And>k x.\n            P k x \\<Longrightarrow>\n            P (Suc k) (x' k x) \\<and> f x \\<le> f (x' k x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  P 0 x\\<^sub>0\n  P ?k ?x \\<Longrightarrow>\n  \\<exists>x'. P (Suc ?k) x' \\<and> f ?x \\<le> f x'\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P 0 x\\<^sub>0;\n         \\<And>k x.\n            P k x \\<Longrightarrow>\n            P (Suc k) (x' k x) \\<and> f x \\<le> f (x' k x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P 0 x\\<^sub>0\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and> f ?x \\<le> f (x' ?k ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define Q where \"Q \\<equiv> rec_nat x\\<^sub>0 x'\""], ["proof (state)\nthis:\n  Q \\<equiv> rec_nat x\\<^sub>0 x'\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"Q 0 = x\\<^sub>0\" \"\\<And> k. Q (Suc k) = x' k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q 0 = x\\<^sub>0 &&& (\\<And>k. Q (Suc k) = x' k (Q k))", "unfolding Q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_nat x\\<^sub>0 x' 0 = x\\<^sub>0 &&&\n    (\\<And>k. rec_nat x\\<^sub>0 x' (Suc k) = x' k (rec_nat x\\<^sub>0 x' k))", "by simp+"], ["proof (state)\nthis:\n  Q 0 = x\\<^sub>0\n  Q (Suc ?k) = x' ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 2: \"\\<And> k. P k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. P k (Q k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. P k (Q k)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. P k (Q k)", "show \"P k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k (Q k)", "using 1"], ["proof (prove)\nusing this:\n  P 0 x\\<^sub>0\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and> f ?x \\<le> f (x' ?k ?x)\n\ngoal (1 subgoal):\n 1. P k (Q k)", "by (induct k, auto)"], ["proof (state)\nthis:\n  P k (Q k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (intro that chainI monoI, unfold comp_apply)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>k. P k (?Q k)\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> f (?Q x) \\<le> f (?Q y)\n 3. \\<And>k. \\<exists>l. k < length (f (?Q l))", "fix k"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>k. P k (?Q k)\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> f (?Q x) \\<le> f (?Q y)\n 3. \\<And>k. \\<exists>l. k < length (f (?Q l))", "show \"P k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k (Q k)", "using 2"], ["proof (prove)\nusing this:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. P k (Q k)", "by this"], ["proof (state)\nthis:\n  P k (Q k)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))", "fix x y :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))", "assume \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))", "thus \"f (Q x) \\<le> f (Q y)\""], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "proof (induct \"y - x\" arbitrary: x y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "case 0"], ["proof (state)\nthis:\n  0 = y - x\n  x \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "using 0"], ["proof (prove)\nusing this:\n  0 = y - x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "by simp"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k = ?y - ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> f (Q ?x) \\<le> f (Q ?y)\n  Suc k = y - x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "have \"f (Q x) \\<le> f (Q (Suc x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q (Suc x))", "using 1(2) 2"], ["proof (prove)\nusing this:\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and> f ?x \\<le> f (x' ?k ?x)\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q (Suc x))", "by auto"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q (Suc x))\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "also"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q (Suc x))\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "have \"\\<dots> \\<le> f (Q y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Q (Suc x)) \\<le> f (Q y)", "using Suc(2)"], ["proof (prove)\nusing this:\n  Suc k = y - x\n\ngoal (1 subgoal):\n 1. f (Q (Suc x)) \\<le> f (Q y)", "by (intro Suc(1), auto)"], ["proof (state)\nthis:\n  f (Q (Suc x)) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "finally"], ["proof (chain)\npicking this:\n  f (Q x) \\<le> f (Q y)", "show ?case"], ["proof (prove)\nusing this:\n  f (Q x) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "by this"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))", "have 3: \"P (Suc k) (Q (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc k) (Q (Suc k))", "using 2"], ["proof (prove)\nusing this:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. P (Suc k) (Q (Suc k))", "by this"], ["proof (state)\nthis:\n  P (Suc k) (Q (Suc k))\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))", "have 4: \"Suc k \\<le> length (f (Q (Suc k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k \\<le> length (f (Q (Suc k)))", "using assms(3) 3"], ["proof (prove)\nusing this:\n  P ?k ?x \\<Longrightarrow> ?k \\<le> length (f ?x)\n  P (Suc k) (Q (Suc k))\n\ngoal (1 subgoal):\n 1. Suc k \\<le> length (f (Q (Suc k)))", "by this"], ["proof (state)\nthis:\n  Suc k \\<le> length (f (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))", "have 5: \"k < length (f (Q (Suc k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < length (f (Q (Suc k)))", "using 4"], ["proof (prove)\nusing this:\n  Suc k \\<le> length (f (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. k < length (f (Q (Suc k)))", "by auto"], ["proof (state)\nthis:\n  k < length (f (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))", "show \"\\<exists> l. k < length (f (Q l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. k < length (f (Q l))", "using 5"], ["proof (prove)\nusing this:\n  k < length (f (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<exists>l. k < length (f (Q l))", "by blast"], ["proof (state)\nthis:\n  \\<exists>l. k < length (f (Q l))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chain_construct_2:\n    assumes \"P 0 x\\<^sub>0\" \"\\<And> k x. P k x \\<Longrightarrow> \\<exists> x'. P (Suc k) x' \\<and> f x \\<le> f x' \\<and> g x \\<le> g x'\"\n    assumes \"\\<And> k x. P k x \\<Longrightarrow> k \\<le> length (f x)\" \"\\<And> k x. P k x \\<Longrightarrow> k \\<le> length (g x)\"\n    obtains Q\n    where \"\\<And> k. P k (Q k)\" \"chain (f \\<circ> Q)\" \"chain (g \\<circ> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q);\n         chain (g \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q);\n         chain (g \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain x' where 1:\n      \"P 0 x\\<^sub>0\" \"\\<And> k x. P k x \\<Longrightarrow> P (Suc k) (x' k x) \\<and> f x \\<le> f (x' k x) \\<and> g x \\<le> g (x' k x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P 0 x\\<^sub>0;\n         \\<And>k x.\n            P k x \\<Longrightarrow>\n            P (Suc k) (x' k x) \\<and>\n            f x \\<le> f (x' k x) \\<and> g x \\<le> g (x' k x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  P 0 x\\<^sub>0\n  P ?k ?x \\<Longrightarrow>\n  \\<exists>x'. P (Suc ?k) x' \\<and> f ?x \\<le> f x' \\<and> g ?x \\<le> g x'\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>P 0 x\\<^sub>0;\n         \\<And>k x.\n            P k x \\<Longrightarrow>\n            P (Suc k) (x' k x) \\<and>\n            f x \\<le> f (x' k x) \\<and> g x \\<le> g (x' k x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P 0 x\\<^sub>0\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and>\n  f ?x \\<le> f (x' ?k ?x) \\<and> g ?x \\<le> g (x' ?k ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q);\n         chain (g \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define Q where \"Q \\<equiv> rec_nat x\\<^sub>0 x'\""], ["proof (state)\nthis:\n  Q \\<equiv> rec_nat x\\<^sub>0 x'\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q);\n         chain (g \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"Q 0 = x\\<^sub>0\" \"\\<And> k. Q (Suc k) = x' k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q 0 = x\\<^sub>0 &&& (\\<And>k. Q (Suc k) = x' k (Q k))", "unfolding Q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_nat x\\<^sub>0 x' 0 = x\\<^sub>0 &&&\n    (\\<And>k. rec_nat x\\<^sub>0 x' (Suc k) = x' k (rec_nat x\\<^sub>0 x' k))", "by simp+"], ["proof (state)\nthis:\n  Q 0 = x\\<^sub>0\n  Q (Suc ?k) = x' ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q);\n         chain (g \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 2: \"\\<And> k. P k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. P k (Q k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. P k (Q k)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. P k (Q k)", "show \"P k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k (Q k)", "using 1"], ["proof (prove)\nusing this:\n  P 0 x\\<^sub>0\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and>\n  f ?x \\<le> f (x' ?k ?x) \\<and> g ?x \\<le> g (x' ?k ?x)\n\ngoal (1 subgoal):\n 1. P k (Q k)", "by (induct k, auto)"], ["proof (state)\nthis:\n  P k (Q k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. P k (Q k); chain (f \\<circ> Q);\n         chain (g \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (intro that chainI monoI, unfold comp_apply)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>k. P k (?Q k)\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> f (?Q x) \\<le> f (?Q y)\n 3. \\<And>k. \\<exists>l. k < length (f (?Q l))\n 4. \\<And>x y. x \\<le> y \\<Longrightarrow> g (?Q x) \\<le> g (?Q y)\n 5. \\<And>k. \\<exists>l. k < length (g (?Q l))", "fix k"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>k. P k (?Q k)\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> f (?Q x) \\<le> f (?Q y)\n 3. \\<And>k. \\<exists>l. k < length (f (?Q l))\n 4. \\<And>x y. x \\<le> y \\<Longrightarrow> g (?Q x) \\<le> g (?Q y)\n 5. \\<And>k. \\<exists>l. k < length (g (?Q l))", "show \"P k (Q k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k (Q k)", "using 2"], ["proof (prove)\nusing this:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. P k (Q k)", "by this"], ["proof (state)\nthis:\n  P k (Q k)\n\ngoal (4 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))\n 3. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 4. \\<And>k. \\<exists>l. k < length (g (Q l))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))\n 3. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 4. \\<And>k. \\<exists>l. k < length (g (Q l))", "fix x y :: nat"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))\n 3. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 4. \\<And>k. \\<exists>l. k < length (g (Q l))", "assume \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (4 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>k. \\<exists>l. k < length (f (Q l))\n 3. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 4. \\<And>k. \\<exists>l. k < length (g (Q l))", "thus \"f (Q x) \\<le> f (Q y)\""], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "proof (induct \"y - x\" arbitrary: x y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "case 0"], ["proof (state)\nthis:\n  0 = y - x\n  x \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)\n 2. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "using 0"], ["proof (prove)\nusing this:\n  0 = y - x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "by simp"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k = ?y - ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> f (Q ?x) \\<le> f (Q ?y)\n  Suc k = y - x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "have \"f (Q x) \\<le> f (Q (Suc x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q (Suc x))", "using 1(2) 2"], ["proof (prove)\nusing this:\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and>\n  f ?x \\<le> f (x' ?k ?x) \\<and> g ?x \\<le> g (x' ?k ?x)\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q (Suc x))", "by auto"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q (Suc x))\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "also"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q (Suc x))\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "have \"\\<dots> \\<le> f (Q y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Q (Suc x)) \\<le> f (Q y)", "using Suc(2)"], ["proof (prove)\nusing this:\n  Suc k = y - x\n\ngoal (1 subgoal):\n 1. f (Q (Suc x)) \\<le> f (Q y)", "by (intro Suc(1), auto)"], ["proof (state)\nthis:\n  f (Q (Suc x)) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> f (Q x) \\<le> f (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> f (Q x) \\<le> f (Q y)", "finally"], ["proof (chain)\npicking this:\n  f (Q x) \\<le> f (Q y)", "show ?case"], ["proof (prove)\nusing this:\n  f (Q x) \\<le> f (Q y)\n\ngoal (1 subgoal):\n 1. f (Q x) \\<le> f (Q y)", "by this"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (Q x) \\<le> f (Q y)\n\ngoal (3 subgoals):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 3. \\<And>k. \\<exists>l. k < length (g (Q l))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 3. \\<And>k. \\<exists>l. k < length (g (Q l))", "fix k"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 3. \\<And>k. \\<exists>l. k < length (g (Q l))", "have 3: \"P (Suc k) (Q (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc k) (Q (Suc k))", "using 2"], ["proof (prove)\nusing this:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. P (Suc k) (Q (Suc k))", "by this"], ["proof (state)\nthis:\n  P (Suc k) (Q (Suc k))\n\ngoal (3 subgoals):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 3. \\<And>k. \\<exists>l. k < length (g (Q l))", "have 4: \"Suc k \\<le> length (f (Q (Suc k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k \\<le> length (f (Q (Suc k)))", "using assms(3) 3"], ["proof (prove)\nusing this:\n  P ?k ?x \\<Longrightarrow> ?k \\<le> length (f ?x)\n  P (Suc k) (Q (Suc k))\n\ngoal (1 subgoal):\n 1. Suc k \\<le> length (f (Q (Suc k)))", "by this"], ["proof (state)\nthis:\n  Suc k \\<le> length (f (Q (Suc k)))\n\ngoal (3 subgoals):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 3. \\<And>k. \\<exists>l. k < length (g (Q l))", "have 5: \"k < length (f (Q (Suc k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < length (f (Q (Suc k)))", "using 4"], ["proof (prove)\nusing this:\n  Suc k \\<le> length (f (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. k < length (f (Q (Suc k)))", "by auto"], ["proof (state)\nthis:\n  k < length (f (Q (Suc k)))\n\ngoal (3 subgoals):\n 1. \\<And>k. \\<exists>l. k < length (f (Q l))\n 2. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 3. \\<And>k. \\<exists>l. k < length (g (Q l))", "show \"\\<exists> l. k < length (f (Q l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. k < length (f (Q l))", "using 5"], ["proof (prove)\nusing this:\n  k < length (f (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<exists>l. k < length (f (Q l))", "by blast"], ["proof (state)\nthis:\n  \\<exists>l. k < length (f (Q l))\n\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 2. \\<And>k. \\<exists>l. k < length (g (Q l))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 2. \\<And>k. \\<exists>l. k < length (g (Q l))", "fix x y :: nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 2. \\<And>k. \\<exists>l. k < length (g (Q l))", "assume \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<le> y \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 2. \\<And>k. \\<exists>l. k < length (g (Q l))", "thus \"g (Q x) \\<le> g (Q y)\""], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. g (Q x) \\<le> g (Q y)", "proof (induct \"y - x\" arbitrary: x y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 2. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "case 0"], ["proof (state)\nthis:\n  0 = y - x\n  x \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>0 = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)\n 2. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Q x) \\<le> g (Q y)", "using 0"], ["proof (prove)\nusing this:\n  0 = y - x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. g (Q x) \\<le> g (Q y)", "by simp"], ["proof (state)\nthis:\n  g (Q x) \\<le> g (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k = ?y - ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> g (Q ?x) \\<le> g (Q ?y)\n  Suc k = y - x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "have \"g (Q x) \\<le> g (Q (Suc x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Q x) \\<le> g (Q (Suc x))", "using 1(2) 2"], ["proof (prove)\nusing this:\n  P ?k ?x \\<Longrightarrow>\n  P (Suc ?k) (x' ?k ?x) \\<and>\n  f ?x \\<le> f (x' ?k ?x) \\<and> g ?x \\<le> g (x' ?k ?x)\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. g (Q x) \\<le> g (Q (Suc x))", "by auto"], ["proof (state)\nthis:\n  g (Q x) \\<le> g (Q (Suc x))\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "also"], ["proof (state)\nthis:\n  g (Q x) \\<le> g (Q (Suc x))\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "have \"\\<dots> \\<le> g (Q y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Q (Suc x)) \\<le> g (Q y)", "using Suc(2)"], ["proof (prove)\nusing this:\n  Suc k = y - x\n\ngoal (1 subgoal):\n 1. g (Q (Suc x)) \\<le> g (Q y)", "by (intro Suc(1), auto)"], ["proof (state)\nthis:\n  g (Q (Suc x)) \\<le> g (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>xa x y.\n       \\<lbrakk>\\<And>x y.\n                   \\<lbrakk>xa = y - x; x \\<le> y\\<rbrakk>\n                   \\<Longrightarrow> g (Q x) \\<le> g (Q y);\n        Suc xa = y - x; x \\<le> y\\<rbrakk>\n       \\<Longrightarrow> g (Q x) \\<le> g (Q y)", "finally"], ["proof (chain)\npicking this:\n  g (Q x) \\<le> g (Q y)", "show ?case"], ["proof (prove)\nusing this:\n  g (Q x) \\<le> g (Q y)\n\ngoal (1 subgoal):\n 1. g (Q x) \\<le> g (Q y)", "by this"], ["proof (state)\nthis:\n  g (Q x) \\<le> g (Q y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g (Q x) \\<le> g (Q y)\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (g (Q l))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (g (Q l))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (g (Q l))", "have 3: \"P (Suc k) (Q (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc k) (Q (Suc k))", "using 2"], ["proof (prove)\nusing this:\n  P ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. P (Suc k) (Q (Suc k))", "by this"], ["proof (state)\nthis:\n  P (Suc k) (Q (Suc k))\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (g (Q l))", "have 4: \"Suc k \\<le> length (g (Q (Suc k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc k \\<le> length (g (Q (Suc k)))", "using assms(4) 3"], ["proof (prove)\nusing this:\n  P ?k ?x \\<Longrightarrow> ?k \\<le> length (g ?x)\n  P (Suc k) (Q (Suc k))\n\ngoal (1 subgoal):\n 1. Suc k \\<le> length (g (Q (Suc k)))", "by this"], ["proof (state)\nthis:\n  Suc k \\<le> length (g (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (g (Q l))", "have 5: \"k < length (g (Q (Suc k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < length (g (Q (Suc k)))", "using 4"], ["proof (prove)\nusing this:\n  Suc k \\<le> length (g (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. k < length (g (Q (Suc k)))", "by auto"], ["proof (state)\nthis:\n  k < length (g (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<And>k. \\<exists>l. k < length (g (Q l))", "show \"\\<exists> l. k < length (g (Q l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l. k < length (g (Q l))", "using 5"], ["proof (prove)\nusing this:\n  k < length (g (Q (Suc k)))\n\ngoal (1 subgoal):\n 1. \\<exists>l. k < length (g (Q l))", "by blast"], ["proof (state)\nthis:\n  \\<exists>l. k < length (g (Q l))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma chain_construct_2':\n    assumes \"P 0 u\\<^sub>0 v\\<^sub>0\" \"\\<And> k u v. P k u v \\<Longrightarrow> \\<exists> u' v'. P (Suc k) u' v' \\<and> u \\<le> u' \\<and> v \\<le> v'\"\n    assumes \"\\<And> k u v. P k u v \\<Longrightarrow> k \\<le> length u\" \"\\<And> k u v. P k u v \\<Longrightarrow> k \\<le> length v\"\n    obtains u v\n    where \"\\<And> k. P k (u k) (v k)\" \"chain u\" \"chain v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>\\<And>k. P k (u k) (v k); chain u; chain v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>\\<And>k. P k (u k) (v k); chain u; chain v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain Q where 1: \"\\<And> k. (case_prod \\<circ> P) k (Q k)\" \"chain (fst \\<circ> Q)\" \"chain (snd \\<circ> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n         chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule chain_construct_2)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n         chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?P2 0 ?x\\<^sub>02\n 2. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?P2 k x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x'.\n                            ?P2 (Suc k) x' \\<and>\n                            ?f2 x \\<le> ?f2 x' \\<and> ?g2 x \\<le> ?g2 x'\n 3. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?P2 k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (?f2 x)\n 4. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ?P2 k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (?g2 x)\n 5. \\<And>Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>k. ?P2 k (Q k); chain (?f2 \\<circ> Q);\n        chain (?g2 \\<circ> Q)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"\\<exists> x'. (case_prod \\<circ> P) (Suc k) x' \\<and> fst x \\<le> fst x' \\<and> snd x \\<le> snd x'\"\n        if \"(case_prod \\<circ> P) k x\" for k x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x'.\n       (case_prod \\<circ> P) (Suc k) x' \\<and>\n       fst x \\<le> fst x' \\<and> snd x \\<le> snd x'", "using assms that"], ["proof (prove)\nusing this:\n  P 0 u\\<^sub>0 v\\<^sub>0\n  P ?k ?u ?v \\<Longrightarrow>\n  \\<exists>u' v'. P (Suc ?k) u' v' \\<and> ?u \\<le> u' \\<and> ?v \\<le> v'\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?u\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?v\n  (case_prod \\<circ> P) k x\n\ngoal (1 subgoal):\n 1. \\<exists>x'.\n       (case_prod \\<circ> P) (Suc k) x' \\<and>\n       fst x \\<le> fst x' \\<and> snd x \\<le> snd x'", "by auto"], ["proof (state)\nthis:\n  (case_prod \\<circ> P) ?k ?x \\<Longrightarrow>\n  \\<exists>x'.\n     (case_prod \\<circ> P) (Suc ?k) x' \\<and>\n     fst ?x \\<le> fst x' \\<and> snd ?x \\<le> snd x'\n\ngoal (4 subgoals):\n 1. (\\<And>Q.\n        \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n         chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ> P) 0\n     ?x\\<^sub>02\n 2. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ> P)\n         k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (fst x)\n 3. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ> P)\n         k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (snd x)\n 4. \\<And>Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>k.\n           ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ>\n            P)\n            k (Q k);\n        chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"(case_prod \\<circ> P) 0 (u\\<^sub>0, v\\<^sub>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case_prod \\<circ> P) 0 (u\\<^sub>0, v\\<^sub>0)", "using assms"], ["proof (prove)\nusing this:\n  P 0 u\\<^sub>0 v\\<^sub>0\n  P ?k ?u ?v \\<Longrightarrow>\n  \\<exists>u' v'. P (Suc ?k) u' v' \\<and> ?u \\<le> u' \\<and> ?v \\<le> v'\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?u\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?v\n\ngoal (1 subgoal):\n 1. (case_prod \\<circ> P) 0 (u\\<^sub>0, v\\<^sub>0)", "by auto"], ["proof (state)\nthis:\n  (case_prod \\<circ> P) 0 (u\\<^sub>0, v\\<^sub>0)\n\ngoal (3 subgoals):\n 1. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ> P)\n         k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (fst x)\n 2. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ> P)\n         k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (snd x)\n 3. \\<And>Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>k.\n           ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ>\n            P)\n            k (Q k);\n        chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"k \\<le> length (fst x)\" if \"(case_prod \\<circ> P) k x\" for k x"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> length (fst x)", "using assms that"], ["proof (prove)\nusing this:\n  P 0 u\\<^sub>0 v\\<^sub>0\n  P ?k ?u ?v \\<Longrightarrow>\n  \\<exists>u' v'. P (Suc ?k) u' v' \\<and> ?u \\<le> u' \\<and> ?v \\<le> v'\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?u\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?v\n  (case_prod \\<circ> P) k x\n\ngoal (1 subgoal):\n 1. k \\<le> length (fst x)", "by auto"], ["proof (state)\nthis:\n  (case_prod \\<circ> P) ?k ?x \\<Longrightarrow> ?k \\<le> length (fst ?x)\n\ngoal (2 subgoals):\n 1. \\<And>k x.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ> P)\n         k x\\<rbrakk>\n       \\<Longrightarrow> k \\<le> length (snd x)\n 2. \\<And>Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>k.\n           ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ>\n            P)\n            k (Q k);\n        chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"k \\<le> length (snd x)\" if \"(case_prod \\<circ> P) k x\" for k x"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> length (snd x)", "using assms that"], ["proof (prove)\nusing this:\n  P 0 u\\<^sub>0 v\\<^sub>0\n  P ?k ?u ?v \\<Longrightarrow>\n  \\<exists>u' v'. P (Suc ?k) u' v' \\<and> ?u \\<le> u' \\<and> ?v \\<le> v'\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?u\n  P ?k ?u ?v \\<Longrightarrow> ?k \\<le> length ?v\n  (case_prod \\<circ> P) k x\n\ngoal (1 subgoal):\n 1. k \\<le> length (snd x)", "by auto"], ["proof (state)\nthis:\n  (case_prod \\<circ> P) ?k ?x \\<Longrightarrow> ?k \\<le> length (snd ?x)\n\ngoal (1 subgoal):\n 1. \\<And>Q.\n       \\<lbrakk>\\<And>Q.\n                   \\<lbrakk>\\<And>k. (case_prod \\<circ> P) k (Q k);\n                    chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        \\<And>k.\n           ((\\<lambda>a aa. case aa of (aa, b) \\<Rightarrow> a aa b) \\<circ>\n            P)\n            k (Q k);\n        chain (fst \\<circ> Q); chain (snd \\<circ> Q)\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed rule"], ["proof (state)\nthis:\n  (case_prod \\<circ> P) ?k (Q ?k)\n  chain (fst \\<circ> Q)\n  chain (snd \\<circ> Q)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>\\<And>k. P k (u k) (v k); chain u; chain v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>k. P k (?u k) (?v k)\n 2. chain ?u\n 3. chain ?v", "show \"P k ((fst \\<circ> Q) k) ((snd \\<circ> Q) k)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. P k ((fst \\<circ> Q) k) ((snd \\<circ> Q) k)", "using 1(1)"], ["proof (prove)\nusing this:\n  (case_prod \\<circ> P) ?k (Q ?k)\n\ngoal (1 subgoal):\n 1. P k ((fst \\<circ> Q) k) ((snd \\<circ> Q) k)", "by (auto simp: prod.case_eq_if)"], ["proof (state)\nthis:\n  P ?k ((fst \\<circ> Q) ?k) ((snd \\<circ> Q) ?k)\n\ngoal (2 subgoals):\n 1. chain (fst \\<circ> Q)\n 2. chain (snd \\<circ> Q)", "show \"chain (fst \\<circ> Q)\" \"chain (snd \\<circ> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (fst \\<circ> Q) &&& chain (snd \\<circ> Q)", "using 1(2, 3)"], ["proof (prove)\nusing this:\n  chain (fst \\<circ> Q)\n  chain (snd \\<circ> Q)\n\ngoal (1 subgoal):\n 1. chain (fst \\<circ> Q) &&& chain (snd \\<circ> Q)", "by this"], ["proof (state)\nthis:\n  chain (fst \\<circ> Q)\n  chain (snd \\<circ> Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}