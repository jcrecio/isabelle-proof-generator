{"file_name": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction/Extensions/ESet_Extensions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction", "problem_names": ["lemma card_lessThan_enat[simp]: \"card {..< enat k} = card {..< k}\"", "lemma card_atMost_enat[simp]: \"card {.. enat k} = card {.. k}\"", "lemma enat_Collect:\n    assumes \"\\<infinity> \\<notin> A\"\n    shows \"{i. enat i \\<in> A} = the_enat ` A\"", "lemma Collect_lessThan: \"{i. enat i < n} = the_enat ` {..< n}\"", "lemma esize_iff_empty[iff]: \"esize A = 0 \\<longleftrightarrow> A = {}\"", "lemma esize_iff_infinite[iff]: \"esize A = \\<infinity> \\<longleftrightarrow> infinite A\"", "lemma esize_singleton[simp]: \"esize {a} = eSuc 0\"", "lemma esize_infinite_enat[dest, simp]: \"infinite A \\<Longrightarrow> enat k < esize A\"", "lemma esize_image[simp, intro]:\n    assumes \"inj_on f A\"\n    shows \"esize (f ` A) = esize A\"", "lemma esize_insert1[simp]: \"a \\<notin> A \\<Longrightarrow> esize (insert a A) = eSuc (esize A)\"", "lemma esize_insert2[simp]: \"a \\<in> A \\<Longrightarrow> esize (insert a A) = esize A\"", "lemma esize_remove1[simp]: \"a \\<notin> A \\<Longrightarrow> esize (A - {a}) = esize A\"", "lemma esize_remove2[simp]: \"a \\<in> A \\<Longrightarrow> esize (A - {a}) = epred (esize A)\"", "lemma esize_union_disjoint[simp]:\n    assumes \"A \\<inter> B = {}\"\n    shows \"esize (A \\<union> B) = esize A + esize B\"", "lemma esize_lessThan[simp]: \"esize {..< n} = n\"", "lemma esize_atMost[simp]: \"esize {.. n} = eSuc n\"", "lemma least_eSuc[simp]:\n    assumes \"A \\<noteq> {}\"\n    shows \"least (eSuc ` A) = eSuc (least A)\"", "lemma Inf_enat_eSuc[simp]: \"\\<Sqinter> (eSuc ` A) = eSuc (\\<Sqinter> A)\"", "lemma liftI_0[intro, simp]: \"0 \\<in> lift A\"", "lemma liftI_Suc[intro]: \"a \\<in> A \\<Longrightarrow> Suc a \\<in> lift A\"", "lemma liftE[elim]:\n    assumes \"b \\<in> lift A\"\n    obtains (0) \"b = 0\" | (Suc) a where \"b = Suc a\" \"a \\<in> A\"", "lemma lift_esize[simp]: \"esize (lift A) = eSuc (esize A)\"", "lemma lift_least[simp]: \"least (lift A) = 0\"", "lemma nth_least_wellformed[intro?, simp]:\n    assumes \"enat n < esize A\"\n    shows \"nth_least A n \\<in> A\"", "lemma card_wellformed[intro?, simp]:\n    fixes k :: \"'a :: wellorder\"\n    assumes \"k \\<in> A\"\n    shows \"enat (card {i \\<in> A. i < k}) < esize A\"", "lemma nth_least_strict_mono:\n    assumes \"enat l < esize A\" \"k < l\"\n    shows \"nth_least A k < nth_least A l\"", "lemma nth_least_mono[intro, simp]:\n    assumes \"enat l < esize A\" \"k \\<le> l\"\n    shows \"nth_least A k \\<le> nth_least A l\"", "lemma card_nth_least[simp]:\n    assumes \"enat n < esize A\"\n    shows \"card {k \\<in> A. k < nth_least A n} = n\"", "lemma card_nth_least_le[simp]:\n    assumes \"enat n < esize A\"\n    shows \"card {k \\<in> A. k \\<le> nth_least A n} = Suc n\"", "lemma nth_least_card:\n    fixes k :: nat\n    assumes \"k \\<in> A\"\n    shows \"nth_least A (card {i \\<in> A. i < k}) = k\"", "lemma nth_least_strict_mono_inverse:\n    fixes A :: \"nat set\"\n    assumes \"enat k < esize A\" \"enat l < esize A\" \"nth_least A k < nth_least A l\"\n    shows \"k < l\"", "lemma nth_least_less_card_less:\n    fixes k :: nat\n    shows \"enat n < esize A \\<and> nth_least A n < k \\<longleftrightarrow> n < card {i \\<in> A. i < k}\"", "lemma nth_least_less_esize_less:\n    \"enat n < esize A \\<and> enat (nth_least A n) < k \\<longleftrightarrow> enat n < esize {i \\<in> A. enat i < k}\"", "lemma nth_least_le:\n    assumes \"enat n < esize A\"\n    shows \"n \\<le> nth_least A n\"", "lemma nth_least_eq:\n    assumes \"enat n < esize A\" \"enat n < esize B\"\n    assumes \"\\<And> i. i \\<le> nth_least A n \\<Longrightarrow> i \\<le> nth_least B n \\<Longrightarrow> i \\<in> A \\<longleftrightarrow> i \\<in> B\"\n    shows \"nth_least A n = nth_least B n\"", "lemma nth_least_restrict[simp]:\n    assumes \"enat i < esize {i \\<in> s. enat i < k}\"\n    shows \"nth_least {i \\<in> s. enat i < k} i = nth_least s i\"", "lemma least_nth_least[simp]:\n    assumes \"A \\<noteq> {}\" \"\\<And> i. i \\<in> A \\<Longrightarrow> enat i < esize B\"\n    shows \"least (nth_least B ` A) = nth_least B (least A)\"", "lemma nth_least_nth_least[simp]:\n    assumes \"enat n < esize A\" \"\\<And> i. i \\<in> A \\<Longrightarrow> enat i < esize B\"\n    shows \"nth_least B (nth_least A n) = nth_least (nth_least B ` A) n\"", "lemma nth_least_Max[simp]:\n    assumes \"finite A\" \"A \\<noteq> {}\"\n    shows \"nth_least A (card A - 1) = Max A\"", "lemma nth_least_le_Max:\n    assumes \"finite A\" \"A \\<noteq> {}\" \"enat n < esize A\"\n    shows \"nth_least A n \\<le> Max A\"", "lemma nth_least_not_contains:\n    fixes k :: nat\n    assumes \"enat (Suc n) < esize A\" \"nth_least A n < k\" \"k < nth_least A (Suc n)\"\n    shows \"k \\<notin> A\"", "lemma nth_least_Suc[simp]:\n    assumes \"enat n < esize A\"\n    shows \"nth_least (Suc ` A) n = Suc (nth_least A n)\"", "lemma nth_least_lift[simp]:\n    \"nth_least (lift A) 0 = 0\"\n    \"enat n < esize A \\<Longrightarrow> nth_least (lift A) (Suc n) = Suc (nth_least A n)\"", "lemma nth_least_list_card[simp]:\n    assumes \"enat n \\<le> esize A\"\n    shows \"card {k \\<in> A. k < nth_least (lift A) n} = n\""], "translations": [["", "lemma card_lessThan_enat[simp]: \"card {..< enat k} = card {..< k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "have 1: \"{..< enat k} = enat ` {..< k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<enat k} = enat ` {..<k}", "unfolding lessThan_def image_Collect"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x < enat k} = {enat x |x. x < k}", "using enat_iless"], ["proof (prove)\nusing this:\n  ?n < enat ?m \\<Longrightarrow> \\<exists>k. ?n = enat k\n\ngoal (1 subgoal):\n 1. {x. x < enat k} = {enat x |x. x < k}", "by force"], ["proof (state)\nthis:\n  {..<enat k} = enat ` {..<k}\n\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "have \"card {..< enat k} = card (enat ` {..< k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {..<enat k} = card (enat ` {..<k})", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (enat ` {..<k}) = card (enat ` {..<k})", "by rule"], ["proof (state)\nthis:\n  card {..<enat k} = card (enat ` {..<k})\n\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "also"], ["proof (state)\nthis:\n  card {..<enat k} = card (enat ` {..<k})\n\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "have \"\\<dots> = card {..< k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (enat ` {..<k}) = card {..<k}", "using card_image inj_enat"], ["proof (prove)\nusing this:\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n  inj_on enat ?A\n\ngoal (1 subgoal):\n 1. card (enat ` {..<k}) = card {..<k}", "by metis"], ["proof (state)\nthis:\n  card (enat ` {..<k}) = card {..<k}\n\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "finally"], ["proof (chain)\npicking this:\n  card {..<enat k} = card {..<k}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {..<enat k} = card {..<k}\n\ngoal (1 subgoal):\n 1. card {..<enat k} = card {..<k}", "by this"], ["proof (state)\nthis:\n  card {..<enat k} = card {..<k}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_atMost_enat[simp]: \"card {.. enat k} = card {.. k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "have 1: \"{.. enat k} = enat ` {.. k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..enat k} = enat ` {..k}", "unfolding atMost_def image_Collect"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x \\<le> enat k} = {enat x |x. x \\<le> k}", "using enat_ile"], ["proof (prove)\nusing this:\n  ?n \\<le> enat ?m \\<Longrightarrow> \\<exists>k. ?n = enat k\n\ngoal (1 subgoal):\n 1. {x. x \\<le> enat k} = {enat x |x. x \\<le> k}", "by force"], ["proof (state)\nthis:\n  {..enat k} = enat ` {..k}\n\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "have \"card {.. enat k} = card (enat ` {.. k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {..enat k} = card (enat ` {..k})", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (enat ` {..k}) = card (enat ` {..k})", "by rule"], ["proof (state)\nthis:\n  card {..enat k} = card (enat ` {..k})\n\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "also"], ["proof (state)\nthis:\n  card {..enat k} = card (enat ` {..k})\n\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "have \"\\<dots> = card {.. k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (enat ` {..k}) = card {..k}", "using card_image inj_enat"], ["proof (prove)\nusing this:\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n  inj_on enat ?A\n\ngoal (1 subgoal):\n 1. card (enat ` {..k}) = card {..k}", "by metis"], ["proof (state)\nthis:\n  card (enat ` {..k}) = card {..k}\n\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "finally"], ["proof (chain)\npicking this:\n  card {..enat k} = card {..k}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {..enat k} = card {..k}\n\ngoal (1 subgoal):\n 1. card {..enat k} = card {..k}", "by this"], ["proof (state)\nthis:\n  card {..enat k} = card {..k}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma enat_Collect:\n    assumes \"\\<infinity> \\<notin> A\"\n    shows \"{i. enat i \\<in> A} = the_enat ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. enat i \\<in> A} = the_enat ` A", "using assms"], ["proof (prove)\nusing this:\n  \\<infinity> \\<notin> A\n\ngoal (1 subgoal):\n 1. {i. enat i \\<in> A} = the_enat ` A", "by (safe, force) (metis enat_the_enat)"], ["", "lemma Collect_lessThan: \"{i. enat i < n} = the_enat ` {..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "have 1: \"\\<infinity> \\<notin> {..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<infinity> \\<notin> {..<n}", "by simp"], ["proof (state)\nthis:\n  \\<infinity> \\<notin> {..<n}\n\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "have \"{i. enat i < n} = {i. enat i \\<in> {..< n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. enat i < n} = {i. enat i \\<in> {..<n}}", "by simp"], ["proof (state)\nthis:\n  {i. enat i < n} = {i. enat i \\<in> {..<n}}\n\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "also"], ["proof (state)\nthis:\n  {i. enat i < n} = {i. enat i \\<in> {..<n}}\n\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "have \"\\<dots> = the_enat ` {..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. enat i \\<in> {..<n}} = the_enat ` {..<n}", "using enat_Collect 1"], ["proof (prove)\nusing this:\n  \\<infinity> \\<notin> ?A \\<Longrightarrow>\n  {i. enat i \\<in> ?A} = the_enat ` ?A\n  \\<infinity> \\<notin> {..<n}\n\ngoal (1 subgoal):\n 1. {i. enat i \\<in> {..<n}} = the_enat ` {..<n}", "by this"], ["proof (state)\nthis:\n  {i. enat i \\<in> {..<n}} = the_enat ` {..<n}\n\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "finally"], ["proof (chain)\npicking this:\n  {i. enat i < n} = the_enat ` {..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  {i. enat i < n} = the_enat ` {..<n}\n\ngoal (1 subgoal):\n 1. {i. enat i < n} = the_enat ` {..<n}", "by this"], ["proof (state)\nthis:\n  {i. enat i < n} = the_enat ` {..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation set :: (type) esize_ccpo\n  begin"], ["", "function esize_set where \"finite A \\<Longrightarrow> esize A = enat (card A)\" | \"infinite A \\<Longrightarrow> esize A = \\<infinity>\""], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>finite A; x = A\\<rbrakk> \\<Longrightarrow> P;\n        \\<And>A.\n           \\<lbrakk>infinite A; x = A\\<rbrakk> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>A Aa.\n       \\<lbrakk>finite A; finite Aa; A = Aa\\<rbrakk>\n       \\<Longrightarrow> enat (card A) = enat (card Aa)\n 3. \\<And>A Aa.\n       \\<lbrakk>finite A; infinite Aa; A = Aa\\<rbrakk>\n       \\<Longrightarrow> enat (card A) = \\<infinity>\n 4. \\<And>A Aa.\n       \\<lbrakk>infinite A; infinite Aa; A = Aa\\<rbrakk>\n       \\<Longrightarrow> \\<infinity> = \\<infinity>", "by auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All local.esize_set_dom", "by lexicographic_order"], ["", "lemma esize_iff_empty[iff]: \"esize A = 0 \\<longleftrightarrow> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (esize A = 0) = (A = {})", "by (cases \"finite A\", auto)"], ["", "lemma esize_iff_infinite[iff]: \"esize A = \\<infinity> \\<longleftrightarrow> infinite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (esize A = \\<infinity>) = infinite A", "by force"], ["", "lemma esize_singleton[simp]: \"esize {a} = eSuc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {a} = eSuc 0", "by simp"], ["", "lemma esize_infinite_enat[dest, simp]: \"infinite A \\<Longrightarrow> enat k < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> enat k < esize A", "by force"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a set, esize_ccpo_class)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       esize x \\<noteq> \\<infinity> \\<Longrightarrow>\n       finite {y. y \\<subseteq> x}\n 2. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 3. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "fix A :: \"'a set\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       esize x \\<noteq> \\<infinity> \\<Longrightarrow>\n       finite {y. y \\<subseteq> x}\n 2. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 3. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "assume 1: \"esize A \\<noteq> \\<infinity>\""], ["proof (state)\nthis:\n  esize A \\<noteq> \\<infinity>\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       esize x \\<noteq> \\<infinity> \\<Longrightarrow>\n       finite {y. y \\<subseteq> x}\n 2. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 3. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "show \"finite {B. B \\<subseteq> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {B. B \\<subseteq> A}", "using 1"], ["proof (prove)\nusing this:\n  esize A \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. finite {B. B \\<subseteq> A}", "by simp"], ["proof (state)\nthis:\n  finite {B. B \\<subseteq> A}\n\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 2. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 2. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "fix A B :: \"'a set\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 2. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "assume 1: \"A \\<subseteq> B\""], ["proof (state)\nthis:\n  A \\<subseteq> B\n\ngoal (2 subgoals):\n 1. \\<And>x y. x \\<subseteq> y \\<Longrightarrow> esize x \\<le> esize y\n 2. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "show \"esize A \\<le> esize B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize A \\<le> esize B", "proof (cases \"finite B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite B \\<Longrightarrow> esize A \\<le> esize B\n 2. infinite B \\<Longrightarrow> esize A \\<le> esize B", "case False"], ["proof (state)\nthis:\n  infinite B\n\ngoal (2 subgoals):\n 1. finite B \\<Longrightarrow> esize A \\<le> esize B\n 2. infinite B \\<Longrightarrow> esize A \\<le> esize B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize A \\<le> esize B", "using False"], ["proof (prove)\nusing this:\n  infinite B\n\ngoal (1 subgoal):\n 1. esize A \\<le> esize B", "by auto"], ["proof (state)\nthis:\n  esize A \\<le> esize B\n\ngoal (1 subgoal):\n 1. finite B \\<Longrightarrow> esize A \\<le> esize B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite B \\<Longrightarrow> esize A \\<le> esize B", "case True"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. finite B \\<Longrightarrow> esize A \\<le> esize B", "have 2: \"finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "using True 1"], ["proof (prove)\nusing this:\n  finite B\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. finite A", "by auto"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite B \\<Longrightarrow> esize A \\<le> esize B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize A \\<le> esize B", "using card_mono True 1 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n  finite B\n  A \\<subseteq> B\n  finite A\n\ngoal (1 subgoal):\n 1. esize A \\<le> esize B", "by auto"], ["proof (state)\nthis:\n  esize A \\<le> esize B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  esize A \\<le> esize B\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "fix A B :: \"'a set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "assume 1: \"esize A \\<noteq> \\<infinity>\" \"A \\<subset> B\""], ["proof (state)\nthis:\n  esize A \\<noteq> \\<infinity>\n  A \\<subset> B\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>esize x \\<noteq> \\<infinity>; x \\<subset> y\\<rbrakk>\n       \\<Longrightarrow> esize x < esize y", "show \"esize A < esize B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize A < esize B", "using psubset_card_mono 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  esize A \\<noteq> \\<infinity>\n  A \\<subset> B\n\ngoal (1 subgoal):\n 1. esize A < esize B", "by (cases \"finite B\", auto)"], ["proof (state)\nthis:\n  esize A < esize B\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma esize_image[simp, intro]:\n    assumes \"inj_on f A\"\n    shows \"esize (f ` A) = esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (f ` A) = esize A", "using card_image finite_imageD assms"], ["proof (prove)\nusing this:\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n  \\<lbrakk>finite (?f ` ?A); inj_on ?f ?A\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n  inj_on f A\n\ngoal (1 subgoal):\n 1. esize (f ` A) = esize A", "by (cases \"finite A\", auto)"], ["", "lemma esize_insert1[simp]: \"a \\<notin> A \\<Longrightarrow> esize (insert a A) = eSuc (esize A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow> esize (insert a A) = eSuc (esize A)", "by (cases \"finite A\", force+)"], ["", "lemma esize_insert2[simp]: \"a \\<in> A \\<Longrightarrow> esize (insert a A) = esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> esize (insert a A) = esize A", "using insert_absorb"], ["proof (prove)\nusing this:\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> esize (insert a A) = esize A", "by metis"], ["", "lemma esize_remove1[simp]: \"a \\<notin> A \\<Longrightarrow> esize (A - {a}) = esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> A \\<Longrightarrow> esize (A - {a}) = esize A", "by (cases \"finite A\", force+)"], ["", "lemma esize_remove2[simp]: \"a \\<in> A \\<Longrightarrow> esize (A - {a}) = epred (esize A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> esize (A - {a}) = epred (esize A)", "by (cases \"finite A\", force+)"], ["", "lemma esize_union_disjoint[simp]:\n    assumes \"A \\<inter> B = {}\"\n    shows \"esize (A \\<union> B) = esize A + esize B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (A \\<union> B) = esize A + esize B", "proof (cases \"finite (A \\<union> B)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B\n 2. infinite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B", "case True"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n\ngoal (2 subgoals):\n 1. finite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B\n 2. infinite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (A \\<union> B) = esize A + esize B", "using card_Un_disjoint assms True"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; finite ?B; ?A \\<inter> ?B = {}\\<rbrakk>\n  \\<Longrightarrow> card (?A \\<union> ?B) = card ?A + card ?B\n  A \\<inter> B = {}\n  finite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. esize (A \\<union> B) = esize A + esize B", "by auto"], ["proof (state)\nthis:\n  esize (A \\<union> B) = esize A + esize B\n\ngoal (1 subgoal):\n 1. infinite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B", "case False"], ["proof (state)\nthis:\n  infinite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. infinite (A \\<union> B) \\<Longrightarrow>\n    esize (A \\<union> B) = esize A + esize B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (A \\<union> B) = esize A + esize B", "using False"], ["proof (prove)\nusing this:\n  infinite (A \\<union> B)\n\ngoal (1 subgoal):\n 1. esize (A \\<union> B) = esize A + esize B", "by (cases \"finite A\", auto)"], ["proof (state)\nthis:\n  esize (A \\<union> B) = esize A + esize B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma esize_lessThan[simp]: \"esize {..< n} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {..<n} = n", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>nat. n = enat nat \\<Longrightarrow> esize {..<n} = n\n 2. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "case (enat k)"], ["proof (state)\nthis:\n  n = enat k\n\ngoal (2 subgoals):\n 1. \\<And>nat. n = enat nat \\<Longrightarrow> esize {..<n} = n\n 2. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "have 1: \"finite {..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..<n}", "unfolding enat"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..<enat k}", "by (metis finite_lessThan_enat_iff not_enat_eq)"], ["proof (state)\nthis:\n  finite {..<n}\n\ngoal (2 subgoals):\n 1. \\<And>nat. n = enat nat \\<Longrightarrow> esize {..<n} = n\n 2. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {..<n} = n", "using 1"], ["proof (prove)\nusing this:\n  finite {..<n}\n\ngoal (1 subgoal):\n 1. esize {..<n} = n", "unfolding enat"], ["proof (prove)\nusing this:\n  finite {..<enat k}\n\ngoal (1 subgoal):\n 1. esize {..<enat k} = enat k", "by simp"], ["proof (state)\nthis:\n  esize {..<n} = n\n\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "case (infinity)"], ["proof (state)\nthis:\n  n = \\<infinity>\n\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "have 1: \"infinite {..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {..<n}", "unfolding infinity"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {..<\\<infinity>}", "using infinite_lessThan_infty"], ["proof (prove)\nusing this:\n  infinite {..<\\<infinity>}\n\ngoal (1 subgoal):\n 1. infinite {..<\\<infinity>}", "by simp"], ["proof (state)\nthis:\n  infinite {..<n}\n\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..<n} = n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {..<n} = n", "using 1"], ["proof (prove)\nusing this:\n  infinite {..<n}\n\ngoal (1 subgoal):\n 1. esize {..<n} = n", "unfolding infinity"], ["proof (prove)\nusing this:\n  infinite {..<\\<infinity>}\n\ngoal (1 subgoal):\n 1. esize {..<\\<infinity>} = \\<infinity>", "by simp"], ["proof (state)\nthis:\n  esize {..<n} = n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma esize_atMost[simp]: \"esize {.. n} = eSuc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {..n} = eSuc n", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>nat. n = enat nat \\<Longrightarrow> esize {..n} = eSuc n\n 2. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "case (enat k)"], ["proof (state)\nthis:\n  n = enat k\n\ngoal (2 subgoals):\n 1. \\<And>nat. n = enat nat \\<Longrightarrow> esize {..n} = eSuc n\n 2. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "have 1: \"finite {.. n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..n}", "unfolding enat"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {..enat k}", "by (metis atMost_iff finite_enat_bounded)"], ["proof (state)\nthis:\n  finite {..n}\n\ngoal (2 subgoals):\n 1. \\<And>nat. n = enat nat \\<Longrightarrow> esize {..n} = eSuc n\n 2. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {..n} = eSuc n", "using 1"], ["proof (prove)\nusing this:\n  finite {..n}\n\ngoal (1 subgoal):\n 1. esize {..n} = eSuc n", "unfolding enat"], ["proof (prove)\nusing this:\n  finite {..enat k}\n\ngoal (1 subgoal):\n 1. esize {..enat k} = eSuc (enat k)", "by simp"], ["proof (state)\nthis:\n  esize {..n} = eSuc n\n\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "case (infinity)"], ["proof (state)\nthis:\n  n = \\<infinity>\n\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "have 1: \"infinite {.. n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {..n}", "unfolding infinity"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {..\\<infinity>}", "by (metis atMost_iff enat_ord_code(3) infinite_lessThan_infty infinite_super subsetI)"], ["proof (state)\nthis:\n  infinite {..n}\n\ngoal (1 subgoal):\n 1. n = \\<infinity> \\<Longrightarrow> esize {..n} = eSuc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {..n} = eSuc n", "using 1"], ["proof (prove)\nusing this:\n  infinite {..n}\n\ngoal (1 subgoal):\n 1. esize {..n} = eSuc n", "unfolding infinity"], ["proof (prove)\nusing this:\n  infinite {..\\<infinity>}\n\ngoal (1 subgoal):\n 1. esize {..\\<infinity>} = eSuc \\<infinity>", "by simp"], ["proof (state)\nthis:\n  esize {..n} = eSuc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_eSuc[simp]:\n    assumes \"A \\<noteq> {}\"\n    shows \"least (eSuc ` A) = eSuc (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (eSuc ` A) = eSuc (least A)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "obtain k where 10: \"k \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. k \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>k. k \\<in> A \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  k \\<in> A\n\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "have 11: \"eSuc k \\<in> eSuc ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSuc k \\<in> eSuc ` A", "using 10"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. eSuc k \\<in> eSuc ` A", "by auto"], ["proof (state)\nthis:\n  eSuc k \\<in> eSuc ` A\n\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "have 20: \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using 10 LeastI"], ["proof (prove)\nusing this:\n  k \\<in> A\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by metis"], ["proof (state)\nthis:\n  least A \\<in> A\n\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "have 21: \"least (eSuc ` A) \\<in> eSuc ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (eSuc ` A) \\<in> eSuc ` A", "using 11 LeastI"], ["proof (prove)\nusing this:\n  eSuc k \\<in> eSuc ` A\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n\ngoal (1 subgoal):\n 1. least (eSuc ` A) \\<in> eSuc ` A", "by metis"], ["proof (state)\nthis:\n  least (eSuc ` A) \\<in> eSuc ` A\n\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "have 30: \"\\<And> l. l \\<in> A \\<Longrightarrow> least A \\<le> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> A \\<Longrightarrow> least A \\<le> l", "using 10 Least_le"], ["proof (prove)\nusing this:\n  k \\<in> A\n  ?P ?k \\<Longrightarrow> (LEAST x. ?P x) \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> A \\<Longrightarrow> least A \\<le> l", "by metis"], ["proof (state)\nthis:\n  ?l \\<in> A \\<Longrightarrow> least A \\<le> ?l\n\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "have 31: \"\\<And> l. l \\<in> eSuc ` A \\<Longrightarrow> least (eSuc ` A) \\<le> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> eSuc ` A \\<Longrightarrow> least (eSuc ` A) \\<le> l", "using 11 Least_le"], ["proof (prove)\nusing this:\n  eSuc k \\<in> eSuc ` A\n  ?P ?k \\<Longrightarrow> (LEAST x. ?P x) \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> eSuc ` A \\<Longrightarrow> least (eSuc ` A) \\<le> l", "by metis"], ["proof (state)\nthis:\n  ?l \\<in> eSuc ` A \\<Longrightarrow> least (eSuc ` A) \\<le> ?l\n\ngoal (2 subgoals):\n 1. least (eSuc ` A) \\<le> eSuc (least A)\n 2. eSuc (least A) \\<le> least (eSuc ` A)", "show \"least (eSuc ` A) \\<le> eSuc (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (eSuc ` A) \\<le> eSuc (least A)", "using 20 31"], ["proof (prove)\nusing this:\n  least A \\<in> A\n  ?l \\<in> eSuc ` A \\<Longrightarrow> least (eSuc ` A) \\<le> ?l\n\ngoal (1 subgoal):\n 1. least (eSuc ` A) \\<le> eSuc (least A)", "by auto"], ["proof (state)\nthis:\n  least (eSuc ` A) \\<le> eSuc (least A)\n\ngoal (1 subgoal):\n 1. eSuc (least A) \\<le> least (eSuc ` A)", "show \"eSuc (least A) \\<le> least (eSuc ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSuc (least A) \\<le> least (eSuc ` A)", "using 21 30"], ["proof (prove)\nusing this:\n  least (eSuc ` A) \\<in> eSuc ` A\n  ?l \\<in> A \\<Longrightarrow> least A \\<le> ?l\n\ngoal (1 subgoal):\n 1. eSuc (least A) \\<le> least (eSuc ` A)", "by auto"], ["proof (state)\nthis:\n  eSuc (least A) \\<le> least (eSuc ` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Inf_enat_eSuc[simp]: \"\\<Sqinter> (eSuc ` A) = eSuc (\\<Sqinter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> (eSuc ` A) = eSuc (\\<Sqinter> A)", "unfolding Inf_enat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if eSuc ` A = {} then \\<infinity> else least (eSuc ` A)) =\n    eSuc (if A = {} then \\<infinity> else least A)", "by simp"], ["", "definition lift :: \"nat set \\<Rightarrow> nat set\"\n    where \"lift A \\<equiv> insert 0 (Suc ` A)\""], ["", "lemma liftI_0[intro, simp]: \"0 \\<in> lift A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> lift A", "unfolding lift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> insert 0 (Suc ` A)", "by auto"], ["", "lemma liftI_Suc[intro]: \"a \\<in> A \\<Longrightarrow> Suc a \\<in> lift A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> Suc a \\<in> lift A", "unfolding lift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A \\<Longrightarrow> Suc a \\<in> insert 0 (Suc ` A)", "by auto"], ["", "lemma liftE[elim]:\n    assumes \"b \\<in> lift A\"\n    obtains (0) \"b = 0\" | (Suc) a where \"b = Suc a\" \"a \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b = 0 \\<Longrightarrow> thesis;\n     \\<And>a.\n        \\<lbrakk>b = Suc a; a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  b \\<in> lift A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = 0 \\<Longrightarrow> thesis;\n     \\<And>a.\n        \\<lbrakk>b = Suc a; a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding lift_def"], ["proof (prove)\nusing this:\n  b \\<in> insert 0 (Suc ` A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b = 0 \\<Longrightarrow> thesis;\n     \\<And>a.\n        \\<lbrakk>b = Suc a; a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma lift_esize[simp]: \"esize (lift A) = eSuc (esize A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (lift A) = eSuc (esize A)", "unfolding lift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (insert 0 (Suc ` A)) = eSuc (esize A)", "by auto"], ["", "lemma lift_least[simp]: \"least (lift A) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (lift A) = 0", "unfolding lift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. least (insert 0 (Suc ` A)) = 0", "by auto"], ["", "primrec nth_least :: \"'a set \\<Rightarrow> nat \\<Rightarrow> 'a :: wellorder\"\n    where \"nth_least A 0 = least A\" | \"nth_least A (Suc n) = nth_least (A - {least A}) n\""], ["", "lemma nth_least_wellformed[intro?, simp]:\n    assumes \"enat n < esize A\"\n    shows \"nth_least A n \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. nth_least A n \\<in> A", "proof (induct n arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A. enat 0 < esize A \\<Longrightarrow> nth_least A 0 \\<in> A\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "case 0"], ["proof (state)\nthis:\n  enat 0 < esize A\n\ngoal (2 subgoals):\n 1. \\<And>A. enat 0 < esize A \\<Longrightarrow> nth_least A 0 \\<in> A\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A 0 \\<in> A", "using 0"], ["proof (prove)\nusing this:\n  enat 0 < esize A\n\ngoal (1 subgoal):\n 1. nth_least A 0 \\<in> A", "by simp"], ["proof (state)\nthis:\n  nth_least A 0 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "case (Suc n)"], ["proof (state)\nthis:\n  enat n < esize ?A \\<Longrightarrow> nth_least ?A n \\<in> ?A\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "have 1: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "have 2: \"enat n < esize (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "using Suc(2) 1"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "by simp"], ["proof (state)\nthis:\n  enat n < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "have 3: \"nth_least (A - {least A}) n \\<in> A - {least A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) n \\<in> A - {least A}", "using Suc(1) 2"], ["proof (prove)\nusing this:\n  enat n < esize ?A \\<Longrightarrow> nth_least ?A n \\<in> ?A\n  enat n < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) n \\<in> A - {least A}", "by this"], ["proof (state)\nthis:\n  nth_least (A - {least A}) n \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow> nth_least A n \\<in> A;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) \\<in> A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (Suc n) \\<in> A", "using 3"], ["proof (prove)\nusing this:\n  nth_least (A - {least A}) n \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. nth_least A (Suc n) \\<in> A", "by simp"], ["proof (state)\nthis:\n  nth_least A (Suc n) \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_wellformed[intro?, simp]:\n    fixes k :: \"'a :: wellorder\"\n    assumes \"k \\<in> A\"\n    shows \"enat (card {i \\<in> A. i < k}) < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A\n 2. infinite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A\n 2. infinite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "using False"], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "by simp"], ["proof (state)\nthis:\n  enat (card {i \\<in> A. i < k}) < esize A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A", "have 1: \"esize {i \\<in> A. i < k} < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {i \\<in> A. i < k} < esize A", "using True assms"], ["proof (prove)\nusing this:\n  finite A\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. esize {i \\<in> A. i < k} < esize A", "by fastforce"], ["proof (state)\nthis:\n  esize {i \\<in> A. i < k} < esize A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {i \\<in> A. i < k}) < esize A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "using True 1"], ["proof (prove)\nusing this:\n  finite A\n  esize {i \\<in> A. i < k} < esize A\n\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "by simp"], ["proof (state)\nthis:\n  enat (card {i \\<in> A. i < k}) < esize A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_strict_mono:\n    assumes \"enat l < esize A\" \"k < l\"\n    shows \"nth_least A k < nth_least A l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A k < nth_least A l", "using assms"], ["proof (prove)\nusing this:\n  enat l < esize A\n  k < l\n\ngoal (1 subgoal):\n 1. nth_least A k < nth_least A l", "proof (induct k arbitrary: A l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A l.\n       \\<lbrakk>enat l < esize A; 0 < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 < nth_least A l\n 2. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "case 0"], ["proof (state)\nthis:\n  enat l < esize A\n  0 < l\n\ngoal (2 subgoals):\n 1. \\<And>A l.\n       \\<lbrakk>enat l < esize A; 0 < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 < nth_least A l\n 2. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "obtain l' where 1: \"l = Suc l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l'. l = Suc l' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using 0(2)"], ["proof (prove)\nusing this:\n  0 < l\n\ngoal (1 subgoal):\n 1. (\\<And>l'. l = Suc l' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis gr0_conv_Suc)"], ["proof (state)\nthis:\n  l = Suc l'\n\ngoal (2 subgoals):\n 1. \\<And>A l.\n       \\<lbrakk>enat l < esize A; 0 < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 < nth_least A l\n 2. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "have 2: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using 0(1)"], ["proof (prove)\nusing this:\n  enat l < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>A l.\n       \\<lbrakk>enat l < esize A; 0 < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 < nth_least A l\n 2. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "have 3: \"enat l' < esize (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat l' < esize (A - {least A})", "using 0(1) 2"], ["proof (prove)\nusing this:\n  enat l < esize A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat l' < esize (A - {least A})", "unfolding 1"], ["proof (prove)\nusing this:\n  enat (Suc l') < esize A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat l' < esize (A - {least A})", "by simp"], ["proof (state)\nthis:\n  enat l' < esize (A - {least A})\n\ngoal (2 subgoals):\n 1. \\<And>A l.\n       \\<lbrakk>enat l < esize A; 0 < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 < nth_least A l\n 2. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "have 4: \"nth_least (A - {least A}) l' \\<in> A - {least A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) l' \\<in> A - {least A}", "using 3"], ["proof (prove)\nusing this:\n  enat l' < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) l' \\<in> A - {least A}", "by rule"], ["proof (state)\nthis:\n  nth_least (A - {least A}) l' \\<in> A - {least A}\n\ngoal (2 subgoals):\n 1. \\<And>A l.\n       \\<lbrakk>enat l < esize A; 0 < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 < nth_least A l\n 2. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A 0 < nth_least A l", "using 1 4"], ["proof (prove)\nusing this:\n  l = Suc l'\n  nth_least (A - {least A}) l' \\<in> A - {least A}\n\ngoal (1 subgoal):\n 1. nth_least A 0 < nth_least A l", "by (auto intro: le_neq_trans)"], ["proof (state)\nthis:\n  nth_least A 0 < nth_least A l\n\ngoal (1 subgoal):\n 1. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>enat ?l < esize ?A; k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A k < nth_least ?A ?l\n  enat l < esize A\n  Suc k < l\n\ngoal (1 subgoal):\n 1. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "obtain l' where 1: \"l = Suc l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l'. l = Suc l' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using Suc(3)"], ["proof (prove)\nusing this:\n  Suc k < l\n\ngoal (1 subgoal):\n 1. (\\<And>l'. l = Suc l' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis Suc_lessE)"], ["proof (state)\nthis:\n  l = Suc l'\n\ngoal (1 subgoal):\n 1. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "have 2: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat l < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>k A l.\n       \\<lbrakk>\\<And>A l.\n                   \\<lbrakk>enat l < esize A; k < l\\<rbrakk>\n                   \\<Longrightarrow> nth_least A k < nth_least A l;\n        enat l < esize A; Suc k < l\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc k) < nth_least A l", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (Suc k) < nth_least A l", "using Suc 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat ?l < esize ?A; k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A k < nth_least ?A ?l\n  enat l < esize A\n  Suc k < l\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least A (Suc k) < nth_least A l", "unfolding 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat ?l < esize ?A; k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A k < nth_least ?A ?l\n  enat (Suc l') < esize A\n  Suc k < Suc l'\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least A (Suc k) < nth_least A (Suc l')", "by simp"], ["proof (state)\nthis:\n  nth_least A (Suc k) < nth_least A l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_mono[intro, simp]:\n    assumes \"enat l < esize A\" \"k \\<le> l\"\n    shows \"nth_least A k \\<le> nth_least A l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A k \\<le> nth_least A l", "using nth_least_strict_mono le_less assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat ?l < esize ?A; ?k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A ?k < nth_least ?A ?l\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n  enat l < esize A\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. nth_least A k \\<le> nth_least A l", "by metis"], ["", "lemma card_nth_least[simp]:\n    assumes \"enat n < esize A\"\n    shows \"card {k \\<in> A. k < nth_least A n} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A n} = n", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A n} = n", "proof (induct n arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       enat 0 < esize A \\<Longrightarrow>\n       card {k \\<in> A. k < nth_least A 0} = 0\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "case 0"], ["proof (state)\nthis:\n  enat 0 < esize A\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       enat 0 < esize A \\<Longrightarrow>\n       card {k \\<in> A. k < nth_least A 0} = 0\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 1: \"{k \\<in> A. k < least A} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k \\<in> A. k < least A} = {}", "using least_not_less"], ["proof (prove)\nusing this:\n  ?k < least ?A \\<Longrightarrow> ?k \\<notin> ?A\n\ngoal (1 subgoal):\n 1. {k \\<in> A. k < least A} = {}", "by auto"], ["proof (state)\nthis:\n  {k \\<in> A. k < least A} = {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       enat 0 < esize A \\<Longrightarrow>\n       card {k \\<in> A. k < nth_least A 0} = 0\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A 0} = 0", "using nth_least.simps(1) card.empty 1"], ["proof (prove)\nusing this:\n  nth_least ?A 0 = least ?A\n  card {} = 0\n  {k \\<in> A. k < least A} = {}\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A 0} = 0", "by metis"], ["proof (state)\nthis:\n  card {k \\<in> A. k < nth_least A 0} = 0\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "case (Suc n)"], ["proof (state)\nthis:\n  enat n < esize ?A \\<Longrightarrow>\n  card {k \\<in> ?A. k < nth_least ?A n} = n\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 1: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 2: \"enat n < esize (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "using Suc(2) 1"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "by simp"], ["proof (state)\nthis:\n  enat n < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 3: \"nth_least A 0 < nth_least A (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A 0 < nth_least A (Suc n)", "using nth_least_strict_mono Suc(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat ?l < esize ?A; ?k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A ?k < nth_least ?A ?l\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. nth_least A 0 < nth_least A (Suc n)", "by blast"], ["proof (state)\nthis:\n  nth_least A 0 < nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 4: \"{k \\<in> A. k < nth_least A (Suc n)} =\n      {least A} \\<union> {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k \\<in> A. k < nth_least A (Suc n)} =\n    {least A} \\<union>\n    {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}", "using 1 3"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  nth_least A 0 < nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. {k \\<in> A. k < nth_least A (Suc n)} =\n    {least A} \\<union>\n    {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}", "by auto"], ["proof (state)\nthis:\n  {k \\<in> A. k < nth_least A (Suc n)} =\n  {least A} \\<union>\n  {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 5: \"card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} = n", "using Suc(1) 2"], ["proof (prove)\nusing this:\n  enat n < esize ?A \\<Longrightarrow>\n  card {k \\<in> ?A. k < nth_least ?A n} = n\n  enat n < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} = n", "by this"], ["proof (state)\nthis:\n  card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} = n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have 6: \"finite {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}", "using 5 Collect_empty_eq card.infinite infinite_imp_nonempty least_not_less nth_least.simps(1)"], ["proof (prove)\nusing this:\n  card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} = n\n  (Collect ?P = {}) = (\\<forall>x. \\<not> ?P x)\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  infinite ?S \\<Longrightarrow> ?S \\<noteq> {}\n  ?k < least ?A \\<Longrightarrow> ?k \\<notin> ?A\n  nth_least ?A 0 = least ?A\n\ngoal (1 subgoal):\n 1. finite {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}", "by (metis (no_types, lifting))"], ["proof (state)\nthis:\n  finite {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have \"card {k \\<in> A. k < nth_least A (Suc n)} =\n      card ({least A} \\<union> {k \\<in> A - {least A}. k < nth_least (A - {least A}) n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A (Suc n)} =\n    card\n     ({least A} \\<union>\n      {k \\<in> A - {least A}. k < nth_least (A - {least A}) n})", "using 4"], ["proof (prove)\nusing this:\n  {k \\<in> A. k < nth_least A (Suc n)} =\n  {least A} \\<union>\n  {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A (Suc n)} =\n    card\n     ({least A} \\<union>\n      {k \\<in> A - {least A}. k < nth_least (A - {least A}) n})", "by simp"], ["proof (state)\nthis:\n  card {k \\<in> A. k < nth_least A (Suc n)} =\n  card\n   ({least A} \\<union>\n    {k \\<in> A - {least A}. k < nth_least (A - {least A}) n})\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "also"], ["proof (state)\nthis:\n  card {k \\<in> A. k < nth_least A (Suc n)} =\n  card\n   ({least A} \\<union>\n    {k \\<in> A - {least A}. k < nth_least (A - {least A}) n})\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have \"\\<dots> = card {least A} + card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({least A} \\<union>\n      {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}) =\n    card {least A} +\n    card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}", "using 6"], ["proof (prove)\nusing this:\n  finite {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\n\ngoal (1 subgoal):\n 1. card\n     ({least A} \\<union>\n      {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}) =\n    card {least A} +\n    card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}", "by simp"], ["proof (state)\nthis:\n  card\n   ({least A} \\<union>\n    {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}) =\n  card {least A} +\n  card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "also"], ["proof (state)\nthis:\n  card\n   ({least A} \\<union>\n    {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}) =\n  card {least A} +\n  card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "have \"\\<dots> = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {least A} +\n    card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} =\n    Suc n", "using 5"], ["proof (prove)\nusing this:\n  card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} = n\n\ngoal (1 subgoal):\n 1. card {least A} +\n    card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} =\n    Suc n", "by simp"], ["proof (state)\nthis:\n  card {least A} +\n  card {k \\<in> A - {least A}. k < nth_least (A - {least A}) n} =\n  Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   card {k \\<in> A. k < nth_least A n} = n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "finally"], ["proof (chain)\npicking this:\n  card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "show ?case"], ["proof (prove)\nusing this:\n  card {k \\<in> A. k < nth_least A (Suc n)} = Suc n\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A (Suc n)} = Suc n", "by this"], ["proof (state)\nthis:\n  card {k \\<in> A. k < nth_least A (Suc n)} = Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_nth_least_le[simp]:\n    assumes \"enat n < esize A\"\n    shows \"card {k \\<in> A. k \\<le> nth_least A n} = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "have 1: \"{k \\<in> A. k \\<le> nth_least A n} = {nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k \\<in> A. k \\<le> nth_least A n} =\n    {nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. {k \\<in> A. k \\<le> nth_least A n} =\n    {nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}", "by auto"], ["proof (state)\nthis:\n  {k \\<in> A. k \\<le> nth_least A n} =\n  {nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "have 2: \"card {k \\<in> A. k < nth_least A n} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A n} = n", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least A n} = n", "by simp"], ["proof (state)\nthis:\n  card {k \\<in> A. k < nth_least A n} = n\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "have 3: \"finite {k \\<in> A. k < nth_least A n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {k \\<in> A. k < nth_least A n}", "using 2 Collect_empty_eq card.infinite infinite_imp_nonempty least_not_less nth_least.simps(1)"], ["proof (prove)\nusing this:\n  card {k \\<in> A. k < nth_least A n} = n\n  (Collect ?P = {}) = (\\<forall>x. \\<not> ?P x)\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  infinite ?S \\<Longrightarrow> ?S \\<noteq> {}\n  ?k < least ?A \\<Longrightarrow> ?k \\<notin> ?A\n  nth_least ?A 0 = least ?A\n\ngoal (1 subgoal):\n 1. finite {k \\<in> A. k < nth_least A n}", "by (metis (no_types, lifting))"], ["proof (state)\nthis:\n  finite {k \\<in> A. k < nth_least A n}\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "have \"card {k \\<in> A. k \\<le> nth_least A n} = card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} =\n    card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n})", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}) =\n    card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n})", "by rule"], ["proof (state)\nthis:\n  card {k \\<in> A. k \\<le> nth_least A n} =\n  card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n})\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "also"], ["proof (state)\nthis:\n  card {k \\<in> A. k \\<le> nth_least A n} =\n  card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n})\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "have \"\\<dots> = card {nth_least A n} + card {k \\<in> A. k < nth_least A n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}) =\n    card {nth_least A n} + card {k \\<in> A. k < nth_least A n}", "using 3"], ["proof (prove)\nusing this:\n  finite {k \\<in> A. k < nth_least A n}\n\ngoal (1 subgoal):\n 1. card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}) =\n    card {nth_least A n} + card {k \\<in> A. k < nth_least A n}", "by simp"], ["proof (state)\nthis:\n  card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}) =\n  card {nth_least A n} + card {k \\<in> A. k < nth_least A n}\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "also"], ["proof (state)\nthis:\n  card ({nth_least A n} \\<union> {k \\<in> A. k < nth_least A n}) =\n  card {nth_least A n} + card {k \\<in> A. k < nth_least A n}\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "have \"\\<dots> = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {nth_least A n} + card {k \\<in> A. k < nth_least A n} = Suc n", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. card {nth_least A n} + card {k \\<in> A. k < nth_least A n} = Suc n", "by simp"], ["proof (state)\nthis:\n  card {nth_least A n} + card {k \\<in> A. k < nth_least A n} = Suc n\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "finally"], ["proof (chain)\npicking this:\n  card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {k \\<in> A. k \\<le> nth_least A n} = Suc n\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k \\<le> nth_least A n} = Suc n", "by this"], ["proof (state)\nthis:\n  card {k \\<in> A. k \\<le> nth_least A n} = Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_card:\n    fixes k :: nat\n    assumes \"k \\<in> A\"\n    shows \"nth_least A (card {i \\<in> A. i < k}) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card {i \\<in> A. i < k}) = k", "proof (rule nat_set_card_equality_less)"], ["proof (state)\ngoal (3 subgoals):\n 1. nth_least A (card {i \\<in> A. i < k}) \\<in> ?A\n 2. k \\<in> ?A\n 3. card {z \\<in> ?A. z < nth_least A (card {i \\<in> A. i < k})} =\n    card {z \\<in> ?A. z < k}", "have 1: \"enat (card {l \\<in> A. l < k}) < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {l \\<in> A. l < k}) < esize A", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A\n 2. infinite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A\n 2. infinite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {l \\<in> A. l < k}) < esize A", "using False"], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. enat (card {l \\<in> A. l < k}) < esize A", "by simp"], ["proof (state)\nthis:\n  enat (card {l \\<in> A. l < k}) < esize A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "have 1: \"{l \\<in> A. l < k} \\<subset> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> A. l < k} \\<subset> A", "using assms"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. {l \\<in> A. l < k} \\<subset> A", "by blast"], ["proof (state)\nthis:\n  {l \\<in> A. l < k} \\<subset> A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "have 2: \"card {l \\<in> A. l < k} < card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {l \\<in> A. l < k} < card A", "using psubset_card_mono True 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B; ?A \\<subset> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A < card ?B\n  finite A\n  {l \\<in> A. l < k} \\<subset> A\n\ngoal (1 subgoal):\n 1. card {l \\<in> A. l < k} < card A", "by this"], ["proof (state)\nthis:\n  card {l \\<in> A. l < k} < card A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> enat (card {l \\<in> A. l < k}) < esize A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {l \\<in> A. l < k}) < esize A", "using True 2"], ["proof (prove)\nusing this:\n  finite A\n  card {l \\<in> A. l < k} < card A\n\ngoal (1 subgoal):\n 1. enat (card {l \\<in> A. l < k}) < esize A", "by simp"], ["proof (state)\nthis:\n  enat (card {l \\<in> A. l < k}) < esize A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat (card {l \\<in> A. l < k}) < esize A\n\ngoal (3 subgoals):\n 1. nth_least A (card {i \\<in> A. i < k}) \\<in> ?A\n 2. k \\<in> ?A\n 3. card {z \\<in> ?A. z < nth_least A (card {i \\<in> A. i < k})} =\n    card {z \\<in> ?A. z < k}", "show \"nth_least A (card {l \\<in> A. l < k}) \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card {l \\<in> A. l < k}) \\<in> A", "using 1"], ["proof (prove)\nusing this:\n  enat (card {l \\<in> A. l < k}) < esize A\n\ngoal (1 subgoal):\n 1. nth_least A (card {l \\<in> A. l < k}) \\<in> A", "by rule"], ["proof (state)\nthis:\n  nth_least A (card {l \\<in> A. l < k}) \\<in> A\n\ngoal (2 subgoals):\n 1. k \\<in> A\n 2. card {z \\<in> A. z < nth_least A (card {i \\<in> A. i < k})} =\n    card {z \\<in> A. z < k}", "show \"k \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. k \\<in> A", "by this"], ["proof (state)\nthis:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < nth_least A (card {i \\<in> A. i < k})} =\n    card {z \\<in> A. z < k}", "show \"card {z \\<in> A. z < nth_least A (card {i \\<in> A. i < k})} = card {z \\<in> A. z < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < nth_least A (card {i \\<in> A. i < k})} =\n    card {z \\<in> A. z < k}", "using 1"], ["proof (prove)\nusing this:\n  enat (card {l \\<in> A. l < k}) < esize A\n\ngoal (1 subgoal):\n 1. card {z \\<in> A. z < nth_least A (card {i \\<in> A. i < k})} =\n    card {z \\<in> A. z < k}", "by simp"], ["proof (state)\nthis:\n  card {z \\<in> A. z < nth_least A (card {i \\<in> A. i < k})} =\n  card {z \\<in> A. z < k}\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation nth_least:\n    bounded_function_pair \"{i. enat i < esize A}\" \"A\" \"nth_least A\" \"\\<lambda> k. card {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_function_pair {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "using nth_least_wellformed card_wellformed"], ["proof (prove)\nusing this:\n  enat ?n < esize ?A \\<Longrightarrow> nth_least ?A ?n \\<in> ?A\n  ?k \\<in> ?A \\<Longrightarrow> enat (card {i \\<in> ?A. i < ?k}) < esize ?A\n\ngoal (1 subgoal):\n 1. bounded_function_pair {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "by (unfold_locales, blast+)"], ["", "interpretation nth_least:\n    injection \"{i. enat i < esize A}\" \"A\" \"nth_least A\" \"\\<lambda> k. card {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injection {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "using card_nth_least"], ["proof (prove)\nusing this:\n  enat ?n < esize ?A \\<Longrightarrow>\n  card {k \\<in> ?A. k < nth_least ?A ?n} = ?n\n\ngoal (1 subgoal):\n 1. injection {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "by (unfold_locales, blast)"], ["", "interpretation nth_least:\n    surjection \"{i. enat i < esize A}\" \"A\" \"nth_least A\" \"\\<lambda> k. card {i \\<in> A. i < k}\"\n    for A :: \"nat set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surjection {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "using nth_least_card"], ["proof (prove)\nusing this:\n  ?k \\<in> ?A \\<Longrightarrow>\n  nth_least ?A (card {i \\<in> ?A. i < ?k}) = ?k\n\ngoal (1 subgoal):\n 1. surjection {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "by (unfold_locales, blast)"], ["", "interpretation nth_least:\n    bijection \"{i. enat i < esize A}\" \"A\" \"nth_least A\" \"\\<lambda> k. card {i \\<in> A. i < k}\"\n    for A :: \"nat set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Functions.bijection {i. enat i < esize A} A (nth_least A)\n     (\\<lambda>k. card {i \\<in> A. i < k})", "by unfold_locales"], ["", "lemma nth_least_strict_mono_inverse:\n    fixes A :: \"nat set\"\n    assumes \"enat k < esize A\" \"enat l < esize A\" \"nth_least A k < nth_least A l\"\n    shows \"k < l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < l", "using assms"], ["proof (prove)\nusing this:\n  enat k < esize A\n  enat l < esize A\n  nth_least A k < nth_least A l\n\ngoal (1 subgoal):\n 1. k < l", "by (metis not_less_iff_gr_or_eq nth_least_strict_mono)"], ["", "lemma nth_least_less_card_less:\n    fixes k :: nat\n    shows \"enat n < esize A \\<and> nth_least A n < k \\<longleftrightarrow> n < card {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (enat n < esize A \\<and> nth_least A n < k) =\n    (n < card {i \\<in> A. i < k})", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>enat n < esize A; nth_least A n < k\\<rbrakk>\n    \\<Longrightarrow> n < card {i \\<in> A. i < k}\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 3. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "assume 1: \"enat n < esize A\" \"nth_least A n < k\""], ["proof (state)\nthis:\n  enat n < esize A\n  nth_least A n < k\n\ngoal (3 subgoals):\n 1. \\<lbrakk>enat n < esize A; nth_least A n < k\\<rbrakk>\n    \\<Longrightarrow> n < card {i \\<in> A. i < k}\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 3. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have 2: \"nth_least A n \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n \\<in> A", "using 1(1)"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. nth_least A n \\<in> A", "by rule"], ["proof (state)\nthis:\n  nth_least A n \\<in> A\n\ngoal (3 subgoals):\n 1. \\<lbrakk>enat n < esize A; nth_least A n < k\\<rbrakk>\n    \\<Longrightarrow> n < card {i \\<in> A. i < k}\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 3. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have \"n = card {i \\<in> A. i < nth_least A n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = card {i \\<in> A. i < nth_least A n}", "using 1"], ["proof (prove)\nusing this:\n  enat n < esize A\n  nth_least A n < k\n\ngoal (1 subgoal):\n 1. n = card {i \\<in> A. i < nth_least A n}", "by simp"], ["proof (state)\nthis:\n  n = card {i \\<in> A. i < nth_least A n}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>enat n < esize A; nth_least A n < k\\<rbrakk>\n    \\<Longrightarrow> n < card {i \\<in> A. i < k}\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 3. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "also"], ["proof (state)\nthis:\n  n = card {i \\<in> A. i < nth_least A n}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>enat n < esize A; nth_least A n < k\\<rbrakk>\n    \\<Longrightarrow> n < card {i \\<in> A. i < k}\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 3. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have \"\\<dots> < card {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}", "using 1(2) 2"], ["proof (prove)\nusing this:\n  nth_least A n < k\n  nth_least A n \\<in> A\n\ngoal (1 subgoal):\n 1. card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}", "by simp"], ["proof (state)\nthis:\n  card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>enat n < esize A; nth_least A n < k\\<rbrakk>\n    \\<Longrightarrow> n < card {i \\<in> A. i < k}\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 3. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "finally"], ["proof (chain)\npicking this:\n  n < card {i \\<in> A. i < k}", "show \"n < card {i \\<in> A. i < k}\""], ["proof (prove)\nusing this:\n  n < card {i \\<in> A. i < k}\n\ngoal (1 subgoal):\n 1. n < card {i \\<in> A. i < k}", "by this"], ["proof (state)\nthis:\n  n < card {i \\<in> A. i < k}\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "assume 1: \"n < card {i \\<in> A. i < k}\""], ["proof (state)\nthis:\n  n < card {i \\<in> A. i < k}\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have \"enat n < enat (card {i \\<in> A. i < k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < enat (card {i \\<in> A. i < k})", "using 1"], ["proof (prove)\nusing this:\n  n < card {i \\<in> A. i < k}\n\ngoal (1 subgoal):\n 1. enat n < enat (card {i \\<in> A. i < k})", "by simp"], ["proof (state)\nthis:\n  enat n < enat (card {i \\<in> A. i < k})\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "also"], ["proof (state)\nthis:\n  enat n < enat (card {i \\<in> A. i < k})\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have \"\\<dots> = esize {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) = esize {i \\<in> A. i < k}", "by simp"], ["proof (state)\nthis:\n  enat (card {i \\<in> A. i < k}) = esize {i \\<in> A. i < k}\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "also"], ["proof (state)\nthis:\n  enat (card {i \\<in> A. i < k}) = esize {i \\<in> A. i < k}\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have \"\\<dots> \\<le> esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize {i \\<in> A. i < k} \\<le> esize A", "by blast"], ["proof (state)\nthis:\n  esize {i \\<in> A. i < k} \\<le> esize A\n\ngoal (2 subgoals):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> enat n < esize A\n 2. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "finally"], ["proof (chain)\npicking this:\n  enat n < esize A", "show 2: \"enat n < esize A\""], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. enat n < esize A", "by this"], ["proof (state)\nthis:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have 3: \"n = card {i \\<in> A. i < nth_least A n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = card {i \\<in> A. i < nth_least A n}", "using 2"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. n = card {i \\<in> A. i < nth_least A n}", "by simp"], ["proof (state)\nthis:\n  n = card {i \\<in> A. i < nth_least A n}\n\ngoal (1 subgoal):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have 4: \"card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}", "using 1 2"], ["proof (prove)\nusing this:\n  n < card {i \\<in> A. i < k}\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}", "by simp"], ["proof (state)\nthis:\n  card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}\n\ngoal (1 subgoal):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "have 5: \"nth_least A n \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n \\<in> A", "using 2"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. nth_least A n \\<in> A", "by rule"], ["proof (state)\nthis:\n  nth_least A n \\<in> A\n\ngoal (1 subgoal):\n 1. n < card {i \\<in> A. i < k} \\<Longrightarrow> nth_least A n < k", "show \"nth_least A n < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n < k", "using 4 5"], ["proof (prove)\nusing this:\n  card {i \\<in> A. i < nth_least A n} < card {i \\<in> A. i < k}\n  nth_least A n \\<in> A\n\ngoal (1 subgoal):\n 1. nth_least A n < k", "by simp"], ["proof (state)\nthis:\n  nth_least A n < k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_less_esize_less:\n    \"enat n < esize A \\<and> enat (nth_least A n) < k \\<longleftrightarrow> enat n < esize {i \\<in> A. enat i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (enat n < esize A \\<and> enat (nth_least A n) < k) =\n    (enat n < esize {i \\<in> A. enat i < k})", "using nth_least_less_card_less"], ["proof (prove)\nusing this:\n  (enat ?n < esize ?A \\<and> nth_least ?A ?n < ?k) =\n  (?n < card {i \\<in> ?A. i < ?k})\n\ngoal (1 subgoal):\n 1. (enat n < esize A \\<and> enat (nth_least A n) < k) =\n    (enat n < esize {i \\<in> A. enat i < k})", "by (cases k, simp+)"], ["", "lemma nth_least_le:\n    assumes \"enat n < esize A\"\n    shows \"n \\<le> nth_least A n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> nth_least A n", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. n \\<le> nth_least A n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat 0 < esize A \\<Longrightarrow> 0 \\<le> nth_least A 0\n 2. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "case 0"], ["proof (state)\nthis:\n  enat 0 < esize A\n\ngoal (2 subgoals):\n 1. enat 0 < esize A \\<Longrightarrow> 0 \\<le> nth_least A 0\n 2. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> nth_least A 0", "using 0"], ["proof (prove)\nusing this:\n  enat 0 < esize A\n\ngoal (1 subgoal):\n 1. 0 \\<le> nth_least A 0", "by simp"], ["proof (state)\nthis:\n  0 \\<le> nth_least A 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "have \"n \\<le> nth_least A n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> nth_least A n", "using Suc"], ["proof (prove)\nusing this:\n  enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. n \\<le> nth_least A n", "by (metis Suc_ile_eq less_imp_le)"], ["proof (state)\nthis:\n  n \\<le> nth_least A n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "also"], ["proof (state)\nthis:\n  n \\<le> nth_least A n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "have \"\\<dots> < nth_least A (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n < nth_least A (Suc n)", "using nth_least_strict_mono Suc(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat ?l < esize ?A; ?k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A ?k < nth_least ?A ?l\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. nth_least A n < nth_least A (Suc n)", "by blast"], ["proof (state)\nthis:\n  nth_least A n < nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>enat n < esize A \\<Longrightarrow> n \\<le> nth_least A n;\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> nth_least A (Suc n)", "finally"], ["proof (chain)\npicking this:\n  n < nth_least A (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  n < nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. Suc n \\<le> nth_least A (Suc n)", "by simp"], ["proof (state)\nthis:\n  Suc n \\<le> nth_least A (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_eq:\n    assumes \"enat n < esize A\" \"enat n < esize B\"\n    assumes \"\\<And> i. i \\<le> nth_least A n \\<Longrightarrow> i \\<le> nth_least B n \\<Longrightarrow> i \\<in> A \\<longleftrightarrow> i \\<in> B\"\n    shows \"nth_least A n = nth_least B n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n = nth_least B n", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n  enat n < esize B\n  \\<lbrakk>?i \\<le> nth_least A n; ?i \\<le> nth_least B n\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n\ngoal (1 subgoal):\n 1. nth_least A n = nth_least B n", "proof (induct n arbitrary: A B)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>enat 0 < esize A; enat 0 < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A 0; i \\<le> nth_least B 0\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 = nth_least B 0\n 2. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "case 0"], ["proof (state)\nthis:\n  enat 0 < esize A\n  enat 0 < esize B\n  \\<lbrakk>?i \\<le> nth_least A 0; ?i \\<le> nth_least B 0\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>enat 0 < esize A; enat 0 < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A 0; i \\<le> nth_least B 0\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 = nth_least B 0\n 2. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "have 1: \"least A = least B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A = least B", "proof (rule least_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. A \\<noteq> {}\n 2. B \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "show \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using 0(1)"], ["proof (prove)\nusing this:\n  enat 0 < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. B \\<noteq> {}\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "show \"B \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "using 0(2)"], ["proof (prove)\nusing this:\n  enat 0 < esize B\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "assume 2: \"i \\<le> least A\" \"i \\<le> least B\""], ["proof (state)\nthis:\n  i \\<le> least A\n  i \\<le> least B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "show \"i \\<in> A \\<longleftrightarrow> i \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "using 0(3) 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> nth_least A 0; ?i \\<le> nth_least B 0\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n  i \\<le> least A\n  i \\<le> least B\n\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "unfolding nth_least.simps"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> least A; ?i \\<le> least B\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n  i \\<le> least A\n  i \\<le> least B\n\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "by this"], ["proof (state)\nthis:\n  (i \\<in> A) = (i \\<in> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  least A = least B\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>enat 0 < esize A; enat 0 < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A 0; i \\<le> nth_least B 0\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A 0 = nth_least B 0\n 2. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A 0 = nth_least B 0", "using 1"], ["proof (prove)\nusing this:\n  least A = least B\n\ngoal (1 subgoal):\n 1. nth_least A 0 = nth_least B 0", "by simp"], ["proof (state)\nthis:\n  nth_least A 0 = nth_least B 0\n\ngoal (1 subgoal):\n 1. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>enat n < esize ?A; enat n < esize ?B;\n   \\<And>i.\n      \\<lbrakk>i \\<le> nth_least ?A n; i \\<le> nth_least ?B n\\<rbrakk>\n      \\<Longrightarrow> (i \\<in> ?A) = (i \\<in> ?B)\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A n = nth_least ?B n\n  enat (Suc n) < esize A\n  enat (Suc n) < esize B\n  \\<lbrakk>?i \\<le> nth_least A (Suc n);\n   ?i \\<le> nth_least B (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "have 1: \"A \\<noteq> {}\" \"B \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {} &&& B \\<noteq> {}", "using Suc(2, 3)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n  enat (Suc n) < esize B\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} &&& B \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "have 2: \"least A = least B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A = least B", "proof (rule least_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. A \\<noteq> {}\n 2. B \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "show \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using 1(1)"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. B \\<noteq> {}\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "show \"B \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "using 1(2)"], ["proof (prove)\nusing this:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "assume 3: \"i \\<le> least A\" \"i \\<le> least B\""], ["proof (state)\nthis:\n  i \\<le> least A\n  i \\<le> least B\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "have 4: \"nth_least A 0 \\<le> nth_least A (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A 0 \\<le> nth_least A (Suc n)", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. nth_least A 0 \\<le> nth_least A (Suc n)", "by blast"], ["proof (state)\nthis:\n  nth_least A 0 \\<le> nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "have 5: \"nth_least B 0 \\<le> nth_least B (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least B 0 \\<le> nth_least B (Suc n)", "using Suc(3)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize B\n\ngoal (1 subgoal):\n 1. nth_least B 0 \\<le> nth_least B (Suc n)", "by blast"], ["proof (state)\nthis:\n  nth_least B 0 \\<le> nth_least B (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "have 6: \"i \\<le> nth_least A (Suc n)\" \"i \\<le> nth_least B (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> nth_least A (Suc n) &&& i \\<le> nth_least B (Suc n)", "using 3 4 5"], ["proof (prove)\nusing this:\n  i \\<le> least A\n  i \\<le> least B\n  nth_least A 0 \\<le> nth_least A (Suc n)\n  nth_least B 0 \\<le> nth_least B (Suc n)\n\ngoal (1 subgoal):\n 1. i \\<le> nth_least A (Suc n) &&& i \\<le> nth_least B (Suc n)", "by auto"], ["proof (state)\nthis:\n  i \\<le> nth_least A (Suc n)\n  i \\<le> nth_least B (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> least A; i \\<le> least B\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)", "show \"i \\<in> A \\<longleftrightarrow> i \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "using Suc(4) 6"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> nth_least A (Suc n);\n   ?i \\<le> nth_least B (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n  i \\<le> nth_least A (Suc n)\n  i \\<le> nth_least B (Suc n)\n\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "by this"], ["proof (state)\nthis:\n  (i \\<in> A) = (i \\<in> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  least A = least B\n\ngoal (1 subgoal):\n 1. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "have 3: \"nth_least (A - {least A}) n = nth_least (B - {least B}) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) n = nth_least (B - {least B}) n", "proof (rule Suc(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. enat n < esize (A - {least A})\n 2. enat n < esize (B - {least B})\n 3. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "show \"enat n < esize (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "using Suc(2) 1(1)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "by simp"], ["proof (state)\nthis:\n  enat n < esize (A - {least A})\n\ngoal (2 subgoals):\n 1. enat n < esize (B - {least B})\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "show \"enat n < esize (B - {least B})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < esize (B - {least B})", "using Suc(3) 1(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize B\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat n < esize (B - {least B})", "by simp"], ["proof (state)\nthis:\n  enat n < esize (B - {least B})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "assume 3: \"i \\<le> nth_least (A - {least A}) n\" \"i \\<le> nth_least (B - {least B}) n\""], ["proof (state)\nthis:\n  i \\<le> nth_least (A - {least A}) n\n  i \\<le> nth_least (B - {least B}) n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "have 4: \"i \\<le> nth_least A (Suc n)\" \"i \\<le> nth_least B (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> nth_least A (Suc n) &&& i \\<le> nth_least B (Suc n)", "using 3"], ["proof (prove)\nusing this:\n  i \\<le> nth_least (A - {least A}) n\n  i \\<le> nth_least (B - {least B}) n\n\ngoal (1 subgoal):\n 1. i \\<le> nth_least A (Suc n) &&& i \\<le> nth_least B (Suc n)", "by simp+"], ["proof (state)\nthis:\n  i \\<le> nth_least A (Suc n)\n  i \\<le> nth_least B (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "have 5: \"i \\<in> A \\<longleftrightarrow> i \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "using Suc(4) 4"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<le> nth_least A (Suc n);\n   ?i \\<le> nth_least B (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (?i \\<in> A) = (?i \\<in> B)\n  i \\<le> nth_least A (Suc n)\n  i \\<le> nth_least B (Suc n)\n\ngoal (1 subgoal):\n 1. (i \\<in> A) = (i \\<in> B)", "by this"], ["proof (state)\nthis:\n  (i \\<in> A) = (i \\<in> B)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> nth_least (A - {least A}) n;\n        i \\<le> nth_least (B - {least B}) n\\<rbrakk>\n       \\<Longrightarrow> (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "show \"i \\<in> A - {least A} \\<longleftrightarrow> i \\<in> B - {least B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "using 2 5"], ["proof (prove)\nusing this:\n  least A = least B\n  (i \\<in> A) = (i \\<in> B)\n\ngoal (1 subgoal):\n 1. (i \\<in> A - {least A}) = (i \\<in> B - {least B})", "by auto"], ["proof (state)\nthis:\n  (i \\<in> A - {least A}) = (i \\<in> B - {least B})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nth_least (A - {least A}) n = nth_least (B - {least B}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>enat n < esize A; enat n < esize B;\n                    \\<And>i.\n                       \\<lbrakk>i \\<le> nth_least A n;\n                        i \\<le> nth_least B n\\<rbrakk>\n                       \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n                   \\<Longrightarrow> nth_least A n = nth_least B n;\n        enat (Suc n) < esize A; enat (Suc n) < esize B;\n        \\<And>i.\n           \\<lbrakk>i \\<le> nth_least A (Suc n);\n            i \\<le> nth_least B (Suc n)\\<rbrakk>\n           \\<Longrightarrow> (i \\<in> A) = (i \\<in> B)\\<rbrakk>\n       \\<Longrightarrow> nth_least A (Suc n) = nth_least B (Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (Suc n) = nth_least B (Suc n)", "using 3"], ["proof (prove)\nusing this:\n  nth_least (A - {least A}) n = nth_least (B - {least B}) n\n\ngoal (1 subgoal):\n 1. nth_least A (Suc n) = nth_least B (Suc n)", "by simp"], ["proof (state)\nthis:\n  nth_least A (Suc n) = nth_least B (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_restrict[simp]:\n    assumes \"enat i < esize {i \\<in> s. enat i < k}\"\n    shows \"nth_least {i \\<in> s. enat i < k} i = nth_least s i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least {i \\<in> s. enat i < k} i = nth_least s i", "proof (rule nth_least_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. enat i < esize {i \\<in> s. enat i < k}\n 2. enat i < esize s\n 3. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "show \"enat i < esize {i \\<in> s. enat i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < esize {i \\<in> s. enat i < k}", "using assms"], ["proof (prove)\nusing this:\n  enat i < esize {i \\<in> s. enat i < k}\n\ngoal (1 subgoal):\n 1. enat i < esize {i \\<in> s. enat i < k}", "by this"], ["proof (state)\nthis:\n  enat i < esize {i \\<in> s. enat i < k}\n\ngoal (2 subgoals):\n 1. enat i < esize s\n 2. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "show \"enat i < esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < esize s", "using nth_least_less_esize_less assms"], ["proof (prove)\nusing this:\n  (enat ?n < esize ?A \\<and> enat (nth_least ?A ?n) < ?k) =\n  (enat ?n < esize {i \\<in> ?A. enat i < ?k})\n  enat i < esize {i \\<in> s. enat i < k}\n\ngoal (1 subgoal):\n 1. enat i < esize s", "by auto"], ["proof (state)\nthis:\n  enat i < esize s\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "assume 1: \"l \\<le> nth_least {i \\<in> s. enat i < k} i\""], ["proof (state)\nthis:\n  l \\<le> nth_least {i \\<in> s. enat i < k} i\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "have 2: \"nth_least {i \\<in> s. enat i < k} i \\<in> {i \\<in> s. enat i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least {i \\<in> s. enat i < k} i \\<in> {i \\<in> s. enat i < k}", "using assms"], ["proof (prove)\nusing this:\n  enat i < esize {i \\<in> s. enat i < k}\n\ngoal (1 subgoal):\n 1. nth_least {i \\<in> s. enat i < k} i \\<in> {i \\<in> s. enat i < k}", "by rule"], ["proof (state)\nthis:\n  nth_least {i \\<in> s. enat i < k} i \\<in> {i \\<in> s. enat i < k}\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "have \"enat l \\<le> enat (nth_least {i \\<in> s. enat i < k} i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat l \\<le> enat (nth_least {i \\<in> s. enat i < k} i)", "using 1"], ["proof (prove)\nusing this:\n  l \\<le> nth_least {i \\<in> s. enat i < k} i\n\ngoal (1 subgoal):\n 1. enat l \\<le> enat (nth_least {i \\<in> s. enat i < k} i)", "by simp"], ["proof (state)\nthis:\n  enat l \\<le> enat (nth_least {i \\<in> s. enat i < k} i)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "also"], ["proof (state)\nthis:\n  enat l \\<le> enat (nth_least {i \\<in> s. enat i < k} i)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "have \"\\<dots> < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (nth_least {i \\<in> s. enat i < k} i) < k", "using 2"], ["proof (prove)\nusing this:\n  nth_least {i \\<in> s. enat i < k} i \\<in> {i \\<in> s. enat i < k}\n\ngoal (1 subgoal):\n 1. enat (nth_least {i \\<in> s. enat i < k} i) < k", "by simp"], ["proof (state)\nthis:\n  enat (nth_least {i \\<in> s. enat i < k} i) < k\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> nth_least {i \\<in> s. enat i < k} i;\n        ia \\<le> nth_least s i\\<rbrakk>\n       \\<Longrightarrow> (ia \\<in> {i \\<in> s. enat i < k}) = (ia \\<in> s)", "finally"], ["proof (chain)\npicking this:\n  enat l < k", "show \"l \\<in> {i \\<in> s. enat i < k} \\<longleftrightarrow> l \\<in> s\""], ["proof (prove)\nusing this:\n  enat l < k\n\ngoal (1 subgoal):\n 1. (l \\<in> {i \\<in> s. enat i < k}) = (l \\<in> s)", "by auto"], ["proof (state)\nthis:\n  (l \\<in> {i \\<in> s. enat i < k}) = (l \\<in> s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma least_nth_least[simp]:\n    assumes \"A \\<noteq> {}\" \"\\<And> i. i \\<in> A \\<Longrightarrow> enat i < esize B\"\n    shows \"least (nth_least B ` A) = nth_least B (least A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least (nth_least B ` A) = nth_least B (least A)", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n\ngoal (1 subgoal):\n 1. least (nth_least B ` A) = nth_least B (least A)", "by simp"], ["", "lemma nth_least_nth_least[simp]:\n    assumes \"enat n < esize A\" \"\\<And> i. i \\<in> A \\<Longrightarrow> enat i < esize B\"\n    shows \"nth_least B (nth_least A n) = nth_least (nth_least B ` A) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least B (nth_least A n) = nth_least (nth_least B ` A) n", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n\ngoal (1 subgoal):\n 1. nth_least B (nth_least A n) = nth_least (nth_least B ` A) n", "proof (induct n arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>enat 0 < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A 0) =\n                         nth_least (nth_least B ` A) 0\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "case 0"], ["proof (state)\nthis:\n  enat 0 < esize A\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>enat 0 < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A 0) =\n                         nth_least (nth_least B ` A) 0\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least B (nth_least A 0) = nth_least (nth_least B ` A) 0", "using 0"], ["proof (prove)\nusing this:\n  enat 0 < esize A\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n\ngoal (1 subgoal):\n 1. nth_least B (nth_least A 0) = nth_least (nth_least B ` A) 0", "by simp"], ["proof (state)\nthis:\n  nth_least B (nth_least A 0) = nth_least (nth_least B ` A) 0\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>enat n < esize ?A;\n   \\<And>i. i \\<in> ?A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n  \\<Longrightarrow> nth_least B (nth_least ?A n) =\n                    nth_least (nth_least B ` ?A) n\n  enat (Suc n) < esize A\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have 1: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have 2: \"nth_least B ` (A - {least A}) = nth_least B ` A - nth_least B ` {least A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least B ` (A - {least A}) =\n    nth_least B ` A - nth_least B ` {least A}", "proof (rule inj_on_image_set_diff)"], ["proof (state)\ngoal (3 subgoals):\n 1. inj_on (nth_least B) ?C\n 2. A - {least A} \\<subseteq> ?C\n 3. {least A} \\<subseteq> ?C", "show \"inj_on (nth_least B) {i. enat i < esize B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (nth_least B) {i. enat i < esize B}", "using nth_least.inj_on"], ["proof (prove)\nusing this:\n  inj_on (nth_least ?A) {i. enat i < esize ?A}\n\ngoal (1 subgoal):\n 1. inj_on (nth_least B) {i. enat i < esize B}", "by this"], ["proof (state)\nthis:\n  inj_on (nth_least B) {i. enat i < esize B}\n\ngoal (2 subgoals):\n 1. A - {least A} \\<subseteq> {i. enat i < esize B}\n 2. {least A} \\<subseteq> {i. enat i < esize B}", "show \"A - {least A} \\<subseteq> {i. enat i < esize B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - {least A} \\<subseteq> {i. enat i < esize B}", "using Suc(3)"], ["proof (prove)\nusing this:\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n\ngoal (1 subgoal):\n 1. A - {least A} \\<subseteq> {i. enat i < esize B}", "by blast"], ["proof (state)\nthis:\n  A - {least A} \\<subseteq> {i. enat i < esize B}\n\ngoal (1 subgoal):\n 1. {least A} \\<subseteq> {i. enat i < esize B}", "show \"{least A} \\<subseteq> {i. enat i < esize B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {least A} \\<subseteq> {i. enat i < esize B}", "using Suc(3) 1"], ["proof (prove)\nusing this:\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {least A} \\<subseteq> {i. enat i < esize B}", "by force"], ["proof (state)\nthis:\n  {least A} \\<subseteq> {i. enat i < esize B}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nth_least B ` (A - {least A}) = nth_least B ` A - nth_least B ` {least A}\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have \"nth_least B (nth_least A (Suc n)) = nth_least B (nth_least (A - {least A}) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least B (nth_least A (Suc n)) =\n    nth_least B (nth_least (A - {least A}) n)", "by simp"], ["proof (state)\nthis:\n  nth_least B (nth_least A (Suc n)) =\n  nth_least B (nth_least (A - {least A}) n)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "also"], ["proof (state)\nthis:\n  nth_least B (nth_least A (Suc n)) =\n  nth_least B (nth_least (A - {least A}) n)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have \"\\<dots> = nth_least (nth_least B ` (A - {least A})) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least B (nth_least (A - {least A}) n) =\n    nth_least (nth_least B ` (A - {least A})) n", "using Suc 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat n < esize ?A;\n   \\<And>i. i \\<in> ?A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n  \\<Longrightarrow> nth_least B (nth_least ?A n) =\n                    nth_least (nth_least B ` ?A) n\n  enat (Suc n) < esize A\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least B (nth_least (A - {least A}) n) =\n    nth_least (nth_least B ` (A - {least A})) n", "by force"], ["proof (state)\nthis:\n  nth_least B (nth_least (A - {least A}) n) =\n  nth_least (nth_least B ` (A - {least A})) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "also"], ["proof (state)\nthis:\n  nth_least B (nth_least (A - {least A}) n) =\n  nth_least (nth_least B ` (A - {least A})) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have \"\\<dots> = nth_least (nth_least B ` A - nth_least B ` {least A}) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (nth_least B ` (A - {least A})) n =\n    nth_least (nth_least B ` A - nth_least B ` {least A}) n", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (nth_least B ` A - nth_least B ` {least A}) n =\n    nth_least (nth_least B ` A - nth_least B ` {least A}) n", "by rule"], ["proof (state)\nthis:\n  nth_least (nth_least B ` (A - {least A})) n =\n  nth_least (nth_least B ` A - nth_least B ` {least A}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "also"], ["proof (state)\nthis:\n  nth_least (nth_least B ` (A - {least A})) n =\n  nth_least (nth_least B ` A - nth_least B ` {least A}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have \"\\<dots> = nth_least (nth_least B ` A - {nth_least B (least A)}) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (nth_least B ` A - nth_least B ` {least A}) n =\n    nth_least (nth_least B ` A - {nth_least B (least A)}) n", "by simp"], ["proof (state)\nthis:\n  nth_least (nth_least B ` A - nth_least B ` {least A}) n =\n  nth_least (nth_least B ` A - {nth_least B (least A)}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "also"], ["proof (state)\nthis:\n  nth_least (nth_least B ` A - nth_least B ` {least A}) n =\n  nth_least (nth_least B ` A - {nth_least B (least A)}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have \"\\<dots> = nth_least (nth_least B ` A - {least (nth_least B ` A)}) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (nth_least B ` A - {nth_least B (least A)}) n =\n    nth_least (nth_least B ` A - {least (nth_least B ` A)}) n", "using Suc(3) 1"], ["proof (prove)\nusing this:\n  ?i \\<in> A \\<Longrightarrow> enat ?i < esize B\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least (nth_least B ` A - {nth_least B (least A)}) n =\n    nth_least (nth_least B ` A - {least (nth_least B ` A)}) n", "by auto"], ["proof (state)\nthis:\n  nth_least (nth_least B ` A - {nth_least B (least A)}) n =\n  nth_least (nth_least B ` A - {least (nth_least B ` A)}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "also"], ["proof (state)\nthis:\n  nth_least (nth_least B ` A - {nth_least B (least A)}) n =\n  nth_least (nth_least B ` A - {least (nth_least B ` A)}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "have \"\\<dots> = nth_least (nth_least B ` A) (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (nth_least B ` A - {least (nth_least B ` A)}) n =\n    nth_least (nth_least B ` A) (Suc n)", "by simp"], ["proof (state)\nthis:\n  nth_least (nth_least B ` A - {least (nth_least B ` A)}) n =\n  nth_least (nth_least B ` A) (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>enat n < esize A;\n                    \\<And>i.\n                       i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n                   \\<Longrightarrow> nth_least B (nth_least A n) =\n                                     nth_least (nth_least B ` A) n;\n        enat (Suc n) < esize A;\n        \\<And>i. i \\<in> A \\<Longrightarrow> enat i < esize B\\<rbrakk>\n       \\<Longrightarrow> nth_least B (nth_least A (Suc n)) =\n                         nth_least (nth_least B ` A) (Suc n)", "finally"], ["proof (chain)\npicking this:\n  nth_least B (nth_least A (Suc n)) = nth_least (nth_least B ` A) (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  nth_least B (nth_least A (Suc n)) = nth_least (nth_least B ` A) (Suc n)\n\ngoal (1 subgoal):\n 1. nth_least B (nth_least A (Suc n)) = nth_least (nth_least B ` A) (Suc n)", "by this"], ["proof (state)\nthis:\n  nth_least B (nth_least A (Suc n)) = nth_least (nth_least B ` A) (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_Max[simp]:\n    assumes \"finite A\" \"A \\<noteq> {}\"\n    shows \"nth_least A (card A - 1) = Max A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = Max A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = Max A", "proof (induct \"card A - 1\" arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>0 = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A\n 2. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "case 0"], ["proof (state)\nthis:\n  0 = card A - 1\n  finite A\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>0 = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A\n 2. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have 1: \"card A = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A = 1", "using 0"], ["proof (prove)\nusing this:\n  0 = card A - 1\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card A = 1", "by (metis One_nat_def Suc_diff_1 card_gt_0_iff)"], ["proof (state)\nthis:\n  card A = 1\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>0 = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A\n 2. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "obtain a where 2: \"A = {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. A = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using 1"], ["proof (prove)\nusing this:\n  card A = 1\n\ngoal (1 subgoal):\n 1. (\\<And>a. A = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by rule"], ["proof (state)\nthis:\n  A = {a}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>0 = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A\n 2. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = Max A", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least {a} (card {a} - 1) = Max {a}", "by (simp del: insert_iff)"], ["proof (state)\nthis:\n  nth_least A (card A - 1) = Max A\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n = card ?A - 1; finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A (card ?A - 1) = Max ?A\n  Suc n = card A - 1\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have 1: \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using Suc(4)"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by rule"], ["proof (state)\nthis:\n  least A \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have 2: \"card (A - {least A}) = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (A - {least A}) = Suc n", "using Suc(2, 3) 1"], ["proof (prove)\nusing this:\n  Suc n = card A - 1\n  finite A\n  least A \\<in> A\n\ngoal (1 subgoal):\n 1. card (A - {least A}) = Suc n", "by simp"], ["proof (state)\nthis:\n  card (A - {least A}) = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have 3: \"A - {least A} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "using 2 Suc(3)"], ["proof (prove)\nusing this:\n  card (A - {least A}) = Suc n\n  finite A\n\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "by fastforce"], ["proof (state)\nthis:\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have \"nth_least A (card A - 1) = nth_least A (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = nth_least A (Suc n)", "unfolding Suc(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = nth_least A (card A - 1)", "by rule"], ["proof (state)\nthis:\n  nth_least A (card A - 1) = nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "also"], ["proof (state)\nthis:\n  nth_least A (card A - 1) = nth_least A (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have \"\\<dots> = nth_least (A - {least A}) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (Suc n) = nth_least (A - {least A}) n", "by simp"], ["proof (state)\nthis:\n  nth_least A (Suc n) = nth_least (A - {least A}) n\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "also"], ["proof (state)\nthis:\n  nth_least A (Suc n) = nth_least (A - {least A}) n\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have \"\\<dots> = nth_least (A - {least A}) (card (A - {least A}) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) n =\n    nth_least (A - {least A}) (card (A - {least A}) - 1)", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) n = nth_least (A - {least A}) (Suc n - 1)", "by simp"], ["proof (state)\nthis:\n  nth_least (A - {least A}) n =\n  nth_least (A - {least A}) (card (A - {least A}) - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "also"], ["proof (state)\nthis:\n  nth_least (A - {least A}) n =\n  nth_least (A - {least A}) (card (A - {least A}) - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have \"\\<dots> = Max (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (A - {least A}) (card (A - {least A}) - 1) =\n    Max (A - {least A})", "proof (rule Suc(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. n = card (A - {least A}) - 1\n 2. finite (A - {least A})\n 3. A - {least A} \\<noteq> {}", "show \"n = card (A - {least A}) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = card (A - {least A}) - 1", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. n = Suc n - 1", "by simp"], ["proof (state)\nthis:\n  n = card (A - {least A}) - 1\n\ngoal (2 subgoals):\n 1. finite (A - {least A})\n 2. A - {least A} \\<noteq> {}", "show \"finite (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A - {least A})", "using Suc(3)"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A - {least A})", "by simp"], ["proof (state)\nthis:\n  finite (A - {least A})\n\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "show \"A - {least A} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "using 3"], ["proof (prove)\nusing this:\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A - {least A} \\<noteq> {}", "by this"], ["proof (state)\nthis:\n  A - {least A} \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nth_least (A - {least A}) (card (A - {least A}) - 1) = Max (A - {least A})\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "also"], ["proof (state)\nthis:\n  nth_least (A - {least A}) (card (A - {least A}) - 1) = Max (A - {least A})\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "have \"\\<dots> = Max A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "using Suc(3) 3"], ["proof (prove)\nusing this:\n  finite A\n  A - {least A} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max (A - {least A}) = Max A", "by simp"], ["proof (state)\nthis:\n  Max (A - {least A}) = Max A\n\ngoal (1 subgoal):\n 1. \\<And>x A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n                   \\<Longrightarrow> nth_least A (card A - 1) = Max A;\n        Suc x = card A - 1; finite A; A \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> nth_least A (card A - 1) = Max A", "finally"], ["proof (chain)\npicking this:\n  nth_least A (card A - 1) = Max A", "show ?case"], ["proof (prove)\nusing this:\n  nth_least A (card A - 1) = Max A\n\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = Max A", "by this"], ["proof (state)\nthis:\n  nth_least A (card A - 1) = Max A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_le_Max:\n    assumes \"finite A\" \"A \\<noteq> {}\" \"enat n < esize A\"\n    shows \"nth_least A n \\<le> Max A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n \\<le> Max A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nth_least A n \\<le> Max A", "have \"nth_least A n \\<le> nth_least A (card A - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n \\<le> nth_least A (card A - 1)", "proof (rule nth_least_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat (card A - 1) < esize A\n 2. n \\<le> card A - 1", "show \"enat (card A - 1) < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card A - 1) < esize A", "by (metis Suc_diff_1 Suc_ile_eq assms(1) assms(2)\n        card_eq_0_iff esize_set.simps(1) not_gr0 order_refl)"], ["proof (state)\nthis:\n  enat (card A - 1) < esize A\n\ngoal (1 subgoal):\n 1. n \\<le> card A - 1", "show \"n \\<le> card A - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> card A - 1", "by (metis Suc_diff_1 Suc_leI antisym_conv assms(1) assms(3)\n        enat_ord_simps(2) esize_set.simps(1) le_less neq_iff not_gr0)"], ["proof (state)\nthis:\n  n \\<le> card A - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nth_least A n \\<le> nth_least A (card A - 1)\n\ngoal (1 subgoal):\n 1. nth_least A n \\<le> Max A", "also"], ["proof (state)\nthis:\n  nth_least A n \\<le> nth_least A (card A - 1)\n\ngoal (1 subgoal):\n 1. nth_least A n \\<le> Max A", "have \"\\<dots> = Max A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = Max A", "using nth_least_Max assms(1, 2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A (card ?A - 1) = Max ?A\n  finite A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least A (card A - 1) = Max A", "by this"], ["proof (state)\nthis:\n  nth_least A (card A - 1) = Max A\n\ngoal (1 subgoal):\n 1. nth_least A n \\<le> Max A", "finally"], ["proof (chain)\npicking this:\n  nth_least A n \\<le> Max A", "show ?thesis"], ["proof (prove)\nusing this:\n  nth_least A n \\<le> Max A\n\ngoal (1 subgoal):\n 1. nth_least A n \\<le> Max A", "by this"], ["proof (state)\nthis:\n  nth_least A n \\<le> Max A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_not_contains:\n    fixes k :: nat\n    assumes \"enat (Suc n) < esize A\" \"nth_least A n < k\" \"k < nth_least A (Suc n)\"\n    shows \"k \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<notin> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<in> A \\<Longrightarrow> False", "assume 1: \"k \\<in> A\""], ["proof (state)\nthis:\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. k \\<in> A \\<Longrightarrow> False", "have 2: \"nth_least A (card {i \\<in> A. i < k}) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card {i \\<in> A. i < k}) = k", "using nth_least.right_inverse 1"], ["proof (prove)\nusing this:\n  ?y \\<in> ?A \\<Longrightarrow>\n  nth_least ?A (card {i \\<in> ?A. i < ?y}) = ?y\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. nth_least A (card {i \\<in> A. i < k}) = k", "by this"], ["proof (state)\nthis:\n  nth_least A (card {i \\<in> A. i < k}) = k\n\ngoal (1 subgoal):\n 1. k \\<in> A \\<Longrightarrow> False", "have 3: \"n < card {i \\<in> A. i < k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < card {i \\<in> A. i < k}", "proof (rule nth_least_strict_mono_inverse)"], ["proof (state)\ngoal (3 subgoals):\n 1. enat n < esize ?A\n 2. enat (card {i \\<in> A. i < k}) < esize ?A\n 3. nth_least ?A n < nth_least ?A (card {i \\<in> A. i < k})", "show \"enat n < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < esize A", "using assms(1)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. enat n < esize A", "by auto"], ["proof (state)\nthis:\n  enat n < esize A\n\ngoal (2 subgoals):\n 1. enat (card {i \\<in> A. i < k}) < esize A\n 2. nth_least A n < nth_least A (card {i \\<in> A. i < k})", "show \"enat (card {i \\<in> A. i < k}) < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "using nth_least.g.wellformed 1"], ["proof (prove)\nusing this:\n  ?x \\<in> ?A \\<Longrightarrow>\n  card {i \\<in> ?A. i < ?x} \\<in> {i. enat i < esize ?A}\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "by simp"], ["proof (state)\nthis:\n  enat (card {i \\<in> A. i < k}) < esize A\n\ngoal (1 subgoal):\n 1. nth_least A n < nth_least A (card {i \\<in> A. i < k})", "show \"nth_least A n < nth_least A (card {i \\<in> A. i < k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A n < nth_least A (card {i \\<in> A. i < k})", "using assms(2) 2"], ["proof (prove)\nusing this:\n  nth_least A n < k\n  nth_least A (card {i \\<in> A. i < k}) = k\n\ngoal (1 subgoal):\n 1. nth_least A n < nth_least A (card {i \\<in> A. i < k})", "by simp"], ["proof (state)\nthis:\n  nth_least A n < nth_least A (card {i \\<in> A. i < k})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n < card {i \\<in> A. i < k}\n\ngoal (1 subgoal):\n 1. k \\<in> A \\<Longrightarrow> False", "have 4: \"card {i \\<in> A. i < k} < Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i \\<in> A. i < k} < Suc n", "proof (rule nth_least_strict_mono_inverse)"], ["proof (state)\ngoal (3 subgoals):\n 1. enat (card {i \\<in> A. i < k}) < esize ?A\n 2. enat (Suc n) < esize ?A\n 3. nth_least ?A (card {i \\<in> A. i < k}) < nth_least ?A (Suc n)", "show \"enat (card {i \\<in> A. i < k}) < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "using nth_least.g.wellformed 1"], ["proof (prove)\nusing this:\n  ?x \\<in> ?A \\<Longrightarrow>\n  card {i \\<in> ?A. i < ?x} \\<in> {i. enat i < esize ?A}\n  k \\<in> A\n\ngoal (1 subgoal):\n 1. enat (card {i \\<in> A. i < k}) < esize A", "by simp"], ["proof (state)\nthis:\n  enat (card {i \\<in> A. i < k}) < esize A\n\ngoal (2 subgoals):\n 1. enat (Suc n) < esize A\n 2. nth_least A (card {i \\<in> A. i < k}) < nth_least A (Suc n)", "show \"enat (Suc n) < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (Suc n) < esize A", "using assms(1)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. enat (Suc n) < esize A", "by this"], ["proof (state)\nthis:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. nth_least A (card {i \\<in> A. i < k}) < nth_least A (Suc n)", "show \"nth_least A (card {i \\<in> A. i < k}) < nth_least A (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least A (card {i \\<in> A. i < k}) < nth_least A (Suc n)", "using assms(3) 2"], ["proof (prove)\nusing this:\n  k < nth_least A (Suc n)\n  nth_least A (card {i \\<in> A. i < k}) = k\n\ngoal (1 subgoal):\n 1. nth_least A (card {i \\<in> A. i < k}) < nth_least A (Suc n)", "by simp"], ["proof (state)\nthis:\n  nth_least A (card {i \\<in> A. i < k}) < nth_least A (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i \\<in> A. i < k} < Suc n\n\ngoal (1 subgoal):\n 1. k \\<in> A \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using 3 4"], ["proof (prove)\nusing this:\n  n < card {i \\<in> A. i < k}\n  card {i \\<in> A. i < k} < Suc n\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_Suc[simp]:\n    assumes \"enat n < esize A\"\n    shows \"nth_least (Suc ` A) n = Suc (nth_least A n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (Suc ` A) n = Suc (nth_least A n)", "using assms"], ["proof (prove)\nusing this:\n  enat n < esize A\n\ngoal (1 subgoal):\n 1. nth_least (Suc ` A) n = Suc (nth_least A n)", "proof (induct n arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       enat 0 < esize A \\<Longrightarrow>\n       nth_least (Suc ` A) 0 = Suc (nth_least A 0)\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "case (0)"], ["proof (state)\nthis:\n  enat 0 < esize A\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       enat 0 < esize A \\<Longrightarrow>\n       nth_least (Suc ` A) 0 = Suc (nth_least A 0)\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "have 1: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using 0"], ["proof (prove)\nusing this:\n  enat 0 < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       enat 0 < esize A \\<Longrightarrow>\n       nth_least (Suc ` A) 0 = Suc (nth_least A 0)\n 2. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (Suc ` A) 0 = Suc (nth_least A 0)", "using 1"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nth_least (Suc ` A) 0 = Suc (nth_least A 0)", "by simp"], ["proof (state)\nthis:\n  nth_least (Suc ` A) 0 = Suc (nth_least A 0)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  enat n < esize ?A \\<Longrightarrow>\n  nth_least (Suc ` ?A) n = Suc (nth_least ?A n)\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "have 1: \"enat n < esize (A - {least A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have 2: \"A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have 3: \"least A \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. least A \\<in> A", "using LeastI 2"], ["proof (prove)\nusing this:\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. least A \\<in> A", "by fast"], ["proof (state)\nthis:\n  least A \\<in> A\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have 4: \"A = insert (least A) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = insert (least A) A", "using 3"], ["proof (prove)\nusing this:\n  least A \\<in> A\n\ngoal (1 subgoal):\n 1. A = insert (least A) A", "by auto"], ["proof (state)\nthis:\n  A = insert (least A) A\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have \"eSuc (enat n) = enat (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eSuc (enat n) = enat (Suc n)", "by simp"], ["proof (state)\nthis:\n  eSuc (enat n) = enat (Suc n)\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "also"], ["proof (state)\nthis:\n  eSuc (enat n) = enat (Suc n)\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have \"\\<dots> < esize A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (Suc n) < esize A", "using Suc(2)"], ["proof (prove)\nusing this:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. enat (Suc n) < esize A", "by this"], ["proof (state)\nthis:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "also"], ["proof (state)\nthis:\n  enat (Suc n) < esize A\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have \"\\<dots> = esize (insert (least A) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize A = esize (insert (least A) A)", "using 4"], ["proof (prove)\nusing this:\n  A = insert (least A) A\n\ngoal (1 subgoal):\n 1. esize A = esize (insert (least A) A)", "by simp"], ["proof (state)\nthis:\n  esize A = esize (insert (least A) A)\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "also"], ["proof (state)\nthis:\n  esize A = esize (insert (least A) A)\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "have \"\\<dots> = eSuc (esize (A - {least A}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize (insert (least A) A) = eSuc (esize (A - {least A}))", "using 3 2"], ["proof (prove)\nusing this:\n  least A \\<in> A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. esize (insert (least A) A) = eSuc (esize (A - {least A}))", "by simp"], ["proof (state)\nthis:\n  esize (insert (least A) A) = eSuc (esize (A - {least A}))\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "finally"], ["proof (chain)\npicking this:\n  eSuc (enat n) < eSuc (esize (A - {least A}))", "show ?thesis"], ["proof (prove)\nusing this:\n  eSuc (enat n) < eSuc (esize (A - {least A}))\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "using Extended_Nat.eSuc_mono"], ["proof (prove)\nusing this:\n  eSuc (enat n) < eSuc (esize (A - {least A}))\n  (eSuc ?n < eSuc ?m) = (?n < ?m)\n\ngoal (1 subgoal):\n 1. enat n < esize (A - {least A})", "by metis"], ["proof (state)\nthis:\n  enat n < esize (A - {least A})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat n < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "have \"nth_least (Suc ` A) (Suc n) = nth_least (Suc ` A - {least (Suc ` A)}) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (Suc ` A) (Suc n) = nth_least (Suc ` A - {least (Suc ` A)}) n", "by simp"], ["proof (state)\nthis:\n  nth_least (Suc ` A) (Suc n) = nth_least (Suc ` A - {least (Suc ` A)}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "also"], ["proof (state)\nthis:\n  nth_least (Suc ` A) (Suc n) = nth_least (Suc ` A - {least (Suc ` A)}) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "have \"\\<dots> = nth_least (Suc ` (A - {least A})) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (Suc ` A - {least (Suc ` A)}) n =\n    nth_least (Suc ` (A - {least A})) n", "by simp"], ["proof (state)\nthis:\n  nth_least (Suc ` A - {least (Suc ` A)}) n =\n  nth_least (Suc ` (A - {least A})) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "also"], ["proof (state)\nthis:\n  nth_least (Suc ` A - {least (Suc ` A)}) n =\n  nth_least (Suc ` (A - {least A})) n\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "have \"\\<dots> = Suc (nth_least (A - {least A}) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (Suc ` (A - {least A})) n = Suc (nth_least (A - {least A}) n)", "using Suc(1) 1"], ["proof (prove)\nusing this:\n  enat n < esize ?A \\<Longrightarrow>\n  nth_least (Suc ` ?A) n = Suc (nth_least ?A n)\n  enat n < esize (A - {least A})\n\ngoal (1 subgoal):\n 1. nth_least (Suc ` (A - {least A})) n = Suc (nth_least (A - {least A}) n)", "by this"], ["proof (state)\nthis:\n  nth_least (Suc ` (A - {least A})) n = Suc (nth_least (A - {least A}) n)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "also"], ["proof (state)\nthis:\n  nth_least (Suc ` (A - {least A})) n = Suc (nth_least (A - {least A}) n)\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "have \"\\<dots> = Suc (nth_least A (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (nth_least (A - {least A}) n) = Suc (nth_least A (Suc n))", "by simp"], ["proof (state)\nthis:\n  Suc (nth_least (A - {least A}) n) = Suc (nth_least A (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>\\<And>A.\n                   enat n < esize A \\<Longrightarrow>\n                   nth_least (Suc ` A) n = Suc (nth_least A n);\n        enat (Suc n) < esize A\\<rbrakk>\n       \\<Longrightarrow> nth_least (Suc ` A) (Suc n) =\n                         Suc (nth_least A (Suc n))", "finally"], ["proof (chain)\npicking this:\n  nth_least (Suc ` A) (Suc n) = Suc (nth_least A (Suc n))", "show ?case"], ["proof (prove)\nusing this:\n  nth_least (Suc ` A) (Suc n) = Suc (nth_least A (Suc n))\n\ngoal (1 subgoal):\n 1. nth_least (Suc ` A) (Suc n) = Suc (nth_least A (Suc n))", "by this"], ["proof (state)\nthis:\n  nth_least (Suc ` A) (Suc n) = Suc (nth_least A (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_least_lift[simp]:\n    \"nth_least (lift A) 0 = 0\"\n    \"enat n < esize A \\<Longrightarrow> nth_least (lift A) (Suc n) = Suc (nth_least A n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (lift A) 0 = 0 &&&\n    (enat n < esize A \\<Longrightarrow>\n     nth_least (lift A) (Suc n) = Suc (nth_least A n))", "unfolding lift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least (insert 0 (Suc ` A)) 0 = 0 &&&\n    (enat n < esize A \\<Longrightarrow>\n     nth_least (insert 0 (Suc ` A)) (Suc n) = Suc (nth_least A n))", "by simp+"], ["", "lemma nth_least_list_card[simp]:\n    assumes \"enat n \\<le> esize A\"\n    shows \"card {k \\<in> A. k < nth_least (lift A) n} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least (lift A) n} = n", "using less_Suc_eq_le assms"], ["proof (prove)\nusing this:\n  (?m < Suc ?n) = (?m \\<le> ?n)\n  enat n \\<le> esize A\n\ngoal (1 subgoal):\n 1. card {k \\<in> A. k < nth_least (lift A) n} = n", "by (cases n, auto simp del: nth_least.simps)"], ["", "end"]]}