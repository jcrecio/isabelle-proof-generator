{"file_name": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction/Basics/Stuttering.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction", "problem_names": ["lemma nth_least_ext_strict_mono:\n    assumes \"k < l\"\n    shows \"nth_least_ext s k < nth_least_ext s l\"", "lemma stutter_selectionI[intro]:\n    assumes \"0 \\<in> s\"\n    assumes \"\\<And> k i. enat i < llength w \\<Longrightarrow> enat (Suc k) < esize s \\<Longrightarrow>\n      nth_least s k < i \\<Longrightarrow> i < nth_least s (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least s k\"\n    assumes \"\\<And> i. enat i < llength w \\<Longrightarrow> finite s \\<Longrightarrow> Max s < i \\<Longrightarrow> w ?! i = w ?! Max s\"\n    shows \"stutter_selection s w\"", "lemma stutter_selectionD_0[dest]:\n    assumes \"stutter_selection s w\"\n    shows \"0 \\<in> s\"", "lemma stutter_selectionD_inside[dest]:\n    assumes \"stutter_selection s w\"\n    assumes \"enat i < llength w\" \"enat (Suc k) < esize s\"\n    assumes \"nth_least s k < i\" \"i < nth_least s (Suc k)\"\n    shows \"w ?! i = w ?! nth_least s k\"", "lemma stutter_selectionD_infinite[dest]:\n    assumes \"stutter_selection s w\"\n    assumes \"enat i < llength w\" \"finite s\" \"Max s < i\"\n    shows \"w ?! i = w ?! Max s\"", "lemma stutter_selection_stutter_sampler[intro]:\n    assumes \"linfinite w\" \"stutter_selection s w\"\n    shows \"stutter_sampler (nth_least_ext s) (lnth w)\"", "lemma stutter_equivI_selection[intro]:\n    assumes \"linfinite u\" \"linfinite v\"\n    assumes \"stutter_selection s u\" \"stutter_selection t v\"\n    assumes \"lselect s u = lselect t v\"\n    shows \"lnth u \\<approx> lnth v\"", "lemma stuttering_invariant_complement[intro!]:\n    assumes \"stuttering_invariant A\"\n    shows \"stuttering_invariant (- A)\"", "lemma stutter_equiv_forw_subst[trans]: \"w\\<^sub>1 = w\\<^sub>2 \\<Longrightarrow> w\\<^sub>2 \\<approx> w\\<^sub>3 \\<Longrightarrow> w\\<^sub>1 \\<approx> w\\<^sub>3\"", "lemma stutter_sampler_build:\n    assumes \"stutter_sampler f w\"\n    shows \"stutter_sampler (0 ## (Suc \\<circ> f)) (a ## w)\"", "lemma stutter_extend_build:\n    assumes \"u \\<approx> v\"\n    shows \"a ## u \\<approx> a ## v\"", "lemma stutter_extend_concat:\n    assumes \"u \\<approx> v\"\n    shows \"w \\<frown> u \\<approx> w \\<frown> v\"", "lemma build_stutter: \"w 0 ## w \\<approx> w\"", "lemma replicate_stutter: \"replicate n (v 0) \\<frown> v \\<approx> v\"", "lemma replicate_stutter': \"u \\<frown> replicate n (v 0) \\<frown> v \\<approx> u \\<frown> v\""], "translations": [["", "lemma nth_least_ext_strict_mono:\n    assumes \"k < l\"\n    shows \"nth_least_ext s k < nth_least_ext s l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s k < nth_least_ext s l", "proof (cases \"enat l < esize s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. enat l < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "case True"], ["proof (state)\nthis:\n  enat l < esize s\n\ngoal (2 subgoals):\n 1. enat l < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 1: \"enat k < esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat k < esize s", "using assms True"], ["proof (prove)\nusing this:\n  k < l\n  enat l < esize s\n\ngoal (1 subgoal):\n 1. enat k < esize s", "by (metis enat_ord_simps(2) less_trans)"], ["proof (state)\nthis:\n  enat k < esize s\n\ngoal (2 subgoals):\n 1. enat l < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s k < nth_least_ext s l", "using nth_least_strict_mono assms True 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>enat ?l < esize ?A; ?k < ?l\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A ?k < nth_least ?A ?l\n  k < l\n  enat l < esize s\n  enat k < esize s\n\ngoal (1 subgoal):\n 1. nth_least_ext s k < nth_least_ext s l", "by simp"], ["proof (state)\nthis:\n  nth_least_ext s k < nth_least_ext s l\n\ngoal (1 subgoal):\n 1. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "case False"], ["proof (state)\nthis:\n  \\<not> enat l < esize s\n\ngoal (1 subgoal):\n 1. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 1: \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using False esize_infinite_enat"], ["proof (prove)\nusing this:\n  \\<not> enat l < esize s\n  infinite ?A \\<Longrightarrow> enat ?k < esize ?A\n\ngoal (1 subgoal):\n 1. finite s", "by auto"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 2: \"enat l \\<ge> esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize s \\<le> enat l", "using False"], ["proof (prove)\nusing this:\n  \\<not> enat l < esize s\n\ngoal (1 subgoal):\n 1. esize s \\<le> enat l", "by simp"], ["proof (state)\nthis:\n  esize s \\<le> enat l\n\ngoal (1 subgoal):\n 1. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 3: \"l \\<ge> card s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card s \\<le> l", "using 1 2"], ["proof (prove)\nusing this:\n  finite s\n  esize s \\<le> enat l\n\ngoal (1 subgoal):\n 1. card s \\<le> l", "by simp"], ["proof (state)\nthis:\n  card s \\<le> l\n\ngoal (1 subgoal):\n 1. \\<not> enat l < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s k < nth_least_ext s l", "proof (cases \"enat k < esize s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "case True"], ["proof (state)\nthis:\n  enat k < esize s\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 4: \"s \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> {}", "using True"], ["proof (prove)\nusing this:\n  enat k < esize s\n\ngoal (1 subgoal):\n 1. s \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> {}\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"nth_least_ext s k = nth_least s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s k = nth_least s k", "using True"], ["proof (prove)\nusing this:\n  enat k < esize s\n\ngoal (1 subgoal):\n 1. nth_least_ext s k = nth_least s k", "by simp"], ["proof (state)\nthis:\n  nth_least_ext s k = nth_least s k\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "also"], ["proof (state)\nthis:\n  nth_least_ext s k = nth_least s k\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"\\<dots> \\<le> Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least s k \\<le> Max s", "using nth_least_le_Max 1 4 True"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}; enat ?n < esize ?A\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A ?n \\<le> Max ?A\n  finite s\n  s \\<noteq> {}\n  enat k < esize s\n\ngoal (1 subgoal):\n 1. nth_least s k \\<le> Max s", "by this"], ["proof (state)\nthis:\n  nth_least s k \\<le> Max s\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "also"], ["proof (state)\nthis:\n  nth_least s k \\<le> Max s\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"\\<dots> < Suc (Max s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max s < Suc (Max s)", "by auto"], ["proof (state)\nthis:\n  Max s < Suc (Max s)\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "also"], ["proof (state)\nthis:\n  Max s < Suc (Max s)\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"\\<dots> \\<le> Suc (Max s + (l - card s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Max s) \\<le> Suc (Max s + (l - card s))", "by auto"], ["proof (state)\nthis:\n  Suc (Max s) \\<le> Suc (Max s + (l - card s))\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "also"], ["proof (state)\nthis:\n  Suc (Max s) \\<le> Suc (Max s + (l - card s))\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"Suc (Max s + (l - card s)) = nth_least_ext s l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Max s + (l - card s)) = nth_least_ext s l", "using 2"], ["proof (prove)\nusing this:\n  esize s \\<le> enat l\n\ngoal (1 subgoal):\n 1. Suc (Max s + (l - card s)) = nth_least_ext s l", "by simp"], ["proof (state)\nthis:\n  Suc (Max s + (l - card s)) = nth_least_ext s l\n\ngoal (2 subgoals):\n 1. enat k < esize s \\<Longrightarrow> nth_least_ext s k < nth_least_ext s l\n 2. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "finally"], ["proof (chain)\npicking this:\n  nth_least_ext s k < nth_least_ext s l", "show ?thesis"], ["proof (prove)\nusing this:\n  nth_least_ext s k < nth_least_ext s l\n\ngoal (1 subgoal):\n 1. nth_least_ext s k < nth_least_ext s l", "by this"], ["proof (state)\nthis:\n  nth_least_ext s k < nth_least_ext s l\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "case False"], ["proof (state)\nthis:\n  \\<not> enat k < esize s\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 4: \"enat k \\<ge> esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize s \\<le> enat k", "using False"], ["proof (prove)\nusing this:\n  \\<not> enat k < esize s\n\ngoal (1 subgoal):\n 1. esize s \\<le> enat k", "by simp"], ["proof (state)\nthis:\n  esize s \\<le> enat k\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have 5: \"k \\<ge> card s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card s \\<le> k", "using 1 4"], ["proof (prove)\nusing this:\n  finite s\n  esize s \\<le> enat k\n\ngoal (1 subgoal):\n 1. card s \\<le> k", "by simp"], ["proof (state)\nthis:\n  card s \\<le> k\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"nth_least_ext s k = Suc (Max s + (k - card s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s k = Suc (Max s + (k - card s))", "using 4"], ["proof (prove)\nusing this:\n  esize s \\<le> enat k\n\ngoal (1 subgoal):\n 1. nth_least_ext s k = Suc (Max s + (k - card s))", "by simp"], ["proof (state)\nthis:\n  nth_least_ext s k = Suc (Max s + (k - card s))\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "also"], ["proof (state)\nthis:\n  nth_least_ext s k = Suc (Max s + (k - card s))\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"\\<dots> < Suc (Max s + (l - card s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Max s + (k - card s)) < Suc (Max s + (l - card s))", "using assms 5"], ["proof (prove)\nusing this:\n  k < l\n  card s \\<le> k\n\ngoal (1 subgoal):\n 1. Suc (Max s + (k - card s)) < Suc (Max s + (l - card s))", "by simp"], ["proof (state)\nthis:\n  Suc (Max s + (k - card s)) < Suc (Max s + (l - card s))\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "also"], ["proof (state)\nthis:\n  Suc (Max s + (k - card s)) < Suc (Max s + (l - card s))\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "have \"\\<dots> = nth_least_ext s l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Max s + (l - card s)) = nth_least_ext s l", "using 2"], ["proof (prove)\nusing this:\n  esize s \\<le> enat l\n\ngoal (1 subgoal):\n 1. Suc (Max s + (l - card s)) = nth_least_ext s l", "by simp"], ["proof (state)\nthis:\n  Suc (Max s + (l - card s)) = nth_least_ext s l\n\ngoal (1 subgoal):\n 1. \\<not> enat k < esize s \\<Longrightarrow>\n    nth_least_ext s k < nth_least_ext s l", "finally"], ["proof (chain)\npicking this:\n  nth_least_ext s k < nth_least_ext s l", "show ?thesis"], ["proof (prove)\nusing this:\n  nth_least_ext s k < nth_least_ext s l\n\ngoal (1 subgoal):\n 1. nth_least_ext s k < nth_least_ext s l", "by this"], ["proof (state)\nthis:\n  nth_least_ext s k < nth_least_ext s l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nth_least_ext s k < nth_least_ext s l\n\ngoal:\nNo subgoals!", "qed"], ["", "definition stutter_selection :: \"nat set \\<Rightarrow> 'a llist \\<Rightarrow> bool\"\n    where \"stutter_selection s w \\<equiv> 0 \\<in> s \\<and>\n      (\\<forall> k i. enat i < llength w \\<longrightarrow> enat (Suc k) < esize s \\<longrightarrow>\n      nth_least s k < i \\<longrightarrow> i < nth_least s (Suc k) \\<longrightarrow> w ?! i = w ?! nth_least s k) \\<and>\n      (\\<forall> i. enat i < llength w \\<longrightarrow> finite s \\<longrightarrow> Max s < i \\<longrightarrow> w ?! i = w ?! Max s)\""], ["", "lemma stutter_selectionI[intro]:\n    assumes \"0 \\<in> s\"\n    assumes \"\\<And> k i. enat i < llength w \\<Longrightarrow> enat (Suc k) < esize s \\<Longrightarrow>\n      nth_least s k < i \\<Longrightarrow> i < nth_least s (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least s k\"\n    assumes \"\\<And> i. enat i < llength w \\<Longrightarrow> finite s \\<Longrightarrow> Max s < i \\<Longrightarrow> w ?! i = w ?! Max s\"\n    shows \"stutter_selection s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_selection s w", "using assms"], ["proof (prove)\nusing this:\n  0 \\<in> s\n  \\<lbrakk>enat ?i < llength w; enat (Suc ?k) < esize s;\n   nth_least s ?k < ?i; ?i < nth_least s (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> w ?! ?i = w ?! nth_least s ?k\n  \\<lbrakk>enat ?i < llength w; finite s; Max s < ?i\\<rbrakk>\n  \\<Longrightarrow> w ?! ?i = w ?! Max s\n\ngoal (1 subgoal):\n 1. stutter_selection s w", "unfolding stutter_selection_def"], ["proof (prove)\nusing this:\n  0 \\<in> s\n  \\<lbrakk>enat ?i < llength w; enat (Suc ?k) < esize s;\n   nth_least s ?k < ?i; ?i < nth_least s (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> w ?! ?i = w ?! nth_least s ?k\n  \\<lbrakk>enat ?i < llength w; finite s; Max s < ?i\\<rbrakk>\n  \\<Longrightarrow> w ?! ?i = w ?! Max s\n\ngoal (1 subgoal):\n 1. 0 \\<in> s \\<and>\n    (\\<forall>k i.\n        enat i < llength w \\<longrightarrow>\n        enat (Suc k) < esize s \\<longrightarrow>\n        nth_least s k < i \\<longrightarrow>\n        i < nth_least s (Suc k) \\<longrightarrow>\n        w ?! i = w ?! nth_least s k) \\<and>\n    (\\<forall>i.\n        enat i < llength w \\<longrightarrow>\n        finite s \\<longrightarrow>\n        Max s < i \\<longrightarrow> w ?! i = w ?! Max s)", "by auto"], ["", "lemma stutter_selectionD_0[dest]:\n    assumes \"stutter_selection s w\"\n    shows \"0 \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> s", "using assms"], ["proof (prove)\nusing this:\n  stutter_selection s w\n\ngoal (1 subgoal):\n 1. 0 \\<in> s", "unfolding stutter_selection_def"], ["proof (prove)\nusing this:\n  0 \\<in> s \\<and>\n  (\\<forall>k i.\n      enat i < llength w \\<longrightarrow>\n      enat (Suc k) < esize s \\<longrightarrow>\n      nth_least s k < i \\<longrightarrow>\n      i < nth_least s (Suc k) \\<longrightarrow>\n      w ?! i = w ?! nth_least s k) \\<and>\n  (\\<forall>i.\n      enat i < llength w \\<longrightarrow>\n      finite s \\<longrightarrow>\n      Max s < i \\<longrightarrow> w ?! i = w ?! Max s)\n\ngoal (1 subgoal):\n 1. 0 \\<in> s", "by auto"], ["", "lemma stutter_selectionD_inside[dest]:\n    assumes \"stutter_selection s w\"\n    assumes \"enat i < llength w\" \"enat (Suc k) < esize s\"\n    assumes \"nth_least s k < i\" \"i < nth_least s (Suc k)\"\n    shows \"w ?! i = w ?! nth_least s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least s k", "using assms"], ["proof (prove)\nusing this:\n  stutter_selection s w\n  enat i < llength w\n  enat (Suc k) < esize s\n  nth_least s k < i\n  i < nth_least s (Suc k)\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least s k", "unfolding stutter_selection_def"], ["proof (prove)\nusing this:\n  0 \\<in> s \\<and>\n  (\\<forall>k i.\n      enat i < llength w \\<longrightarrow>\n      enat (Suc k) < esize s \\<longrightarrow>\n      nth_least s k < i \\<longrightarrow>\n      i < nth_least s (Suc k) \\<longrightarrow>\n      w ?! i = w ?! nth_least s k) \\<and>\n  (\\<forall>i.\n      enat i < llength w \\<longrightarrow>\n      finite s \\<longrightarrow>\n      Max s < i \\<longrightarrow> w ?! i = w ?! Max s)\n  enat i < llength w\n  enat (Suc k) < esize s\n  nth_least s k < i\n  i < nth_least s (Suc k)\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least s k", "by auto"], ["", "lemma stutter_selectionD_infinite[dest]:\n    assumes \"stutter_selection s w\"\n    assumes \"enat i < llength w\" \"finite s\" \"Max s < i\"\n    shows \"w ?! i = w ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "using assms"], ["proof (prove)\nusing this:\n  stutter_selection s w\n  enat i < llength w\n  finite s\n  Max s < i\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "unfolding stutter_selection_def"], ["proof (prove)\nusing this:\n  0 \\<in> s \\<and>\n  (\\<forall>k i.\n      enat i < llength w \\<longrightarrow>\n      enat (Suc k) < esize s \\<longrightarrow>\n      nth_least s k < i \\<longrightarrow>\n      i < nth_least s (Suc k) \\<longrightarrow>\n      w ?! i = w ?! nth_least s k) \\<and>\n  (\\<forall>i.\n      enat i < llength w \\<longrightarrow>\n      finite s \\<longrightarrow>\n      Max s < i \\<longrightarrow> w ?! i = w ?! Max s)\n  enat i < llength w\n  finite s\n  Max s < i\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "by auto"], ["", "lemma stutter_selection_stutter_sampler[intro]:\n    assumes \"linfinite w\" \"stutter_selection s w\"\n    shows \"stutter_sampler (nth_least_ext s) (lnth w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (nth_least_ext s) ((?!) w)", "unfolding stutter_sampler_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s 0 = 0 \\<and>\n    strict_mono (nth_least_ext s) \\<and>\n    (\\<forall>k n.\n        nth_least_ext s k < n \\<and>\n        n < nth_least_ext s (Suc k) \\<longrightarrow>\n        w ?! n = w ?! nth_least_ext s k)", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. nth_least_ext s 0 = 0\n 2. strict_mono (nth_least_ext s)\n 3. \\<And>k n.\n       \\<lbrakk>nth_least_ext s k < n; n < nth_least_ext s (Suc k)\\<rbrakk>\n       \\<Longrightarrow> w ?! n = w ?! nth_least_ext s k", "show \"nth_least_ext s 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least_ext s 0 = 0", "using assms(2)"], ["proof (prove)\nusing this:\n  stutter_selection s w\n\ngoal (1 subgoal):\n 1. nth_least_ext s 0 = 0", "by (cases \"enat 0 < esize s\", auto)"], ["proof (state)\nthis:\n  nth_least_ext s 0 = 0\n\ngoal (2 subgoals):\n 1. strict_mono (nth_least_ext s)\n 2. \\<And>k n.\n       \\<lbrakk>nth_least_ext s k < n; n < nth_least_ext s (Suc k)\\<rbrakk>\n       \\<Longrightarrow> w ?! n = w ?! nth_least_ext s k", "show \"strict_mono (nth_least_ext s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (nth_least_ext s)", "using strict_monoI nth_least_ext_strict_mono"], ["proof (prove)\nusing this:\n  (\\<And>x y. x < y \\<Longrightarrow> ?f x < ?f y) \\<Longrightarrow>\n  strict_mono ?f\n  ?k < ?l \\<Longrightarrow> nth_least_ext ?s ?k < nth_least_ext ?s ?l\n\ngoal (1 subgoal):\n 1. strict_mono (nth_least_ext s)", "by blast"], ["proof (state)\nthis:\n  strict_mono (nth_least_ext s)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>nth_least_ext s k < n; n < nth_least_ext s (Suc k)\\<rbrakk>\n       \\<Longrightarrow> w ?! n = w ?! nth_least_ext s k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>nth_least_ext s k < n; n < nth_least_ext s (Suc k)\\<rbrakk>\n       \\<Longrightarrow> w ?! n = w ?! nth_least_ext s k", "fix k i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>nth_least_ext s k < n; n < nth_least_ext s (Suc k)\\<rbrakk>\n       \\<Longrightarrow> w ?! n = w ?! nth_least_ext s k", "assume 1: \"nth_least_ext s k < i\" \"i < nth_least_ext s (Suc k)\""], ["proof (state)\nthis:\n  nth_least_ext s k < i\n  i < nth_least_ext s (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>nth_least_ext s k < n; n < nth_least_ext s (Suc k)\\<rbrakk>\n       \\<Longrightarrow> w ?! n = w ?! nth_least_ext s k", "show \"w ?! i = w ?! nth_least_ext s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least_ext s k", "proof (cases \"enat (Suc k)\" \"esize s\" rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. enat (Suc k) < esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 3. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "case less"], ["proof (state)\nthis:\n  enat (Suc k) < esize s\n\ngoal (3 subgoals):\n 1. enat (Suc k) < esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 3. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"w ?! i = w ?! nth_least s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least s k", "proof (rule stutter_selectionD_inside)"], ["proof (state)\ngoal (5 subgoals):\n 1. stutter_selection s w\n 2. enat i < llength w\n 3. enat (Suc k) < esize s\n 4. nth_least s k < i\n 5. i < nth_least s (Suc k)", "show \"stutter_selection s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_selection s w", "using assms(2)"], ["proof (prove)\nusing this:\n  stutter_selection s w\n\ngoal (1 subgoal):\n 1. stutter_selection s w", "by this"], ["proof (state)\nthis:\n  stutter_selection s w\n\ngoal (4 subgoals):\n 1. enat i < llength w\n 2. enat (Suc k) < esize s\n 3. nth_least s k < i\n 4. i < nth_least s (Suc k)", "show \"enat i < llength w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength w", "using assms(1)"], ["proof (prove)\nusing this:\n  linfinite w\n\ngoal (1 subgoal):\n 1. enat i < llength w", "by auto"], ["proof (state)\nthis:\n  enat i < llength w\n\ngoal (3 subgoals):\n 1. enat (Suc k) < esize s\n 2. nth_least s k < i\n 3. i < nth_least s (Suc k)", "show \"enat (Suc k) < esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (Suc k) < esize s", "using less"], ["proof (prove)\nusing this:\n  enat (Suc k) < esize s\n\ngoal (1 subgoal):\n 1. enat (Suc k) < esize s", "by this"], ["proof (state)\nthis:\n  enat (Suc k) < esize s\n\ngoal (2 subgoals):\n 1. nth_least s k < i\n 2. i < nth_least s (Suc k)", "show \"nth_least s k < i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least s k < i", "using 1(1) less"], ["proof (prove)\nusing this:\n  nth_least_ext s k < i\n  enat (Suc k) < esize s\n\ngoal (1 subgoal):\n 1. nth_least s k < i", "by auto"], ["proof (state)\nthis:\n  nth_least s k < i\n\ngoal (1 subgoal):\n 1. i < nth_least s (Suc k)", "show \"i < nth_least s (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < nth_least s (Suc k)", "using 1(2) less"], ["proof (prove)\nusing this:\n  i < nth_least_ext s (Suc k)\n  enat (Suc k) < esize s\n\ngoal (1 subgoal):\n 1. i < nth_least s (Suc k)", "by simp"], ["proof (state)\nthis:\n  i < nth_least s (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w ?! i = w ?! nth_least s k\n\ngoal (3 subgoals):\n 1. enat (Suc k) < esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 3. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "also"], ["proof (state)\nthis:\n  w ?! i = w ?! nth_least s k\n\ngoal (3 subgoals):\n 1. enat (Suc k) < esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 3. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"w ?! nth_least s k = w ?! nth_least_ext s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! nth_least s k = w ?! nth_least_ext s k", "using less"], ["proof (prove)\nusing this:\n  enat (Suc k) < esize s\n\ngoal (1 subgoal):\n 1. w ?! nth_least s k = w ?! nth_least_ext s k", "by auto"], ["proof (state)\nthis:\n  w ?! nth_least s k = w ?! nth_least_ext s k\n\ngoal (3 subgoals):\n 1. enat (Suc k) < esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 3. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "finally"], ["proof (chain)\npicking this:\n  w ?! i = w ?! nth_least_ext s k", "show ?thesis"], ["proof (prove)\nusing this:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least_ext s k", "by this"], ["proof (state)\nthis:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "case equal"], ["proof (state)\nthis:\n  enat (Suc k) = esize s\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 2: \"enat k < esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat k < esize s", "using equal"], ["proof (prove)\nusing this:\n  enat (Suc k) = esize s\n\ngoal (1 subgoal):\n 1. enat k < esize s", "by (metis enat_ord_simps(2) lessI)"], ["proof (state)\nthis:\n  enat k < esize s\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 3: \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using equal"], ["proof (prove)\nusing this:\n  enat (Suc k) = esize s\n\ngoal (1 subgoal):\n 1. finite s", "by (metis esize_infinite_enat less_irrefl)"], ["proof (state)\nthis:\n  finite s\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 4: \"\\<And> i. i > Max s \\<Longrightarrow> w ?! i = w ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Max s < i \\<Longrightarrow> w ?! i = w ?! Max s", "using assms 3"], ["proof (prove)\nusing this:\n  linfinite w\n  stutter_selection s w\n  finite s\n\ngoal (1 subgoal):\n 1. \\<And>i. Max s < i \\<Longrightarrow> w ?! i = w ?! Max s", "by auto"], ["proof (state)\nthis:\n  Max s < ?i \\<Longrightarrow> w ?! ?i = w ?! Max s\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 5: \"k = card s - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = card s - 1", "using equal 3"], ["proof (prove)\nusing this:\n  enat (Suc k) = esize s\n  finite s\n\ngoal (1 subgoal):\n 1. k = card s - 1", "by (metis diff_Suc_1 enat.inject esize_set.simps(1))"], ["proof (state)\nthis:\n  k = card s - 1\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"Max s = nth_least s (card s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max s = nth_least s (card s - 1)", "using nth_least_Max 3 assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A (card ?A - 1) = Max ?A\n  finite s\n  stutter_selection s w\n\ngoal (1 subgoal):\n 1. Max s = nth_least s (card s - 1)", "by force"], ["proof (state)\nthis:\n  Max s = nth_least s (card s - 1)\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "also"], ["proof (state)\nthis:\n  Max s = nth_least s (card s - 1)\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"\\<dots> = nth_least s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least s (card s - 1) = nth_least s k", "unfolding 5"], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least s (card s - 1) = nth_least s (card s - 1)", "by rule"], ["proof (state)\nthis:\n  nth_least s (card s - 1) = nth_least s k\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "also"], ["proof (state)\nthis:\n  nth_least s (card s - 1) = nth_least s k\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"\\<dots> = nth_least_ext s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nth_least s k = nth_least_ext s k", "using 2"], ["proof (prove)\nusing this:\n  enat k < esize s\n\ngoal (1 subgoal):\n 1. nth_least s k = nth_least_ext s k", "by simp"], ["proof (state)\nthis:\n  nth_least s k = nth_least_ext s k\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "finally"], ["proof (chain)\npicking this:\n  Max s = nth_least_ext s k", "have 6: \"Max s = nth_least_ext s k\""], ["proof (prove)\nusing this:\n  Max s = nth_least_ext s k\n\ngoal (1 subgoal):\n 1. Max s = nth_least_ext s k", "by this"], ["proof (state)\nthis:\n  Max s = nth_least_ext s k\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"w ?! i = w ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "using 1(1) 4 6"], ["proof (prove)\nusing this:\n  nth_least_ext s k < i\n  Max s < ?i \\<Longrightarrow> w ?! ?i = w ?! Max s\n  Max s = nth_least_ext s k\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "by auto"], ["proof (state)\nthis:\n  w ?! i = w ?! Max s\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "also"], ["proof (state)\nthis:\n  w ?! i = w ?! Max s\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"\\<dots> = w ?! nth_least_ext s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! Max s = w ?! nth_least_ext s k", "unfolding 6"], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! nth_least_ext s k = w ?! nth_least_ext s k", "by rule"], ["proof (state)\nthis:\n  w ?! Max s = w ?! nth_least_ext s k\n\ngoal (2 subgoals):\n 1. enat (Suc k) = esize s \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k\n 2. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "finally"], ["proof (chain)\npicking this:\n  w ?! i = w ?! nth_least_ext s k", "show ?thesis"], ["proof (prove)\nusing this:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least_ext s k", "by this"], ["proof (state)\nthis:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "case greater"], ["proof (state)\nthis:\n  esize s < enat (Suc k)\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 2: \"enat k \\<ge> esize s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize s \\<le> enat k", "using greater"], ["proof (prove)\nusing this:\n  esize s < enat (Suc k)\n\ngoal (1 subgoal):\n 1. esize s \\<le> enat k", "by (metis Suc_ile_eq not_le)"], ["proof (state)\nthis:\n  esize s \\<le> enat k\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 3: \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using greater"], ["proof (prove)\nusing this:\n  esize s < enat (Suc k)\n\ngoal (1 subgoal):\n 1. finite s", "by (metis esize_infinite_enat less_asym)"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have 4: \"\\<And> i. i > Max s \\<Longrightarrow> w ?! i = w ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Max s < i \\<Longrightarrow> w ?! i = w ?! Max s", "using assms 3"], ["proof (prove)\nusing this:\n  linfinite w\n  stutter_selection s w\n  finite s\n\ngoal (1 subgoal):\n 1. \\<And>i. Max s < i \\<Longrightarrow> w ?! i = w ?! Max s", "by auto"], ["proof (state)\nthis:\n  Max s < ?i \\<Longrightarrow> w ?! ?i = w ?! Max s\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"w ?! i = w ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "using 1(1) 2 4"], ["proof (prove)\nusing this:\n  nth_least_ext s k < i\n  esize s \\<le> enat k\n  Max s < ?i \\<Longrightarrow> w ?! ?i = w ?! Max s\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! Max s", "by auto"], ["proof (state)\nthis:\n  w ?! i = w ?! Max s\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "also"], ["proof (state)\nthis:\n  w ?! i = w ?! Max s\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"\\<dots> = w ?! Suc (Max s + (k - card s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! Max s = w ?! Suc (Max s + (k - card s))", "using 4"], ["proof (prove)\nusing this:\n  Max s < ?i \\<Longrightarrow> w ?! ?i = w ?! Max s\n\ngoal (1 subgoal):\n 1. w ?! Max s = w ?! Suc (Max s + (k - card s))", "by simp"], ["proof (state)\nthis:\n  w ?! Max s = w ?! Suc (Max s + (k - card s))\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "also"], ["proof (state)\nthis:\n  w ?! Max s = w ?! Suc (Max s + (k - card s))\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "have \"\\<dots> = w ?! nth_least_ext s k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w ?! Suc (Max s + (k - card s)) = w ?! nth_least_ext s k", "using 2"], ["proof (prove)\nusing this:\n  esize s \\<le> enat k\n\ngoal (1 subgoal):\n 1. w ?! Suc (Max s + (k - card s)) = w ?! nth_least_ext s k", "by simp"], ["proof (state)\nthis:\n  w ?! Suc (Max s + (k - card s)) = w ?! nth_least_ext s k\n\ngoal (1 subgoal):\n 1. esize s < enat (Suc k) \\<Longrightarrow> w ?! i = w ?! nth_least_ext s k", "finally"], ["proof (chain)\npicking this:\n  w ?! i = w ?! nth_least_ext s k", "show ?thesis"], ["proof (prove)\nusing this:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal (1 subgoal):\n 1. w ?! i = w ?! nth_least_ext s k", "by this"], ["proof (state)\nthis:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w ?! i = w ?! nth_least_ext s k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_equivI_selection[intro]:\n    assumes \"linfinite u\" \"linfinite v\"\n    assumes \"stutter_selection s u\" \"stutter_selection t v\"\n    assumes \"lselect s u = lselect t v\"\n    shows \"lnth u \\<approx> lnth v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (?!) u \\<approx> (?!) v", "proof (rule stutter_equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. stutter_sampler ?f ((?!) u)\n 2. stutter_sampler ?g ((?!) v)\n 3. (?!) u \\<circ> ?f = (?!) v \\<circ> ?g", "have 1: \"llength (lselect s u) = llength (lselect t v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (lselect s u) = llength (lselect t v)", "unfolding assms(5)"], ["proof (prove)\ngoal (1 subgoal):\n 1. llength (lselect t v) = llength (lselect t v)", "by rule"], ["proof (state)\nthis:\n  llength (lselect s u) = llength (lselect t v)\n\ngoal (3 subgoals):\n 1. stutter_sampler ?f ((?!) u)\n 2. stutter_sampler ?g ((?!) v)\n 3. (?!) u \\<circ> ?f = (?!) v \\<circ> ?g", "have 2: \"esize s = esize t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize s = esize t", "using 1 assms(1, 2)"], ["proof (prove)\nusing this:\n  llength (lselect s u) = llength (lselect t v)\n  linfinite u\n  linfinite v\n\ngoal (1 subgoal):\n 1. esize s = esize t", "unfolding lselect_llength"], ["proof (prove)\nusing this:\n  esize {i \\<in> s. enat i < llength u} =\n  esize {i \\<in> t. enat i < llength v}\n  linfinite u\n  linfinite v\n\ngoal (1 subgoal):\n 1. esize s = esize t", "by simp"], ["proof (state)\nthis:\n  esize s = esize t\n\ngoal (3 subgoals):\n 1. stutter_sampler ?f ((?!) u)\n 2. stutter_sampler ?g ((?!) v)\n 3. (?!) u \\<circ> ?f = (?!) v \\<circ> ?g", "show \"stutter_sampler (nth_least_ext s) (lnth u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (nth_least_ext s) ((?!) u)", "using assms(1, 3)"], ["proof (prove)\nusing this:\n  linfinite u\n  stutter_selection s u\n\ngoal (1 subgoal):\n 1. stutter_sampler (nth_least_ext s) ((?!) u)", "by rule"], ["proof (state)\nthis:\n  stutter_sampler (nth_least_ext s) ((?!) u)\n\ngoal (2 subgoals):\n 1. stutter_sampler ?g ((?!) v)\n 2. (?!) u \\<circ> nth_least_ext s = (?!) v \\<circ> ?g", "show \"stutter_sampler (nth_least_ext t) (lnth v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (nth_least_ext t) ((?!) v)", "using assms(2, 4)"], ["proof (prove)\nusing this:\n  linfinite v\n  stutter_selection t v\n\ngoal (1 subgoal):\n 1. stutter_sampler (nth_least_ext t) ((?!) v)", "by rule"], ["proof (state)\nthis:\n  stutter_sampler (nth_least_ext t) ((?!) v)\n\ngoal (1 subgoal):\n 1. (?!) u \\<circ> nth_least_ext s = (?!) v \\<circ> nth_least_ext t", "show \"lnth u \\<circ> nth_least_ext s = lnth v \\<circ> nth_least_ext t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (?!) u \\<circ> nth_least_ext s = (?!) v \\<circ> nth_least_ext t", "proof (rule ext, unfold comp_apply)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. u ?! nth_least_ext s x = v ?! nth_least_ext t x", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. u ?! nth_least_ext s x = v ?! nth_least_ext t x", "show \"u ?! nth_least_ext s i = v ?! nth_least_ext t i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = v ?! nth_least_ext t i", "proof (cases \"enat i < esize s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "case True"], ["proof (state)\nthis:\n  enat i < esize s\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 3: \"enat i < llength (lselect s u)\" \"enat i < llength (lselect t v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat i < llength (lselect s u) &&& enat i < llength (lselect t v)", "using assms(1, 2) 2 True"], ["proof (prove)\nusing this:\n  linfinite u\n  linfinite v\n  esize s = esize t\n  enat i < esize s\n\ngoal (1 subgoal):\n 1. enat i < llength (lselect s u) &&& enat i < llength (lselect t v)", "unfolding lselect_llength"], ["proof (prove)\nusing this:\n  linfinite u\n  linfinite v\n  esize s = esize t\n  enat i < esize s\n\ngoal (1 subgoal):\n 1. enat i < esize {i \\<in> s. enat i < llength u} &&&\n    enat i < esize {i \\<in> t. enat i < llength v}", "by auto"], ["proof (state)\nthis:\n  enat i < llength (lselect s u)\n  enat i < llength (lselect t v)\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"u ?! nth_least_ext s i = u ?! nth_least s i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = u ?! nth_least s i", "using True"], ["proof (prove)\nusing this:\n  enat i < esize s\n\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = u ?! nth_least s i", "by simp"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = u ?! nth_least s i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = u ?! nth_least s i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = lselect s u ?! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! nth_least s i = lselect s u ?! i", "using 3(1)"], ["proof (prove)\nusing this:\n  enat i < llength (lselect s u)\n\ngoal (1 subgoal):\n 1. u ?! nth_least s i = lselect s u ?! i", "by simp"], ["proof (state)\nthis:\n  u ?! nth_least s i = lselect s u ?! i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  u ?! nth_least s i = lselect s u ?! i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = lselect t v ?! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect s u ?! i = lselect t v ?! i", "unfolding assms(5)"], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect t v ?! i = lselect t v ?! i", "by rule"], ["proof (state)\nthis:\n  lselect s u ?! i = lselect t v ?! i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  lselect s u ?! i = lselect t v ?! i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = v ?! nth_least t i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect t v ?! i = v ?! nth_least t i", "using 3(2)"], ["proof (prove)\nusing this:\n  enat i < llength (lselect t v)\n\ngoal (1 subgoal):\n 1. lselect t v ?! i = v ?! nth_least t i", "by simp"], ["proof (state)\nthis:\n  lselect t v ?! i = v ?! nth_least t i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  lselect t v ?! i = v ?! nth_least t i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = v ?! nth_least_ext t i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v ?! nth_least t i = v ?! nth_least_ext t i", "using True"], ["proof (prove)\nusing this:\n  enat i < esize s\n\ngoal (1 subgoal):\n 1. v ?! nth_least t i = v ?! nth_least_ext t i", "unfolding 2"], ["proof (prove)\nusing this:\n  enat i < esize t\n\ngoal (1 subgoal):\n 1. v ?! nth_least t i = v ?! nth_least_ext t i", "by simp"], ["proof (state)\nthis:\n  v ?! nth_least t i = v ?! nth_least_ext t i\n\ngoal (2 subgoals):\n 1. enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i\n 2. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "finally"], ["proof (chain)\npicking this:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i", "show \"u ?! nth_least_ext s i = v ?! nth_least_ext t i\""], ["proof (prove)\nusing this:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i\n\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = v ?! nth_least_ext t i", "by this"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "case False"], ["proof (state)\nthis:\n  \\<not> enat i < esize s\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 3: \"s \\<noteq> {}\" \"t \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> {} &&& t \\<noteq> {}", "using assms(3, 4)"], ["proof (prove)\nusing this:\n  stutter_selection s u\n  stutter_selection t v\n\ngoal (1 subgoal):\n 1. s \\<noteq> {} &&& t \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> {}\n  t \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 4: \"finite s\" \"finite t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s &&& finite t", "using esize_infinite_enat 2 False"], ["proof (prove)\nusing this:\n  infinite ?A \\<Longrightarrow> enat ?k < esize ?A\n  esize s = esize t\n  \\<not> enat i < esize s\n\ngoal (1 subgoal):\n 1. finite s &&& finite t", "by metis+"], ["proof (state)\nthis:\n  finite s\n  finite t\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 5: \"\\<And> i. i > Max s \\<Longrightarrow> u ?! i = u ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Max s < i \\<Longrightarrow> u ?! i = u ?! Max s", "using assms(1, 3) 4(1)"], ["proof (prove)\nusing this:\n  linfinite u\n  stutter_selection s u\n  finite s\n\ngoal (1 subgoal):\n 1. \\<And>i. Max s < i \\<Longrightarrow> u ?! i = u ?! Max s", "by auto"], ["proof (state)\nthis:\n  Max s < ?i \\<Longrightarrow> u ?! ?i = u ?! Max s\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 6: \"\\<And> i. i > Max t \\<Longrightarrow> v ?! i = v ?! Max t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. Max t < i \\<Longrightarrow> v ?! i = v ?! Max t", "using assms(2, 4) 4(2)"], ["proof (prove)\nusing this:\n  linfinite v\n  stutter_selection t v\n  finite t\n\ngoal (1 subgoal):\n 1. \\<And>i. Max t < i \\<Longrightarrow> v ?! i = v ?! Max t", "by auto"], ["proof (state)\nthis:\n  Max t < ?i \\<Longrightarrow> v ?! ?i = v ?! Max t\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 7: \"esize s = enat (card s)\" \"esize t = enat (card t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esize s = enat (card s) &&& esize t = enat (card t)", "using 4"], ["proof (prove)\nusing this:\n  finite s\n  finite t\n\ngoal (1 subgoal):\n 1. esize s = enat (card s) &&& esize t = enat (card t)", "by auto"], ["proof (state)\nthis:\n  esize s = enat (card s)\n  esize t = enat (card t)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 8: \"card s \\<noteq> 0\" \"card t \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card s \\<noteq> 0 &&& card t \\<noteq> 0", "using 3 4"], ["proof (prove)\nusing this:\n  s \\<noteq> {}\n  t \\<noteq> {}\n  finite s\n  finite t\n\ngoal (1 subgoal):\n 1. card s \\<noteq> 0 &&& card t \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  card s \\<noteq> 0\n  card t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 9: \"enat (card s - 1) < llength (lselect s u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card s - 1) < llength (lselect s u)", "using assms(1) 7(1) 8(1)"], ["proof (prove)\nusing this:\n  linfinite u\n  esize s = enat (card s)\n  card s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. enat (card s - 1) < llength (lselect s u)", "unfolding lselect_llength"], ["proof (prove)\nusing this:\n  linfinite u\n  esize s = enat (card s)\n  card s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. enat (card s - 1) < esize {i \\<in> s. enat i < llength u}", "by simp"], ["proof (state)\nthis:\n  enat (card s - 1) < llength (lselect s u)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have 10: \"enat (card t - 1) < llength (lselect t v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (card t - 1) < llength (lselect t v)", "using assms(2) 7(2) 8(2)"], ["proof (prove)\nusing this:\n  linfinite v\n  esize t = enat (card t)\n  card t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. enat (card t - 1) < llength (lselect t v)", "unfolding lselect_llength"], ["proof (prove)\nusing this:\n  linfinite v\n  esize t = enat (card t)\n  card t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. enat (card t - 1) < esize {i \\<in> t. enat i < llength v}", "by simp"], ["proof (state)\nthis:\n  enat (card t - 1) < llength (lselect t v)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"u ?! nth_least_ext s i = u ?! Suc (Max s + (i - card s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = u ?! Suc (Max s + (i - card s))", "using False"], ["proof (prove)\nusing this:\n  \\<not> enat i < esize s\n\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = u ?! Suc (Max s + (i - card s))", "by simp"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = u ?! Suc (Max s + (i - card s))\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = u ?! Suc (Max s + (i - card s))\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = u ?! Max s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! Suc (Max s + (i - card s)) = u ?! Max s", "using 5"], ["proof (prove)\nusing this:\n  Max s < ?i \\<Longrightarrow> u ?! ?i = u ?! Max s\n\ngoal (1 subgoal):\n 1. u ?! Suc (Max s + (i - card s)) = u ?! Max s", "by simp"], ["proof (state)\nthis:\n  u ?! Suc (Max s + (i - card s)) = u ?! Max s\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  u ?! Suc (Max s + (i - card s)) = u ?! Max s\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = u ?! nth_least s (card s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! Max s = u ?! nth_least s (card s - 1)", "using nth_least_Max 4(1) 3(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A (card ?A - 1) = Max ?A\n  finite s\n  s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. u ?! Max s = u ?! nth_least s (card s - 1)", "by force"], ["proof (state)\nthis:\n  u ?! Max s = u ?! nth_least s (card s - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  u ?! Max s = u ?! nth_least s (card s - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = lselect s u ?! (card s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u ?! nth_least s (card s - 1) = lselect s u ?! (card s - 1)", "using lselect_lnth 9"], ["proof (prove)\nusing this:\n  enat ?i < llength (lselect ?s ?w) \\<Longrightarrow>\n  lselect ?s ?w ?! ?i = ?w ?! nth_least ?s ?i\n  enat (card s - 1) < llength (lselect s u)\n\ngoal (1 subgoal):\n 1. u ?! nth_least s (card s - 1) = lselect s u ?! (card s - 1)", "by simp"], ["proof (state)\nthis:\n  u ?! nth_least s (card s - 1) = lselect s u ?! (card s - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  u ?! nth_least s (card s - 1) = lselect s u ?! (card s - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = lselect s u ?! (card t - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect s u ?! (card s - 1) = lselect s u ?! (card t - 1)", "using 2 4"], ["proof (prove)\nusing this:\n  esize s = esize t\n  finite s\n  finite t\n\ngoal (1 subgoal):\n 1. lselect s u ?! (card s - 1) = lselect s u ?! (card t - 1)", "by simp"], ["proof (state)\nthis:\n  lselect s u ?! (card s - 1) = lselect s u ?! (card t - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  lselect s u ?! (card s - 1) = lselect s u ?! (card t - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = lselect t v ?! (card t - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect s u ?! (card t - 1) = lselect t v ?! (card t - 1)", "unfolding assms(5)"], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect t v ?! (card t - 1) = lselect t v ?! (card t - 1)", "by rule"], ["proof (state)\nthis:\n  lselect s u ?! (card t - 1) = lselect t v ?! (card t - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  lselect s u ?! (card t - 1) = lselect t v ?! (card t - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = v ?! nth_least t (card t - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lselect t v ?! (card t - 1) = v ?! nth_least t (card t - 1)", "using lselect_lnth 10"], ["proof (prove)\nusing this:\n  enat ?i < llength (lselect ?s ?w) \\<Longrightarrow>\n  lselect ?s ?w ?! ?i = ?w ?! nth_least ?s ?i\n  enat (card t - 1) < llength (lselect t v)\n\ngoal (1 subgoal):\n 1. lselect t v ?! (card t - 1) = v ?! nth_least t (card t - 1)", "by simp"], ["proof (state)\nthis:\n  lselect t v ?! (card t - 1) = v ?! nth_least t (card t - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  lselect t v ?! (card t - 1) = v ?! nth_least t (card t - 1)\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = v ?! Max t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v ?! nth_least t (card t - 1) = v ?! Max t", "using nth_least_Max 4(2) 3(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> nth_least ?A (card ?A - 1) = Max ?A\n  finite t\n  t \\<noteq> {}\n\ngoal (1 subgoal):\n 1. v ?! nth_least t (card t - 1) = v ?! Max t", "by force"], ["proof (state)\nthis:\n  v ?! nth_least t (card t - 1) = v ?! Max t\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  v ?! nth_least t (card t - 1) = v ?! Max t\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = v ?! Suc (Max t + (i - card t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v ?! Max t = v ?! Suc (Max t + (i - card t))", "using 6"], ["proof (prove)\nusing this:\n  Max t < ?i \\<Longrightarrow> v ?! ?i = v ?! Max t\n\ngoal (1 subgoal):\n 1. v ?! Max t = v ?! Suc (Max t + (i - card t))", "by simp"], ["proof (state)\nthis:\n  v ?! Max t = v ?! Suc (Max t + (i - card t))\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "also"], ["proof (state)\nthis:\n  v ?! Max t = v ?! Suc (Max t + (i - card t))\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "have \"\\<dots> = v ?! nth_least_ext t i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v ?! Suc (Max t + (i - card t)) = v ?! nth_least_ext t i", "using 2 False"], ["proof (prove)\nusing this:\n  esize s = esize t\n  \\<not> enat i < esize s\n\ngoal (1 subgoal):\n 1. v ?! Suc (Max t + (i - card t)) = v ?! nth_least_ext t i", "by simp"], ["proof (state)\nthis:\n  v ?! Suc (Max t + (i - card t)) = v ?! nth_least_ext t i\n\ngoal (1 subgoal):\n 1. \\<not> enat i < esize s \\<Longrightarrow>\n    u ?! nth_least_ext s i = v ?! nth_least_ext t i", "finally"], ["proof (chain)\npicking this:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i", "show ?thesis"], ["proof (prove)\nusing this:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i\n\ngoal (1 subgoal):\n 1. u ?! nth_least_ext s i = v ?! nth_least_ext t i", "by this"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u ?! nth_least_ext s i = v ?! nth_least_ext t i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?!) u \\<circ> nth_least_ext s = (?!) v \\<circ> nth_least_ext t\n\ngoal:\nNo subgoals!", "qed"], ["", "definition stuttering_invariant :: \"'a word set \\<Rightarrow> bool\"\n    where \"stuttering_invariant A \\<equiv> \\<forall> u v. u \\<approx> v \\<longrightarrow> u \\<in> A \\<longleftrightarrow> v \\<in> A\""], ["", "lemma stuttering_invariant_complement[intro!]:\n    assumes \"stuttering_invariant A\"\n    shows \"stuttering_invariant (- A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stuttering_invariant (- A)", "using assms"], ["proof (prove)\nusing this:\n  stuttering_invariant A\n\ngoal (1 subgoal):\n 1. stuttering_invariant (- A)", "unfolding stuttering_invariant_def"], ["proof (prove)\nusing this:\n  \\<forall>u v. u \\<approx> v \\<longrightarrow> (u \\<in> A) = (v \\<in> A)\n\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       u \\<approx> v \\<longrightarrow> (u \\<in> - A) = (v \\<in> - A)", "by simp"], ["", "lemma stutter_equiv_forw_subst[trans]: \"w\\<^sub>1 = w\\<^sub>2 \\<Longrightarrow> w\\<^sub>2 \\<approx> w\\<^sub>3 \\<Longrightarrow> w\\<^sub>1 \\<approx> w\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>w\\<^sub>1 = w\\<^sub>2; w\\<^sub>2 \\<approx> w\\<^sub>3\\<rbrakk>\n    \\<Longrightarrow> w\\<^sub>1 \\<approx> w\\<^sub>3", "by auto"], ["", "lemma stutter_sampler_build:\n    assumes \"stutter_sampler f w\"\n    shows \"stutter_sampler (0 ## (Suc \\<circ> f)) (a ## w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (0 ## (Suc \\<circ> f)) (a ## w)", "unfolding stutter_sampler_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0 \\<and>\n    strict_mono (0 ## (Suc \\<circ> f)) \\<and>\n    (\\<forall>k n.\n        (0 ## (Suc \\<circ> f)) k < n \\<and>\n        n < (0 ## (Suc \\<circ> f)) (Suc k) \\<longrightarrow>\n        (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k))", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0\n 2. strict_mono (0 ## (Suc \\<circ> f))\n 3. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "have 0: \"f 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 = 0", "using assms"], ["proof (prove)\nusing this:\n  stutter_sampler f w\n\ngoal (1 subgoal):\n 1. f 0 = 0", "unfolding stutter_sampler_def"], ["proof (prove)\nusing this:\n  f 0 = 0 \\<and>\n  strict_mono f \\<and>\n  (\\<forall>k n.\n      f k < n \\<and> n < f (Suc k) \\<longrightarrow> w n = w (f k))\n\ngoal (1 subgoal):\n 1. f 0 = 0", "by auto"], ["proof (state)\nthis:\n  f 0 = 0\n\ngoal (3 subgoals):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0\n 2. strict_mono (0 ## (Suc \\<circ> f))\n 3. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "have 1: \"f x < f y\" if \"x < y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x < f y", "using assms that"], ["proof (prove)\nusing this:\n  stutter_sampler f w\n  x < y\n\ngoal (1 subgoal):\n 1. f x < f y", "unfolding stutter_sampler_def strict_mono_def"], ["proof (prove)\nusing this:\n  f 0 = 0 \\<and>\n  (\\<forall>x y. x < y \\<longrightarrow> f x < f y) \\<and>\n  (\\<forall>k n.\n      f k < n \\<and> n < f (Suc k) \\<longrightarrow> w n = w (f k))\n  x < y\n\ngoal (1 subgoal):\n 1. f x < f y", "by auto"], ["proof (state)\nthis:\n  ?x < ?y \\<Longrightarrow> f ?x < f ?y\n\ngoal (3 subgoals):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0\n 2. strict_mono (0 ## (Suc \\<circ> f))\n 3. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "have 2: \"(0 ## (Suc \\<circ> f)) x < (0 ## (Suc \\<circ> f)) y\" if \"x < y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 ## (Suc \\<circ> f)) x < (0 ## (Suc \\<circ> f)) y", "using 1 that"], ["proof (prove)\nusing this:\n  ?x < ?y \\<Longrightarrow> f ?x < f ?y\n  x < y\n\ngoal (1 subgoal):\n 1. (0 ## (Suc \\<circ> f)) x < (0 ## (Suc \\<circ> f)) y", "by (cases x; cases y) (auto)"], ["proof (state)\nthis:\n  ?x < ?y \\<Longrightarrow>\n  (0 ## (Suc \\<circ> f)) ?x < (0 ## (Suc \\<circ> f)) ?y\n\ngoal (3 subgoals):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0\n 2. strict_mono (0 ## (Suc \\<circ> f))\n 3. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "have 3: \"w n = w (f k)\" if \"f k < n\" \"n < f (Suc k)\" for k n"], ["proof (prove)\ngoal (1 subgoal):\n 1. w n = w (f k)", "using assms that"], ["proof (prove)\nusing this:\n  stutter_sampler f w\n  f k < n\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. w n = w (f k)", "unfolding stutter_sampler_def"], ["proof (prove)\nusing this:\n  f 0 = 0 \\<and>\n  strict_mono f \\<and>\n  (\\<forall>k n.\n      f k < n \\<and> n < f (Suc k) \\<longrightarrow> w n = w (f k))\n  f k < n\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. w n = w (f k)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>f ?k < ?n; ?n < f (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> w ?n = w (f ?k)\n\ngoal (3 subgoals):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0\n 2. strict_mono (0 ## (Suc \\<circ> f))\n 3. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "show \"(0 ## (Suc \\<circ> f)) 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 ## (Suc \\<circ> f)) 0 = 0", "by simp"], ["proof (state)\nthis:\n  (0 ## (Suc \\<circ> f)) 0 = 0\n\ngoal (2 subgoals):\n 1. strict_mono (0 ## (Suc \\<circ> f))\n 2. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "show \"strict_mono (0 ## (Suc \\<circ> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (0 ## (Suc \\<circ> f))", "using 2"], ["proof (prove)\nusing this:\n  ?x < ?y \\<Longrightarrow>\n  (0 ## (Suc \\<circ> f)) ?x < (0 ## (Suc \\<circ> f)) ?y\n\ngoal (1 subgoal):\n 1. strict_mono (0 ## (Suc \\<circ> f))", "by rule"], ["proof (state)\nthis:\n  strict_mono (0 ## (Suc \\<circ> f))\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(0 ## (Suc \\<circ> f)) k < n;\n        n < (0 ## (Suc \\<circ> f)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "show \"(a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)\"\n      if \"(0 ## (Suc \\<circ> f)) k < n\" \"n < (0 ## (Suc \\<circ> f)) (Suc k)\" for k n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "using 0 3 that"], ["proof (prove)\nusing this:\n  f 0 = 0\n  \\<lbrakk>f ?k < ?n; ?n < f (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> w ?n = w (f ?k)\n  (0 ## (Suc \\<circ> f)) k < n\n  n < (0 ## (Suc \\<circ> f)) (Suc k)\n\ngoal (1 subgoal):\n 1. (a ## w) n = (a ## w) ((0 ## (Suc \\<circ> f)) k)", "by (cases k; cases n) (force)+"], ["proof (state)\nthis:\n  \\<lbrakk>(0 ## (Suc \\<circ> f)) ?k < ?n;\n   ?n < (0 ## (Suc \\<circ> f)) (Suc ?k)\\<rbrakk>\n  \\<Longrightarrow> (a ## w) ?n = (a ## w) ((0 ## (Suc \\<circ> f)) ?k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_extend_build:\n    assumes \"u \\<approx> v\"\n    shows \"a ## u \\<approx> a ## v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ## u \\<approx> a ## v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a ## u \\<approx> a ## v", "obtain f g where 1: \"stutter_sampler f u\" \"stutter_sampler g v\" \"u \\<circ> f = v \\<circ> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f g.\n        \\<lbrakk>stutter_sampler f u; stutter_sampler g v;\n         u \\<circ> f = v \\<circ> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using stutter_equivE assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<sigma> \\<approx> ?\\<tau>;\n   \\<And>f g.\n      \\<lbrakk>stutter_sampler f ?\\<sigma>; stutter_sampler g ?\\<tau>;\n       ?\\<sigma> \\<circ> f = ?\\<tau> \\<circ> g\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  u \\<approx> v\n\ngoal (1 subgoal):\n 1. (\\<And>f g.\n        \\<lbrakk>stutter_sampler f u; stutter_sampler g v;\n         u \\<circ> f = v \\<circ> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by this"], ["proof (state)\nthis:\n  stutter_sampler f u\n  stutter_sampler g v\n  u \\<circ> f = v \\<circ> g\n\ngoal (1 subgoal):\n 1. a ## u \\<approx> a ## v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a ## u \\<approx> a ## v", "proof (intro stutter_equivI ext)"], ["proof (state)\ngoal (3 subgoals):\n 1. stutter_sampler ?f (a ## u)\n 2. stutter_sampler ?g (a ## v)\n 3. \\<And>x. (a ## u \\<circ> ?f) x = (a ## v \\<circ> ?g) x", "show \"stutter_sampler (0 ## (Suc \\<circ> f)) (a ## u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (0 ## (Suc \\<circ> f)) (a ## u)", "using stutter_sampler_build 1(1)"], ["proof (prove)\nusing this:\n  stutter_sampler ?f ?w \\<Longrightarrow>\n  stutter_sampler (0 ## (Suc \\<circ> ?f)) (?a ## ?w)\n  stutter_sampler f u\n\ngoal (1 subgoal):\n 1. stutter_sampler (0 ## (Suc \\<circ> f)) (a ## u)", "by this"], ["proof (state)\nthis:\n  stutter_sampler (0 ## (Suc \\<circ> f)) (a ## u)\n\ngoal (2 subgoals):\n 1. stutter_sampler ?g (a ## v)\n 2. \\<And>x. (a ## u \\<circ> 0 ## (Suc \\<circ> f)) x = (a ## v \\<circ> ?g) x", "show \"stutter_sampler (0 ## (Suc \\<circ> g)) (a ## v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (0 ## (Suc \\<circ> g)) (a ## v)", "using stutter_sampler_build 1(2)"], ["proof (prove)\nusing this:\n  stutter_sampler ?f ?w \\<Longrightarrow>\n  stutter_sampler (0 ## (Suc \\<circ> ?f)) (?a ## ?w)\n  stutter_sampler g v\n\ngoal (1 subgoal):\n 1. stutter_sampler (0 ## (Suc \\<circ> g)) (a ## v)", "by this"], ["proof (state)\nthis:\n  stutter_sampler (0 ## (Suc \\<circ> g)) (a ## v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (a ## u \\<circ> 0 ## (Suc \\<circ> f)) x =\n       (a ## v \\<circ> 0 ## (Suc \\<circ> g)) x", "show \"(a ## u \\<circ> 0 ## (Suc \\<circ> f)) i = (a ## v \\<circ> 0 ## (Suc \\<circ> g)) i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ## u \\<circ> 0 ## (Suc \\<circ> f)) i =\n    (a ## v \\<circ> 0 ## (Suc \\<circ> g)) i", "using fun_cong[OF 1(3)]"], ["proof (prove)\nusing this:\n  (u \\<circ> f) ?x = (v \\<circ> g) ?x\n\ngoal (1 subgoal):\n 1. (a ## u \\<circ> 0 ## (Suc \\<circ> f)) i =\n    (a ## v \\<circ> 0 ## (Suc \\<circ> g)) i", "by (cases i) (auto)"], ["proof (state)\nthis:\n  (a ## u \\<circ> 0 ## (Suc \\<circ> f)) ?i =\n  (a ## v \\<circ> 0 ## (Suc \\<circ> g)) ?i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a ## u \\<approx> a ## v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_extend_concat:\n    assumes \"u \\<approx> v\"\n    shows \"w \\<frown> u \\<approx> w \\<frown> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<frown> u \\<approx> w \\<frown> v", "using stutter_extend_build assms"], ["proof (prove)\nusing this:\n  ?u \\<approx> ?v \\<Longrightarrow> ?a ## ?u \\<approx> ?a ## ?v\n  u \\<approx> v\n\ngoal (1 subgoal):\n 1. w \\<frown> u \\<approx> w \\<frown> v", "by (induct w, force+)"], ["", "lemma build_stutter: \"w 0 ## w \\<approx> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w 0 ## w \\<approx> w", "proof (rule stutter_equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. stutter_sampler ?f (w 0 ## w)\n 2. stutter_sampler ?g w\n 3. w 0 ## w \\<circ> ?f = w \\<circ> ?g", "show \"stutter_sampler (Suc (0 := 0)) (w 0 ## w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (Suc(0 := 0)) (w 0 ## w)", "unfolding stutter_sampler_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc(0 := 0)) 0 = 0 \\<and>\n    strict_mono (Suc(0 := 0)) \\<and>\n    (\\<forall>k n.\n        (Suc(0 := 0)) k < n \\<and>\n        n < (Suc(0 := 0)) (Suc k) \\<longrightarrow>\n        (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k))", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. (Suc(0 := 0)) 0 = 0\n 2. strict_mono (Suc(0 := 0))\n 3. \\<And>k n.\n       \\<lbrakk>(Suc(0 := 0)) k < n; n < (Suc(0 := 0)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "show \"(Suc (0 := 0)) 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc(0 := 0)) 0 = 0", "by simp"], ["proof (state)\nthis:\n  (Suc(0 := 0)) 0 = 0\n\ngoal (2 subgoals):\n 1. strict_mono (Suc(0 := 0))\n 2. \\<And>k n.\n       \\<lbrakk>(Suc(0 := 0)) k < n; n < (Suc(0 := 0)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "show \"strict_mono (Suc (0 := 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (Suc(0 := 0))", "by (rule strict_monoI, simp)"], ["proof (state)\nthis:\n  strict_mono (Suc(0 := 0))\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(Suc(0 := 0)) k < n; n < (Suc(0 := 0)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(Suc(0 := 0)) k < n; n < (Suc(0 := 0)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "fix k n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(Suc(0 := 0)) k < n; n < (Suc(0 := 0)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "assume 1: \"(Suc (0 := 0)) k < n\" \"n < (Suc (0 := 0)) (Suc k)\""], ["proof (state)\nthis:\n  (Suc(0 := 0)) k < n\n  n < (Suc(0 := 0)) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(Suc(0 := 0)) k < n; n < (Suc(0 := 0)) (Suc k)\\<rbrakk>\n       \\<Longrightarrow> (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "show \"(w 0 ## w) n = (w 0 ## w) ((Suc (0 := 0)) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "using 1"], ["proof (prove)\nusing this:\n  (Suc(0 := 0)) k < n\n  n < (Suc(0 := 0)) (Suc k)\n\ngoal (1 subgoal):\n 1. (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)", "by (cases n, auto)"], ["proof (state)\nthis:\n  (w 0 ## w) n = (w 0 ## w) ((Suc(0 := 0)) k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stutter_sampler (Suc(0 := 0)) (w 0 ## w)\n\ngoal (2 subgoals):\n 1. stutter_sampler ?g w\n 2. w 0 ## w \\<circ> Suc(0 := 0) = w \\<circ> ?g", "show \"stutter_sampler id w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler id w", "by rule"], ["proof (state)\nthis:\n  stutter_sampler id w\n\ngoal (1 subgoal):\n 1. w 0 ## w \\<circ> Suc(0 := 0) = w \\<circ> id", "show \"w 0 ## w \\<circ> (Suc (0 := 0)) = w \\<circ> id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w 0 ## w \\<circ> Suc(0 := 0) = w \\<circ> id", "by auto"], ["proof (state)\nthis:\n  w 0 ## w \\<circ> Suc(0 := 0) = w \\<circ> id\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma replicate_stutter: \"replicate n (v 0) \\<frown> v \\<approx> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicate n (v 0) \\<frown> v \\<approx> v", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. replicate 0 (v 0) \\<frown> v \\<approx> v\n 2. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. replicate 0 (v 0) \\<frown> v \\<approx> v\n 2. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. replicate 0 (v 0) \\<frown> v \\<approx> v", "using stutter_equiv_refl"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<approx> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. replicate 0 (v 0) \\<frown> v \\<approx> v", "by simp"], ["proof (state)\nthis:\n  replicate 0 (v 0) \\<frown> v \\<approx> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "case (Suc n)"], ["proof (state)\nthis:\n  replicate n (v 0) \\<frown> v \\<approx> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "have \"replicate (Suc n) (v 0) \\<frown> v = v 0 ## replicate n (v 0) \\<frown> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicate (Suc n) (v 0) \\<frown> v = v 0 ## replicate n (v 0) \\<frown> v", "by simp"], ["proof (state)\nthis:\n  replicate (Suc n) (v 0) \\<frown> v = v 0 ## replicate n (v 0) \\<frown> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "also"], ["proof (state)\nthis:\n  replicate (Suc n) (v 0) \\<frown> v = v 0 ## replicate n (v 0) \\<frown> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "have \"\\<dots> = (replicate n (v 0) \\<frown> v) 0 ## replicate n (v 0) \\<frown> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v 0 ## replicate n (v 0) \\<frown> v =\n    (replicate n (v 0) \\<frown> v) 0 ## replicate n (v 0) \\<frown> v", "by (cases n, auto)"], ["proof (state)\nthis:\n  v 0 ## replicate n (v 0) \\<frown> v =\n  (replicate n (v 0) \\<frown> v) 0 ## replicate n (v 0) \\<frown> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "also"], ["proof (state)\nthis:\n  v 0 ## replicate n (v 0) \\<frown> v =\n  (replicate n (v 0) \\<frown> v) 0 ## replicate n (v 0) \\<frown> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "have \"\\<dots> \\<approx> replicate n (v 0) \\<frown> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (replicate n (v 0) \\<frown> v) 0 ##\n    replicate n (v 0) \\<frown> v \\<approx>\n    replicate n (v 0) \\<frown> v", "using build_stutter"], ["proof (prove)\nusing this:\n  ?w 0 ## ?w \\<approx> ?w\n\ngoal (1 subgoal):\n 1. (replicate n (v 0) \\<frown> v) 0 ##\n    replicate n (v 0) \\<frown> v \\<approx>\n    replicate n (v 0) \\<frown> v", "by this"], ["proof (state)\nthis:\n  (replicate n (v 0) \\<frown> v) 0 ## replicate n (v 0) \\<frown> v \\<approx>\n  replicate n (v 0) \\<frown> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "also"], ["proof (state)\nthis:\n  (replicate n (v 0) \\<frown> v) 0 ## replicate n (v 0) \\<frown> v \\<approx>\n  replicate n (v 0) \\<frown> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "have \"\\<dots> \\<approx> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicate n (v 0) \\<frown> v \\<approx> v", "using Suc"], ["proof (prove)\nusing this:\n  replicate n (v 0) \\<frown> v \\<approx> v\n\ngoal (1 subgoal):\n 1. replicate n (v 0) \\<frown> v \\<approx> v", "by this"], ["proof (state)\nthis:\n  replicate n (v 0) \\<frown> v \\<approx> v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       replicate n (v 0) \\<frown> v \\<approx> v \\<Longrightarrow>\n       replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "finally"], ["proof (chain)\npicking this:\n  replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "show ?case"], ["proof (prove)\nusing this:\n  replicate (Suc n) (v 0) \\<frown> v \\<approx> v\n\ngoal (1 subgoal):\n 1. replicate (Suc n) (v 0) \\<frown> v \\<approx> v", "by this"], ["proof (state)\nthis:\n  replicate (Suc n) (v 0) \\<frown> v \\<approx> v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma replicate_stutter': \"u \\<frown> replicate n (v 0) \\<frown> v \\<approx> u \\<frown> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<frown> replicate n (v 0) \\<frown> v \\<approx> u \\<frown> v", "using stutter_extend_concat replicate_stutter"], ["proof (prove)\nusing this:\n  ?u \\<approx> ?v \\<Longrightarrow> ?w \\<frown> ?u \\<approx> ?w \\<frown> ?v\n  replicate ?n (?v 0) \\<frown> ?v \\<approx> ?v\n\ngoal (1 subgoal):\n 1. u \\<frown> replicate n (v 0) \\<frown> v \\<approx> u \\<frown> v", "by this"], ["", "end"]]}