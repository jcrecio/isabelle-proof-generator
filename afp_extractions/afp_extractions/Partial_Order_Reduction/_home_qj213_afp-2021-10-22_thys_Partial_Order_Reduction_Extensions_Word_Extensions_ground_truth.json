{"file_name": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction/Extensions/Word_Extensions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Partial_Order_Reduction", "problem_names": ["lemma range_suffix[intro, simp]: \"range (suffix i w) \\<subseteq> range w\"", "lemma suffix_comp: \"suffix i v = v \\<circ> plus i\""], "translations": [["", "lemma range_suffix[intro, simp]: \"range (suffix i w) \\<subseteq> range w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (suffix i w) \\<subseteq> range w", "unfolding Omega_Words_Fun.suffix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. range (\\<lambda>n. w (i + n)) \\<subseteq> range w", "by blast"], ["", "lemma suffix_comp: \"suffix i v = v \\<circ> plus i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. suffix i v = v \\<circ> (+) i", "unfolding suffix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. suffix i v = v \\<circ> (+) i", "by force"], ["", "(* \\<rightarrow> see subsequence_shift\n  lemma map_suffix[simp]: \"map (suffix i v) [j ..< j + n] = map v [i + j ..< i + j + n]\"\n  proof -\n    have \"map (suffix i v) [j ..< j + n] = map (v \\<circ> op + i) [j ..< j + n]\"\n      unfolding suffix_comp by simp\n    also have \"\\<dots> = (map v \\<circ> map (op + i)) [j ..< j + n]\" by simp\n    also have \"\\<dots> =  map v (map (op + i) [j ..< j + n])\" unfolding comp_apply by simp\n    also have \"\\<dots> =  map v [i + j ..< i + j + n]\" by (simp add: algebra_simps)\n    finally show ?thesis by this\n  qed*)\n\n  (*\n  \\<rightarrow> see suffix_subseq_join\n\n  lemma suffix_prefix_suffix[simp]: \"map v [i ..< i + n] \\<frown> suffix (i + n) v = suffix i v\"\n  proof -\n    have \"suffix i v = map (suffix i v) [0 ..< n] \\<frown> suffix n (suffix i v)\"\n      using prefix_suffix\n      by blast\n    also have \"\\<dots> = map (suffix i v) [0 ..< 0 + n] \\<frown> suffix (i + n) v\" by simp\n    also have \"\\<dots> = map v [i ..< i + n] \\<frown> suffix (i + n) v\" unfolding map_suffix by simp\n    finally show ?thesis by simp\n  qed*)"], ["", "end"]]}