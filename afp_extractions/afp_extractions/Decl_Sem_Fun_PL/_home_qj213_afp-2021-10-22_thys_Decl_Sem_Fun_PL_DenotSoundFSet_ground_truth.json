{"file_name": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL/DenotSoundFSet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL", "problem_names": ["lemma subst_app: \"subst x v (EApp e1 e2) = EApp (subst x v e1) (subst x v e2)\"", "lemma subst_prim: \"subst x v (EPrim f e1 e2) = EPrim f (subst x v e1) (subst x v e2)\"", "lemma subst_lam_eq: \"subst x v (ELam x e) = ELam x e\"", "lemma subst_lam_neq: \"y \\<noteq> x \\<Longrightarrow> subst x v (ELam y e) = ELam y (subst x v e)\"", "lemma subst_if: \"subst x v (EIf e1 e2 e3) = EIf (subst x v e1) (subst x v e2) (subst x v e3)\"", "lemma substitution:\n  fixes \\<Gamma>::env and A::val \n  assumes wte: \"B \\<in> E e \\<Gamma>'\" and wtv: \"A \\<in> E v []\"\n    and gp: \"\\<Gamma>' \\<approx> (x,A)#\\<Gamma>\" and v: \"is_val v\"\n  shows \"B \\<in> E (subst x v e) \\<Gamma>\"", "lemma subject_reduction: fixes e::exp assumes v: \"v \\<in> E e \\<rho>\" and r: \"e \\<longrightarrow> e'\" shows \"v \\<in> E e' \\<rho>\"", "theorem preservation: assumes v: \"v \\<in> E e \\<rho>\" and rr: \"e \\<longrightarrow>* e'\" shows \"v \\<in> E e' \\<rho>\"", "lemma canonical_nat: assumes v: \"VNat n \\<in> E v \\<rho>\" and vv: \"isval v\" shows \"v = ENat n\"", "lemma canonical_fun: assumes v: \"VFun f \\<in> E v \\<rho>\" and vv: \"isval v\" shows \"\\<exists> x e. v = ELam x e\"", "theorem progress: assumes v: \"v \\<in> E e \\<rho>\" and r: \"\\<rho> = []\" and fve: \"FV e = {}\"\n  shows \"is_val e \\<or> (\\<exists> e'. e \\<longrightarrow> e')\"", "lemma lookup_good:\n  assumes l: \"lookup \\<rho>' x = Some A\" and EE: \"good_env \\<rho> \\<rho>'\"\n  shows \"\\<exists> v. lookup \\<rho> x = Some v \\<and> v \\<in> good A\"", "lemma good_prod_inj: \"inj_on good_prod (fset A)\"", "lemma good_fun_def2:\n  \"good_fun f x e \\<rho> = ffold (good_entry x e \\<rho> \\<circ> good_prod) True f\"", "lemma gfun_elim: \"w \\<in> good (VFun f) \\<Longrightarrow> \\<exists> x e \\<rho>. w = BClos x e \\<rho> \\<and> good_fun f x e \\<rho>\"", "lemma gfun_mem_iff: \"good_fun f x e \\<rho> = (\\<forall> v1 v2. (v1,v2) \\<in> fset f \\<longrightarrow> \n    (\\<forall> v \\<in> good v1. \\<exists> v'. (x,v)#\\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2))\"", "lemma gfun_mem: \"\\<lbrakk> (v1,v2) \\<in> fset f; good_fun f x e \\<rho> \\<rbrakk> \n      \\<Longrightarrow> \\<forall> v \\<in> good v1. \\<exists> v'. (x,v)#\\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\"", "lemma gfun_intro: \"(\\<forall> v1 v2.(v1,v2)\\<in>fset f\\<longrightarrow>(\\<forall>v\\<in>good v1.\\<exists> v'.(x,v)#\\<rho> \\<turnstile> e \\<Down> v'\\<and>v'\\<in>good v2))\n  \\<Longrightarrow> good_fun f x e \\<rho>\"", "lemma sub_good: fixes v::val assumes wv: \"w \\<in> good v\" and vp_v: \"v' \\<sqsubseteq> v\" shows \"w \\<in> good v'\"", "lemma denot_terminates: assumes vp_e: \"v' \\<in> E e \\<rho>'\" and ge: \"good_env \\<rho> \\<rho>'\" \n  shows \"\\<exists> v. \\<rho> \\<turnstile> e \\<Down> v \\<and> v \\<in> good v'\"", "theorem sound_wrt_op_sem:\n  assumes E_e_n: \"E e [] = E (ENat n) []\" and fv_e: \"FV e = {}\" shows \"e \\<Down> ONat n\""], "translations": [["", "lemma subst_app: \"subst x v (EApp e1 e2) = EApp (subst x v e1) (subst x v e2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v (EApp e1 e2) = EApp (subst x v e1) (subst x v e2)", "by auto"], ["", "lemma subst_prim: \"subst x v (EPrim f e1 e2) = EPrim f (subst x v e1) (subst x v e2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v (EPrim f e1 e2) = EPrim f (subst x v e1) (subst x v e2)", "by auto"], ["", "lemma subst_lam_eq: \"subst x v (ELam x e) = ELam x e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v (ELam x e) = ELam x e", "by auto"], ["", "lemma subst_lam_neq: \"y \\<noteq> x \\<Longrightarrow> subst x v (ELam y e) = ELam y (subst x v e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<Longrightarrow>\n    subst x v (ELam y e) = ELam y (subst x v e)", "by simp"], ["", "lemma subst_if: \"subst x v (EIf e1 e2 e3) = EIf (subst x v e1) (subst x v e2) (subst x v e3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v (EIf e1 e2 e3) =\n    EIf (subst x v e1) (subst x v e2) (subst x v e3)", "by auto"], ["", "lemma substitution:\n  fixes \\<Gamma>::env and A::val \n  assumes wte: \"B \\<in> E e \\<Gamma>'\" and wtv: \"A \\<in> E v []\"\n    and gp: \"\\<Gamma>' \\<approx> (x,A)#\\<Gamma>\" and v: \"is_val v\"\n  shows \"B \\<in> E (subst x v e) \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> E (subst x v e) \\<Gamma>", "using wte wtv gp v"], ["proof (prove)\nusing this:\n  B \\<in> E e \\<Gamma>'\n  A \\<in> E v []\n  \\<Gamma>' \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x v e) \\<Gamma>", "proof (induction arbitrary: v A B \\<Gamma> x rule: E.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>n \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>B \\<in> E (ENat n) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (ENat n)) \\<Gamma>\n 2. \\<And>x \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (EVar x)) \\<Gamma>\n 3. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 4. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 5. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 6. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "case (1 n \\<rho>)"], ["proof (state)\nthis:\n  B \\<in> E (ENat n) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (6 subgoals):\n 1. \\<And>n \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>B \\<in> E (ENat n) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (ENat n)) \\<Gamma>\n 2. \\<And>x \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (EVar x)) \\<Gamma>\n 3. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 4. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 5. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 6. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  B \\<in> E (ENat n) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v", "show ?case"], ["proof (prove)\nusing this:\n  B \\<in> E (ENat n) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x v (ENat n)) \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  B \\<in> E (subst x v (ENat n)) \\<Gamma>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (EVar x)) \\<Gamma>\n 2. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 3. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 4. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 5. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (EVar x)) \\<Gamma>\n 2. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 3. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 4. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 5. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "case (2 x \\<rho> v A B \\<Gamma> x')"], ["proof (state)\nthis:\n  B \\<in> E (EVar x) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x', A) # \\<Gamma>\n  is_val v\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (EVar x)) \\<Gamma>\n 2. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 3. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 4. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 5. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  B \\<in> E (EVar x) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x', A) # \\<Gamma>\n  is_val v", "show ?case"], ["proof (prove)\nusing this:\n  B \\<in> E (EVar x) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x', A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply (simp only: env_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x;\n     is_val v\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply (cases \"x = x'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x; is_val v;\n     x = x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>\n 2. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x; is_val v;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     isval v \\<and> FV v = {}; x = x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E v \\<Gamma>\n 2. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x; is_val v;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     x = x'; isval v; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E v \\<Gamma>\n 2. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x; is_val v;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply (rule env_strengthen)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     x = x'; isval v; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E v ?\\<rho>8\n 2. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     x = x'; isval v; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> FV v \\<longrightarrow>\n                         lookup \\<Gamma> x = lookup ?\\<rho>8 x\n 3. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x; is_val v;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply (rule e_sub)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     x = x'; isval v; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> ?v11 \\<in> E v ?\\<rho>8\n 2. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     x = x'; isval v; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> B \\<sqsubseteq> ?v11\n 3. \\<lbrakk>B \\<sqsubseteq> A; A \\<in> E v [];\n     \\<forall>x.\n        lookup \\<rho> x = (if x = x' then Some A else lookup \\<Gamma> x);\n     x = x'; isval v; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> FV v \\<longrightarrow>\n                         lookup \\<Gamma> x = lookup ?\\<rho>8 x\n 4. \\<lbrakk>B \\<in> E (EVar x) \\<rho>; A \\<in> E v [];\n     \\<forall>x. lookup \\<rho> x = lookup ((x', A) # \\<Gamma>) x; is_val v;\n     x \\<noteq> x'\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (EVar x)) \\<Gamma>", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  B \\<in> E (subst x' v (EVar x)) \\<Gamma>\n\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 2. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 3. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 4. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 2. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 3. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 4. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "case (3 x e \\<rho> v A B \\<Gamma> x')"], ["proof (state)\nthis:\n  \\<lbrakk>(?xaa, ?xab) \\<in> fset ?xb; ?B \\<in> E e ((x, ?xaa) # \\<rho>);\n   ?A \\<in> E ?v []; (x, ?xaa) # \\<rho> \\<approx> (?x, ?A) # ?\\<Gamma>;\n   is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?x ?v e) ?\\<Gamma>\n  B \\<in> E (ELam x e) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x', A) # \\<Gamma>\n  is_val v\n\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v A B \\<Gamma> xa.\n       \\<lbrakk>\\<And>xa xb xaa xab v A B \\<Gamma> xc.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e) \\<Gamma>;\n        B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (xa, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst xa v (ELam x e)) \\<Gamma>\n 2. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 3. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 4. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?xaa, ?xab) \\<in> fset ?xb; ?B \\<in> E e ((x, ?xaa) # \\<rho>);\n   ?A \\<in> E ?v []; (x, ?xaa) # \\<rho> \\<approx> (?x, ?A) # ?\\<Gamma>;\n   is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?x ?v e) ?\\<Gamma>\n  B \\<in> E (ELam x e) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x', A) # \\<Gamma>\n  is_val v", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?xaa, ?xab) \\<in> fset ?xb; ?B \\<in> E e ((x, ?xaa) # \\<rho>);\n   ?A \\<in> E ?v []; (x, ?xaa) # \\<rho> \\<approx> (?x, ?A) # ?\\<Gamma>;\n   is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?x ?v e) ?\\<Gamma>\n  B \\<in> E (ELam x e) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x', A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x' v (ELam x e)) \\<Gamma>", "apply (case_tac \"x' = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' = x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (ELam x e)) \\<Gamma>\n 2. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (ELam x e)) \\<Gamma>", "apply (simp only: subst_lam_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v; x' = x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (ELam x e) \\<Gamma>\n 2. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (ELam x e)) \\<Gamma>", "apply (rule env_strengthen)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v; x' = x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (ELam x e) ?\\<rho>7\n 2. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v; x' = x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> FV (ELam x e) \\<longrightarrow>\n                         lookup \\<Gamma> x = lookup ?\\<rho>7 x\n 3. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (ELam x e)) \\<Gamma>", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v; x' = x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> FV (ELam x e) \\<longrightarrow>\n                         lookup \\<Gamma> x = lookup \\<rho> x\n 2. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (ELam x e)) \\<Gamma>", "apply (simp add: env_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (subst x' v (ELam x e)) \\<Gamma>", "apply (simp only: subst_lam_neq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                 B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                 (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                 is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n     B \\<in> E (ELam x e) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v; x' \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (ELam x (subst x' v e)) \\<Gamma>", "apply (erule e_lam_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f;\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset f \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (ELam x (subst x' v e)) \\<Gamma>", "apply (rule e_lam_intro)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f;\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset f \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> B = VFun (?f17 f)\n 2. \\<And>f.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f;\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset f \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v1 v2.\n                            (v1, v2) \\<in> fset (?f17 f) \\<longrightarrow>\n                            v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f;\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset f \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v1 v2.\n                            (v1, v2) \\<in> fset f \\<longrightarrow>\n                            v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f;\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset f \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>);\n        (v1, v2) \\<in> fset f\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply (erule_tac x=v1 in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        \\<forall>v2.\n           (v1, v2) \\<in> fset f \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply (erule_tac x=v2 in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        (v1, v2) \\<in> fset f \\<longrightarrow>\n        v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply (subgoal_tac \"(x,v1)#\\<rho> \\<approx> (x',A)#(x,v1)#\\<Gamma>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        v2 \\<in> E e ((x, v1) # \\<rho>);\n        (x, v1) # \\<rho> \\<approx> (x', A) # (x, v1) # \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)\n 2. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> (x, v1) # \\<rho> \\<approx>\n                         (x', A) # (x, v1) # \\<Gamma>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> (x, v1) # \\<rho> \\<approx>\n                         (x', A) # (x, v1) # \\<Gamma>\n 2. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        v2 \\<in> E e ((x, v1) # \\<rho>);\n        (x, v1) # \\<rho> \\<approx> (x', A) # (x, v1) # \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply (simp add: env_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2.\n       \\<lbrakk>\\<And>xaa xab xb B A v x \\<Gamma>.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    B \\<in> E e ((x, xaa) # \\<rho>); A \\<in> E v [];\n                    (x, xaa) # \\<rho> \\<approx> (x, A) # \\<Gamma>;\n                    is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst x v e) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x', A) # \\<Gamma>; is_val v;\n        x' \\<noteq> x; B = VFun f; (v1, v2) \\<in> fset f;\n        v2 \\<in> E e ((x, v1) # \\<rho>);\n        (x, v1) # \\<rho> \\<approx> (x', A) # (x, v1) # \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> v2 \\<in> E (subst x' v e) ((x, v1) # \\<Gamma>)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  B \\<in> E (subst x' v (ELam x e)) \\<Gamma>\n\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 2. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 3. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 2. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 3. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "case (4 e1 e2 \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xe, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xe ?v e1) ?\\<Gamma>\n  \\<lbrakk>?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xe, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xe ?v e2) ?\\<Gamma>\n  B \\<in> E (EApp e1 e2) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb xc xd v A B \\<Gamma> xe.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>x xa xb xc xd v A B \\<Gamma> xe.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n 2. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 3. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xe, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xe ?v e1) ?\\<Gamma>\n  \\<lbrakk>?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xe, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xe ?v e2) ?\\<Gamma>\n  B \\<in> E (EApp e1 e2) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xe, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xe ?v e1) ?\\<Gamma>\n  \\<lbrakk>?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xe, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xe ?v e2) ?\\<Gamma>\n  B \\<in> E (EApp e1 e2) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>", "apply (simp only: subst_app)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                 \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n     \\<And>B A v xe \\<Gamma>.\n        \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n         \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n        \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n     B \\<in> E (EApp e1 e2) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (EApp (subst x v e1) (subst x v e2))\n                               \\<Gamma>", "apply (erule e_app_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>B A v xe \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        B \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (EApp (subst x v e1) (subst x v e2))\n                                  \\<Gamma>", "apply (rule e_app_intro)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>B A v xe \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        B \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> VFun (?f10 f v2 v2' v3')\n                         \\<in> E (subst x v e1) \\<Gamma>\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>B A v xe \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        B \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> ?v2.10 f v2 v2' v3' \\<in> E (subst x v e2) \\<Gamma>\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>B A v xe \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        B \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> (?v2'10 f v2 v2' v3', ?v3'10 f v2 v2' v3')\n                         \\<in> fset (?f10 f v2 v2' v3')\n 4. \\<And>f v2 v2' v3'.\n       \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>B A v xe \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        B \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> ?v2'10 f v2 v2' v3' \\<sqsubseteq>\n                         ?v2.10 f v2 v2' v3'\n 5. \\<And>f v2 v2' v3'.\n       \\<lbrakk>\\<And>B A v xe \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xe v e1) \\<Gamma>;\n        \\<And>B A v xe \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xe, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xe v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        B \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> B \\<sqsubseteq> ?v3'10 f v2 v2' v3'", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  B \\<in> E (subst x v (EApp e1 e2)) \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 2. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 2. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "case (5 f e1 e2 \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xc, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xc ?v e1) ?\\<Gamma>\n  \\<lbrakk>?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xc, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xc ?v e2) ?\\<Gamma>\n  B \\<in> E (EPrim f e1 e2) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (2 subgoals):\n 1. \\<And>f e1 e2 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa xb v A B \\<Gamma> xc.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>x xa xb v A B \\<Gamma> xc.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n 2. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xc, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xc ?v e1) ?\\<Gamma>\n  \\<lbrakk>?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xc, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xc ?v e2) ?\\<Gamma>\n  B \\<in> E (EPrim f e1 e2) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xc, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xc ?v e1) ?\\<Gamma>\n  \\<lbrakk>?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xc, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xc ?v e2) ?\\<Gamma>\n  B \\<in> E (EPrim f e1 e2) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>", "apply (simp only: subst_prim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                 \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n     \\<And>B A v xc \\<Gamma>.\n        \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n         \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n        \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n     B \\<in> E (EPrim f e1 e2) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (EPrim f (subst x v e1) (subst x v e2))\n                               \\<Gamma>", "apply (erule e_prim_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (EPrim f (subst x v e1) (subst x v e2))\n                                  \\<Gamma>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n1 \\<in> E e1 \\<rho>;\n        VNat n2 \\<in> E e2 \\<rho>; B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n1a.\n                            VNat n1a \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                            (\\<exists>n2a.\n                                VNat n2a\n                                \\<in> E (subst x v e2) \\<Gamma> \\<and>\n                                f n1 n2 = f n1a n2a)", "apply (rule_tac x=n1 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n1 \\<in> E e1 \\<rho>;\n        VNat n2 \\<in> E e2 \\<rho>; B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> VNat n1 \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                         (\\<exists>n2a.\n                             VNat n2a \\<in> E (subst x v e2) \\<Gamma> \\<and>\n                             f n1 n2 = f n1 n2a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n1 \\<in> E e1 \\<rho>;\n        VNat n2 \\<in> E e2 \\<rho>; B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> VNat n1 \\<in> E (subst x v e1) \\<Gamma>\n 2. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n1 \\<in> E e1 \\<rho>;\n        VNat n2 \\<in> E e2 \\<rho>; B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n2a.\n                            VNat n2a \\<in> E (subst x v e2) \\<Gamma> \\<and>\n                            f n1 n2 = f n1 n2a", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n1 \\<in> E e1 \\<rho>;\n        VNat n2 \\<in> E e2 \\<rho>; B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n2a.\n                            VNat n2a \\<in> E (subst x v e2) \\<Gamma> \\<and>\n                            f n1 n2 = f n1 n2a", "apply (rule_tac x=n2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>\\<And>B A v xc \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xc v e1) \\<Gamma>;\n        \\<And>B A v xc \\<Gamma>.\n           \\<lbrakk>B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xc, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xc v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n1 \\<in> E e1 \\<rho>;\n        VNat n2 \\<in> E e2 \\<rho>; B = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> VNat n2 \\<in> E (subst x v e2) \\<Gamma> \\<and>\n                         f n1 n2 = f n1 n2", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  B \\<in> E (subst x v (EPrim f e1 e2)) \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "case (6 e1 e2 e3 \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e1) ?\\<Gamma>\n  \\<lbrakk>?xa = 0; ?B \\<in> E e3 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e3) ?\\<Gamma>\n  \\<lbrakk>?xa \\<noteq> 0; ?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e2) ?\\<Gamma>\n  B \\<in> E (EIf e1 e2 e3) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2 e3 \\<rho> v A B \\<Gamma> x.\n       \\<lbrakk>\\<And>x xa v A B \\<Gamma> xb.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>x xa v A B \\<Gamma> xb.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n        \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e1) ?\\<Gamma>\n  \\<lbrakk>?xa = 0; ?B \\<in> E e3 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e3) ?\\<Gamma>\n  \\<lbrakk>?xa \\<noteq> 0; ?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e2) ?\\<Gamma>\n  B \\<in> E (EIf e1 e2 e3) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?B \\<in> E e1 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e1) ?\\<Gamma>\n  \\<lbrakk>?xa = 0; ?B \\<in> E e3 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e3) ?\\<Gamma>\n  \\<lbrakk>?xa \\<noteq> 0; ?B \\<in> E e2 \\<rho>; ?A \\<in> E ?v [];\n   \\<rho> \\<approx> (?xb, ?A) # ?\\<Gamma>; is_val ?v\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> E (subst ?xb ?v e2) ?\\<Gamma>\n  B \\<in> E (EIf e1 e2 e3) \\<rho>\n  A \\<in> E v []\n  \\<rho> \\<approx> (x, A) # \\<Gamma>\n  is_val v\n\ngoal (1 subgoal):\n 1. B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>", "apply (simp only: subst_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                 \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n     \\<And>xa B A v xb \\<Gamma>.\n        \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n         \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n        \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n     \\<And>xa B A v xb \\<Gamma>.\n        \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n         \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n        \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n     B \\<in> E (EIf e1 e2 e3) \\<rho>; A \\<in> E v [];\n     \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v\\<rbrakk>\n    \\<Longrightarrow> B \\<in> E (EIf (subst x v e1) (subst x v e2)\n                                  (subst x v e3))\n                               \\<Gamma>", "apply (erule e_if_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> B \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (EIf (subst x v e1) (subst x v e2)\n                                     (subst x v e3))\n                                  \\<Gamma>", "apply (rename_tac n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa \\<noteq> 0; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>; is_val v\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>; is_val v;\n        VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> B \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> B \\<in> E (EIf (subst x v e1) (subst x v e2)\n                                     (subst x v e3))\n                                  \\<Gamma>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            VNat n \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                            (n = 0 \\<longrightarrow>\n                             B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                            (0 < n \\<longrightarrow>\n                             B \\<in> E (subst x v e2) \\<Gamma>)", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>; n = 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            VNat n \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                            (n = 0 \\<longrightarrow>\n                             B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                            (0 < n \\<longrightarrow>\n                             B \\<in> E (subst x v e2) \\<Gamma>)\n 2. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            VNat n \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                            (n = 0 \\<longrightarrow>\n                             B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                            (0 < n \\<longrightarrow>\n                             B \\<in> E (subst x v e2) \\<Gamma>)", "apply (rule_tac x=0 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>; n = 0\\<rbrakk>\n       \\<Longrightarrow> VNat 0 \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                         (0 = 0 \\<longrightarrow>\n                          B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                         (0 < 0 \\<longrightarrow>\n                          B \\<in> E (subst x v e2) \\<Gamma>)\n 2. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            VNat n \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                            (n = 0 \\<longrightarrow>\n                             B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                            (0 < n \\<longrightarrow>\n                             B \\<in> E (subst x v e2) \\<Gamma>)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                            VNat n \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                            (n = 0 \\<longrightarrow>\n                             B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                            (0 < n \\<longrightarrow>\n                             B \\<in> E (subst x v e2) \\<Gamma>)", "apply (rule_tac x=n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<And>B A v xb \\<Gamma>.\n                   \\<lbrakk>B \\<in> E e1 \\<rho>; A \\<in> E v [];\n                    \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n                    isval v \\<and> FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> B \\<in> E (subst xb v e1) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>xa = 0; B \\<in> E e3 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e3) \\<Gamma>;\n        \\<And>xa B A v xb \\<Gamma>.\n           \\<lbrakk>0 < xa; B \\<in> E e2 \\<rho>; A \\<in> E v [];\n            \\<rho> \\<approx> (xb, A) # \\<Gamma>;\n            isval v \\<and> FV v = {}\\<rbrakk>\n           \\<Longrightarrow> B \\<in> E (subst xb v e2) \\<Gamma>;\n        A \\<in> E v []; \\<rho> \\<approx> (x, A) # \\<Gamma>;\n        isval v \\<and> FV v = {}; VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> B \\<in> E e3 \\<rho>;\n        0 < n \\<longrightarrow> B \\<in> E e2 \\<rho>; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> VNat n \\<in> E (subst x v e1) \\<Gamma> \\<and>\n                         (n = 0 \\<longrightarrow>\n                          B \\<in> E (subst x v e3) \\<Gamma>) \\<and>\n                         (0 < n \\<longrightarrow>\n                          B \\<in> E (subst x v e2) \\<Gamma>)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  B \\<in> E (subst x v (EIf e1 e2 e3)) \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Reduction preserves denotation\""], ["", "lemma subject_reduction: fixes e::exp assumes v: \"v \\<in> E e \\<rho>\" and r: \"e \\<longrightarrow> e'\" shows \"v \\<in> E e' \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> E e' \\<rho>", "using r v"], ["proof (prove)\nusing this:\n  e \\<longrightarrow> e'\n  v \\<in> E e \\<rho>\n\ngoal (1 subgoal):\n 1. v \\<in> E e' \\<rho>", "proof (induction arbitrary: v \\<rho> rule: reduce.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>v x e va \\<rho>.\n       \\<lbrakk>is_val v; va \\<in> E (EApp (ELam x e) v) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> va \\<in> E (subst x v e) \\<rho>\n 2. \\<And>e1 e1' e2 v \\<rho>.\n       \\<lbrakk>e1 \\<longrightarrow> e1';\n        \\<And>v \\<rho>.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow> v \\<in> E e1' \\<rho>;\n        v \\<in> E (EApp e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EApp e1' e2) \\<rho>\n 3. \\<And>e2 e2' e1 v \\<rho>.\n       \\<lbrakk>e2 \\<longrightarrow> e2';\n        \\<And>v \\<rho>.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow> v \\<in> E e2' \\<rho>;\n        v \\<in> E (EApp e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EApp e1 e2') \\<rho>\n 4. \\<And>f n1 n2 v \\<rho>.\n       v \\<in> E (EPrim f (ENat n1) (ENat n2)) \\<rho> \\<Longrightarrow>\n       v \\<in> E (ENat (f n1 n2)) \\<rho>\n 5. \\<And>e1 e1' f e2 v \\<rho>.\n       \\<lbrakk>e1 \\<longrightarrow> e1';\n        \\<And>v \\<rho>.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow> v \\<in> E e1' \\<rho>;\n        v \\<in> E (EPrim f e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EPrim f e1' e2) \\<rho>\n 6. \\<And>e2 e2' f e1 v \\<rho>.\n       \\<lbrakk>e2 \\<longrightarrow> e2';\n        \\<And>v \\<rho>.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow> v \\<in> E e2' \\<rho>;\n        v \\<in> E (EPrim f e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EPrim f e1 e2') \\<rho>\n 7. \\<And>thn els v \\<rho>.\n       v \\<in> E (EIf (ENat 0) thn els) \\<rho> \\<Longrightarrow>\n       v \\<in> E els \\<rho>\n 8. \\<And>n thn els v \\<rho>.\n       \\<lbrakk>n \\<noteq> 0;\n        v \\<in> E (EIf (ENat n) thn els) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E thn \\<rho>\n 9. \\<And>cond cond' thn els v \\<rho>.\n       \\<lbrakk>cond \\<longrightarrow> cond';\n        \\<And>v \\<rho>.\n           v \\<in> E cond \\<rho> \\<Longrightarrow> v \\<in> E cond' \\<rho>;\n        v \\<in> E (EIf cond thn els) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EIf cond' thn els) \\<rho>", "case (beta v x e v' \\<rho>)"], ["proof (state)\nthis:\n  is_val v\n  v' \\<in> E (EApp (ELam x e) v) \\<rho>\n\ngoal (9 subgoals):\n 1. \\<And>v x e va \\<rho>.\n       \\<lbrakk>is_val v; va \\<in> E (EApp (ELam x e) v) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> va \\<in> E (subst x v e) \\<rho>\n 2. \\<And>e1 e1' e2 v \\<rho>.\n       \\<lbrakk>e1 \\<longrightarrow> e1';\n        \\<And>v \\<rho>.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow> v \\<in> E e1' \\<rho>;\n        v \\<in> E (EApp e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EApp e1' e2) \\<rho>\n 3. \\<And>e2 e2' e1 v \\<rho>.\n       \\<lbrakk>e2 \\<longrightarrow> e2';\n        \\<And>v \\<rho>.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow> v \\<in> E e2' \\<rho>;\n        v \\<in> E (EApp e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EApp e1 e2') \\<rho>\n 4. \\<And>f n1 n2 v \\<rho>.\n       v \\<in> E (EPrim f (ENat n1) (ENat n2)) \\<rho> \\<Longrightarrow>\n       v \\<in> E (ENat (f n1 n2)) \\<rho>\n 5. \\<And>e1 e1' f e2 v \\<rho>.\n       \\<lbrakk>e1 \\<longrightarrow> e1';\n        \\<And>v \\<rho>.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow> v \\<in> E e1' \\<rho>;\n        v \\<in> E (EPrim f e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EPrim f e1' e2) \\<rho>\n 6. \\<And>e2 e2' f e1 v \\<rho>.\n       \\<lbrakk>e2 \\<longrightarrow> e2';\n        \\<And>v \\<rho>.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow> v \\<in> E e2' \\<rho>;\n        v \\<in> E (EPrim f e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EPrim f e1 e2') \\<rho>\n 7. \\<And>thn els v \\<rho>.\n       v \\<in> E (EIf (ENat 0) thn els) \\<rho> \\<Longrightarrow>\n       v \\<in> E els \\<rho>\n 8. \\<And>n thn els v \\<rho>.\n       \\<lbrakk>n \\<noteq> 0;\n        v \\<in> E (EIf (ENat n) thn els) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E thn \\<rho>\n 9. \\<And>cond cond' thn els v \\<rho>.\n       \\<lbrakk>cond \\<longrightarrow> cond';\n        \\<And>v \\<rho>.\n           v \\<in> E cond \\<rho> \\<Longrightarrow> v \\<in> E cond' \\<rho>;\n        v \\<in> E (EIf cond thn els) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EIf cond' thn els) \\<rho>", "then"], ["proof (chain)\npicking this:\n  is_val v\n  v' \\<in> E (EApp (ELam x e) v) \\<rho>", "show ?case"], ["proof (prove)\nusing this:\n  is_val v\n  v' \\<in> E (EApp (ELam x e) v) \\<rho>\n\ngoal (1 subgoal):\n 1. v' \\<in> E (subst x v e) \\<rho>", "apply (simp only: is_val_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isval v \\<and> FV v = {};\n     v' \\<in> E (EApp (ELam x e) v) \\<rho>\\<rbrakk>\n    \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (erule e_app_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>isval v \\<and> FV v = {}; VFun f \\<in> E (ELam x e) \\<rho>;\n        v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (erule e_lam_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' fa.\n       \\<lbrakk>isval v \\<and> FV v = {}; v2 \\<in> E v \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3';\n        VFun f = VFun fa;\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset fa \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' fa.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset fa;\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3';\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset fa \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>);\n        isval v; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (rename_tac f v2 v2' v3' f')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3';\n        \\<forall>v1 v2.\n           (v1, v2) \\<in> fset f' \\<longrightarrow>\n           v2 \\<in> E e ((x, v1) # \\<rho>);\n        isval v; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (erule_tac x=v2' in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        \\<forall>v2.\n           (v2', v2) \\<in> fset f' \\<longrightarrow>\n           v2 \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (erule_tac x=v3' in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        (v2', v3') \\<in> fset f' \\<longrightarrow>\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (subgoal_tac \"v3' \\<in> E (subst x v e) \\<rho>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E (subst x v e) \\<rho>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E (subst x v e) \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (rule substitution)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (subgoal_tac \"v3' \\<in> E e ((x,v2)#\\<rho>)\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e ((x, v2) # \\<rho>)\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 6. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "prefer 2"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e ((x, v2) # \\<rho>)\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 6. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (rule raise_env)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<rho>20 f v2 v2' v3' f')\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<rho>20 f v2 v2' v3' f' \\<sqsubseteq>\n                         (x, v2) # \\<rho>\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 6. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 7. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> (x, v2') # \\<rho> \\<sqsubseteq> (x, v2) # \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 6. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (simp add: env_le_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f' \\<in> E v []\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (rule env_strengthen)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?A14 f v2 v2' v3' f'\n                         \\<in> E v (?\\<rho>30 f v2 v2' v3' f')\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> FV v \\<longrightarrow>\n                            lookup [] x =\n                            lookup (?\\<rho>30 f v2 v2' v3' f') x\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, ?A14 f v2 v2' v3' f') # \\<rho>\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 6. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> FV v \\<longrightarrow>\n                            lookup [] x = lookup \\<rho> x\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, v2) # \\<rho>\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply force"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, v2) # \\<rho>\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, v2) # \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (subgoal_tac \"(x,v2)#\\<rho> \\<approx> (x,v2)#\\<rho>\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        (x, v2) # \\<rho> \\<approx> (x, v2) # \\<rho>\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, v2) # \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> (x, v2) # \\<rho> \\<approx> (x, v2) # \\<rho>\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> (x, v2) # \\<rho> \\<approx> (x, v2) # \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        (x, v2) # \\<rho> \\<approx> (x, v2) # \\<rho>\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, v2) # \\<rho>\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 5. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (simp add: env_eq_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        (x, v2) # \\<rho> \\<approx> (x, v2) # \\<rho>\\<rbrakk>\n       \\<Longrightarrow> ?\\<Gamma>'14 f v2 v2' v3' f' \\<approx>\n                         (x, v2) # \\<rho>\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e (?\\<Gamma>'14 f v2 v2' v3' f')\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 4. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E e ((x, v2) # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> v3' \\<in> E e ((x, v2) # \\<rho>)\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 3. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> is_val v\n 2. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> E (subst x v e) \\<rho>", "apply (rule e_sub)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> ?v38 v2 v2' v3' f' \\<in> E (subst x v e) \\<rho>\n 2. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<sqsubseteq> ?v38 v2 v2' v3' f'", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<sqsubseteq> v3'", "apply (rule val_le_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v' \\<sqsubseteq> ?v2.41 v2 v2' v3' f'\n 2. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> ?v2.41 v2 v2' v3' f' \\<sqsubseteq> v3'", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v2 v2' v3' f'.\n       \\<lbrakk>v2 \\<in> E v \\<rho>; (v2', v3') \\<in> fset f';\n        v2' \\<sqsubseteq> v2; v' \\<sqsubseteq> v3'; isval v; FV v = {};\n        v3' \\<in> E e ((x, v2') # \\<rho>);\n        v3' \\<in> E (subst x v e) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v3' \\<sqsubseteq> v3'", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v' \\<in> E (subst x v e) \\<rho>\n\ngoal (8 subgoals):\n 1. \\<And>e1 e1' e2 v \\<rho>.\n       \\<lbrakk>e1 \\<longrightarrow> e1';\n        \\<And>v \\<rho>.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow> v \\<in> E e1' \\<rho>;\n        v \\<in> E (EApp e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EApp e1' e2) \\<rho>\n 2. \\<And>e2 e2' e1 v \\<rho>.\n       \\<lbrakk>e2 \\<longrightarrow> e2';\n        \\<And>v \\<rho>.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow> v \\<in> E e2' \\<rho>;\n        v \\<in> E (EApp e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EApp e1 e2') \\<rho>\n 3. \\<And>f n1 n2 v \\<rho>.\n       v \\<in> E (EPrim f (ENat n1) (ENat n2)) \\<rho> \\<Longrightarrow>\n       v \\<in> E (ENat (f n1 n2)) \\<rho>\n 4. \\<And>e1 e1' f e2 v \\<rho>.\n       \\<lbrakk>e1 \\<longrightarrow> e1';\n        \\<And>v \\<rho>.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow> v \\<in> E e1' \\<rho>;\n        v \\<in> E (EPrim f e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EPrim f e1' e2) \\<rho>\n 5. \\<And>e2 e2' f e1 v \\<rho>.\n       \\<lbrakk>e2 \\<longrightarrow> e2';\n        \\<And>v \\<rho>.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow> v \\<in> E e2' \\<rho>;\n        v \\<in> E (EPrim f e1 e2) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EPrim f e1 e2') \\<rho>\n 6. \\<And>thn els v \\<rho>.\n       v \\<in> E (EIf (ENat 0) thn els) \\<rho> \\<Longrightarrow>\n       v \\<in> E els \\<rho>\n 7. \\<And>n thn els v \\<rho>.\n       \\<lbrakk>n \\<noteq> 0;\n        v \\<in> E (EIf (ENat n) thn els) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E thn \\<rho>\n 8. \\<And>cond cond' thn els v \\<rho>.\n       \\<lbrakk>cond \\<longrightarrow> cond';\n        \\<And>v \\<rho>.\n           v \\<in> E cond \\<rho> \\<Longrightarrow> v \\<in> E cond' \\<rho>;\n        v \\<in> E (EIf cond thn els) \\<rho>\\<rbrakk>\n       \\<Longrightarrow> v \\<in> E (EIf cond' thn els) \\<rho>", "qed force+"], ["", "theorem preservation: assumes v: \"v \\<in> E e \\<rho>\" and rr: \"e \\<longrightarrow>* e'\" shows \"v \\<in> E e' \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> E e' \\<rho>", "using rr v subject_reduction"], ["proof (prove)\nusing this:\n  e \\<longrightarrow>* e'\n  v \\<in> E e \\<rho>\n  \\<lbrakk>?v \\<in> E ?e ?\\<rho>; ?e \\<longrightarrow> ?e'\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> E ?e' ?\\<rho>\n\ngoal (1 subgoal):\n 1. v \\<in> E e' \\<rho>", "by (induction arbitrary: \\<rho> v) auto"], ["", "lemma canonical_nat: assumes v: \"VNat n \\<in> E v \\<rho>\" and vv: \"isval v\" shows \"v = ENat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = ENat n", "using v vv"], ["proof (prove)\nusing this:\n  VNat n \\<in> E v \\<rho>\n  isval v\n\ngoal (1 subgoal):\n 1. v = ENat n", "by (cases v) auto"], ["", "lemma canonical_fun: assumes v: \"VFun f \\<in> E v \\<rho>\" and vv: \"isval v\" shows \"\\<exists> x e. v = ELam x e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x e. v = ELam x e", "using v vv"], ["proof (prove)\nusing this:\n  VFun f \\<in> E v \\<rho>\n  isval v\n\ngoal (1 subgoal):\n 1. \\<exists>x e. v = ELam x e", "by (cases v) auto"], ["", "subsection \"Progress\""], ["", "theorem progress: assumes v: \"v \\<in> E e \\<rho>\" and r: \"\\<rho> = []\" and fve: \"FV e = {}\"\n  shows \"is_val e \\<or> (\\<exists> e'. e \\<longrightarrow> e')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_val e \\<or> (\\<exists>e'. e \\<longrightarrow> e')", "using v r fve"], ["proof (prove)\nusing this:\n  v \\<in> E e \\<rho>\n  \\<rho> = []\n  FV e = {}\n\ngoal (1 subgoal):\n 1. is_val e \\<or> (\\<exists>e'. e \\<longrightarrow> e')", "proof (induction arbitrary: v rule: E.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb xc xd v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb xc xd v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EApp e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EApp e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EApp e1 e2))\n 5. \\<And>f e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EPrim f e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EPrim f e1 e2))\n 6. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "case (4 e1 e2 \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>; FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EApp e1 e2) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EApp e1 e2) = {}\n\ngoal (6 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb xc xd v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb xc xd v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EApp e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EApp e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EApp e1 e2))\n 5. \\<And>f e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EPrim f e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EPrim f e1 e2))\n 6. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_val (EApp e1 e2) \\<or> (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (rule e_app_elim)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?v3.0 \\<in> E (EApp ?e1.0 ?e2.0) ?\\<rho>\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E ?e1.0 ?\\<rho>; v2 \\<in> E ?e2.0 ?\\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        ?v3.0 \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "using 4(3)"], ["proof (prove)\nusing this:\n  v \\<in> E (EApp e1 e2) \\<rho>\n\ngoal (2 subgoals):\n 1. ?v3.0 \\<in> E (EApp ?e1.0 ?e2.0) ?\\<rho>\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E ?e1.0 ?\\<rho>; v2 \\<in> E ?e2.0 ?\\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        ?v3.0 \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (cases \"is_val e1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (cases \"is_val e2\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (frule canonical_fun)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; is_val e2\\<rbrakk>\n       \\<Longrightarrow> isval e1\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; is_val e2; \\<exists>x e. e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 4. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; is_val e2; \\<exists>x e. e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (erule exE)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' x e.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; is_val e2; e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' x e.\n       \\<lbrakk>\\<forall>v1 v2.\n                   (v1, v2) \\<in> fset f \\<longrightarrow>\n                   v2 \\<in> E e ((x, v1) # \\<rho>);\n        v2 \\<in> E e2 \\<rho>; (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v \\<sqsubseteq> v3'; isval (ELam x e) \\<and> FV e \\<subseteq> {x};\n        isval e2 \\<and> FV e2 = {}; e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> isval (EApp (ELam x e) e2) \\<or>\n                         (\\<exists>a.\n                             EApp (ELam x e) e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (rule disjI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' x e.\n       \\<lbrakk>\\<forall>v1 v2.\n                   (v1, v2) \\<in> fset f \\<longrightarrow>\n                   v2 \\<in> E e ((x, v1) # \\<rho>);\n        v2 \\<in> E e2 \\<rho>; (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v \\<sqsubseteq> v3'; isval (ELam x e) \\<and> FV e \\<subseteq> {x};\n        isval e2 \\<and> FV e2 = {}; e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EApp (ELam x e) e2 \\<longrightarrow> a\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (rename_tac x e)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' x e.\n       \\<lbrakk>\\<forall>v1 v2.\n                   (v1, v2) \\<in> fset f \\<longrightarrow>\n                   v2 \\<in> E e ((x, v1) # \\<rho>);\n        v2 \\<in> E e2 \\<rho>; (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v \\<sqsubseteq> v3'; isval (ELam x e) \\<and> FV e \\<subseteq> {x};\n        isval e2 \\<and> FV e2 = {}; e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EApp (ELam x e) e2 \\<longrightarrow> a\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (rule_tac x=\"subst x e2 e\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' x e.\n       \\<lbrakk>\\<forall>v1 v2.\n                   (v1, v2) \\<in> fset f \\<longrightarrow>\n                   v2 \\<in> E e ((x, v1) # \\<rho>);\n        v2 \\<in> E e2 \\<rho>; (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v \\<sqsubseteq> v3'; isval (ELam x e) \\<and> FV e \\<subseteq> {x};\n        isval e2 \\<and> FV e2 = {}; e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> EApp (ELam x e) e2 \\<longrightarrow> subst x e2 e\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply (rule beta)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f v2 v2' v3' x e.\n       \\<lbrakk>\\<forall>v1 v2.\n                   (v1, v2) \\<in> fset f \\<longrightarrow>\n                   v2 \\<in> E e ((x, v1) # \\<rho>);\n        v2 \\<in> E e2 \\<rho>; (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v \\<sqsubseteq> v3'; isval (ELam x e) \\<and> FV e \\<subseteq> {x};\n        isval e2 \\<and> FV e2 = {}; e1 = ELam x e\\<rbrakk>\n       \\<Longrightarrow> is_val e2\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 3. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "using 4"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>; FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EApp e1 e2) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EApp e1 e2) = {}\n\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        is_val e1; \\<not> is_val e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        isval e1 \\<and> FV e1 = {}; \\<not> isval e2;\n        \\<And>v.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow>\n           Ex ((\\<longrightarrow>) e2);\n        \\<exists>f.\n           VFun f \\<in> E e1 \\<rho> \\<and>\n           (\\<exists>v2.\n               v2 \\<in> E e2 \\<rho> \\<and>\n               (\\<exists>v2' v3'.\n                   (v2', v3') \\<in> fset f \\<and>\n                   v2' \\<sqsubseteq> v2 \\<and> v \\<sqsubseteq> v3'));\n        \\<rho> = \\<rho>; FV e2 = {}\\<rbrakk>\n       \\<Longrightarrow> isval (EApp e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EApp e1 e2))\n 2. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "using 4"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>; FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EApp e1 e2) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EApp e1 e2) = {}\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> is_val e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2; v \\<sqsubseteq> v3';\n        \\<not> isval e1;\n        \\<And>v.\n           v \\<in> E e1 \\<rho> \\<Longrightarrow>\n           Ex ((\\<longrightarrow>) e1);\n        \\<And>v.\n           v \\<in> E e2 \\<rho> \\<Longrightarrow>\n           isval e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        \\<exists>f.\n           VFun f \\<in> E e1 \\<rho> \\<and>\n           (\\<exists>v2.\n               v2 \\<in> E e2 \\<rho> \\<and>\n               (\\<exists>v2' v3'.\n                   (v2', v3') \\<in> fset f \\<and>\n                   v2' \\<sqsubseteq> v2 \\<and> v \\<sqsubseteq> v3'));\n        \\<rho> = \\<rho>; FV e1 = {} \\<and> FV e2 = {}\\<rbrakk>\n       \\<Longrightarrow> isval (EApp e1 e2) \\<or>\n                         (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  is_val (EApp e1 e2) \\<or> (\\<exists>a. EApp e1 e2 \\<longrightarrow> a)\n\ngoal (5 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>f e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EPrim f e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EPrim f e1 e2))\n 5. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>f e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EPrim f e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EPrim f e1 e2))\n 5. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "case (5 f e1 e2 \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>; FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EPrim f e1 e2) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EPrim f e1 e2) = {}\n\ngoal (5 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>f e1 e2 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa xb v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa xb v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>';\n        FV (EPrim f e1 e2) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         Ex ((\\<longrightarrow>) (EPrim f e1 e2))\n 5. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_val (EPrim f e1 e2) \\<or>\n    (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply (rule e_prim_elim)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?v \\<in> E (EPrim ?f ?e1.0 ?e2.0) ?\\<rho>\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E ?e1.0 ?\\<rho>;\n        VNat n2 \\<in> E ?e2.0 ?\\<rho>; ?v = VNat (?f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "using 5(3)"], ["proof (prove)\nusing this:\n  v \\<in> E (EPrim f e1 e2) \\<rho>\n\ngoal (2 subgoals):\n 1. ?v \\<in> E (EPrim ?f ?e1.0 ?e2.0) ?\\<rho>\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E ?e1.0 ?\\<rho>;\n        VNat n2 \\<in> E ?e2.0 ?\\<rho>; ?v = VNat (?f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "using 5"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>; FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EPrim f e1 e2) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EPrim f e1 e2) = {}\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply (case_tac \"isval e1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply (case_tac \"isval e2\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply (subgoal_tac \"e1 = ENat n1\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2\\<rbrakk>\n       \\<Longrightarrow> e1 = ENat n1\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 4. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2\\<rbrakk>\n       \\<Longrightarrow> e1 = ENat n1\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 4. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "using canonical_nat"], ["proof (prove)\nusing this:\n  \\<lbrakk>VNat ?n \\<in> E ?v ?\\<rho>; isval ?v\\<rbrakk>\n  \\<Longrightarrow> ?v = ENat ?n\n\ngoal (4 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2\\<rbrakk>\n       \\<Longrightarrow> e1 = ENat n1\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 4. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply (subgoal_tac \"e2 = ENat n2\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1;\n        e2 = ENat n2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> e2 = ENat n2\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 4. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> e2 = ENat n2\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1;\n        e2 = ENat n2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 4. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "using canonical_nat"], ["proof (prove)\nusing this:\n  \\<lbrakk>VNat ?n \\<in> E ?v ?\\<rho>; isval ?v\\<rbrakk>\n  \\<Longrightarrow> ?v = ENat ?n\n\ngoal (4 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1\\<rbrakk>\n       \\<Longrightarrow> e2 = ENat n2\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1;\n        e2 = ENat n2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 4. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; isval e2; e1 = ENat n1;\n        e2 = ENat n2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 3. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; isval e1; \\<not> isval e2\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n 2. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v = VNat (f n1 n2);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EPrim f e1 e2) \\<rho>; \\<rho> = \\<rho>;\n        FV (EPrim f e1 e2) = {}; \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EPrim f e1 e2) \\<or>\n                         (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  is_val (EPrim f e1 e2) \\<or>\n  (\\<exists>a. EPrim f e1 e2 \\<longrightarrow> a)\n\ngoal (4 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "case (6 e1 e2 e3 \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?xa = 0; ?v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n   FV e3 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e3 \\<or> (\\<exists>a. e3 \\<longrightarrow> a)\n  \\<lbrakk>?xa \\<noteq> 0; ?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n   FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EIf e1 e2 e3) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EIf e1 e2 e3) = {}\n\ngoal (4 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))\n 4. \\<And>e1 e2 e3 \\<rho>' v.\n       \\<lbrakk>\\<And>x xa v.\n                   \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>';\n                    FV e1 = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e1 \\<or>\n                                     Ex ((\\<longrightarrow>) e1);\n        \\<And>x xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>';\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or> Ex ((\\<longrightarrow>) e3);\n        \\<And>x xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>';\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or> Ex ((\\<longrightarrow>) e2);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>';\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         Ex ((\\<longrightarrow>) (EIf e1 e2 e3))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_val (EIf e1 e2 e3) \\<or>\n    (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (rule e_if_elim)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?v \\<in> E (EIf ?e1.0 ?e2.0 ?e3.0) ?\\<rho>\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E ?e1.0 ?\\<rho>;\n        n = 0 \\<longrightarrow> ?v \\<in> E ?e3.0 ?\\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> ?v \\<in> E ?e2.0 ?\\<rho>\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "using 6(4)"], ["proof (prove)\nusing this:\n  v \\<in> E (EIf e1 e2 e3) \\<rho>\n\ngoal (2 subgoals):\n 1. ?v \\<in> E (EIf ?e1.0 ?e2.0 ?e3.0) ?\\<rho>\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E ?e1.0 ?\\<rho>;\n        n = 0 \\<longrightarrow> ?v \\<in> E ?e3.0 ?\\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> ?v \\<in> E ?e2.0 ?\\<rho>\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (cases \"isval e1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (rename_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (subgoal_tac \"e1 = ENat n\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> e1 = ENat n\n 3. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> e1 = ENat n\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 3. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (rule canonical_nat)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> VNat n \\<in> E e1 (?\\<rho>5 n)\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> isval e1\n 3. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 4. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        isval e1\\<rbrakk>\n       \\<Longrightarrow> isval e1\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 3. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (case_tac \"n = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n; n = 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a\n 3. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; isval e1;\n        e1 = ENat n; n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> is_val (EIf e1 e2 e3) \\<or>\n                         (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a", "using 6"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>; FV e1 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e1 \\<or> (\\<exists>a. e1 \\<longrightarrow> a)\n  \\<lbrakk>?xa = 0; ?v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n   FV e3 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e3 \\<or> (\\<exists>a. e3 \\<longrightarrow> a)\n  \\<lbrakk>?xa \\<noteq> 0; ?v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n   FV e2 = {}\\<rbrakk>\n  \\<Longrightarrow> is_val e2 \\<or> (\\<exists>a. e2 \\<longrightarrow> a)\n  v \\<in> E (EIf e1 e2 e3) \\<rho>\n  \\<rho> = \\<rho>\n  FV (EIf e1 e2 e3) = {}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>;\n        \\<not> isval e1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a", "apply (subgoal_tac \"\\<exists> e1'. e1 \\<longrightarrow> e1'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>;\n        FV (EIf e1 e2 e3) = {};\n        \\<exists>e1'. e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>;\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e1'. e1 \\<longrightarrow> e1'", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>;\n        FV (EIf e1 e2 e3) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>e1'. e1 \\<longrightarrow> e1'\n 2. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>;\n        FV (EIf e1 e2 e3) = {};\n        \\<exists>e1'. e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; \\<rho> = \\<rho>;\n        FV (EIf e1 e2 e3) = {};\n        \\<exists>e1'. e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n e1'.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; FV (EIf e1 e2 e3) = {};\n        \\<rho> = \\<rho>; e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a", "apply (rename_tac e1')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n e1'.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; FV (EIf e1 e2 e3) = {};\n        \\<rho> = \\<rho>; e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a", "apply (rule_tac x=\"EIf e1' e2 e3\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n e1'.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; FV (EIf e1 e2 e3) = {};\n        \\<rho> = \\<rho>; e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> EIf e1 e2 e3 \\<longrightarrow> EIf e1' e2 e3", "apply (rule if_cond)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n e1'.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v \\<in> E e2 \\<rho>; \\<not> isval e1;\n        \\<And>v.\n           \\<lbrakk>v \\<in> E e1 \\<rho>; \\<rho> = \\<rho>;\n            FV e1 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e1 \\<or>\n                             (\\<exists>a. e1 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa = 0; v \\<in> E e3 \\<rho>; \\<rho> = \\<rho>;\n            FV e3 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e3 \\<or>\n                             (\\<exists>a. e3 \\<longrightarrow> a);\n        \\<And>xa v.\n           \\<lbrakk>xa \\<noteq> 0; v \\<in> E e2 \\<rho>; \\<rho> = \\<rho>;\n            FV e2 = {}\\<rbrakk>\n           \\<Longrightarrow> is_val e2 \\<or>\n                             (\\<exists>a. e2 \\<longrightarrow> a);\n        v \\<in> E (EIf e1 e2 e3) \\<rho>; FV (EIf e1 e2 e3) = {};\n        \\<rho> = \\<rho>; e1 \\<longrightarrow> e1'\\<rbrakk>\n       \\<Longrightarrow> e1 \\<longrightarrow> e1'", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  is_val (EIf e1 e2 e3) \\<or> (\\<exists>a. EIf e1 e2 e3 \\<longrightarrow> a)\n\ngoal (3 subgoals):\n 1. \\<And>n \\<rho>' v.\n       \\<lbrakk>v \\<in> E (ENat n) \\<rho>; \\<rho> = \\<rho>';\n        FV (ENat n) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ENat n) \\<or>\n                         Ex ((\\<longrightarrow>) (ENat n))\n 2. \\<And>x \\<rho>' v.\n       \\<lbrakk>v \\<in> E (EVar x) \\<rho>; \\<rho> = \\<rho>';\n        FV (EVar x) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (EVar x) \\<or>\n                         Ex ((\\<longrightarrow>) (EVar x))\n 3. \\<And>x e \\<rho>' v.\n       \\<lbrakk>\\<And>xa xb xaa xab v.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb; v \\<in> E e \\<rho>;\n                    \\<rho> = (x, xaa) # \\<rho>'; FV e = {}\\<rbrakk>\n                   \\<Longrightarrow> is_val e \\<or>\n                                     Ex ((\\<longrightarrow>) e);\n        v \\<in> E (ELam x e) \\<rho>; \\<rho> = \\<rho>';\n        FV (ELam x e) = {}\\<rbrakk>\n       \\<Longrightarrow> is_val (ELam x e) \\<or>\n                         Ex ((\\<longrightarrow>) (ELam x e))", "qed auto"], ["", "subsection \"Logical relation between values and big-step values\""], ["", "fun good_entry :: \"name \\<Rightarrow> exp \\<Rightarrow> benv \\<Rightarrow> (val \\<times> bval set) \\<times> (val \\<times> bval set) \\<Rightarrow> bool \\<Rightarrow> bool\" where\n  \"good_entry x e \\<rho> ((v1,g1),(v2,g2)) r = ((\\<forall> v \\<in> g1. \\<exists> v'. (x,v)#\\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> g2) \\<and> r)\""], ["", "primrec good :: \"val \\<Rightarrow> bval set\" where\n  Gnat: \"good (VNat n) = { BNat n }\" |\n  Gfun: \"good (VFun f) = { vc. \\<exists> x e \\<rho>. vc = BClos x e \\<rho> \n          \\<and> (ffold (good_entry x e \\<rho>) True (fimage (map_prod (\\<lambda>v. (v,good v)) (\\<lambda>v. (v,good v))) f)) }\""], ["", "inductive good_env :: \"benv \\<Rightarrow> env \\<Rightarrow> bool\" where\n  genv_nil[intro!]: \"good_env [] []\" |\n  genv_cons[intro!]: \"\\<lbrakk> v \\<in> good v'; good_env \\<rho> \\<rho>' \\<rbrakk> \\<Longrightarrow> good_env ((x,v)#\\<rho>) ((x,v')#\\<rho>')\""], ["", "inductive_cases \n  genv_any_nil_inv: \"good_env \\<rho> []\" and\n  genv_any_cons_inv: \"good_env \\<rho> (b#\\<rho>')\""], ["", "lemma lookup_good:\n  assumes l: \"lookup \\<rho>' x = Some A\" and EE: \"good_env \\<rho> \\<rho>'\"\n  shows \"\\<exists> v. lookup \\<rho> x = Some v \\<and> v \\<in> good A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A", "using l EE"], ["proof (prove)\nusing this:\n  lookup \\<rho>' x = Some A\n  good_env \\<rho> \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A", "proof (induction \\<rho>' arbitrary: x A \\<rho>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x A \\<rho>.\n       \\<lbrakk>lookup [] x = Some A; good_env \\<rho> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A\n 2. \\<And>a \\<rho>' x A \\<rho>.\n       \\<lbrakk>\\<And>x A \\<rho>.\n                   \\<lbrakk>lookup \\<rho>' x = Some A;\n                    good_env \\<rho> \\<rho>'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  lookup \\<rho> x = Some v \\<and> v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A;\n        good_env \\<rho> (a # \\<rho>')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "case Nil"], ["proof (state)\nthis:\n  lookup [] x = Some A\n  good_env \\<rho> []\n\ngoal (2 subgoals):\n 1. \\<And>x A \\<rho>.\n       \\<lbrakk>lookup [] x = Some A; good_env \\<rho> []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A\n 2. \\<And>a \\<rho>' x A \\<rho>.\n       \\<lbrakk>\\<And>x A \\<rho>.\n                   \\<lbrakk>lookup \\<rho>' x = Some A;\n                    good_env \\<rho> \\<rho>'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  lookup \\<rho> x = Some v \\<and> v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A;\n        good_env \\<rho> (a # \\<rho>')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A", "apply (rule genv_any_nil_inv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. good_env ?\\<rho> []\n 2. ?\\<rho> = [] \\<Longrightarrow>\n    \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A", "using Nil"], ["proof (prove)\nusing this:\n  lookup [] x = Some A\n  good_env \\<rho> []\n\ngoal (2 subgoals):\n 1. good_env ?\\<rho> []\n 2. ?\\<rho> = [] \\<Longrightarrow>\n    \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A", "by auto"], ["proof (state)\nthis:\n  \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>' x A \\<rho>.\n       \\<lbrakk>\\<And>x A \\<rho>.\n                   \\<lbrakk>lookup \\<rho>' x = Some A;\n                    good_env \\<rho> \\<rho>'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  lookup \\<rho> x = Some v \\<and> v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A;\n        good_env \\<rho> (a # \\<rho>')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>' x A \\<rho>.\n       \\<lbrakk>\\<And>x A \\<rho>.\n                   \\<lbrakk>lookup \\<rho>' x = Some A;\n                    good_env \\<rho> \\<rho>'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  lookup \\<rho> x = Some v \\<and> v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A;\n        good_env \\<rho> (a # \\<rho>')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "case (Cons a \\<rho>')"], ["proof (state)\nthis:\n  \\<lbrakk>lookup \\<rho>' ?x = Some ?A; good_env ?\\<rho> \\<rho>'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       lookup ?\\<rho> ?x = Some v \\<and> v \\<in> good ?A\n  lookup (a # \\<rho>') x = Some A\n  good_env \\<rho> (a # \\<rho>')\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>' x A \\<rho>.\n       \\<lbrakk>\\<And>x A \\<rho>.\n                   \\<lbrakk>lookup \\<rho>' x = Some A;\n                    good_env \\<rho> \\<rho>'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  lookup \\<rho> x = Some v \\<and> v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A;\n        good_env \\<rho> (a # \\<rho>')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A", "apply (rule genv_any_cons_inv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. good_env ?\\<rho> (?b # ?\\<rho>')\n 2. \\<And>v v' \\<rho> x.\n       \\<lbrakk>?\\<rho> = (x, v) # \\<rho>; ?b = (x, v'); v \\<in> good v';\n        good_env \\<rho> ?\\<rho>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "using Cons"], ["proof (prove)\nusing this:\n  \\<lbrakk>lookup \\<rho>' ?x = Some ?A; good_env ?\\<rho> \\<rho>'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       lookup ?\\<rho> ?x = Some v \\<and> v \\<in> good ?A\n  lookup (a # \\<rho>') x = Some A\n  good_env \\<rho> (a # \\<rho>')\n\ngoal (2 subgoals):\n 1. good_env ?\\<rho> (?b # ?\\<rho>')\n 2. \\<And>v v' \\<rho> x.\n       \\<lbrakk>?\\<rho> = (x, v) # \\<rho>; ?b = (x, v'); v \\<in> good v';\n        good_env \\<rho> ?\\<rho>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v v' \\<rho> x.\n       \\<lbrakk>\\<rho> = (x, v) # \\<rho>; a = (x, v'); v \\<in> good v';\n        good_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "apply (rename_tac x')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v v' \\<rho> x'.\n       \\<lbrakk>\\<rho> = (x', v) # \\<rho>; a = (x', v'); v \\<in> good v';\n        good_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            lookup \\<rho> x = Some v \\<and> v \\<in> good A", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v v' \\<rho> x'.\n       \\<lbrakk>a = (x', v'); v \\<in> good v'; good_env \\<rho> \\<rho>';\n        \\<rho> = (x', v) # \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            lookup ((x', v) # \\<rho>) x = Some va \\<and>\n                            va \\<in> good A", "using Cons"], ["proof (prove)\nusing this:\n  \\<lbrakk>lookup \\<rho>' ?x = Some ?A; good_env ?\\<rho> \\<rho>'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       lookup ?\\<rho> ?x = Some v \\<and> v \\<in> good ?A\n  lookup (a # \\<rho>') x = Some A\n  good_env \\<rho> (a # \\<rho>')\n\ngoal (1 subgoal):\n 1. \\<And>v v' \\<rho> x'.\n       \\<lbrakk>a = (x', v'); v \\<in> good v'; good_env \\<rho> \\<rho>';\n        \\<rho> = (x', v) # \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            lookup ((x', v) # \\<rho>) x = Some va \\<and>\n                            va \\<in> good A", "apply (case_tac \"x = x'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v v' \\<rho> x'.\n       \\<lbrakk>a = (x', v'); v \\<in> good v'; good_env \\<rho> \\<rho>';\n        \\<rho> = (x', v) # \\<rho>;\n        \\<And>x A \\<rho>.\n           \\<lbrakk>lookup \\<rho>' x = Some A;\n            good_env \\<rho> \\<rho>'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                lookup \\<rho> x = Some v \\<and>\n                                v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A; good_env \\<rho> (a # \\<rho>');\n        x = x'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            lookup ((x', v) # \\<rho>) x = Some va \\<and>\n                            va \\<in> good A\n 2. \\<And>v v' \\<rho> x'.\n       \\<lbrakk>a = (x', v'); v \\<in> good v'; good_env \\<rho> \\<rho>';\n        \\<rho> = (x', v) # \\<rho>;\n        \\<And>x A \\<rho>.\n           \\<lbrakk>lookup \\<rho>' x = Some A;\n            good_env \\<rho> \\<rho>'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                lookup \\<rho> x = Some v \\<and>\n                                v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A; good_env \\<rho> (a # \\<rho>');\n        x \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            lookup ((x', v) # \\<rho>) x = Some va \\<and>\n                            va \\<in> good A", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v v' \\<rho> x'.\n       \\<lbrakk>a = (x', v'); v \\<in> good v'; good_env \\<rho> \\<rho>';\n        \\<rho> = (x', v) # \\<rho>;\n        \\<And>x A \\<rho>.\n           \\<lbrakk>lookup \\<rho>' x = Some A;\n            good_env \\<rho> \\<rho>'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                lookup \\<rho> x = Some v \\<and>\n                                v \\<in> good A;\n        lookup (a # \\<rho>') x = Some A; good_env \\<rho> (a # \\<rho>');\n        x \\<noteq> x'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            lookup ((x', v) # \\<rho>) x = Some va \\<and>\n                            va \\<in> good A", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<in> good A\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation good_prod :: \"val \\<times> val \\<Rightarrow> (val \\<times> bval set) \\<times> (val \\<times> bval set)\" where\n  \"good_prod \\<equiv> map_prod (\\<lambda>v. (v,good v)) (\\<lambda>v. (v,good v))\""], ["", "lemma good_prod_inj: \"inj_on good_prod (fset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on good_prod (fset A)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>fset A.\n       \\<forall>y\\<in>fset A.\n          good_prod x = good_prod y \\<longrightarrow> x = y", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition good_fun :: \"func \\<Rightarrow> name \\<Rightarrow> exp \\<Rightarrow> benv \\<Rightarrow> bool\" where\n  \"good_fun f x e \\<rho> \\<equiv> (ffold (good_entry x e \\<rho>) True (fimage good_prod f))\""], ["", "lemma good_fun_def2:\n  \"good_fun f x e \\<rho> = ffold (good_entry x e \\<rho> \\<circ> good_prod) True f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho> =\n    ffold (good_entry x e \\<rho> \\<circ> good_prod) True f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho> =\n    ffold (good_entry x e \\<rho> \\<circ> good_prod) True f", "interpret ge: comp_fun_commute \"(good_entry x e \\<rho>) \\<circ> good_prod\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute (good_entry x e \\<rho> \\<circ> good_prod)", "unfolding comp_fun_commute_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y xa.\n       (good_entry x e \\<rho> \\<circ> good_prod) y \\<circ>\n       (good_entry x e \\<rho> \\<circ> good_prod) xa =\n       (good_entry x e \\<rho> \\<circ> good_prod) xa \\<circ>\n       (good_entry x e \\<rho> \\<circ> good_prod) y", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho> =\n    ffold (good_entry x e \\<rho> \\<circ> good_prod) True f", "show \"good_fun f x e \\<rho>\n         = ffold ((good_entry x e \\<rho>) \\<circ> good_prod) True f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho> =\n    ffold (good_entry x e \\<rho> \\<circ> good_prod) True f", "using good_prod_inj[of \"f\"] good_fun_def\n        ffold_fimage[of good_prod \"f\" \"good_entry x e \\<rho>\" True]"], ["proof (prove)\nusing this:\n  inj_on good_prod (fset f)\n  good_fun ?f ?x ?e ?\\<rho> \\<equiv>\n  ffold (good_entry ?x ?e ?\\<rho>) True (good_prod |`| ?f)\n  inj_on good_prod (fset f) \\<Longrightarrow>\n  ffold (good_entry x e \\<rho>) True (good_prod |`| f) =\n  ffold (good_entry x e \\<rho> \\<circ> good_prod) True f\n\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho> =\n    ffold (good_entry x e \\<rho> \\<circ> good_prod) True f", "by auto"], ["proof (state)\nthis:\n  good_fun f x e \\<rho> =\n  ffold (good_entry x e \\<rho> \\<circ> good_prod) True f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gfun_elim: \"w \\<in> good (VFun f) \\<Longrightarrow> \\<exists> x e \\<rho>. w = BClos x e \\<rho> \\<and> good_fun f x e \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> good (VFun f) \\<Longrightarrow>\n    \\<exists>x e \\<rho>. w = BClos x e \\<rho> \\<and> good_fun f x e \\<rho>", "using good_fun_def"], ["proof (prove)\nusing this:\n  good_fun ?f ?x ?e ?\\<rho> \\<equiv>\n  ffold (good_entry ?x ?e ?\\<rho>) True (good_prod |`| ?f)\n\ngoal (1 subgoal):\n 1. w \\<in> good (VFun f) \\<Longrightarrow>\n    \\<exists>x e \\<rho>. w = BClos x e \\<rho> \\<and> good_fun f x e \\<rho>", "by auto"], ["", "lemma gfun_mem_iff: \"good_fun f x e \\<rho> = (\\<forall> v1 v2. (v1,v2) \\<in> fset f \\<longrightarrow> \n    (\\<forall> v \\<in> good v1. \\<exists> v'. (x,v)#\\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho> =\n    (\\<forall>v1 v2.\n        (v1, v2) \\<in> fset f \\<longrightarrow>\n        (\\<forall>v\\<in>good v1.\n            \\<exists>v'.\n               (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n               v' \\<in> good v2))", "proof (induction f arbitrary: x e \\<rho>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x e \\<rho>.\n       good_fun {||} x e \\<rho> =\n       (\\<forall>v1 v2.\n           (v1, v2) \\<in> fset {||} \\<longrightarrow>\n           (\\<forall>v\\<in>good v1.\n               \\<exists>v'.\n                  (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                  v' \\<in> good v2))\n 2. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x e \\<rho>.\n       good_fun {||} x e \\<rho> =\n       (\\<forall>v1 v2.\n           (v1, v2) \\<in> fset {||} \\<longrightarrow>\n           (\\<forall>v\\<in>good v1.\n               \\<exists>v'.\n                  (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                  v' \\<in> good v2))\n 2. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "interpret ge: comp_fun_commute \"(good_entry x e \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute (good_entry x e \\<rho>)", "unfolding comp_fun_commute_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y x.\n       good_entry x e \\<rho> y \\<circ> good_entry x e \\<rho> x =\n       good_entry x e \\<rho> x \\<circ> good_entry x e \\<rho> y", "by auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x e \\<rho>.\n       good_fun {||} x e \\<rho> =\n       (\\<forall>v1 v2.\n           (v1, v2) \\<in> fset {||} \\<longrightarrow>\n           (\\<forall>v\\<in>good v1.\n               \\<exists>v'.\n                  (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                  v' \\<in> good v2))\n 2. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "from empty"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun {||} x e \\<rho> =\n    (\\<forall>v1 v2.\n        (v1, v2) \\<in> fset {||} \\<longrightarrow>\n        (\\<forall>v\\<in>good v1.\n            \\<exists>v'.\n               (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n               v' \\<in> good v2))", "using good_fun_def2"], ["proof (prove)\nusing this:\n  good_fun ?f ?x ?e ?\\<rho> =\n  ffold (good_entry ?x ?e ?\\<rho> \\<circ> good_prod) True ?f\n\ngoal (1 subgoal):\n 1. good_fun {||} x e \\<rho> =\n    (\\<forall>v1 v2.\n        (v1, v2) \\<in> fset {||} \\<longrightarrow>\n        (\\<forall>v\\<in>good v1.\n            \\<exists>v'.\n               (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n               v' \\<in> good v2))", "by simp"], ["proof (state)\nthis:\n  good_fun {||} x e \\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset {||} \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "case (insert p f)"], ["proof (state)\nthis:\n  p |\\<notin>| f\n  good_fun f ?x ?e ?\\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (?x, v) # ?\\<rho> \\<turnstile> ?e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "interpret ge: comp_fun_commute \"(good_entry x e \\<rho>) \\<circ> good_prod\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute (good_entry x e \\<rho> \\<circ> good_prod)", "unfolding comp_fun_commute_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y x.\n       (good_entry x e \\<rho> \\<circ> good_prod) y \\<circ>\n       (good_entry x e \\<rho> \\<circ> good_prod) x =\n       (good_entry x e \\<rho> \\<circ> good_prod) x \\<circ>\n       (good_entry x e \\<rho> \\<circ> good_prod) y", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "have \"good_fun (finsert p f) x e \\<rho>\n         = ffold ((good_entry x e \\<rho>) \\<circ> good_prod) True (finsert p f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun (finsert p f) x e \\<rho> =\n    ffold (good_entry x e \\<rho> \\<circ> good_prod) True (finsert p f)", "by (simp add: good_fun_def2)"], ["proof (state)\nthis:\n  good_fun (finsert p f) x e \\<rho> =\n  ffold (good_entry x e \\<rho> \\<circ> good_prod) True (finsert p f)\n\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "also"], ["proof (state)\nthis:\n  good_fun (finsert p f) x e \\<rho> =\n  ffold (good_entry x e \\<rho> \\<circ> good_prod) True (finsert p f)\n\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "from insert(1)"], ["proof (chain)\npicking this:\n  p |\\<notin>| f", "have \"... = ((good_entry x e \\<rho>) \\<circ> good_prod) p \n                  (ffold ((good_entry x e \\<rho>) \\<circ> good_prod) True f)\""], ["proof (prove)\nusing this:\n  p |\\<notin>| f\n\ngoal (1 subgoal):\n 1. ffold (good_entry x e \\<rho> \\<circ> good_prod) True (finsert p f) =\n    (good_entry x e \\<rho> \\<circ> good_prod) p\n     (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "by simp"], ["proof (state)\nthis:\n  ffold (good_entry x e \\<rho> \\<circ> good_prod) True (finsert p f) =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "finally"], ["proof (chain)\npicking this:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "have 1: \"good_fun (finsert p f) x e \\<rho>\n      = ((good_entry x e \\<rho>) \\<circ> good_prod) p (ffold ((good_entry x e \\<rho>) \\<circ> good_prod) True f)\""], ["proof (prove)\nusing this:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n\ngoal (1 subgoal):\n 1. good_fun (finsert p f) x e \\<rho> =\n    (good_entry x e \\<rho> \\<circ> good_prod) p\n     (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "."], ["proof (state)\nthis:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n\ngoal (1 subgoal):\n 1. \\<And>x f xa e \\<rho>.\n       \\<lbrakk>x |\\<notin>| f;\n        \\<And>x e \\<rho>.\n           good_fun f x e \\<rho> =\n           (\\<forall>v1 v2.\n               (v1, v2) \\<in> fset f \\<longrightarrow>\n               (\\<forall>v\\<in>good v1.\n                   \\<exists>v'.\n                      (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                      v' \\<in> good v2))\\<rbrakk>\n       \\<Longrightarrow> good_fun (finsert x f) xa e \\<rho> =\n                         (\\<forall>v1 v2.\n                             (v1, v2)\n                             \\<in> fset (finsert x f) \\<longrightarrow>\n                             (\\<forall>v\\<in>good v1.\n                                 \\<exists>v'.\n                                    (xa, v) #\n                                    \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                    v' \\<in> good v2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun (finsert p f) x e \\<rho> =\n    (\\<forall>v1 v2.\n        (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n        (\\<forall>v\\<in>good v1.\n            \\<exists>v'.\n               (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n               v' \\<in> good v2))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. good_fun (finsert p f) x e \\<rho> \\<Longrightarrow>\n    \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2)\n 2. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "assume 2: \"good_fun (finsert p f) x e \\<rho>\""], ["proof (state)\nthis:\n  good_fun (finsert p f) x e \\<rho>\n\ngoal (2 subgoals):\n 1. good_fun (finsert p f) x e \\<rho> \\<Longrightarrow>\n    \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2)\n 2. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "show \"\\<forall>v1 v2. (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1. \\<exists>v'. (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset (finsert p f); v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "fix v1 v2 v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset (finsert p f); v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "assume 3: \"(v1, v2) \\<in> fset (finsert p f)\" and 4: \"v \\<in> good v1\""], ["proof (state)\nthis:\n  (v1, v2) \\<in> fset (finsert p f)\n  v \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset (finsert p f); v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from 3"], ["proof (chain)\npicking this:\n  (v1, v2) \\<in> fset (finsert p f)", "have \"(v1,v2) = p \\<or> (v1,v2) \\<in> fset f\""], ["proof (prove)\nusing this:\n  (v1, v2) \\<in> fset (finsert p f)\n\ngoal (1 subgoal):\n 1. (v1, v2) = p \\<or> (v1, v2) \\<in> fset f", "by auto"], ["proof (state)\nthis:\n  (v1, v2) = p \\<or> (v1, v2) \\<in> fset f\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset (finsert p f); v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from this"], ["proof (chain)\npicking this:\n  (v1, v2) = p \\<or> (v1, v2) \\<in> fset f", "show \"\\<exists>v'. (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\""], ["proof (prove)\nusing this:\n  (v1, v2) = p \\<or> (v1, v2) \\<in> fset f\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (v1, v2) = p \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n 2. (v1, v2) \\<in> fset f \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "assume v12_p: \"(v1,v2) = p\""], ["proof (state)\nthis:\n  (v1, v2) = p\n\ngoal (2 subgoals):\n 1. (v1, v2) = p \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n 2. (v1, v2) \\<in> fset f \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "from 1 v12_p[THEN sym] 2 4"], ["proof (chain)\npicking this:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  p = (v1, v2)\n  good_fun (finsert p f) x e \\<rho>\n  v \\<in> good v1", "show ?thesis"], ["proof (prove)\nusing this:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  p = (v1, v2)\n  good_fun (finsert p f) x e \\<rho>\n  v \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "by simp"], ["proof (state)\nthis:\n  \\<exists>v'.\n     (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n\ngoal (1 subgoal):\n 1. (v1, v2) \\<in> fset f \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (v1, v2) \\<in> fset f \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "assume v12_f: \"(v1,v2) \\<in> fset f\""], ["proof (state)\nthis:\n  (v1, v2) \\<in> fset f\n\ngoal (1 subgoal):\n 1. (v1, v2) \\<in> fset f \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "from 1 2"], ["proof (chain)\npicking this:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  good_fun (finsert p f) x e \\<rho>", "have 5: \"good_fun f x e \\<rho>\""], ["proof (prove)\nusing this:\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  good_fun (finsert p f) x e \\<rho>\n\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>good_entry x e \\<rho> (good_prod p)\n              (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f);\n     good_fun (finsert p f) x e \\<rho>\\<rbrakk>\n    \\<Longrightarrow> good_fun f x e \\<rho>", "apply (cases \"(good_prod p)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>good_entry x e \\<rho> (good_prod p)\n                 (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f);\n        good_fun (finsert p f) x e \\<rho>; good_prod p = (a, b, c)\\<rbrakk>\n       \\<Longrightarrow> good_fun f x e \\<rho>", "by (auto simp: good_fun_def2)"], ["proof (state)\nthis:\n  good_fun f x e \\<rho>\n\ngoal (1 subgoal):\n 1. (v1, v2) \\<in> fset f \\<Longrightarrow>\n    \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "from v12_f 5 4 insert(2)[of x e \\<rho>]"], ["proof (chain)\npicking this:\n  (v1, v2) \\<in> fset f\n  good_fun f x e \\<rho>\n  v \\<in> good v1\n  good_fun f x e \\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n             v' \\<in> good v2))", "show ?thesis"], ["proof (prove)\nusing this:\n  (v1, v2) \\<in> fset f\n  good_fun f x e \\<rho>\n  v \\<in> good v1\n  good_fun f x e \\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "by auto"], ["proof (state)\nthis:\n  \\<exists>v'.\n     (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v'.\n     (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n     (\\<forall>v\\<in>good v1.\n         \\<exists>v'.\n            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n            v' \\<in> good v2)\n\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "assume 2: \"\\<forall>v1 v2. (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1. \\<exists>v'. (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2)\""], ["proof (state)\nthis:\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n     (\\<forall>v\\<in>good v1.\n         \\<exists>v'.\n            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n            v' \\<in> good v2)\n\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "have 3: \"good_entry x e \\<rho> (good_prod p) True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_entry x e \\<rho> (good_prod p) True", "apply (cases p)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       p = (a, b) \\<Longrightarrow> good_entry x e \\<rho> (good_prod p) True", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       p = (a, b) \\<Longrightarrow>\n       \\<forall>v\\<in>good a.\n          \\<exists>v'.\n             (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n             v' \\<in> good b", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b v.\n       \\<lbrakk>p = (a, b); v \\<in> good a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b v.\n       \\<lbrakk>p = (a, b); v \\<in> good a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good b", "fix v1 v2 v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b v.\n       \\<lbrakk>p = (a, b); v \\<in> good a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good b", "assume p: \"p = (v1,v2)\" and v_v1: \"v \\<in> good v1\""], ["proof (state)\nthis:\n  p = (v1, v2)\n  v \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<And>a b v.\n       \\<lbrakk>p = (a, b); v \\<in> good a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good b", "from p"], ["proof (chain)\npicking this:\n  p = (v1, v2)", "have \"(v1,v2) \\<in> fset (finsert p f)\""], ["proof (prove)\nusing this:\n  p = (v1, v2)\n\ngoal (1 subgoal):\n 1. (v1, v2) \\<in> fset (finsert p f)", "by simp"], ["proof (state)\nthis:\n  (v1, v2) \\<in> fset (finsert p f)\n\ngoal (1 subgoal):\n 1. \\<And>a b v.\n       \\<lbrakk>p = (a, b); v \\<in> good a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good b", "from this 2 v_v1"], ["proof (chain)\npicking this:\n  (v1, v2) \\<in> fset (finsert p f)\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n     (\\<forall>v\\<in>good v1.\n         \\<exists>v'.\n            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n            v' \\<in> good v2)\n  v \\<in> good v1", "show \"\\<exists>v'. (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\""], ["proof (prove)\nusing this:\n  (v1, v2) \\<in> fset (finsert p f)\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n     (\\<forall>v\\<in>good v1.\n         \\<exists>v'.\n            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n            v' \\<in> good v2)\n  v \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "by blast"], ["proof (state)\nthis:\n  \\<exists>v'.\n     (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good_entry x e \\<rho> (good_prod p) True\n\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "from insert(2) 2"], ["proof (chain)\npicking this:\n  good_fun f ?x ?e ?\\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (?x, v) # ?\\<rho> \\<turnstile> ?e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n     (\\<forall>v\\<in>good v1.\n         \\<exists>v'.\n            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n            v' \\<in> good v2)", "have 4: \"good_fun f x e \\<rho>\""], ["proof (prove)\nusing this:\n  good_fun f ?x ?e ?\\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (?x, v) # ?\\<rho> \\<turnstile> ?e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n     (\\<forall>v\\<in>good v1.\n         \\<exists>v'.\n            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n            v' \\<in> good v2)\n\ngoal (1 subgoal):\n 1. good_fun f x e \\<rho>", "by auto"], ["proof (state)\nthis:\n  good_fun f x e \\<rho>\n\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "have \"(good_entry x e \\<rho> \\<circ> good_prod) p\n     (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (good_entry x e \\<rho> \\<circ> good_prod) p\n     (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. good_entry x e \\<rho> (good_prod p)\n     (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "apply (cases \"good_prod p\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       good_prod p = (a, b, c) \\<Longrightarrow>\n       good_entry x e \\<rho> (good_prod p)\n        (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "apply (rename_tac a b c)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       good_prod p = (a, b, c) \\<Longrightarrow>\n       good_entry x e \\<rho> (good_prod p)\n        (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "apply (case_tac a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = (a, b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> good_entry x e \\<rho> (good_prod p)\n                          (ffold (good_entry x e \\<rho> \\<circ> good_prod)\n                            True f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>v\\<in>ba.\n                             \\<exists>v'.\n                                (x, v) #\n                                \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                                v' \\<in> c) \\<and>\n                         ffold (good_entry x e \\<rho> \\<circ> good_prod)\n                          True f", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>ba.\n                            \\<exists>v'.\n                               (x, v) #\n                               \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                               v' \\<in> c\n 2. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> ffold (good_entry x e \\<rho> \\<circ> good_prod)\n                          True f", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> ffold (good_entry x e \\<rho> \\<circ> good_prod)\n                          True f\n 2. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>ba.\n                            \\<exists>v'.\n                               (x, v) #\n                               \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                               v' \\<in> c", "using 4 good_fun_def2"], ["proof (prove)\nusing this:\n  good_fun f x e \\<rho>\n  good_fun ?f ?x ?e ?\\<rho> =\n  ffold (good_entry ?x ?e ?\\<rho> \\<circ> good_prod) True ?f\n\ngoal (2 subgoals):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> ffold (good_entry x e \\<rho> \\<circ> good_prod)\n                          True f\n 2. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>ba.\n                            \\<exists>v'.\n                               (x, v) #\n                               \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                               v' \\<in> c", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>ba.\n                            \\<exists>v'.\n                               (x, v) #\n                               \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                               v' \\<in> c", "using 3"], ["proof (prove)\nusing this:\n  good_entry x e \\<rho> (good_prod p) True\n\ngoal (1 subgoal):\n 1. \\<And>a b c aa ba.\n       \\<lbrakk>good_prod p = ((aa, ba), b, c); a = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>ba.\n                            \\<exists>v'.\n                               (x, v) #\n                               \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                               v' \\<in> c", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun (finsert p f) x e \\<rho>", "from this 1"], ["proof (chain)\npicking this:\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)", "show \"good_fun (finsert p f) x e \\<rho>\""], ["proof (prove)\nusing this:\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  good_fun (finsert p f) x e \\<rho> =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n\ngoal (1 subgoal):\n 1. good_fun (finsert p f) x e \\<rho>", "unfolding good_fun_def"], ["proof (prove)\nusing this:\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n  ffold (good_entry x e \\<rho>) True (good_prod |`| finsert p f) =\n  (good_entry x e \\<rho> \\<circ> good_prod) p\n   (ffold (good_entry x e \\<rho> \\<circ> good_prod) True f)\n\ngoal (1 subgoal):\n 1. ffold (good_entry x e \\<rho>) True (good_prod |`| finsert p f)", "by simp"], ["proof (state)\nthis:\n  good_fun (finsert p f) x e \\<rho>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good_fun (finsert p f) x e \\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset (finsert p f) \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gfun_mem: \"\\<lbrakk> (v1,v2) \\<in> fset f; good_fun f x e \\<rho> \\<rbrakk> \n      \\<Longrightarrow> \\<forall> v \\<in> good v1. \\<exists> v'. (x,v)#\\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(v1, v2) \\<in> fset f; good_fun f x e \\<rho>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>good v1.\n                         \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "using gfun_mem_iff"], ["proof (prove)\nusing this:\n  good_fun ?f ?x ?e ?\\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset ?f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (?x, v) # ?\\<rho> \\<turnstile> ?e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(v1, v2) \\<in> fset f; good_fun f x e \\<rho>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>v\\<in>good v1.\n                         \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "by blast"], ["", "lemma gfun_intro: \"(\\<forall> v1 v2.(v1,v2)\\<in>fset f\\<longrightarrow>(\\<forall>v\\<in>good v1.\\<exists> v'.(x,v)#\\<rho> \\<turnstile> e \\<Down> v'\\<and>v'\\<in>good v2))\n  \\<Longrightarrow> good_fun f x e \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset f \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun f x e \\<rho>", "using gfun_mem_iff[of f x e \\<rho>]"], ["proof (prove)\nusing this:\n  good_fun f x e \\<rho> =\n  (\\<forall>v1 v2.\n      (v1, v2) \\<in> fset f \\<longrightarrow>\n      (\\<forall>v\\<in>good v1.\n          \\<exists>v'.\n             (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n             v' \\<in> good v2))\n\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset f \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2) \\<Longrightarrow>\n    good_fun f x e \\<rho>", "by simp"], ["", "lemma sub_good: fixes v::val assumes wv: \"w \\<in> good v\" and vp_v: \"v' \\<sqsubseteq> v\" shows \"w \\<in> good v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> good v'", "proof (cases v)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. v = VNat x1 \\<Longrightarrow> w \\<in> good v'\n 2. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "case (VNat n)"], ["proof (state)\nthis:\n  v = VNat n\n\ngoal (2 subgoals):\n 1. \\<And>x1. v = VNat x1 \\<Longrightarrow> w \\<in> good v'\n 2. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "from this wv vp_v"], ["proof (chain)\npicking this:\n  v = VNat n\n  w \\<in> good v\n  v' \\<sqsubseteq> v", "show ?thesis"], ["proof (prove)\nusing this:\n  v = VNat n\n  w \\<in> good v\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. w \\<in> good v'", "by auto"], ["proof (state)\nthis:\n  w \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "case (VFun t1)"], ["proof (state)\nthis:\n  v = VFun t1\n\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "from vp_v VFun"], ["proof (chain)\npicking this:\n  v' \\<sqsubseteq> v\n  v = VFun t1", "obtain t2 where b: \"v' = VFun t2\" and t2_t1: \"fset t2 \\<subseteq> fset t1\""], ["proof (prove)\nusing this:\n  v' \\<sqsubseteq> v\n  v = VFun t1\n\ngoal (1 subgoal):\n 1. (\\<And>t2.\n        \\<lbrakk>v' = VFun t2; fset t2 \\<subseteq> fset t1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v' = VFun t2\n  fset t2 \\<subseteq> fset t1\n\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "from wv VFun"], ["proof (chain)\npicking this:\n  w \\<in> good v\n  v = VFun t1", "obtain x e \\<rho> where w: \"w = BClos x e \\<rho>\""], ["proof (prove)\nusing this:\n  w \\<in> good v\n  v = VFun t1\n\ngoal (1 subgoal):\n 1. (\\<And>x e \\<rho>.\n        w = BClos x e \\<rho> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = BClos x e \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "from w wv VFun"], ["proof (chain)\npicking this:\n  w = BClos x e \\<rho>\n  w \\<in> good v\n  v = VFun t1", "have gt1: \"good_fun t1 x e \\<rho>\""], ["proof (prove)\nusing this:\n  w = BClos x e \\<rho>\n  w \\<in> good v\n  v = VFun t1\n\ngoal (1 subgoal):\n 1. good_fun t1 x e \\<rho>", "by (simp add: good_fun_def)"], ["proof (state)\nthis:\n  good_fun t1 x e \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "have gt2: \"good_fun t2 x e \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun t2 x e \\<rho>", "apply (rule gfun_intro)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset t2 \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t2; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t2; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "fix v1 v2 w1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t2; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "assume v12: \"(v1,v2) \\<in> fset t2\" and w1_v1: \"w1 \\<in> good v1\""], ["proof (state)\nthis:\n  (v1, v2) \\<in> fset t2\n  w1 \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t2; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from v12 t2_t1"], ["proof (chain)\npicking this:\n  (v1, v2) \\<in> fset t2\n  fset t2 \\<subseteq> fset t1", "have v12_t1: \"(v1,v2) \\<in> fset t1\""], ["proof (prove)\nusing this:\n  (v1, v2) \\<in> fset t2\n  fset t2 \\<subseteq> fset t1\n\ngoal (1 subgoal):\n 1. (v1, v2) \\<in> fset t1", "by blast"], ["proof (state)\nthis:\n  (v1, v2) \\<in> fset t1\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t2; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) # \\<rho> \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from gt1 v12_t1 w1_v1"], ["proof (chain)\npicking this:\n  good_fun t1 x e \\<rho>\n  (v1, v2) \\<in> fset t1\n  w1 \\<in> good v1", "show \"\\<exists>v'. (x, w1) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\""], ["proof (prove)\nusing this:\n  good_fun t1 x e \\<rho>\n  (v1, v2) \\<in> fset t1\n  w1 \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       (x, w1) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "by (simp add: gfun_mem)"], ["proof (state)\nthis:\n  \\<exists>v'.\n     (x, w1) # \\<rho> \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good_fun t2 x e \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>x2. v = VFun x2 \\<Longrightarrow> w \\<in> good v'", "from gt2 b w"], ["proof (chain)\npicking this:\n  good_fun t2 x e \\<rho>\n  v' = VFun t2\n  w = BClos x e \\<rho>", "show ?thesis"], ["proof (prove)\nusing this:\n  good_fun t2 x e \\<rho>\n  v' = VFun t2\n  w = BClos x e \\<rho>\n\ngoal (1 subgoal):\n 1. w \\<in> good v'", "by (simp add: good_fun_def)"], ["proof (state)\nthis:\n  w \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Denotational semantics sound wrt. big-step\""], ["", "lemma denot_terminates: assumes vp_e: \"v' \\<in> E e \\<rho>'\" and ge: \"good_env \\<rho> \\<rho>'\" \n  shows \"\\<exists> v. \\<rho> \\<turnstile> e \\<Down> v \\<and> v \\<in> good v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho> \\<turnstile> e \\<Down> v \\<and> v \\<in> good v'", "using vp_e ge"], ["proof (prove)\nusing this:\n  v' \\<in> E e \\<rho>'\n  good_env \\<rho> \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho> \\<turnstile> e \\<Down> v \\<and> v \\<in> good v'", "proof (induction arbitrary: v' \\<rho> rule: E.induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>n \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (ENat n) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ENat n \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 6. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "case (1 n \\<rho>) \\<comment> \\<open>ENat\\<close>"], ["proof (state)\nthis:\n  v' \\<in> E (ENat n) \\<rho>''__\n  good_env \\<rho> \\<rho>''__\n\ngoal (6 subgoals):\n 1. \\<And>n \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (ENat n) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ENat n \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 6. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "then"], ["proof (chain)\npicking this:\n  v' \\<in> E (ENat n) \\<rho>''__\n  good_env \\<rho> \\<rho>''__", "show ?case"], ["proof (prove)\nusing this:\n  v' \\<in> E (ENat n) \\<rho>''__\n  good_env \\<rho> \\<rho>''__\n\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho> \\<turnstile> ENat n \\<Down> v \\<and> v \\<in> good v'", "by auto"], ["proof (state)\nthis:\n  \\<exists>v. \\<rho> \\<turnstile> ENat n \\<Down> v \\<and> v \\<in> good v'\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "next \\<comment> \\<open>EVar\\<close>"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "case (2 x \\<rho> v' \\<rho>')"], ["proof (state)\nthis:\n  v' \\<in> E (EVar x) \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 2"], ["proof (chain)\npicking this:\n  v' \\<in> E (EVar x) \\<rho>\n  good_env \\<rho>' \\<rho>", "obtain v1 where lx_vpp: \"lookup \\<rho> x = Some v1\" and vp_v1: \"v' \\<sqsubseteq> v1\""], ["proof (prove)\nusing this:\n  v' \\<in> E (EVar x) \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>v1.\n        \\<lbrakk>lookup \\<rho> x = Some v1; v' \\<sqsubseteq> v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lookup \\<rho> x = Some v1\n  v' \\<sqsubseteq> v1\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from lx_vpp 2(2)"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = Some v1\n  good_env \\<rho>' \\<rho>", "obtain v2 where lx: \"lookup \\<rho>' x = Some v2\" and v2_v1: \"v2 \\<in> good v1\""], ["proof (prove)\nusing this:\n  lookup \\<rho> x = Some v1\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>v2.\n        \\<lbrakk>lookup \\<rho>' x = Some v2; v2 \\<in> good v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lookup_good[of \\<rho> x v1 \\<rho>']"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = Some v1\n  good_env \\<rho>' \\<rho>\n  \\<lbrakk>lookup \\<rho> x = Some v1; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       lookup \\<rho>' x = Some v \\<and> v \\<in> good v1\n\ngoal (1 subgoal):\n 1. (\\<And>v2.\n        \\<lbrakk>lookup \\<rho>' x = Some v2; v2 \\<in> good v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lookup \\<rho>' x = Some v2\n  v2 \\<in> good v1\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from lx"], ["proof (chain)\npicking this:\n  lookup \\<rho>' x = Some v2", "have x_v2: \"\\<rho>' \\<turnstile> EVar x \\<Down> v2\""], ["proof (prove)\nusing this:\n  lookup \\<rho>' x = Some v2\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> EVar x \\<Down> v2", "by auto"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> EVar x \\<Down> v2\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from v2_v1 vp_v1"], ["proof (chain)\npicking this:\n  v2 \\<in> good v1\n  v' \\<sqsubseteq> v1", "have v2_vp: \"v2 \\<in> good v'\""], ["proof (prove)\nusing this:\n  v2 \\<in> good v1\n  v' \\<sqsubseteq> v1\n\ngoal (1 subgoal):\n 1. v2 \\<in> good v'", "using sub_good"], ["proof (prove)\nusing this:\n  v2 \\<in> good v1\n  v' \\<sqsubseteq> v1\n  \\<lbrakk>?w \\<in> good ?v; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> good ?v'\n\ngoal (1 subgoal):\n 1. v2 \\<in> good v'", "by blast"], ["proof (state)\nthis:\n  v2 \\<in> good v'\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> v' \\<rho>'.\n       \\<lbrakk>v' \\<in> E (EVar x) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 5. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from x_v2 v2_vp"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> EVar x \\<Down> v2\n  v2 \\<in> good v'", "show ?case"], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> EVar x \\<Down> v2\n  v2 \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and> v \\<in> good v'", "by blast"], ["proof (state)\nthis:\n  \\<exists>v. \\<rho>' \\<turnstile> EVar x \\<Down> v \\<and> v \\<in> good v'\n\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "next \\<comment> \\<open>ELam\\<close>"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "case (3 x e \\<rho> v' \\<rho>')"], ["proof (state)\nthis:\n  \\<lbrakk>(?xaa, ?xab) \\<in> fset ?xb; ?v' \\<in> E e ((x, ?xaa) # \\<rho>);\n   good_env ?\\<rho> ((x, ?xaa) # \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  v' \\<in> E (ELam x e) \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "have 1: \"\\<rho>' \\<turnstile> ELam x e \\<Down> BClos x e \\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> ELam x e \\<Down> BClos x e \\<rho>'", "by auto"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> ELam x e \\<Down> BClos x e \\<rho>'\n\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "have 2: \"BClos x e \\<rho>' \\<in> good v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' \\<in> good v'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' \\<in> good v'", "from 3(2)"], ["proof (chain)\npicking this:\n  v' \\<in> E (ELam x e) \\<rho>", "obtain t where vp: \"v' = VFun t\" and \n      body: \"\\<forall>v1 v2. (v1, v2) \\<in> fset t \\<longrightarrow> v2 \\<in> E e ((x, v1) # \\<rho>)\""], ["proof (prove)\nusing this:\n  v' \\<in> E (ELam x e) \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>v' = VFun t;\n         \\<forall>v1 v2.\n            (v1, v2) \\<in> fset t \\<longrightarrow>\n            v2 \\<in> E e ((x, v1) # \\<rho>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' = VFun t\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset t \\<longrightarrow> v2 \\<in> E e ((x, v1) # \\<rho>)\n\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' \\<in> good v'", "have gt: \"good_fun t x e \\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_fun t x e \\<rho>'", "apply (rule gfun_intro)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v1 v2.\n       (v1, v2) \\<in> fset t \\<longrightarrow>\n       (\\<forall>v\\<in>good v1.\n           \\<exists>v'.\n              (x, v) # \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n              v' \\<in> good v2)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) #\n                            \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) #\n                            \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "fix v1 v2 w1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) #\n                            \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "assume v12_t: \"(v1,v2) \\<in> fset t\" and w1_v1: \"w1 \\<in> good v1\""], ["proof (state)\nthis:\n  (v1, v2) \\<in> fset t\n  w1 \\<in> good v1\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) #\n                            \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from v12_t body"], ["proof (chain)\npicking this:\n  (v1, v2) \\<in> fset t\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset t \\<longrightarrow> v2 \\<in> E e ((x, v1) # \\<rho>)", "have v2_Ee: \"v2 \\<in> E e ((x, v1) # \\<rho>)\""], ["proof (prove)\nusing this:\n  (v1, v2) \\<in> fset t\n  \\<forall>v1 v2.\n     (v1, v2) \\<in> fset t \\<longrightarrow> v2 \\<in> E e ((x, v1) # \\<rho>)\n\ngoal (1 subgoal):\n 1. v2 \\<in> E e ((x, v1) # \\<rho>)", "by blast"], ["proof (state)\nthis:\n  v2 \\<in> E e ((x, v1) # \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) #\n                            \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from 3(3) w1_v1"], ["proof (chain)\npicking this:\n  good_env \\<rho>' \\<rho>\n  w1 \\<in> good v1", "have ge: \"good_env ((x,w1)#\\<rho>') ((x,v1)#\\<rho>)\""], ["proof (prove)\nusing this:\n  good_env \\<rho>' \\<rho>\n  w1 \\<in> good v1\n\ngoal (1 subgoal):\n 1. good_env ((x, w1) # \\<rho>') ((x, v1) # \\<rho>)", "by auto"], ["proof (state)\nthis:\n  good_env ((x, w1) # \\<rho>') ((x, v1) # \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>v1 v2 v.\n       \\<lbrakk>(v1, v2) \\<in> fset t; v \\<in> good v1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            (x, v) #\n                            \\<rho>' \\<turnstile> e \\<Down> v' \\<and>\n                            v' \\<in> good v2", "from v12_t v2_Ee ge 3(1)[of v1 v2 t v2]"], ["proof (chain)\npicking this:\n  (v1, v2) \\<in> fset t\n  v2 \\<in> E e ((x, v1) # \\<rho>)\n  good_env ((x, w1) # \\<rho>') ((x, v1) # \\<rho>)\n  \\<lbrakk>(v1, v2) \\<in> fset t; v2 \\<in> E e ((x, v1) # \\<rho>);\n   good_env ?\\<rho> ((x, v1) # \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e \\<Down> v \\<and>\n                       v \\<in> good v2", "show \"\\<exists>v'. (x, w1) # \\<rho>' \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\""], ["proof (prove)\nusing this:\n  (v1, v2) \\<in> fset t\n  v2 \\<in> E e ((x, v1) # \\<rho>)\n  good_env ((x, w1) # \\<rho>') ((x, v1) # \\<rho>)\n  \\<lbrakk>(v1, v2) \\<in> fset t; v2 \\<in> E e ((x, v1) # \\<rho>);\n   good_env ?\\<rho> ((x, v1) # \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e \\<Down> v \\<and>\n                       v \\<in> good v2\n\ngoal (1 subgoal):\n 1. \\<exists>v'.\n       (x, w1) # \\<rho>' \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2", "by blast"], ["proof (state)\nthis:\n  \\<exists>v'.\n     (x, w1) # \\<rho>' \\<turnstile> e \\<Down> v' \\<and> v' \\<in> good v2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  good_fun t x e \\<rho>'\n\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' \\<in> good v'", "from vp gt"], ["proof (chain)\npicking this:\n  v' = VFun t\n  good_fun t x e \\<rho>'", "show ?thesis"], ["proof (prove)\nusing this:\n  v' = VFun t\n  good_fun t x e \\<rho>'\n\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' \\<in> good v'", "unfolding good_fun_def"], ["proof (prove)\nusing this:\n  v' = VFun t\n  ffold (good_entry x e \\<rho>') True (good_prod |`| t)\n\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' \\<in> good v'", "by simp"], ["proof (state)\nthis:\n  BClos x e \\<rho>' \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  BClos x e \\<rho>' \\<in> good v'\n\ngoal (4 subgoals):\n 1. \\<And>x e \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>xa xb xaa xab v' \\<rho>'.\n                   \\<lbrakk>(xaa, xab) \\<in> fset xb;\n                    v' \\<in> E e ((x, xaa) # \\<rho>);\n                    good_env \\<rho>' ((x, xaa) # \\<rho>)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e \\<Down> v \\<and> v \\<in> good v';\n        v' \\<in> E (ELam x e) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 4. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 1 2"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> ELam x e \\<Down> BClos x e \\<rho>'\n  BClos x e \\<rho>' \\<in> good v'", "show ?case"], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> ELam x e \\<Down> BClos x e \\<rho>'\n  BClos x e \\<rho>' \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and> v \\<in> good v'", "by blast"], ["proof (state)\nthis:\n  \\<exists>v. \\<rho>' \\<turnstile> ELam x e \\<Down> v \\<and> v \\<in> good v'\n\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "next \\<comment> \\<open>EApp\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "case (4 e1 e2 \\<rho> v' \\<rho>')"], ["proof (state)\nthis:\n  \\<lbrakk>?v' \\<in> E e1 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  \\<lbrakk>?v' \\<in> E e2 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  v' \\<in> E (EApp e1 e2) \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb xc xd v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb xc xd v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EApp e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 3. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 4(3)"], ["proof (chain)\npicking this:\n  v' \\<in> E (EApp e1 e2) \\<rho>", "show ?case"], ["proof (prove)\nusing this:\n  v' \\<in> E (EApp e1 e2) \\<rho>\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and> v \\<in> good v'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "fix t v2 and v2'::val and v3'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "assume t_Ee1: \"VFun t \\<in> E e1 \\<rho>\" and v2_Ee2: \"v2 \\<in> E e2 \\<rho>\" and\n      v23_t: \"(v2',v3') \\<in> fset t\" and v2p_v2: \"v2' \\<sqsubseteq> v2\" and vp_v3p: \"v' \\<sqsubseteq> v3'\""], ["proof (state)\nthis:\n  VFun t \\<in> E e1 \\<rho>\n  v2 \\<in> E e2 \\<rho>\n  (v2', v3') \\<in> fset t\n  v2' \\<sqsubseteq> v2\n  v' \\<sqsubseteq> v3'\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 4(1) t_Ee1 4(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>?v' \\<in> E e1 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  VFun t \\<in> E e1 \\<rho>\n  good_env \\<rho>' \\<rho>", "obtain w1 where e1_w1: \"\\<rho>' \\<turnstile> e1 \\<Down> w1\" and\n      w1_t: \"w1 \\<in> good (VFun t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?v' \\<in> E e1 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  VFun t \\<in> E e1 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>w1.\n        \\<lbrakk>\\<rho>' \\<turnstile> e1 \\<Down> w1;\n         w1 \\<in> good (VFun t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e1 \\<Down> w1\n  w1 \\<in> good (VFun t)\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 4(2) v2_Ee2 4(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>?v' \\<in> E e2 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  v2 \\<in> E e2 \\<rho>\n  good_env \\<rho>' \\<rho>", "obtain w2 where e2_w2: \"\\<rho>' \\<turnstile> e2 \\<Down> w2\" and w2_v2: \"w2 \\<in> good v2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?v' \\<in> E e2 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  v2 \\<in> E e2 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>w2.\n        \\<lbrakk>\\<rho>' \\<turnstile> e2 \\<Down> w2;\n         w2 \\<in> good v2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e2 \\<Down> w2\n  w2 \\<in> good v2\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from w1_t"], ["proof (chain)\npicking this:\n  w1 \\<in> good (VFun t)", "obtain x e \\<rho>1 where w1: \"w1 = BClos x e \\<rho>1\" and gt: \"good_fun t x e \\<rho>1\""], ["proof (prove)\nusing this:\n  w1 \\<in> good (VFun t)\n\ngoal (1 subgoal):\n 1. (\\<And>x e \\<rho>1.\n        \\<lbrakk>w1 = BClos x e \\<rho>1; good_fun t x e \\<rho>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: good_fun_def)"], ["proof (state)\nthis:\n  w1 = BClos x e \\<rho>1\n  good_fun t x e \\<rho>1\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from w2_v2 v2p_v2"], ["proof (chain)\npicking this:\n  w2 \\<in> good v2\n  v2' \\<sqsubseteq> v2", "have w2_v2p: \"w2 \\<in> good v2'\""], ["proof (prove)\nusing this:\n  w2 \\<in> good v2\n  v2' \\<sqsubseteq> v2\n\ngoal (1 subgoal):\n 1. w2 \\<in> good v2'", "by (rule sub_good)"], ["proof (state)\nthis:\n  w2 \\<in> good v2'\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from v23_t gt w2_v2p"], ["proof (chain)\npicking this:\n  (v2', v3') \\<in> fset t\n  good_fun t x e \\<rho>1\n  w2 \\<in> good v2'", "obtain w3 where e_w3: \"(x,w2)#\\<rho>1 \\<turnstile> e \\<Down> w3\" and w3_v3p: \"w3 \\<in> good v3'\""], ["proof (prove)\nusing this:\n  (v2', v3') \\<in> fset t\n  good_fun t x e \\<rho>1\n  w2 \\<in> good v2'\n\ngoal (1 subgoal):\n 1. (\\<And>w3.\n        \\<lbrakk>(x, w2) # \\<rho>1 \\<turnstile> e \\<Down> w3;\n         w3 \\<in> good v3'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gfun_mem[of v2' v3' t x e \\<rho>1]"], ["proof (prove)\nusing this:\n  (v2', v3') \\<in> fset t\n  good_fun t x e \\<rho>1\n  w2 \\<in> good v2'\n  \\<lbrakk>(v2', v3') \\<in> fset t; good_fun t x e \\<rho>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>v\\<in>good v2'.\n                       \\<exists>v'.\n                          (x, v) # \\<rho>1 \\<turnstile> e \\<Down> v' \\<and>\n                          v' \\<in> good v3'\n\ngoal (1 subgoal):\n 1. (\\<And>w3.\n        \\<lbrakk>(x, w2) # \\<rho>1 \\<turnstile> e \\<Down> w3;\n         w3 \\<in> good v3'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (x, w2) # \\<rho>1 \\<turnstile> e \\<Down> w3\n  w3 \\<in> good v3'\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from w3_v3p vp_v3p"], ["proof (chain)\npicking this:\n  w3 \\<in> good v3'\n  v' \\<sqsubseteq> v3'", "have w3_vp: \"w3 \\<in> good v'\""], ["proof (prove)\nusing this:\n  w3 \\<in> good v3'\n  v' \\<sqsubseteq> v3'\n\ngoal (1 subgoal):\n 1. w3 \\<in> good v'", "by (rule sub_good)"], ["proof (state)\nthis:\n  w3 \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<And>f v2 v2' v3'.\n       \\<lbrakk>VFun f \\<in> E e1 \\<rho>; v2 \\<in> E e2 \\<rho>;\n        (v2', v3') \\<in> fset f; v2' \\<sqsubseteq> v2;\n        v' \\<sqsubseteq> v3'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from e1_w1 e2_w2 w1 e_w3 w3_vp"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> e1 \\<Down> w1\n  \\<rho>' \\<turnstile> e2 \\<Down> w2\n  w1 = BClos x e \\<rho>1\n  (x, w2) # \\<rho>1 \\<turnstile> e \\<Down> w3\n  w3 \\<in> good v'", "show \"\\<exists>v. \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and> v \\<in> good v'\""], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> e1 \\<Down> w1\n  \\<rho>' \\<turnstile> e2 \\<Down> w2\n  w1 = BClos x e \\<rho>1\n  (x, w2) # \\<rho>1 \\<turnstile> e \\<Down> w3\n  w3 \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and> v \\<in> good v'", "by blast"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and> v \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EApp e1 e2 \\<Down> v \\<and> v \\<in> good v'\n\ngoal (2 subgoals):\n 1. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "next \\<comment> \\<open>EPrim\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "case (5 f e1 e2 \\<rho> v' \\<rho>')"], ["proof (state)\nthis:\n  \\<lbrakk>?v' \\<in> E e1 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  \\<lbrakk>?v' \\<in> E e2 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  v' \\<in> E (EPrim f e1 e2) \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (2 subgoals):\n 1. \\<And>f e1 e2 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa xb v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa xb v' \\<rho>'.\n           \\<lbrakk>v' \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EPrim f e1 e2) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'\n 2. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 5(3)"], ["proof (chain)\npicking this:\n  v' \\<in> E (EPrim f e1 e2) \\<rho>", "show ?case"], ["proof (prove)\nusing this:\n  v' \\<in> E (EPrim f e1 e2) \\<rho>\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> v \\<and> v \\<in> good v'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "fix n1 n2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "assume n1_e1: \"VNat n1 \\<in> E e1 \\<rho>\" and n2_e2: \"VNat n2 \\<in> E e2 \\<rho>\" and\n      vp: \"v' = VNat (f n1 n2)\""], ["proof (state)\nthis:\n  VNat n1 \\<in> E e1 \\<rho>\n  VNat n2 \\<in> E e2 \\<rho>\n  v' = VNat (f n1 n2)\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 5(1)[of \"VNat n1\" \\<rho>'] n1_e1 5(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good (VNat n1)\n  VNat n1 \\<in> E e1 \\<rho>\n  good_env \\<rho>' \\<rho>", "have e1_w1: \"\\<rho>' \\<turnstile> e1 \\<Down> BNat n1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good (VNat n1)\n  VNat n1 \\<in> E e1 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> e1 \\<Down> BNat n1", "by auto"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n1\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 5(2)[of \"VNat n2\" \\<rho>'] n2_e2 5(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>VNat n2 \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good (VNat n2)\n  VNat n2 \\<in> E e2 \\<rho>\n  good_env \\<rho>' \\<rho>", "have e2_w2: \"\\<rho>' \\<turnstile> e2 \\<Down> BNat n2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>VNat n2 \\<in> E e2 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good (VNat n2)\n  VNat n2 \\<in> E e2 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> e2 \\<Down> BNat n2", "by auto"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e2 \\<Down> BNat n2\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from e1_w1 e2_w2"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho>' \\<turnstile> e2 \\<Down> BNat n2", "have 1: \"\\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> BNat (f n1 n2)\""], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho>' \\<turnstile> e2 \\<Down> BNat n2\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> BNat (f n1 n2)", "by blast"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> BNat (f n1 n2)\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from vp"], ["proof (chain)\npicking this:\n  v' = VNat (f n1 n2)", "have 2: \"BNat (f n1 n2) \\<in> good v'\""], ["proof (prove)\nusing this:\n  v' = VNat (f n1 n2)\n\ngoal (1 subgoal):\n 1. BNat (f n1 n2) \\<in> good v'", "by auto"], ["proof (state)\nthis:\n  BNat (f n1 n2) \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<And>n1 n2.\n       \\<lbrakk>VNat n1 \\<in> E e1 \\<rho>; VNat n2 \\<in> E e2 \\<rho>;\n        v' = VNat (f n1 n2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EPrim f e1\n            e2 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 1 2"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> BNat (f n1 n2)\n  BNat (f n1 n2) \\<in> good v'", "show \"\\<exists>v. \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> v \\<and> v \\<in> good v'\""], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> BNat (f n1 n2)\n  BNat (f n1 n2) \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> v \\<and> v \\<in> good v'", "by auto"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> v \\<and> v \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EPrim f e1 e2 \\<Down> v \\<and> v \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "next \\<comment> \\<open>EIf\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "case (6 e1 e2 e3 \\<rho> v' \\<rho>')"], ["proof (state)\nthis:\n  \\<lbrakk>?v' \\<in> E e1 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  \\<lbrakk>?xa = 0; ?v' \\<in> E e3 \\<rho>; good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e3 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  \\<lbrakk>?xa \\<noteq> 0; ?v' \\<in> E e2 \\<rho>;\n   good_env ?\\<rho> \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good ?v'\n  v' \\<in> E (EIf e1 e2 e3) \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2 e3 \\<rho> v' \\<rho>'.\n       \\<lbrakk>\\<And>x xa v' \\<rho>'.\n                   \\<lbrakk>v' \\<in> E e1 \\<rho>;\n                    good_env \\<rho>' \\<rho>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>v.\n  \\<rho>' \\<turnstile> e1 \\<Down> v \\<and> v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa = 0; v' \\<in> E e3 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                                v \\<in> good v';\n        \\<And>x xa v' \\<rho>'.\n           \\<lbrakk>xa \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n            good_env \\<rho>' \\<rho>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                                v \\<in> good v';\n        v' \\<in> E (EIf e1 e2 e3) \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 6(4)"], ["proof (chain)\npicking this:\n  v' \\<in> E (EIf e1 e2 e3) \\<rho>", "show ?case"], ["proof (prove)\nusing this:\n  v' \\<in> E (EIf e1 e2 e3) \\<rho>\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "assume n_e1: \"VNat n \\<in> E e1 \\<rho>\" and els: \"n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>\" and\n      thn: \"n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\""], ["proof (state)\nthis:\n  VNat n \\<in> E e1 \\<rho>\n  n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>\n  n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "from 6(1)[of \"VNat n\" \\<rho>'] n_e1 6(5)"], ["proof (chain)\npicking this:\n  \\<lbrakk>VNat n \\<in> E e1 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good (VNat n)\n  VNat n \\<in> E e1 \\<rho>\n  good_env \\<rho>' \\<rho>", "have e1_w1: \"\\<rho>' \\<turnstile> e1 \\<Down> BNat n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>VNat n \\<in> E e1 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e1 \\<Down> v \\<and>\n                       v \\<in> good (VNat n)\n  VNat n \\<in> E e1 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> e1 \\<Down> BNat n", "by auto"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>VNat n \\<in> E e1 \\<rho>;\n        n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>;\n        n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho>' \\<turnstile> EIf e1 e2\n            e3 \\<Down> v \\<and>\n                            v \\<in> good v'", "show \"\\<exists>v. \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "from 6(2)[of n v' \\<rho>'] True els 6(5)"], ["proof (chain)\npicking this:\n  \\<lbrakk>n = 0; v' \\<in> E e3 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                       v \\<in> good v'\n  n = 0\n  n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>\n  good_env \\<rho>' \\<rho>", "obtain w3 where \n        e3_w3: \"\\<rho>' \\<turnstile> e3 \\<Down> w3\" and w3_vp: \"w3 \\<in> good v'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n = 0; v' \\<in> E e3 \\<rho>; good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e3 \\<Down> v \\<and>\n                       v \\<in> good v'\n  n = 0\n  n = 0 \\<longrightarrow> v' \\<in> E e3 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>w3.\n        \\<lbrakk>\\<rho>' \\<turnstile> e3 \\<Down> w3;\n         w3 \\<in> good v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e3 \\<Down> w3\n  w3 \\<in> good v'\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "from e1_w1 True e3_w3 w3_vp"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n\n  n = 0\n  \\<rho>' \\<turnstile> e3 \\<Down> w3\n  w3 \\<in> good v'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n\n  n = 0\n  \\<rho>' \\<turnstile> e3 \\<Down> w3\n  w3 \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "by blast"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "from 6(3)[of n v' \\<rho>'] False thn 6(5)"], ["proof (chain)\npicking this:\n  \\<lbrakk>n \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n   good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good v'\n  n \\<noteq> 0\n  n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\n  good_env \\<rho>' \\<rho>", "obtain w2 where \n        e2_w2: \"\\<rho>' \\<turnstile> e2 \\<Down> w2\" and w2_vp: \"w2 \\<in> good v'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<noteq> 0; v' \\<in> E e2 \\<rho>;\n   good_env \\<rho>' \\<rho>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       \\<rho>' \\<turnstile> e2 \\<Down> v \\<and>\n                       v \\<in> good v'\n  n \\<noteq> 0\n  n \\<noteq> 0 \\<longrightarrow> v' \\<in> E e2 \\<rho>\n  good_env \\<rho>' \\<rho>\n\ngoal (1 subgoal):\n 1. (\\<And>w2.\n        \\<lbrakk>\\<rho>' \\<turnstile> e2 \\<Down> w2;\n         w2 \\<in> good v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> e2 \\<Down> w2\n  w2 \\<in> good v'\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "from e1_w1 False e2_w2"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho>' \\<turnstile> e2 \\<Down> w2", "have \"\\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2\""], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho>' \\<turnstile> e2 \\<Down> w2\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2", "using eval_if1[of \\<rho>' e1 n e2 w2 e3]"], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho>' \\<turnstile> e2 \\<Down> w2\n  \\<lbrakk>\\<rho>' \\<turnstile> e1 \\<Down> BNat n; n \\<noteq> 0;\n   \\<rho>' \\<turnstile> e2 \\<Down> w2\\<rbrakk>\n  \\<Longrightarrow> \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2\n\ngoal (1 subgoal):\n 1. \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2", "by simp"], ["proof (state)\nthis:\n  \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "from this w2_vp"], ["proof (chain)\npicking this:\n  \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2\n  w2 \\<in> good v'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> w2\n  w2 \\<in> good v'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'", "by (rule_tac x=w2 in exI) simp"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<rho>' \\<turnstile> EIf e1 e2 e3 \\<Down> v \\<and> v \\<in> good v'\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem sound_wrt_op_sem:\n  assumes E_e_n: \"E e [] = E (ENat n) []\" and fv_e: \"FV e = {}\" shows \"e \\<Down> ONat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "have \"VNat n \\<in> E (ENat n) []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. VNat n \\<in> E (ENat n) []", "by simp"], ["proof (state)\nthis:\n  VNat n \\<in> E (ENat n) []\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "with E_e_n"], ["proof (chain)\npicking this:\n  E e [] = E (ENat n) []\n  VNat n \\<in> E (ENat n) []", "have 1: \"VNat n \\<in> E e []\""], ["proof (prove)\nusing this:\n  E e [] = E (ENat n) []\n  VNat n \\<in> E (ENat n) []\n\ngoal (1 subgoal):\n 1. VNat n \\<in> E e []", "by simp"], ["proof (state)\nthis:\n  VNat n \\<in> E e []\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "have 2: \"good_env [] []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. good_env [] []", "by auto"], ["proof (state)\nthis:\n  good_env [] []\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "from 1 2"], ["proof (chain)\npicking this:\n  VNat n \\<in> E e []\n  good_env [] []", "obtain v where e_v: \"[] \\<turnstile> e \\<Down> v\" and v_n: \"v \\<in> good (VNat n)\""], ["proof (prove)\nusing this:\n  VNat n \\<in> E e []\n  good_env [] []\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>[] \\<turnstile> e \\<Down> v; v \\<in> good (VNat n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using denot_terminates"], ["proof (prove)\nusing this:\n  VNat n \\<in> E e []\n  good_env [] []\n  \\<lbrakk>?v' \\<in> E ?e ?\\<rho>'; good_env ?\\<rho> ?\\<rho>'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> \\<turnstile> ?e \\<Down> v \\<and>\n                       v \\<in> good ?v'\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>[] \\<turnstile> e \\<Down> v; v \\<in> good (VNat n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  [] \\<turnstile> e \\<Down> v\n  v \\<in> good (VNat n)\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "from v_n"], ["proof (chain)\npicking this:\n  v \\<in> good (VNat n)", "have v: \"v = BNat n\""], ["proof (prove)\nusing this:\n  v \\<in> good (VNat n)\n\ngoal (1 subgoal):\n 1. v = BNat n", "by auto"], ["proof (state)\nthis:\n  v = BNat n\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "from e_v fv_e"], ["proof (chain)\npicking this:\n  [] \\<turnstile> e \\<Down> v\n  FV e = {}", "obtain v' ob where e_vp: \"e \\<longrightarrow>* v'\" and \n    vp_ob: \"observe v' ob\" and v_ob: \"bs_observe v ob\""], ["proof (prove)\nusing this:\n  [] \\<turnstile> e \\<Down> v\n  FV e = {}\n\ngoal (1 subgoal):\n 1. (\\<And>v' ob.\n        \\<lbrakk>e \\<longrightarrow>* v'; observe v' ob;\n         bs_observe v ob\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sound_wrt_small_step"], ["proof (prove)\nusing this:\n  [] \\<turnstile> e \\<Down> v\n  FV e = {}\n  \\<lbrakk>[] \\<turnstile> ?e \\<Down> ?v; FV ?e = {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v' ob.\n                       ?e \\<longrightarrow>* v' \\<and>\n                       isval v' \\<and> observe v' ob \\<and> bs_observe ?v ob\n\ngoal (1 subgoal):\n 1. (\\<And>v' ob.\n        \\<lbrakk>e \\<longrightarrow>* v'; observe v' ob;\n         bs_observe v ob\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  e \\<longrightarrow>* v'\n  observe v' ob\n  bs_observe v ob\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "from e_vp vp_ob v_ob v"], ["proof (chain)\npicking this:\n  e \\<longrightarrow>* v'\n  observe v' ob\n  bs_observe v ob\n  v = BNat n", "show ?thesis"], ["proof (prove)\nusing this:\n  e \\<longrightarrow>* v'\n  observe v' ob\n  bs_observe v ob\n  v = BNat n\n\ngoal (1 subgoal):\n 1. e \\<Down> ONat n", "unfolding run_def"], ["proof (prove)\nusing this:\n  e \\<longrightarrow>* v'\n  observe v' ob\n  bs_observe v ob\n  v = BNat n\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e \\<longrightarrow>* v \\<and> observe v (ONat n)) \\<or>\n    (diverge e \\<or> goes_wrong e) \\<and> ONat n = OBad", "by (case_tac ob) auto"], ["proof (state)\nthis:\n  e \\<Down> ONat n\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}