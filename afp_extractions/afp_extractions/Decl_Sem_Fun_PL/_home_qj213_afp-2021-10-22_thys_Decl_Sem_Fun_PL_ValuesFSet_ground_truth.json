{"file_name": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL/ValuesFSet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL", "problem_names": ["lemma vprod_size_inj: \"inj_on vprod_size (fset A)\"", "lemma fsize_def2: \"fsize t = 1 + ffold (vadd \\<circ> vprod_size) 0 t\"", "lemma fsize_finsert_in[simp]:\n  assumes v12_t: \"(v1,v2) |\\<in>| t\" shows \"fsize (finsert (v1,v2) t) = fsize t\"", "lemma fsize_finsert_notin[simp]: \n  assumes v12_t: \"(v1,v2) |\\<notin>| t\"\n  shows \"fsize (finsert (v1,v2) t) = vsize v1 + vsize v2 + fsize t\""], "translations": [["", "lemma vprod_size_inj: \"inj_on vprod_size (fset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on vprod_size (fset A)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>fset A.\n       \\<forall>y\\<in>fset A.\n          vprod_size x = vprod_size y \\<longrightarrow> x = y", "by auto"], ["", "lemma fsize_def2: \"fsize t = 1 + ffold (vadd \\<circ> vprod_size) 0 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsize t = 1 + ffold (vadd \\<circ> vprod_size) 0 t", "using vprod_size_inj[of t] ffold_fimage[of vprod_size t vadd 0]"], ["proof (prove)\nusing this:\n  inj_on vprod_size (fset t)\n  inj_on vprod_size (fset t) \\<Longrightarrow>\n  ffold vadd 0 (vprod_size |`| t) = ffold (vadd \\<circ> vprod_size) 0 t\n\ngoal (1 subgoal):\n 1. fsize t = 1 + ffold (vadd \\<circ> vprod_size) 0 t", "by simp"], ["", "lemma fsize_finsert_in[simp]:\n  assumes v12_t: \"(v1,v2) |\\<in>| t\" shows \"fsize (finsert (v1,v2) t) = fsize t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = fsize t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = fsize t", "from v12_t"], ["proof (chain)\npicking this:\n  (v1, v2) |\\<in>| t", "have \"finsert (v1,v2) t = t\""], ["proof (prove)\nusing this:\n  (v1, v2) |\\<in>| t\n\ngoal (1 subgoal):\n 1. finsert (v1, v2) t = t", "by auto"], ["proof (state)\nthis:\n  finsert (v1, v2) t = t\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = fsize t", "from this"], ["proof (chain)\npicking this:\n  finsert (v1, v2) t = t", "show ?thesis"], ["proof (prove)\nusing this:\n  finsert (v1, v2) t = t\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = fsize t", "by simp"], ["proof (state)\nthis:\n  fsize (finsert (v1, v2) t) = fsize t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fsize_finsert_notin[simp]: \n  assumes v12_t: \"(v1,v2) |\\<notin>| t\"\n  shows \"fsize (finsert (v1,v2) t) = vsize v1 + vsize v2 + fsize t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "let ?f = \"vadd \\<circ> vprod_size\""], ["proof (state)\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "have \"fsize (finsert (v1,v2) t) = 1 + ffold ?f 0 (finsert (v1,v2) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) =\n    1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t)", "using fsize_def2[of \"finsert (v1,v2) t\"]"], ["proof (prove)\nusing this:\n  fsize (finsert (v1, v2) t) =\n  1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) =\n    1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t)", "by simp"], ["proof (state)\nthis:\n  fsize (finsert (v1, v2) t) =\n  1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "also"], ["proof (state)\nthis:\n  fsize (finsert (v1, v2) t) =\n  1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "from v12_t"], ["proof (chain)\npicking this:\n  (v1, v2) |\\<notin>| t", "have \"... = 1 + ?f (v1,v2) (ffold ?f 0 t)\""], ["proof (prove)\nusing this:\n  (v1, v2) |\\<notin>| t\n\ngoal (1 subgoal):\n 1. 1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t) =\n    1 +\n    (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)", "by simp"], ["proof (state)\nthis:\n  1 + ffold (vadd \\<circ> vprod_size) 0 (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "finally"], ["proof (chain)\npicking this:\n  fsize (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)", "have \"fsize (finsert (v1,v2) t) = 1 + ?f (v1,v2) (ffold ?f 0 t)\""], ["proof (prove)\nusing this:\n  fsize (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) =\n    1 +\n    (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)", "."], ["proof (state)\nthis:\n  fsize (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "from this"], ["proof (chain)\npicking this:\n  fsize (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)", "show ?thesis"], ["proof (prove)\nusing this:\n  fsize (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "using fsize_def2[of t]"], ["proof (prove)\nusing this:\n  fsize (finsert (v1, v2) t) =\n  1 +\n  (vadd \\<circ> vprod_size) (v1, v2) (ffold (vadd \\<circ> vprod_size) 0 t)\n  fsize t = 1 + ffold (vadd \\<circ> vprod_size) 0 t\n\ngoal (1 subgoal):\n 1. fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t", "by simp"], ["proof (state)\nthis:\n  fsize (finsert (v1, v2) t) = vsize v1 + vsize v2 + fsize t\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}