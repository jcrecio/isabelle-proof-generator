{"file_name": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL/BigStepLam.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL", "problem_names": ["lemma bs_val_is_val[intro!]: \"bs_val w v \\<Longrightarrow> is_val v\"", "lemma lookup_bs_env: \"\\<lbrakk> bs_env \\<rho> \\<rho>'; lookup \\<rho> x = Some w \\<rbrakk> \\<Longrightarrow> \n  \\<exists> v. lookup \\<rho>' x = Some v \\<and> bs_val w v\"", "lemma app_red_cong1: \"e1 \\<longrightarrow>* e1' \\<Longrightarrow> EApp e1 e2 \\<longrightarrow>* EApp e1' e2\"", "lemma app_red_cong2: \"e2 \\<longrightarrow>* e2' \\<Longrightarrow> EApp e1 e2 \\<longrightarrow>* EApp e1 e2'\"", "lemma prim_red_cong1: \"e1 \\<longrightarrow>* e1' \\<Longrightarrow> EPrim f e1 e2 \\<longrightarrow>* EPrim f e1' e2\"", "lemma prim_red_cong2: \"e2 \\<longrightarrow>* e2' \\<Longrightarrow> EPrim f e1 e2 \\<longrightarrow>* EPrim f e1 e2'\"", "lemma if_red_cong1: \"e1 \\<longrightarrow>* e1' \\<Longrightarrow> EIf e1 e2 e3 \\<longrightarrow>* EIf e1' e2 e3\"", "lemma multi_step_trans: \"\\<lbrakk> e1 \\<longrightarrow>* e2; e2 \\<longrightarrow>* e3 \\<rbrakk> \\<Longrightarrow> e1 \\<longrightarrow>* e3\"", "lemma subst_id_fv: \"x \\<notin> FV e \\<Longrightarrow> subst x v e = e\"", "lemma sdom_cons_xx[simp]: \"sdom ((x,EVar x)#\\<rho>) = sdom \\<rho> - {x}\"", "lemma sdom_cons_v[simp]: \"FV v = {} \\<Longrightarrow> sdom ((x,v)#\\<rho>) = insert x (sdom \\<rho>)\"", "lemma lookup_some_in_dom: \"\\<lbrakk> lookup \\<rho> x = Some v; v \\<noteq> EVar x \\<rbrakk> \\<Longrightarrow> x \\<in> sdom \\<rho>\"", "lemma lookup_none_notin_dom: \"lookup \\<rho> x = None \\<Longrightarrow> x \\<notin> sdom \\<rho>\"", "lemma psubst_change: \"equiv_env \\<rho> \\<rho>' \\<Longrightarrow> psubst \\<rho> e = psubst \\<rho>' e\"", "lemma subst_psubst: \"\\<lbrakk> closed_env \\<rho>; FV v = {} \\<rbrakk> \\<Longrightarrow> \n    subst x v (psubst ((x, EVar x) # \\<rho>) e) = psubst ((x, v) # \\<rho>) e\"", "lemma bs_env_dom: \"bs_env \\<rho> \\<rho>' \\<Longrightarrow> set (map fst \\<rho>) = sdom \\<rho>'\"", "lemma closed_env_cons[intro!]: \"FV v = {} \\<Longrightarrow> closed_env \\<rho>'' \\<Longrightarrow> closed_env ((a, v) # \\<rho>'')\"", "lemma bs_env_closed: \"bs_env \\<rho> \\<rho>' \\<Longrightarrow> closed_env \\<rho>'\"", "lemma psubst_fv: \"closed_env \\<rho> \\<Longrightarrow> FV (psubst \\<rho> e) = FV e - sdom \\<rho>\"", "lemma big_small_step:\n  assumes ev: \"\\<rho> \\<turnstile> e \\<Down> w\" and r_rp: \"bs_env \\<rho> \\<rho>'\" and fv_e: \"FV e \\<subseteq> set (map fst \\<rho>)\"\n  shows \"\\<exists> v. psubst \\<rho>' e \\<longrightarrow>* v \\<and> is_val v \\<and> bs_val w v\"", "lemma psubst_id: \"FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow> psubst \\<rho> e = e\"", "theorem sound_wrt_small_step:\n  assumes e_v: \"[] \\<turnstile> e \\<Down> v\" and fv_e: \"FV e = {}\"\n  shows \"\\<exists> v' ob. e \\<longrightarrow>* v' \\<and> isval v' \\<and> observe v' ob\n    \\<and> bs_observe v ob\"", "theorem big_step_fun:\n  assumes ev: \"\\<rho> \\<turnstile> e \\<Down> v\" and evp: \"\\<rho> \\<turnstile> e \\<Down> v'\" shows \"v = v'\""], "translations": [["", "lemma bs_val_is_val[intro!]: \"bs_val w v \\<Longrightarrow> is_val v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bs_val w v \\<Longrightarrow> is_val v", "by (cases w) auto"], ["", "lemma lookup_bs_env: \"\\<lbrakk> bs_env \\<rho> \\<rho>'; lookup \\<rho> x = Some w \\<rbrakk> \\<Longrightarrow> \n  \\<exists> v. lookup \\<rho>' x = Some v \\<and> bs_val w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bs_env \\<rho> \\<rho>'; lookup \\<rho> x = Some w\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v.\n                         lookup \\<rho>' x = Some v \\<and> bs_val w v", "by (induction \\<rho> arbitrary: \\<rho>' x w) auto"], ["", "lemma app_red_cong1: \"e1 \\<longrightarrow>* e1' \\<Longrightarrow> EApp e1 e2 \\<longrightarrow>* EApp e1' e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 \\<longrightarrow>* e1' \\<Longrightarrow>\n    EApp e1 e2 \\<longrightarrow>* EApp e1' e2", "by (induction rule: multi_step.induct) blast+"], ["", "lemma app_red_cong2: \"e2 \\<longrightarrow>* e2' \\<Longrightarrow> EApp e1 e2 \\<longrightarrow>* EApp e1 e2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e2 \\<longrightarrow>* e2' \\<Longrightarrow>\n    EApp e1 e2 \\<longrightarrow>* EApp e1 e2'", "by (induction rule: multi_step.induct) blast+"], ["", "lemma prim_red_cong1: \"e1 \\<longrightarrow>* e1' \\<Longrightarrow> EPrim f e1 e2 \\<longrightarrow>* EPrim f e1' e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 \\<longrightarrow>* e1' \\<Longrightarrow>\n    EPrim f e1 e2 \\<longrightarrow>* EPrim f e1' e2", "by (induction rule: multi_step.induct) blast+"], ["", "lemma prim_red_cong2: \"e2 \\<longrightarrow>* e2' \\<Longrightarrow> EPrim f e1 e2 \\<longrightarrow>* EPrim f e1 e2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e2 \\<longrightarrow>* e2' \\<Longrightarrow>\n    EPrim f e1 e2 \\<longrightarrow>* EPrim f e1 e2'", "by (induction rule: multi_step.induct) blast+"], ["", "lemma if_red_cong1: \"e1 \\<longrightarrow>* e1' \\<Longrightarrow> EIf e1 e2 e3 \\<longrightarrow>* EIf e1' e2 e3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 \\<longrightarrow>* e1' \\<Longrightarrow>\n    EIf e1 e2 e3 \\<longrightarrow>* EIf e1' e2 e3", "by (induction rule: multi_step.induct) blast+"], ["", "lemma multi_step_trans: \"\\<lbrakk> e1 \\<longrightarrow>* e2; e2 \\<longrightarrow>* e3 \\<rbrakk> \\<Longrightarrow> e1 \\<longrightarrow>* e3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e1 \\<longrightarrow>* e2; e2 \\<longrightarrow>* e3\\<rbrakk>\n    \\<Longrightarrow> e1 \\<longrightarrow>* e3", "proof (induction arbitrary: e3 rule: multi_step.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e e3.\n       e \\<longrightarrow>* e3 \\<Longrightarrow> e \\<longrightarrow>* e3\n 2. \\<And>e1 e2 e3 e3a.\n       \\<lbrakk>e1 \\<longrightarrow> e2; e2 \\<longrightarrow>* e3;\n        \\<And>e3a.\n           e3 \\<longrightarrow>* e3a \\<Longrightarrow>\n           e2 \\<longrightarrow>* e3a;\n        e3 \\<longrightarrow>* e3a\\<rbrakk>\n       \\<Longrightarrow> e1 \\<longrightarrow>* e3a", "case (ms_cons e1 e2 e3 e3')"], ["proof (state)\nthis:\n  e1 \\<longrightarrow> e2\n  e2 \\<longrightarrow>* e3\n  e3 \\<longrightarrow>* ?e3.0 \\<Longrightarrow> e2 \\<longrightarrow>* ?e3.0\n  e3 \\<longrightarrow>* e3'\n\ngoal (2 subgoals):\n 1. \\<And>e e3.\n       e \\<longrightarrow>* e3 \\<Longrightarrow> e \\<longrightarrow>* e3\n 2. \\<And>e1 e2 e3 e3a.\n       \\<lbrakk>e1 \\<longrightarrow> e2; e2 \\<longrightarrow>* e3;\n        \\<And>e3a.\n           e3 \\<longrightarrow>* e3a \\<Longrightarrow>\n           e2 \\<longrightarrow>* e3a;\n        e3 \\<longrightarrow>* e3a\\<rbrakk>\n       \\<Longrightarrow> e1 \\<longrightarrow>* e3a", "then"], ["proof (chain)\npicking this:\n  e1 \\<longrightarrow> e2\n  e2 \\<longrightarrow>* e3\n  e3 \\<longrightarrow>* ?e3.0 \\<Longrightarrow> e2 \\<longrightarrow>* ?e3.0\n  e3 \\<longrightarrow>* e3'", "have \"e2 \\<longrightarrow>* e3'\""], ["proof (prove)\nusing this:\n  e1 \\<longrightarrow> e2\n  e2 \\<longrightarrow>* e3\n  e3 \\<longrightarrow>* ?e3.0 \\<Longrightarrow> e2 \\<longrightarrow>* ?e3.0\n  e3 \\<longrightarrow>* e3'\n\ngoal (1 subgoal):\n 1. e2 \\<longrightarrow>* e3'", "by auto"], ["proof (state)\nthis:\n  e2 \\<longrightarrow>* e3'\n\ngoal (2 subgoals):\n 1. \\<And>e e3.\n       e \\<longrightarrow>* e3 \\<Longrightarrow> e \\<longrightarrow>* e3\n 2. \\<And>e1 e2 e3 e3a.\n       \\<lbrakk>e1 \\<longrightarrow> e2; e2 \\<longrightarrow>* e3;\n        \\<And>e3a.\n           e3 \\<longrightarrow>* e3a \\<Longrightarrow>\n           e2 \\<longrightarrow>* e3a;\n        e3 \\<longrightarrow>* e3a\\<rbrakk>\n       \\<Longrightarrow> e1 \\<longrightarrow>* e3a", "with ms_cons(1)"], ["proof (chain)\npicking this:\n  e1 \\<longrightarrow> e2\n  e2 \\<longrightarrow>* e3'", "show ?case"], ["proof (prove)\nusing this:\n  e1 \\<longrightarrow> e2\n  e2 \\<longrightarrow>* e3'\n\ngoal (1 subgoal):\n 1. e1 \\<longrightarrow>* e3'", "by blast"], ["proof (state)\nthis:\n  e1 \\<longrightarrow>* e3'\n\ngoal (1 subgoal):\n 1. \\<And>e e3.\n       e \\<longrightarrow>* e3 \\<Longrightarrow> e \\<longrightarrow>* e3", "qed blast"], ["", "lemma subst_id_fv: \"x \\<notin> FV e \\<Longrightarrow> subst x v e = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> FV e \\<Longrightarrow> subst x v e = e", "by (induction e arbitrary: x v) auto"], ["", "definition sdom :: \"env \\<Rightarrow> name set\" where\n  \"sdom \\<rho> \\<equiv> {x. \\<exists> v. lookup \\<rho> x = Some v \\<and> v \\<noteq> EVar x }\""], ["", "definition closed_env :: \"env \\<Rightarrow> bool\" where\n  \"closed_env \\<rho> \\<equiv> (\\<forall> x v. x \\<in> sdom \\<rho> \\<longrightarrow> lookup \\<rho> x = Some v \\<longrightarrow> FV v = {})\""], ["", "definition equiv_env :: \"env \\<Rightarrow> env \\<Rightarrow> bool\" where\n  \"equiv_env \\<rho> \\<rho>' \\<equiv> (sdom \\<rho> = sdom \\<rho>' \\<and> (\\<forall> x. x \\<in> sdom \\<rho> \\<longrightarrow> lookup \\<rho> x = lookup \\<rho>' x))\""], ["", "lemma sdom_cons_xx[simp]: \"sdom ((x,EVar x)#\\<rho>) = sdom \\<rho> - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sdom ((x, EVar x) # \\<rho>) = sdom \\<rho> - {x}", "unfolding sdom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {xa.\n     \\<exists>v.\n        lookup ((x, EVar x) # \\<rho>) xa = Some v \\<and>\n        v \\<noteq> EVar xa} =\n    {x. \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<noteq> EVar x} - {x}", "by auto"], ["", "lemma sdom_cons_v[simp]: \"FV v = {} \\<Longrightarrow> sdom ((x,v)#\\<rho>) = insert x (sdom \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FV v = {} \\<Longrightarrow>\n    sdom ((x, v) # \\<rho>) = insert x (sdom \\<rho>)", "unfolding sdom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. FV v = {} \\<Longrightarrow>\n    {xa.\n     \\<exists>va.\n        lookup ((x, v) # \\<rho>) xa = Some va \\<and> va \\<noteq> EVar xa} =\n    insert x\n     {x. \\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<noteq> EVar x}", "by auto"], ["", "lemma lookup_some_in_dom: \"\\<lbrakk> lookup \\<rho> x = Some v; v \\<noteq> EVar x \\<rbrakk> \\<Longrightarrow> x \\<in> sdom \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lookup \\<rho> x = Some v; v \\<noteq> EVar x\\<rbrakk>\n    \\<Longrightarrow> x \\<in> sdom \\<rho>", "proof (induction \\<rho>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>lookup [] x = Some v; v \\<noteq> EVar x\\<rbrakk>\n    \\<Longrightarrow> x \\<in> sdom []\n 2. \\<And>a \\<rho>.\n       \\<lbrakk>\\<lbrakk>lookup \\<rho> x = Some v;\n                 v \\<noteq> EVar x\\<rbrakk>\n                \\<Longrightarrow> x \\<in> sdom \\<rho>;\n        lookup (a # \\<rho>) x = Some v; v \\<noteq> EVar x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sdom (a # \\<rho>)", "case (Cons b \\<rho>)"], ["proof (state)\nthis:\n  \\<lbrakk>lookup \\<rho> x = Some v; v \\<noteq> EVar x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> sdom \\<rho>\n  lookup (b # \\<rho>) x = Some v\n  v \\<noteq> EVar x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lookup [] x = Some v; v \\<noteq> EVar x\\<rbrakk>\n    \\<Longrightarrow> x \\<in> sdom []\n 2. \\<And>a \\<rho>.\n       \\<lbrakk>\\<lbrakk>lookup \\<rho> x = Some v;\n                 v \\<noteq> EVar x\\<rbrakk>\n                \\<Longrightarrow> x \\<in> sdom \\<rho>;\n        lookup (a # \\<rho>) x = Some v; v \\<noteq> EVar x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> sdom (a # \\<rho>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> sdom (b # \\<rho>)", "proof (cases b)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ba. b = (a, ba) \\<Longrightarrow> x \\<in> sdom (b # \\<rho>)", "case (Pair y v')"], ["proof (state)\nthis:\n  b = (y, v')\n\ngoal (1 subgoal):\n 1. \\<And>a ba. b = (a, ba) \\<Longrightarrow> x \\<in> sdom (b # \\<rho>)", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>lookup \\<rho> x = Some v; v \\<noteq> EVar x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> sdom \\<rho>\n  lookup (b # \\<rho>) x = Some v\n  v \\<noteq> EVar x\n  b = (y, v')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>lookup \\<rho> x = Some v; v \\<noteq> EVar x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> sdom \\<rho>\n  lookup (b # \\<rho>) x = Some v\n  v \\<noteq> EVar x\n  b = (y, v')\n\ngoal (1 subgoal):\n 1. x \\<in> sdom (b # \\<rho>)", "unfolding sdom_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>lookup \\<rho> x = Some v; v \\<noteq> EVar x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> {x. \\<exists>v.\n                                   lookup \\<rho> x = Some v \\<and>\n                                   v \\<noteq> EVar x}\n  lookup (b # \\<rho>) x = Some v\n  v \\<noteq> EVar x\n  b = (y, v')\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<exists>v.\n                   lookup (b # \\<rho>) x = Some v \\<and> v \\<noteq> EVar x}", "by auto"], ["proof (state)\nthis:\n  x \\<in> sdom (b # \\<rho>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> sdom (b # \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lookup [] x = Some v; v \\<noteq> EVar x\\<rbrakk>\n    \\<Longrightarrow> x \\<in> sdom []", "qed auto"], ["", "lemma lookup_none_notin_dom: \"lookup \\<rho> x = None \\<Longrightarrow> x \\<notin> sdom \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup \\<rho> x = None \\<Longrightarrow> x \\<notin> sdom \\<rho>", "proof (induction \\<rho>)"], ["proof (state)\ngoal (2 subgoals):\n 1. lookup [] x = None \\<Longrightarrow> x \\<notin> sdom []\n 2. \\<And>a \\<rho>.\n       \\<lbrakk>lookup \\<rho> x = None \\<Longrightarrow>\n                x \\<notin> sdom \\<rho>;\n        lookup (a # \\<rho>) x = None\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> sdom (a # \\<rho>)", "case (Cons b \\<rho>)"], ["proof (state)\nthis:\n  lookup \\<rho> x = None \\<Longrightarrow> x \\<notin> sdom \\<rho>\n  lookup (b # \\<rho>) x = None\n\ngoal (2 subgoals):\n 1. lookup [] x = None \\<Longrightarrow> x \\<notin> sdom []\n 2. \\<And>a \\<rho>.\n       \\<lbrakk>lookup \\<rho> x = None \\<Longrightarrow>\n                x \\<notin> sdom \\<rho>;\n        lookup (a # \\<rho>) x = None\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> sdom (a # \\<rho>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> sdom (b # \\<rho>)", "proof (cases b)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ba. b = (a, ba) \\<Longrightarrow> x \\<notin> sdom (b # \\<rho>)", "case (Pair y v)"], ["proof (state)\nthis:\n  b = (y, v)\n\ngoal (1 subgoal):\n 1. \\<And>a ba. b = (a, ba) \\<Longrightarrow> x \\<notin> sdom (b # \\<rho>)", "with Cons"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = None \\<Longrightarrow> x \\<notin> sdom \\<rho>\n  lookup (b # \\<rho>) x = None\n  b = (y, v)", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = None \\<Longrightarrow> x \\<notin> sdom \\<rho>\n  lookup (b # \\<rho>) x = None\n  b = (y, v)\n\ngoal (1 subgoal):\n 1. x \\<notin> sdom (b # \\<rho>)", "unfolding sdom_def"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = None \\<Longrightarrow>\n  x \\<notin> {x. \\<exists>v.\n                    lookup \\<rho> x = Some v \\<and> v \\<noteq> EVar x}\n  lookup (b # \\<rho>) x = None\n  b = (y, v)\n\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>v.\n                      lookup (b # \\<rho>) x = Some v \\<and>\n                      v \\<noteq> EVar x}", "by auto"], ["proof (state)\nthis:\n  x \\<notin> sdom (b # \\<rho>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> sdom (b # \\<rho>)\n\ngoal (1 subgoal):\n 1. lookup [] x = None \\<Longrightarrow> x \\<notin> sdom []", "qed (auto simp: sdom_def)"], ["", "lemma psubst_change: \"equiv_env \\<rho> \\<rho>' \\<Longrightarrow> psubst \\<rho> e = psubst \\<rho>' e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n    psubst \\<rho> e = psubst \\<rho>' e", "proof (induction e arbitrary: \\<rho> \\<rho>')"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 3. \\<And>x1a e \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e = psubst \\<rho>' e;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) =\n                         psubst \\<rho>' (ELam x1a e)\n 4. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 5. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 6. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "case (EVar x)"], ["proof (state)\nthis:\n  equiv_env \\<rho> \\<rho>'\n\ngoal (6 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 3. \\<And>x1a e \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e = psubst \\<rho>' e;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) =\n                         psubst \\<rho>' (ELam x1a e)\n 4. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 5. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 6. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "proof (cases \"lookup \\<rho> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lookup \\<rho> x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "case None"], ["proof (state)\nthis:\n  lookup \\<rho> x = None\n\ngoal (2 subgoals):\n 1. lookup \\<rho> x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "from None"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = None", "have lx: \"lookup \\<rho> x = None\""], ["proof (prove)\nusing this:\n  lookup \\<rho> x = None\n\ngoal (1 subgoal):\n 1. lookup \\<rho> x = None", "by simp"], ["proof (state)\nthis:\n  lookup \\<rho> x = None\n\ngoal (2 subgoals):\n 1. lookup \\<rho> x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "proof (cases \"lookup \\<rho>' x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lookup \\<rho>' x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "case None"], ["proof (state)\nthis:\n  lookup \\<rho>' x = None\n\ngoal (2 subgoals):\n 1. lookup \\<rho>' x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "with EVar lx"], ["proof (chain)\npicking this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = None", "show ?thesis"], ["proof (prove)\nusing this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = None\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "by auto"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "case (Some v)"], ["proof (state)\nthis:\n  lookup \\<rho>' x = Some v\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "from EVar lx Some"], ["proof (chain)\npicking this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = Some v", "have \"x \\<notin> sdom \\<rho>'\""], ["proof (prove)\nusing this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = Some v\n\ngoal (1 subgoal):\n 1. x \\<notin> sdom \\<rho>'", "unfolding equiv_env_def"], ["proof (prove)\nusing this:\n  sdom \\<rho> = sdom \\<rho>' \\<and>\n  (\\<forall>x.\n      x \\<in> sdom \\<rho> \\<longrightarrow>\n      lookup \\<rho> x = lookup \\<rho>' x)\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = Some v\n\ngoal (1 subgoal):\n 1. x \\<notin> sdom \\<rho>'", "by auto"], ["proof (state)\nthis:\n  x \\<notin> sdom \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "with lx Some"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = Some v\n  x \\<notin> sdom \\<rho>'", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = Some v\n  x \\<notin> sdom \\<rho>'\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "unfolding sdom_def"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = None\n  lookup \\<rho>' x = Some v\n  x \\<notin> {x. \\<exists>v.\n                    lookup \\<rho>' x = Some v \\<and> v \\<noteq> EVar x}\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "by simp"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "case (Some v)"], ["proof (state)\nthis:\n  lookup \\<rho> x = Some v\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "from Some"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = Some v", "have lx: \"lookup \\<rho> x = Some v\""], ["proof (prove)\nusing this:\n  lookup \\<rho> x = Some v\n\ngoal (1 subgoal):\n 1. lookup \\<rho> x = Some v", "by simp"], ["proof (state)\nthis:\n  lookup \\<rho> x = Some v\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "proof (cases \"lookup \\<rho>' x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lookup \\<rho>' x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "case None"], ["proof (state)\nthis:\n  lookup \\<rho>' x = None\n\ngoal (2 subgoals):\n 1. lookup \\<rho>' x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "from EVar lx None"], ["proof (chain)\npicking this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho> x = Some v\n  lookup \\<rho>' x = None", "have \"x \\<notin> sdom \\<rho>\""], ["proof (prove)\nusing this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho> x = Some v\n  lookup \\<rho>' x = None\n\ngoal (1 subgoal):\n 1. x \\<notin> sdom \\<rho>", "unfolding equiv_env_def"], ["proof (prove)\nusing this:\n  sdom \\<rho> = sdom \\<rho>' \\<and>\n  (\\<forall>x.\n      x \\<in> sdom \\<rho> \\<longrightarrow>\n      lookup \\<rho> x = lookup \\<rho>' x)\n  lookup \\<rho> x = Some v\n  lookup \\<rho>' x = None\n\ngoal (1 subgoal):\n 1. x \\<notin> sdom \\<rho>", "by auto"], ["proof (state)\nthis:\n  x \\<notin> sdom \\<rho>\n\ngoal (2 subgoals):\n 1. lookup \\<rho>' x = None \\<Longrightarrow>\n    psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n 2. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "with None Some"], ["proof (chain)\npicking this:\n  lookup \\<rho>' x = None\n  lookup \\<rho> x = Some v\n  x \\<notin> sdom \\<rho>", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup \\<rho>' x = None\n  lookup \\<rho> x = Some v\n  x \\<notin> sdom \\<rho>\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "unfolding sdom_def"], ["proof (prove)\nusing this:\n  lookup \\<rho>' x = None\n  lookup \\<rho> x = Some v\n  x \\<notin> {x. \\<exists>v.\n                    lookup \\<rho> x = Some v \\<and> v \\<noteq> EVar x}\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "by simp"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "case (Some v')"], ["proof (state)\nthis:\n  lookup \\<rho>' x = Some v'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho>' x = Some a \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "from EVar Some lx"], ["proof (chain)\npicking this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho>' x = Some v'\n  lookup \\<rho> x = Some v", "show ?thesis"], ["proof (prove)\nusing this:\n  equiv_env \\<rho> \\<rho>'\n  lookup \\<rho>' x = Some v'\n  lookup \\<rho> x = Some v\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)", "by (simp add: equiv_env_def sdom_def) force"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = psubst \\<rho>' (EVar x)\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 2. \\<And>x1a e \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e = psubst \\<rho>' e;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) =\n                         psubst \\<rho>' (ELam x1a e)\n 3. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 4. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 2. \\<And>x1a e \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e = psubst \\<rho>' e;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) =\n                         psubst \\<rho>' (ELam x1a e)\n 3. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 4. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "case (ELam x' e)"], ["proof (state)\nthis:\n  equiv_env ?\\<rho> ?\\<rho>' \\<Longrightarrow>\n  psubst ?\\<rho> e = psubst ?\\<rho>' e\n  equiv_env \\<rho> \\<rho>'\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 2. \\<And>x1a e \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e = psubst \\<rho>' e;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) =\n                         psubst \\<rho>' (ELam x1a e)\n 3. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 4. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "from ELam(2)"], ["proof (chain)\npicking this:\n  equiv_env \\<rho> \\<rho>'", "have \"equiv_env ((x',EVar x')#\\<rho>) ((x',EVar x')#\\<rho>')\""], ["proof (prove)\nusing this:\n  equiv_env \\<rho> \\<rho>'\n\ngoal (1 subgoal):\n 1. equiv_env ((x', EVar x') # \\<rho>) ((x', EVar x') # \\<rho>')", "by (simp add: equiv_env_def)"], ["proof (state)\nthis:\n  equiv_env ((x', EVar x') # \\<rho>) ((x', EVar x') # \\<rho>')\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 2. \\<And>x1a e \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e = psubst \\<rho>' e;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) =\n                         psubst \\<rho>' (ELam x1a e)\n 3. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 4. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "with ELam"], ["proof (chain)\npicking this:\n  equiv_env ?\\<rho> ?\\<rho>' \\<Longrightarrow>\n  psubst ?\\<rho> e = psubst ?\\<rho>' e\n  equiv_env \\<rho> \\<rho>'\n  equiv_env ((x', EVar x') # \\<rho>) ((x', EVar x') # \\<rho>')", "show ?case"], ["proof (prove)\nusing this:\n  equiv_env ?\\<rho> ?\\<rho>' \\<Longrightarrow>\n  psubst ?\\<rho> e = psubst ?\\<rho>' e\n  equiv_env \\<rho> \\<rho>'\n  equiv_env ((x', EVar x') # \\<rho>) ((x', EVar x') # \\<rho>')\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (ELam x' e) = psubst \\<rho>' (ELam x' e)", "by (simp add: equiv_env_def)"], ["proof (state)\nthis:\n  psubst \\<rho> (ELam x' e) = psubst \\<rho>' (ELam x' e)\n\ngoal (4 subgoals):\n 1. \\<And>x \\<rho> \\<rho>'.\n       equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = psubst \\<rho>' (ENat x)\n 2. \\<And>e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) =\n                         psubst \\<rho>' (EApp e1 e2)\n 3. \\<And>x1a e1 e2 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) =\n                         psubst \\<rho>' (EPrim x1a e1 e2)\n 4. \\<And>e1 e2 e3 \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho> \\<rho>'.\n                   equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   psubst \\<rho> e1 = psubst \\<rho>' e1;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e2 = psubst \\<rho>' e2;\n        \\<And>\\<rho> \\<rho>'.\n           equiv_env \\<rho> \\<rho>' \\<Longrightarrow>\n           psubst \\<rho> e3 = psubst \\<rho>' e3;\n        equiv_env \\<rho> \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) =\n                         psubst \\<rho>' (EIf e1 e2 e3)", "qed fastforce+"], ["", "lemma subst_psubst: \"\\<lbrakk> closed_env \\<rho>; FV v = {} \\<rbrakk> \\<Longrightarrow> \n    subst x v (psubst ((x, EVar x) # \\<rho>) e) = psubst ((x, v) # \\<rho>) e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n    \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e) =\n                      psubst ((x, v) # \\<rho>) e", "proof (induction e arbitrary: x v \\<rho>)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (EVar x)) =\n                         psubst ((xa, v) # \\<rho>) (EVar x)\n 2. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (ENat x)) =\n                         psubst ((xa, v) # \\<rho>) (ENat x)\n 3. \\<And>x1a e x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e) =\n                                     psubst ((x, v) # \\<rho>) e;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (ELam x1a e)) =\n                         psubst ((x, v) # \\<rho>) (ELam x1a e)\n 4. \\<And>e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EApp e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EApp e1 e2)\n 5. \\<And>x1a e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>)\n                            (EPrim x1a e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EPrim x1a e1 e2)\n 6. \\<And>e1 e2 e3 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e3) =\n                             psubst ((x, v) # \\<rho>) e3;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EIf e1 e2 e3)) =\n                         psubst ((x, v) # \\<rho>) (EIf e1 e2 e3)", "case (EVar x x' v \\<rho>)"], ["proof (state)\nthis:\n  closed_env \\<rho>\n  FV v = {}\n\ngoal (6 subgoals):\n 1. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (EVar x)) =\n                         psubst ((xa, v) # \\<rho>) (EVar x)\n 2. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (ENat x)) =\n                         psubst ((xa, v) # \\<rho>) (ENat x)\n 3. \\<And>x1a e x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e) =\n                                     psubst ((x, v) # \\<rho>) e;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (ELam x1a e)) =\n                         psubst ((x, v) # \\<rho>) (ELam x1a e)\n 4. \\<And>e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EApp e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EApp e1 e2)\n 5. \\<And>x1a e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>)\n                            (EPrim x1a e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EPrim x1a e1 e2)\n 6. \\<And>e1 e2 e3 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e3) =\n                             psubst ((x, v) # \\<rho>) e3;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EIf e1 e2 e3)) =\n                         psubst ((x, v) # \\<rho>) (EIf e1 e2 e3)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "proof (cases \"x = x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)\n 2. x \\<noteq> x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "case True"], ["proof (state)\nthis:\n  x = x'\n\ngoal (2 subgoals):\n 1. x = x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)\n 2. x \\<noteq> x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "then"], ["proof (chain)\npicking this:\n  x = x'", "show ?thesis"], ["proof (prove)\nusing this:\n  x = x'\n\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "by force"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "from False"], ["proof (chain)\npicking this:\n  x \\<noteq> x'", "have xxp: \"x \\<noteq> x'\""], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. x \\<noteq> x'", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "proof (cases \"lookup \\<rho> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lookup \\<rho> x = None \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)\n 2. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n       psubst ((x', v) # \\<rho>) (EVar x)", "case None"], ["proof (state)\nthis:\n  lookup \\<rho> x = None\n\ngoal (2 subgoals):\n 1. lookup \\<rho> x = None \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)\n 2. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n       psubst ((x', v) # \\<rho>) (EVar x)", "then"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = None", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = None\n\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "by auto"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n       psubst ((x', v) # \\<rho>) (EVar x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n       psubst ((x', v) # \\<rho>) (EVar x)", "case (Some v')"], ["proof (state)\nthis:\n  lookup \\<rho> x = Some v'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lookup \\<rho> x = Some a \\<Longrightarrow>\n       subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n       psubst ((x', v) # \\<rho>) (EVar x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "proof (cases \"v' = EVar x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. v' = EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)\n 2. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "case True"], ["proof (state)\nthis:\n  v' = EVar x\n\ngoal (2 subgoals):\n 1. v' = EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)\n 2. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "with Some"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = Some v'\n  v' = EVar x", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = Some v'\n  v' = EVar x\n\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "by auto"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal (1 subgoal):\n 1. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "case False"], ["proof (state)\nthis:\n  v' \\<noteq> EVar x\n\ngoal (1 subgoal):\n 1. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "from False Some"], ["proof (chain)\npicking this:\n  v' \\<noteq> EVar x\n  lookup \\<rho> x = Some v'", "have xdom: \"x \\<in> sdom \\<rho>\""], ["proof (prove)\nusing this:\n  v' \\<noteq> EVar x\n  lookup \\<rho> x = Some v'\n\ngoal (1 subgoal):\n 1. x \\<in> sdom \\<rho>", "using lookup_some_in_dom"], ["proof (prove)\nusing this:\n  v' \\<noteq> EVar x\n  lookup \\<rho> x = Some v'\n  \\<lbrakk>lookup ?\\<rho> ?x = Some ?v; ?v \\<noteq> EVar ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> sdom ?\\<rho>\n\ngoal (1 subgoal):\n 1. x \\<in> sdom \\<rho>", "by simp"], ["proof (state)\nthis:\n  x \\<in> sdom \\<rho>\n\ngoal (1 subgoal):\n 1. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "from this EVar Some"], ["proof (chain)\npicking this:\n  x \\<in> sdom \\<rho>\n  closed_env \\<rho>\n  FV v = {}\n  lookup \\<rho> x = Some v'", "have \"FV v' = {}\""], ["proof (prove)\nusing this:\n  x \\<in> sdom \\<rho>\n  closed_env \\<rho>\n  FV v = {}\n  lookup \\<rho> x = Some v'\n\ngoal (1 subgoal):\n 1. FV v' = {}", "using closed_env_def"], ["proof (prove)\nusing this:\n  x \\<in> sdom \\<rho>\n  closed_env \\<rho>\n  FV v = {}\n  lookup \\<rho> x = Some v'\n  closed_env ?\\<rho> \\<equiv>\n  \\<forall>x v.\n     x \\<in> sdom ?\\<rho> \\<longrightarrow>\n     lookup ?\\<rho> x = Some v \\<longrightarrow> FV v = {}\n\ngoal (1 subgoal):\n 1. FV v' = {}", "by blast"], ["proof (state)\nthis:\n  FV v' = {}\n\ngoal (1 subgoal):\n 1. v' \\<noteq> EVar x \\<Longrightarrow>\n    subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "from this Some"], ["proof (chain)\npicking this:\n  FV v' = {}\n  lookup \\<rho> x = Some v'", "show ?thesis"], ["proof (prove)\nusing this:\n  FV v' = {}\n  lookup \\<rho> x = Some v'\n\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "using subst_id_fv"], ["proof (prove)\nusing this:\n  FV v' = {}\n  lookup \\<rho> x = Some v'\n  ?x \\<notin> FV ?e \\<Longrightarrow> subst ?x ?v ?e = ?e\n\ngoal (1 subgoal):\n 1. subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n    psubst ((x', v) # \\<rho>) (EVar x)", "by auto"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst x' v (psubst ((x', EVar x') # \\<rho>) (EVar x)) =\n  psubst ((x', v) # \\<rho>) (EVar x)\n\ngoal (5 subgoals):\n 1. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (ENat x)) =\n                         psubst ((xa, v) # \\<rho>) (ENat x)\n 2. \\<And>x1a e x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e) =\n                                     psubst ((x, v) # \\<rho>) e;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (ELam x1a e)) =\n                         psubst ((x, v) # \\<rho>) (ELam x1a e)\n 3. \\<And>e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EApp e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EApp e1 e2)\n 4. \\<And>x1a e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>)\n                            (EPrim x1a e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e3) =\n                             psubst ((x, v) # \\<rho>) e3;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EIf e1 e2 e3)) =\n                         psubst ((x, v) # \\<rho>) (EIf e1 e2 e3)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (ENat x)) =\n                         psubst ((xa, v) # \\<rho>) (ENat x)\n 2. \\<And>x1a e x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e) =\n                                     psubst ((x, v) # \\<rho>) e;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (ELam x1a e)) =\n                         psubst ((x, v) # \\<rho>) (ELam x1a e)\n 3. \\<And>e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EApp e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EApp e1 e2)\n 4. \\<And>x1a e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>)\n                            (EPrim x1a e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e3) =\n                             psubst ((x, v) # \\<rho>) e3;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EIf e1 e2 e3)) =\n                         psubst ((x, v) # \\<rho>) (EIf e1 e2 e3)", "case (ELam x' e)"], ["proof (state)\nthis:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}\n\ngoal (5 subgoals):\n 1. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (ENat x)) =\n                         psubst ((xa, v) # \\<rho>) (ENat x)\n 2. \\<And>x1a e x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e) =\n                                     psubst ((x, v) # \\<rho>) e;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (ELam x1a e)) =\n                         psubst ((x, v) # \\<rho>) (ELam x1a e)\n 3. \\<And>e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EApp e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EApp e1 e2)\n 4. \\<And>x1a e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>)\n                            (EPrim x1a e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EPrim x1a e1 e2)\n 5. \\<And>e1 e2 e3 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e3) =\n                             psubst ((x, v) # \\<rho>) e3;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EIf e1 e2 e3)) =\n                         psubst ((x, v) # \\<rho>) (EIf e1 e2 e3)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "proof (cases \"x = x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)\n 2. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "case True"], ["proof (state)\nthis:\n  x = x'\n\ngoal (2 subgoals):\n 1. x = x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)\n 2. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "then"], ["proof (chain)\npicking this:\n  x = x'", "show ?thesis"], ["proof (prove)\nusing this:\n  x = x'\n\ngoal (1 subgoal):\n 1. subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x' \\<Longrightarrow>\n    psubst ((x', EVar x') # (x', EVar x') # \\<rho>) e =\n    psubst ((x', EVar x') # (x', v) # \\<rho>) e", "apply (rule psubst_change)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x' \\<Longrightarrow>\n    equiv_env ((x', EVar x') # (x', EVar x') # \\<rho>)\n     ((x', EVar x') # (x', v) # \\<rho>)", "using equiv_env_def sdom_def"], ["proof (prove)\nusing this:\n  equiv_env ?\\<rho> ?\\<rho>' \\<equiv>\n  sdom ?\\<rho> = sdom ?\\<rho>' \\<and>\n  (\\<forall>x.\n      x \\<in> sdom ?\\<rho> \\<longrightarrow>\n      lookup ?\\<rho> x = lookup ?\\<rho>' x)\n  sdom ?\\<rho> \\<equiv>\n  {x. \\<exists>v. lookup ?\\<rho> x = Some v \\<and> v \\<noteq> EVar x}\n\ngoal (1 subgoal):\n 1. x = x' \\<Longrightarrow>\n    equiv_env ((x', EVar x') # (x', EVar x') # \\<rho>)\n     ((x', EVar x') # (x', v) # \\<rho>)", "by auto"], ["proof (state)\nthis:\n  subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n  psubst ((x, v) # \\<rho>) (ELam x' e)\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> x'", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n    psubst ((x, v) # \\<rho>) (ELam x' e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "assume x_xp: \"x \\<noteq> x'\""], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "let ?r = \"(x',EVar x') # \\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "from ELam"], ["proof (chain)\npicking this:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}", "have IHprem: \"closed_env ((x', EVar x') # \\<rho>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}\n\ngoal (1 subgoal):\n 1. closed_env ((x', EVar x') # \\<rho>)", "using closed_env_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}\n  closed_env ?\\<rho> \\<equiv>\n  \\<forall>x v.\n     x \\<in> sdom ?\\<rho> \\<longrightarrow>\n     lookup ?\\<rho> x = Some v \\<longrightarrow> FV v = {}\n\ngoal (1 subgoal):\n 1. closed_env ((x', EVar x') # \\<rho>)", "by auto"], ["proof (state)\nthis:\n  closed_env ((x', EVar x') # \\<rho>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "have \"psubst ((x',EVar x')#(x, EVar x)#\\<rho>) e = psubst ((x,EVar x)#(x',EVar x') # \\<rho>) e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e =\n    psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e", "apply (rule psubst_change)"], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_env ((x', EVar x') # (x, EVar x) # \\<rho>)\n     ((x, EVar x) # (x', EVar x') # \\<rho>)", "using x_xp equiv_env_def"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  equiv_env ?\\<rho> ?\\<rho>' \\<equiv>\n  sdom ?\\<rho> = sdom ?\\<rho>' \\<and>\n  (\\<forall>x.\n      x \\<in> sdom ?\\<rho> \\<longrightarrow>\n      lookup ?\\<rho> x = lookup ?\\<rho>' x)\n\ngoal (1 subgoal):\n 1. equiv_env ((x', EVar x') # (x, EVar x) # \\<rho>)\n     ((x, EVar x) # (x', EVar x') # \\<rho>)", "by auto"], ["proof (state)\nthis:\n  psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e =\n  psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "from this"], ["proof (chain)\npicking this:\n  psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e =\n  psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e", "have \"subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e)\n                       = subst x v (psubst ((x,EVar x)#(x',EVar x') # \\<rho>) e)\""], ["proof (prove)\nusing this:\n  psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e =\n  psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e\n\ngoal (1 subgoal):\n 1. subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e)", "by simp"], ["proof (state)\nthis:\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e)\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "also"], ["proof (state)\nthis:\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e)\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "with ELam IHprem"], ["proof (chain)\npicking this:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}\n  closed_env ((x', EVar x') # \\<rho>)\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e)", "have \"... = psubst ((x,v)#(x',EVar x')#\\<rho>) e\""], ["proof (prove)\nusing this:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}\n  closed_env ((x', EVar x') # \\<rho>)\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e)\n\ngoal (1 subgoal):\n 1. subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e) =\n    psubst ((x, v) # (x', EVar x') # \\<rho>) e", "using ELam(1)[of \"(x',EVar x')#\\<rho>\" v x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>closed_env ?\\<rho>; FV ?v = {}\\<rbrakk>\n  \\<Longrightarrow> subst ?x ?v (psubst ((?x, EVar ?x) # ?\\<rho>) e) =\n                    psubst ((?x, ?v) # ?\\<rho>) e\n  closed_env \\<rho>\n  FV v = {}\n  closed_env ((x', EVar x') # \\<rho>)\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e)\n  \\<lbrakk>closed_env ((x', EVar x') # \\<rho>); FV v = {}\\<rbrakk>\n  \\<Longrightarrow> subst x v\n                     (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e) =\n                    psubst ((x, v) # (x', EVar x') # \\<rho>) e\n\ngoal (1 subgoal):\n 1. subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e) =\n    psubst ((x, v) # (x', EVar x') # \\<rho>) e", "by simp"], ["proof (state)\nthis:\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e) =\n  psubst ((x, v) # (x', EVar x') # \\<rho>) e\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "also"], ["proof (state)\nthis:\n  subst x v (psubst ((x, EVar x) # (x', EVar x') # \\<rho>) e) =\n  psubst ((x, v) # (x', EVar x') # \\<rho>) e\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "have \"... = psubst ((x',EVar x')#(x,v)#\\<rho>) e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst ((x, v) # (x', EVar x') # \\<rho>) e =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "apply (rule psubst_change)"], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_env ((x, v) # (x', EVar x') # \\<rho>)\n     ((x', EVar x') # (x, v) # \\<rho>)", "using x_xp equiv_env_def sdom_def"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  equiv_env ?\\<rho> ?\\<rho>' \\<equiv>\n  sdom ?\\<rho> = sdom ?\\<rho>' \\<and>\n  (\\<forall>x.\n      x \\<in> sdom ?\\<rho> \\<longrightarrow>\n      lookup ?\\<rho> x = lookup ?\\<rho>' x)\n  sdom ?\\<rho> \\<equiv>\n  {x. \\<exists>v. lookup ?\\<rho> x = Some v \\<and> v \\<noteq> EVar x}\n\ngoal (1 subgoal):\n 1. equiv_env ((x, v) # (x', EVar x') # \\<rho>)\n     ((x', EVar x') # (x, v) # \\<rho>)", "by auto"], ["proof (state)\nthis:\n  psubst ((x, v) # (x', EVar x') # \\<rho>) e =\n  psubst ((x', EVar x') # (x, v) # \\<rho>) e\n\ngoal (1 subgoal):\n 1. x \\<noteq> x' \\<Longrightarrow>\n    subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "finally"], ["proof (chain)\npicking this:\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  psubst ((x', EVar x') # (x, v) # \\<rho>) e", "show \"subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e)\n                    = psubst ((x', EVar x') # (x,v) # \\<rho>) e\""], ["proof (prove)\nusing this:\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  psubst ((x', EVar x') # (x, v) # \\<rho>) e\n\ngoal (1 subgoal):\n 1. subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n    psubst ((x', EVar x') # (x, v) # \\<rho>) e", "."], ["proof (state)\nthis:\n  subst x v (psubst ((x', EVar x') # (x, EVar x) # \\<rho>) e) =\n  psubst ((x', EVar x') # (x, v) # \\<rho>) e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n  psubst ((x, v) # \\<rho>) (ELam x' e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst x v (psubst ((x, EVar x) # \\<rho>) (ELam x' e)) =\n  psubst ((x, v) # \\<rho>) (ELam x' e)\n\ngoal (4 subgoals):\n 1. \\<And>x xa v \\<rho>.\n       \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst xa v\n                          (psubst ((xa, EVar xa) # \\<rho>) (ENat x)) =\n                         psubst ((xa, v) # \\<rho>) (ENat x)\n 2. \\<And>e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EApp e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EApp e1 e2)\n 3. \\<And>x1a e1 e2 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>)\n                            (EPrim x1a e1 e2)) =\n                         psubst ((x, v) # \\<rho>) (EPrim x1a e1 e2)\n 4. \\<And>e1 e2 e3 x v \\<rho>.\n       \\<lbrakk>\\<And>x v \\<rho>.\n                   \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n                   \\<Longrightarrow> subst x v\n(psubst ((x, EVar x) # \\<rho>) e1) =\n                                     psubst ((x, v) # \\<rho>) e1;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e2) =\n                             psubst ((x, v) # \\<rho>) e2;\n        \\<And>x v \\<rho>.\n           \\<lbrakk>closed_env \\<rho>; FV v = {}\\<rbrakk>\n           \\<Longrightarrow> subst x v (psubst ((x, EVar x) # \\<rho>) e3) =\n                             psubst ((x, v) # \\<rho>) e3;\n        closed_env \\<rho>; FV v = {}\\<rbrakk>\n       \\<Longrightarrow> subst x v\n                          (psubst ((x, EVar x) # \\<rho>) (EIf e1 e2 e3)) =\n                         psubst ((x, v) # \\<rho>) (EIf e1 e2 e3)", "qed fastforce+"], ["", "inductive_cases bsenv_nil[elim!]: \"bs_env [] \\<rho>'\""], ["", "lemma bs_env_dom: \"bs_env \\<rho> \\<rho>' \\<Longrightarrow> set (map fst \\<rho>) = sdom \\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n    set (map fst \\<rho>) = sdom \\<rho>'", "proof (induction \\<rho> arbitrary: \\<rho>')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho>'.\n       bs_env [] \\<rho>' \\<Longrightarrow> set (map fst []) = sdom \\<rho>'\n 2. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> set (map fst (a # \\<rho>)) = sdom \\<rho>'", "case Nil"], ["proof (state)\nthis:\n  bs_env [] \\<rho>'\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho>'.\n       bs_env [] \\<rho>' \\<Longrightarrow> set (map fst []) = sdom \\<rho>'\n 2. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> set (map fst (a # \\<rho>)) = sdom \\<rho>'", "then"], ["proof (chain)\npicking this:\n  bs_env [] \\<rho>'", "show ?case"], ["proof (prove)\nusing this:\n  bs_env [] \\<rho>'\n\ngoal (1 subgoal):\n 1. set (map fst []) = sdom \\<rho>'", "by (force simp: sdom_def)"], ["proof (state)\nthis:\n  set (map fst []) = sdom \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> set (map fst (a # \\<rho>)) = sdom \\<rho>'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> set (map fst (a # \\<rho>)) = sdom \\<rho>'", "case (Cons b \\<rho>)"], ["proof (state)\nthis:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst \\<rho>) = sdom ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> set (map fst (a # \\<rho>)) = sdom \\<rho>'", "then"], ["proof (chain)\npicking this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst \\<rho>) = sdom ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'", "show ?case"], ["proof (prove)\nusing this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst \\<rho>) = sdom ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n\ngoal (1 subgoal):\n 1. set (map fst (b # \\<rho>)) = sdom \\<rho>'", "proof (cases b)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ba.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (b # \\<rho>) \\<rho>'; b = (a, ba)\\<rbrakk>\n       \\<Longrightarrow> set (map fst (b # \\<rho>)) = sdom \\<rho>'", "case (Pair x v')"], ["proof (state)\nthis:\n  b = (x, v')\n\ngoal (1 subgoal):\n 1. \\<And>a ba.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   set (map fst \\<rho>) = sdom \\<rho>';\n        bs_env (b # \\<rho>) \\<rho>'; b = (a, ba)\\<rbrakk>\n       \\<Longrightarrow> set (map fst (b # \\<rho>)) = sdom \\<rho>'", "with Cons"], ["proof (chain)\npicking this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst \\<rho>) = sdom ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n  b = (x, v')", "show ?thesis"], ["proof (prove)\nusing this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst \\<rho>) = sdom ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n  b = (x, v')\n\ngoal (1 subgoal):\n 1. set (map fst (b # \\<rho>)) = sdom \\<rho>'", "by (cases v') force+"], ["proof (state)\nthis:\n  set (map fst (b # \\<rho>)) = sdom \\<rho>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set (map fst (b # \\<rho>)) = sdom \\<rho>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma closed_env_cons[intro!]: \"FV v = {} \\<Longrightarrow> closed_env \\<rho>'' \\<Longrightarrow> closed_env ((a, v) # \\<rho>'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>FV v = {}; closed_env \\<rho>''\\<rbrakk>\n    \\<Longrightarrow> closed_env ((a, v) # \\<rho>'')", "by (simp add: closed_env_def sdom_def)"], ["", "lemma bs_env_closed: \"bs_env \\<rho> \\<rho>' \\<Longrightarrow> closed_env \\<rho>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bs_env \\<rho> \\<rho>' \\<Longrightarrow> closed_env \\<rho>'", "proof (induction \\<rho> arbitrary: \\<rho>')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho>'. bs_env [] \\<rho>' \\<Longrightarrow> closed_env \\<rho>'\n 2. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "case Nil"], ["proof (state)\nthis:\n  bs_env [] \\<rho>'\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho>'. bs_env [] \\<rho>' \\<Longrightarrow> closed_env \\<rho>'\n 2. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "then"], ["proof (chain)\npicking this:\n  bs_env [] \\<rho>'", "show ?case"], ["proof (prove)\nusing this:\n  bs_env [] \\<rho>'\n\ngoal (1 subgoal):\n 1. closed_env \\<rho>'", "by (force simp: closed_env_def)"], ["proof (state)\nthis:\n  closed_env \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "case (Cons b \\<rho>)"], ["proof (state)\nthis:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "from Cons"], ["proof (chain)\npicking this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'", "obtain x v v' \\<rho>'' where b: \"b = (x,v)\" and rp: \"\\<rho>' = (x,v')#\\<rho>''\"\n    and vvp: \"bs_val v v'\" and r_rpp: \"bs_env \\<rho> \\<rho>''\""], ["proof (prove)\nusing this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n\ngoal (1 subgoal):\n 1. (\\<And>x v v' \\<rho>''''.\n        \\<lbrakk>b = (x, v); \\<rho>' = (x, v') # \\<rho>''''; bs_val v v';\n         bs_env \\<rho> \\<rho>''''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases b) blast"], ["proof (state)\nthis:\n  b = (x, v)\n  \\<rho>' = (x, v') # \\<rho>''\n  bs_val v v'\n  bs_env \\<rho> \\<rho>''\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "from vvp"], ["proof (chain)\npicking this:\n  bs_val v v'", "have \"is_val v'\""], ["proof (prove)\nusing this:\n  bs_val v v'\n\ngoal (1 subgoal):\n 1. is_val v'", "by blast"], ["proof (state)\nthis:\n  is_val v'\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "from this"], ["proof (chain)\npicking this:\n  is_val v'", "have fv_vp: \"FV v' = {}\""], ["proof (prove)\nusing this:\n  is_val v'\n\ngoal (1 subgoal):\n 1. FV v' = {}", "by auto"], ["proof (state)\nthis:\n  FV v' = {}\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "from Cons r_rpp"], ["proof (chain)\npicking this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n  bs_env \\<rho> \\<rho>''", "have \"closed_env \\<rho>''\""], ["proof (prove)\nusing this:\n  bs_env \\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n  bs_env (b # \\<rho>) \\<rho>'\n  bs_env \\<rho> \\<rho>''\n\ngoal (1 subgoal):\n 1. closed_env \\<rho>''", "by blast"], ["proof (state)\nthis:\n  closed_env \\<rho>''\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho> \\<rho>'.\n       \\<lbrakk>\\<And>\\<rho>'.\n                   bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n                   closed_env \\<rho>';\n        bs_env (a # \\<rho>) \\<rho>'\\<rbrakk>\n       \\<Longrightarrow> closed_env \\<rho>'", "from this rp fv_vp"], ["proof (chain)\npicking this:\n  closed_env \\<rho>''\n  \\<rho>' = (x, v') # \\<rho>''\n  FV v' = {}", "show ?case"], ["proof (prove)\nusing this:\n  closed_env \\<rho>''\n  \\<rho>' = (x, v') # \\<rho>''\n  FV v' = {}\n\ngoal (1 subgoal):\n 1. closed_env \\<rho>'", "by blast"], ["proof (state)\nthis:\n  closed_env \\<rho>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma psubst_fv: \"closed_env \\<rho> \\<Longrightarrow> FV (psubst \\<rho> e) = FV e - sdom \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed_env \\<rho> \\<Longrightarrow>\n    FV (psubst \\<rho> e) = FV e - sdom \\<rho>", "proof (induction e arbitrary: \\<rho>)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (EVar x)) = FV (EVar x) - sdom \\<rho>\n 2. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 3. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e) = FV e - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (ELam x1a e)) =\n                         FV (ELam x1a e) - sdom \\<rho>\n 4. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 5. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 6. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "case (EVar x)"], ["proof (state)\nthis:\n  closed_env \\<rho>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (EVar x)) = FV (EVar x) - sdom \\<rho>\n 2. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 3. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e) = FV e - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (ELam x1a e)) =\n                         FV (ELam x1a e) - sdom \\<rho>\n 4. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 5. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 6. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "then"], ["proof (chain)\npicking this:\n  closed_env \\<rho>", "show ?case"], ["proof (prove)\nusing this:\n  closed_env \\<rho>\n\ngoal (1 subgoal):\n 1. FV (psubst \\<rho> (EVar x)) = FV (EVar x) - sdom \\<rho>", "apply (simp add: closed_env_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> sdom \\<rho> \\<longrightarrow>\n       (\\<forall>v.\n           lookup \\<rho> x = Some v \\<longrightarrow>\n           FV v = {}) \\<Longrightarrow>\n    FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n        | Some v \\<Rightarrow> v) =\n    {x} - sdom \\<rho>", "apply (cases \"x \\<in> sdom \\<rho>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<in> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>\n 2. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> sdom \\<rho>;\n     x \\<in> sdom \\<rho> \\<longrightarrow>\n     (\\<forall>v.\n         lookup \\<rho> x = Some v \\<longrightarrow> FV v = {})\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>\n 2. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in> sdom \\<rho> \\<Longrightarrow> x \\<in> sdom \\<rho>\n 2. \\<lbrakk>x \\<in> sdom \\<rho>;\n     \\<forall>v.\n        lookup \\<rho> x = Some v \\<longrightarrow> FV v = {}\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>\n 3. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> sdom \\<rho>;\n     \\<forall>v.\n        lookup \\<rho> x = Some v \\<longrightarrow> FV v = {}\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>\n 2. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply (simp add: sdom_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>v. lookup \\<rho> x = Some v \\<and> v \\<noteq> EVar x;\n     \\<forall>v.\n        lookup \\<rho> x = Some v \\<longrightarrow> FV v = {}\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {}\n 2. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v.\n       \\<lbrakk>\\<forall>v.\n                   lookup \\<rho> x = Some v \\<longrightarrow> FV v = {};\n        lookup \\<rho> x = Some v; v \\<noteq> EVar x\\<rbrakk>\n       \\<Longrightarrow> FV (case lookup \\<rho> x of\n                             None \\<Rightarrow> EVar x\n                             | Some v \\<Rightarrow> v) =\n                         {}\n 2. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                x \\<in> sdom \\<rho> \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     x \\<notin> sdom \\<rho>\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} - sdom \\<rho>", "apply (simp add: sdom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>v.\n                    lookup \\<rho> x = Some v \\<and>\n                    v \\<noteq> EVar x) \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     \\<forall>v.\n        lookup \\<rho> x = Some v \\<longrightarrow> v = EVar x\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} -\n                      {x. \\<exists>v.\n                             lookup \\<rho> x = Some v \\<and>\n                             v \\<noteq> EVar x}", "apply (cases \"lookup \\<rho> x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x.\n                (\\<exists>v.\n                    lookup \\<rho> x = Some v \\<and>\n                    v \\<noteq> EVar x) \\<longrightarrow>\n                (\\<forall>v.\n                    lookup \\<rho> x = Some v \\<longrightarrow> FV v = {});\n     \\<forall>v. lookup \\<rho> x = Some v \\<longrightarrow> v = EVar x;\n     lookup \\<rho> x = None\\<rbrakk>\n    \\<Longrightarrow> FV (case lookup \\<rho> x of None \\<Rightarrow> EVar x\n                          | Some v \\<Rightarrow> v) =\n                      {x} -\n                      {x. \\<exists>v.\n                             lookup \\<rho> x = Some v \\<and>\n                             v \\<noteq> EVar x}\n 2. \\<And>a.\n       \\<lbrakk>\\<forall>x.\n                   (\\<exists>v.\n                       lookup \\<rho> x = Some v \\<and>\n                       v \\<noteq> EVar x) \\<longrightarrow>\n                   (\\<forall>v.\n                       lookup \\<rho> x = Some v \\<longrightarrow>\n                       FV v = {});\n        \\<forall>v. lookup \\<rho> x = Some v \\<longrightarrow> v = EVar x;\n        lookup \\<rho> x = Some a\\<rbrakk>\n       \\<Longrightarrow> FV (case lookup \\<rho> x of\n                             None \\<Rightarrow> EVar x\n                             | Some v \\<Rightarrow> v) =\n                         {x} -\n                         {x. \\<exists>v.\n                                lookup \\<rho> x = Some v \\<and>\n                                v \\<noteq> EVar x}", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<forall>x.\n                   (\\<exists>v.\n                       lookup \\<rho> x = Some v \\<and>\n                       v \\<noteq> EVar x) \\<longrightarrow>\n                   (\\<forall>v.\n                       lookup \\<rho> x = Some v \\<longrightarrow>\n                       FV v = {});\n        \\<forall>v. lookup \\<rho> x = Some v \\<longrightarrow> v = EVar x;\n        lookup \\<rho> x = Some a\\<rbrakk>\n       \\<Longrightarrow> FV (case lookup \\<rho> x of\n                             None \\<Rightarrow> EVar x\n                             | Some v \\<Rightarrow> v) =\n                         {x} -\n                         {x. \\<exists>v.\n                                lookup \\<rho> x = Some v \\<and>\n                                v \\<noteq> EVar x}", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  FV (psubst \\<rho> (EVar x)) = FV (EVar x) - sdom \\<rho>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e) = FV e - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (ELam x1a e)) =\n                         FV (ELam x1a e) - sdom \\<rho>\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e) = FV e - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (ELam x1a e)) =\n                         FV (ELam x1a e) - sdom \\<rho>\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "case (ELam x e)"], ["proof (state)\nthis:\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> e) = FV e - sdom ?\\<rho>\n  closed_env \\<rho>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e) = FV e - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (ELam x1a e)) =\n                         FV (ELam x1a e) - sdom \\<rho>\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "from ELam"], ["proof (chain)\npicking this:\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> e) = FV e - sdom ?\\<rho>\n  closed_env \\<rho>", "have \"closed_env ((x, EVar x) # \\<rho>)\""], ["proof (prove)\nusing this:\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> e) = FV e - sdom ?\\<rho>\n  closed_env \\<rho>\n\ngoal (1 subgoal):\n 1. closed_env ((x, EVar x) # \\<rho>)", "by (simp add: closed_env_def sdom_def)"], ["proof (state)\nthis:\n  closed_env ((x, EVar x) # \\<rho>)\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e) = FV e - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (ELam x1a e)) =\n                         FV (ELam x1a e) - sdom \\<rho>\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "from this ELam"], ["proof (chain)\npicking this:\n  closed_env ((x, EVar x) # \\<rho>)\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> e) = FV e - sdom ?\\<rho>\n  closed_env \\<rho>", "show ?case"], ["proof (prove)\nusing this:\n  closed_env ((x, EVar x) # \\<rho>)\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> e) = FV e - sdom ?\\<rho>\n  closed_env \\<rho>\n\ngoal (1 subgoal):\n 1. FV (psubst \\<rho> (ELam x e)) = FV (ELam x e) - sdom \\<rho>", "by auto"], ["proof (state)\nthis:\n  FV (psubst \\<rho> (ELam x e)) = FV (ELam x e) - sdom \\<rho>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<rho>.\n       closed_env \\<rho> \\<Longrightarrow>\n       FV (psubst \\<rho> (ENat x)) = FV (ENat x) - sdom \\<rho>\n 2. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EApp e1 e2)) =\n                         FV (EApp e1 e2) - sdom \\<rho>\n 3. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EPrim x1a e1 e2)) =\n                         FV (EPrim x1a e1 e2) - sdom \\<rho>\n 4. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   closed_env \\<rho> \\<Longrightarrow>\n                   FV (psubst \\<rho> e1) = FV e1 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e2) = FV e2 - sdom \\<rho>;\n        \\<And>\\<rho>.\n           closed_env \\<rho> \\<Longrightarrow>\n           FV (psubst \\<rho> e3) = FV e3 - sdom \\<rho>;\n        closed_env \\<rho>\\<rbrakk>\n       \\<Longrightarrow> FV (psubst \\<rho> (EIf e1 e2 e3)) =\n                         FV (EIf e1 e2 e3) - sdom \\<rho>", "qed fastforce+"], ["", "lemma big_small_step:\n  assumes ev: \"\\<rho> \\<turnstile> e \\<Down> w\" and r_rp: \"bs_env \\<rho> \\<rho>'\" and fv_e: \"FV e \\<subseteq> set (map fst \\<rho>)\"\n  shows \"\\<exists> v. psubst \\<rho>' e \\<longrightarrow>* v \\<and> is_val v \\<and> bs_val w v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' e \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val w v", "using ev r_rp fv_e"], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e \\<Down> w\n  bs_env \\<rho> \\<rho>'\n  FV e \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' e \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val w v", "proof (induction arbitrary: \\<rho>' rule: eval.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ENat n) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ENat n) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n) v\n 2. \\<And>\\<rho> x v \\<rho>'.\n       \\<lbrakk>lookup \\<rho> x = Some v; bs_env \\<rho> \\<rho>';\n        FV (EVar x) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>' (EVar x) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 6. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 7. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_nat \\<rho> n \\<rho>')"], ["proof (state)\nthis:\n  bs_env \\<rho> \\<rho>'\n  FV (ENat n) \\<subseteq> set (map fst \\<rho>)\n\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ENat n) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ENat n) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n) v\n 2. \\<And>\\<rho> x v \\<rho>'.\n       \\<lbrakk>lookup \\<rho> x = Some v; bs_env \\<rho> \\<rho>';\n        FV (EVar x) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>' (EVar x) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 6. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 7. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "then"], ["proof (chain)\npicking this:\n  bs_env \\<rho> \\<rho>'\n  FV (ENat n) \\<subseteq> set (map fst \\<rho>)", "show ?case"], ["proof (prove)\nusing this:\n  bs_env \\<rho> \\<rho>'\n  FV (ENat n) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' (ENat n) \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val (BNat n) v", "by (rule_tac x=\"ENat n\" in exI) auto"], ["proof (state)\nthis:\n  \\<exists>v.\n     psubst \\<rho>' (ENat n) \\<longrightarrow>* v \\<and>\n     is_val v \\<and> bs_val (BNat n) v\n\ngoal (6 subgoals):\n 1. \\<And>\\<rho> x v \\<rho>'.\n       \\<lbrakk>lookup \\<rho> x = Some v; bs_env \\<rho> \\<rho>';\n        FV (EVar x) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>' (EVar x) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 3. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 5. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 6. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<rho> x v \\<rho>'.\n       \\<lbrakk>lookup \\<rho> x = Some v; bs_env \\<rho> \\<rho>';\n        FV (EVar x) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>' (EVar x) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 3. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 5. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 6. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_var \\<rho> x w \\<rho>')"], ["proof (state)\nthis:\n  lookup \\<rho> x = Some w\n  bs_env \\<rho> \\<rho>'\n  FV (EVar x) \\<subseteq> set (map fst \\<rho>)\n\ngoal (6 subgoals):\n 1. \\<And>\\<rho> x v \\<rho>'.\n       \\<lbrakk>lookup \\<rho> x = Some v; bs_env \\<rho> \\<rho>';\n        FV (EVar x) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>' (EVar x) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 3. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 5. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 6. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_var"], ["proof (chain)\npicking this:\n  lookup \\<rho> x = Some w\n  bs_env \\<rho> \\<rho>'\n  FV (EVar x) \\<subseteq> set (map fst \\<rho>)", "obtain v where lx: \"lookup \\<rho>' x = Some v\" and \n    vv: \"is_val v\" and w_v: \"bs_val w v\""], ["proof (prove)\nusing this:\n  lookup \\<rho> x = Some w\n  bs_env \\<rho> \\<rho>'\n  FV (EVar x) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>lookup \\<rho>' x = Some v; is_val v; bs_val w v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lookup_bs_env"], ["proof (prove)\nusing this:\n  lookup \\<rho> x = Some w\n  bs_env \\<rho> \\<rho>'\n  FV (EVar x) \\<subseteq> set (map fst \\<rho>)\n  \\<lbrakk>bs_env ?\\<rho> ?\\<rho>'; lookup ?\\<rho> ?x = Some ?w\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       lookup ?\\<rho>' ?x = Some v \\<and> bs_val ?w v\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>lookup \\<rho>' x = Some v; is_val v; bs_val w v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  lookup \\<rho>' x = Some v\n  is_val v\n  bs_val w v\n\ngoal (6 subgoals):\n 1. \\<And>\\<rho> x v \\<rho>'.\n       \\<lbrakk>lookup \\<rho> x = Some v; bs_env \\<rho> \\<rho>';\n        FV (EVar x) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>' (EVar x) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 3. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 5. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 6. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from lx vv w_v"], ["proof (chain)\npicking this:\n  lookup \\<rho>' x = Some v\n  is_val v\n  bs_val w v", "show ?case"], ["proof (prove)\nusing this:\n  lookup \\<rho>' x = Some v\n  is_val v\n  bs_val w v\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' (EVar x) \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val w v", "by (rule_tac x=v in exI) auto"], ["proof (state)\nthis:\n  \\<exists>v.\n     psubst \\<rho>' (EVar x) \\<longrightarrow>* v \\<and>\n     is_val v \\<and> bs_val w v\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_lam \\<rho> x e \\<rho>')"], ["proof (state)\nthis:\n  bs_env \\<rho> \\<rho>'\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_lam(1)"], ["proof (chain)\npicking this:\n  bs_env \\<rho> \\<rho>'", "have dom_eq: \"set (map fst \\<rho>) = sdom \\<rho>'\""], ["proof (prove)\nusing this:\n  bs_env \\<rho> \\<rho>'\n\ngoal (1 subgoal):\n 1. set (map fst \\<rho>) = sdom \\<rho>'", "using bs_env_dom"], ["proof (prove)\nusing this:\n  bs_env \\<rho> \\<rho>'\n  bs_env ?\\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst ?\\<rho>) = sdom ?\\<rho>'\n\ngoal (1 subgoal):\n 1. set (map fst \\<rho>) = sdom \\<rho>'", "by blast"], ["proof (state)\nthis:\n  set (map fst \\<rho>) = sdom \\<rho>'\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_lam(1)"], ["proof (chain)\npicking this:\n  bs_env \\<rho> \\<rho>'", "have \"closed_env ((x,EVar x)#\\<rho>')\""], ["proof (prove)\nusing this:\n  bs_env \\<rho> \\<rho>'\n\ngoal (1 subgoal):\n 1. closed_env ((x, EVar x) # \\<rho>')", "using bs_env_closed closed_env_def"], ["proof (prove)\nusing this:\n  bs_env \\<rho> \\<rho>'\n  bs_env ?\\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n  closed_env ?\\<rho> \\<equiv>\n  \\<forall>x v.\n     x \\<in> sdom ?\\<rho> \\<longrightarrow>\n     lookup ?\\<rho> x = Some v \\<longrightarrow> FV v = {}\n\ngoal (1 subgoal):\n 1. closed_env ((x, EVar x) # \\<rho>')", "by auto"], ["proof (state)\nthis:\n  closed_env ((x, EVar x) # \\<rho>')\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this psubst_fv"], ["proof (chain)\npicking this:\n  closed_env ((x, EVar x) # \\<rho>')\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> ?e) = FV ?e - sdom ?\\<rho>", "have \"FV (psubst ((x,EVar x)#\\<rho>') e) = FV e - sdom ((x,EVar x)#\\<rho>')\""], ["proof (prove)\nusing this:\n  closed_env ((x, EVar x) # \\<rho>')\n  closed_env ?\\<rho> \\<Longrightarrow>\n  FV (psubst ?\\<rho> ?e) = FV ?e - sdom ?\\<rho>\n\ngoal (1 subgoal):\n 1. FV (psubst ((x, EVar x) # \\<rho>') e) =\n    FV e - sdom ((x, EVar x) # \\<rho>')", "by blast"], ["proof (state)\nthis:\n  FV (psubst ((x, EVar x) # \\<rho>') e) =\n  FV e - sdom ((x, EVar x) # \\<rho>')\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_lam(2) dom_eq"], ["proof (chain)\npicking this:\n  FV (psubst ((x, EVar x) # \\<rho>') e) =\n  FV e - sdom ((x, EVar x) # \\<rho>')\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\n  set (map fst \\<rho>) = sdom \\<rho>'", "have fv_lam: \"FV (ELam x (psubst ((x,EVar x)#\\<rho>') e)) = {}\""], ["proof (prove)\nusing this:\n  FV (psubst ((x, EVar x) # \\<rho>') e) =\n  FV e - sdom ((x, EVar x) # \\<rho>')\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\n  set (map fst \\<rho>) = sdom \\<rho>'\n\ngoal (1 subgoal):\n 1. FV (ELam x (psubst ((x, EVar x) # \\<rho>') e)) = {}", "by auto"], ["proof (state)\nthis:\n  FV (ELam x (psubst ((x, EVar x) # \\<rho>') e)) = {}\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from fv_lam eval_lam"], ["proof (chain)\npicking this:\n  FV (ELam x (psubst ((x, EVar x) # \\<rho>') e)) = {}\n  bs_env \\<rho> \\<rho>'\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)", "have 1: \"bs_val (BClos x e \\<rho>) (ELam x (psubst ((x, EVar x) # \\<rho>') e))\""], ["proof (prove)\nusing this:\n  FV (ELam x (psubst ((x, EVar x) # \\<rho>') e)) = {}\n  bs_env \\<rho> \\<rho>'\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. bs_val (BClos x e \\<rho>) (ELam x (psubst ((x, EVar x) # \\<rho>') e))", "by auto"], ["proof (state)\nthis:\n  bs_val (BClos x e \\<rho>) (ELam x (psubst ((x, EVar x) # \\<rho>') e))\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> x e \\<rho>'.\n       \\<lbrakk>bs_env \\<rho> \\<rho>';\n        FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (ELam x e) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BClos x e \\<rho>) v\n 2. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 3. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 4. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 5. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_lam fv_lam"], ["proof (chain)\npicking this:\n  bs_val (BClos x e \\<rho>) (ELam x (psubst ((x, EVar x) # \\<rho>') e))\n  bs_env \\<rho> \\<rho>'\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\n  FV (ELam x (psubst ((x, EVar x) # \\<rho>') e)) = {}", "show ?case"], ["proof (prove)\nusing this:\n  bs_val (BClos x e \\<rho>) (ELam x (psubst ((x, EVar x) # \\<rho>') e))\n  bs_env \\<rho> \\<rho>'\n  FV (ELam x e) \\<subseteq> set (map fst \\<rho>)\n  FV (ELam x (psubst ((x, EVar x) # \\<rho>') e)) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' (ELam x e) \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val (BClos x e \\<rho>) v", "by (rule_tac x=\"ELam x (psubst ((x,EVar x)#\\<rho>') e)\" in exI) auto"], ["proof (state)\nthis:\n  \\<exists>v.\n     psubst \\<rho>' (ELam x e) \\<longrightarrow>* v \\<and>\n     is_val v \\<and> bs_val (BClos x e \\<rho>) v\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_app \\<rho> e1 x e \\<rho>' e2 arg v  \\<rho>'')"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>'\n  \\<rho> \\<turnstile> e2 \\<Down> arg\n  (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BClos x e \\<rho>') v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val arg v\n  \\<lbrakk>bs_env ((x, arg) # \\<rho>') ?\\<rho>';\n   FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>va.\n                       psubst ?\\<rho>' e \\<longrightarrow>* va \\<and>\n                       is_val va \\<and> bs_val v va\n  bs_env \\<rho> \\<rho>''\n  FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_app(8)"], ["proof (chain)\npicking this:\n  FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)", "have \"FV e1 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e1 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_app(7) eval_app(4)[of \\<rho>'']"], ["proof (chain)\npicking this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  bs_env \\<rho> \\<rho>''\n  \\<lbrakk>bs_env \\<rho> \\<rho>'';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst \\<rho>'' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BClos x e \\<rho>') v", "obtain v1 where e1_v1: \"psubst \\<rho>'' e1 \\<longrightarrow>* v1\" and \n    vv1: \"is_val v1\" and clos_v1: \"bs_val (BClos x e \\<rho>') v1\""], ["proof (prove)\nusing this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  bs_env \\<rho> \\<rho>''\n  \\<lbrakk>bs_env \\<rho> \\<rho>'';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst \\<rho>'' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BClos x e \\<rho>') v\n\ngoal (1 subgoal):\n 1. (\\<And>v1.\n        \\<lbrakk>psubst \\<rho>'' e1 \\<longrightarrow>* v1; is_val v1;\n         bs_val (BClos x e \\<rho>') v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp, blast)"], ["proof (state)\nthis:\n  psubst \\<rho>'' e1 \\<longrightarrow>* v1\n  is_val v1\n  bs_val (BClos x e \\<rho>') v1\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_app(8)"], ["proof (chain)\npicking this:\n  FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)", "have \"FV e2 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e2 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_app(5) eval_app(7)"], ["proof (chain)\npicking this:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val arg v\n  bs_env \\<rho> \\<rho>''", "obtain v2 where e2_v2: \"psubst \\<rho>'' e2 \\<longrightarrow>* v2\" and\n    vv2: \"is_val v2\" and arg_v2: \"bs_val arg v2\""], ["proof (prove)\nusing this:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val arg v\n  bs_env \\<rho> \\<rho>''\n\ngoal (1 subgoal):\n 1. (\\<And>v2.\n        \\<lbrakk>psubst \\<rho>'' e2 \\<longrightarrow>* v2; is_val v2;\n         bs_val arg v2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst \\<rho>'' e2 \\<longrightarrow>* v2\n  is_val v2\n  bs_val arg v2\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from vv2"], ["proof (chain)\npicking this:\n  is_val v2", "have fv_v2: \"FV v2 = {}\""], ["proof (prove)\nusing this:\n  is_val v2\n\ngoal (1 subgoal):\n 1. FV v2 = {}", "by auto"], ["proof (state)\nthis:\n  FV v2 = {}\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from clos_v1"], ["proof (chain)\npicking this:\n  bs_val (BClos x e \\<rho>') v1", "obtain \\<rho>2 where rpp_r2: \"bs_env \\<rho>' \\<rho>2\" and fv_v1: \"FV v1 = {}\" and\n    v1_lam: \"v1 = ELam x (psubst ((x,EVar x)#\\<rho>2) e)\""], ["proof (prove)\nusing this:\n  bs_val (BClos x e \\<rho>') v1\n\ngoal (1 subgoal):\n 1. (\\<And>\\<rho>2.\n        \\<lbrakk>bs_env \\<rho>' \\<rho>2; FV v1 = {};\n         v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  bs_env \\<rho>' \\<rho>2\n  FV v1 = {}\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "let ?r = \"((x,v2) # \\<rho>2)\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from rpp_r2"], ["proof (chain)\npicking this:\n  bs_env \\<rho>' \\<rho>2", "have cr2: \"closed_env \\<rho>2\""], ["proof (prove)\nusing this:\n  bs_env \\<rho>' \\<rho>2\n\ngoal (1 subgoal):\n 1. closed_env \\<rho>2", "using bs_env_closed"], ["proof (prove)\nusing this:\n  bs_env \\<rho>' \\<rho>2\n  bs_env ?\\<rho> ?\\<rho>' \\<Longrightarrow> closed_env ?\\<rho>'\n\ngoal (1 subgoal):\n 1. closed_env \\<rho>2", "by auto"], ["proof (state)\nthis:\n  closed_env \\<rho>2\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this"], ["proof (chain)\npicking this:\n  closed_env \\<rho>2", "have \"closed_env ((x,EVar x)#\\<rho>2)\""], ["proof (prove)\nusing this:\n  closed_env \\<rho>2\n\ngoal (1 subgoal):\n 1. closed_env ((x, EVar x) # \\<rho>2)", "using  closed_env_def sdom_def"], ["proof (prove)\nusing this:\n  closed_env \\<rho>2\n  closed_env ?\\<rho> \\<equiv>\n  \\<forall>x v.\n     x \\<in> sdom ?\\<rho> \\<longrightarrow>\n     lookup ?\\<rho> x = Some v \\<longrightarrow> FV v = {}\n  sdom ?\\<rho> \\<equiv>\n  {x. \\<exists>v. lookup ?\\<rho> x = Some v \\<and> v \\<noteq> EVar x}\n\ngoal (1 subgoal):\n 1. closed_env ((x, EVar x) # \\<rho>2)", "by auto"], ["proof (state)\nthis:\n  closed_env ((x, EVar x) # \\<rho>2)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this"], ["proof (chain)\npicking this:\n  closed_env ((x, EVar x) # \\<rho>2)", "have fve: \"FV (psubst ((x,EVar x)#\\<rho>2) e) = FV e - sdom ((x,EVar x)#\\<rho>2)\""], ["proof (prove)\nusing this:\n  closed_env ((x, EVar x) # \\<rho>2)\n\ngoal (1 subgoal):\n 1. FV (psubst ((x, EVar x) # \\<rho>2) e) =\n    FV e - sdom ((x, EVar x) # \\<rho>2)", "using psubst_fv[of \"(x,EVar x)#\\<rho>2\"]"], ["proof (prove)\nusing this:\n  closed_env ((x, EVar x) # \\<rho>2)\n  closed_env ((x, EVar x) # \\<rho>2) \\<Longrightarrow>\n  FV (psubst ((x, EVar x) # \\<rho>2) ?e) =\n  FV ?e - sdom ((x, EVar x) # \\<rho>2)\n\ngoal (1 subgoal):\n 1. FV (psubst ((x, EVar x) # \\<rho>2) e) =\n    FV e - sdom ((x, EVar x) # \\<rho>2)", "by blast"], ["proof (state)\nthis:\n  FV (psubst ((x, EVar x) # \\<rho>2) e) =\n  FV e - sdom ((x, EVar x) # \\<rho>2)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "let ?r2 = \"((x, arg) # \\<rho>')\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from rpp_r2 arg_v2 vv2"], ["proof (chain)\npicking this:\n  bs_env \\<rho>' \\<rho>2\n  bs_val arg v2\n  is_val v2", "have rr: \"bs_env ?r2 ?r\""], ["proof (prove)\nusing this:\n  bs_env \\<rho>' \\<rho>2\n  bs_val arg v2\n  is_val v2\n\ngoal (1 subgoal):\n 1. bs_env ((x, arg) # \\<rho>') ((x, v2) # \\<rho>2)", "by auto"], ["proof (state)\nthis:\n  bs_env ((x, arg) # \\<rho>') ((x, v2) # \\<rho>2)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from rr bs_env_dom"], ["proof (chain)\npicking this:\n  bs_env ((x, arg) # \\<rho>') ((x, v2) # \\<rho>2)\n  bs_env ?\\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst ?\\<rho>) = sdom ?\\<rho>'", "have dr2_dr: \"set (map fst ?r2) = sdom ?r\""], ["proof (prove)\nusing this:\n  bs_env ((x, arg) # \\<rho>') ((x, v2) # \\<rho>2)\n  bs_env ?\\<rho> ?\\<rho>' \\<Longrightarrow>\n  set (map fst ?\\<rho>) = sdom ?\\<rho>'\n\ngoal (1 subgoal):\n 1. set (map fst ((x, arg) # \\<rho>')) = sdom ((x, v2) # \\<rho>2)", "by blast"], ["proof (state)\nthis:\n  set (map fst ((x, arg) # \\<rho>')) = sdom ((x, v2) # \\<rho>2)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from fve dr2_dr fv_v1 v1_lam fv_v2"], ["proof (chain)\npicking this:\n  FV (psubst ((x, EVar x) # \\<rho>2) e) =\n  FV e - sdom ((x, EVar x) # \\<rho>2)\n  set (map fst ((x, arg) # \\<rho>')) = sdom ((x, v2) # \\<rho>2)\n  FV v1 = {}\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n  FV v2 = {}", "have \"FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\""], ["proof (prove)\nusing this:\n  FV (psubst ((x, EVar x) # \\<rho>2) e) =\n  FV e - sdom ((x, EVar x) # \\<rho>2)\n  set (map fst ((x, arg) # \\<rho>')) = sdom ((x, v2) # \\<rho>2)\n  FV v1 = {}\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n  FV v2 = {}\n\ngoal (1 subgoal):\n 1. FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))", "by auto"], ["proof (state)\nthis:\n  FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this rr eval_app(6)"], ["proof (chain)\npicking this:\n  FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\n  bs_env ((x, arg) # \\<rho>') ((x, v2) # \\<rho>2)\n  \\<lbrakk>bs_env ((x, arg) # \\<rho>') ?\\<rho>';\n   FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>va.\n                       psubst ?\\<rho>' e \\<longrightarrow>* va \\<and>\n                       is_val va \\<and> bs_val v va", "obtain v3 where e_v3: \"psubst ?r e \\<longrightarrow>* v3\" and \n    vv3: \"isval v3\" and v_v3: \"bs_val v v3\""], ["proof (prove)\nusing this:\n  FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\n  bs_env ((x, arg) # \\<rho>') ((x, v2) # \\<rho>2)\n  \\<lbrakk>bs_env ((x, arg) # \\<rho>') ?\\<rho>';\n   FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>va.\n                       psubst ?\\<rho>' e \\<longrightarrow>* va \\<and>\n                       is_val va \\<and> bs_val v va\n\ngoal (1 subgoal):\n 1. (\\<And>v3.\n        \\<lbrakk>psubst ((x, v2) # \\<rho>2) e \\<longrightarrow>* v3;\n         isval v3; bs_val v v3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp, blast)"], ["proof (state)\nthis:\n  psubst ((x, v2) # \\<rho>2) e \\<longrightarrow>* v3\n  isval v3\n  bs_val v v3\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from e1_v1"], ["proof (chain)\npicking this:\n  psubst \\<rho>'' e1 \\<longrightarrow>* v1", "have 1: \"EApp (psubst \\<rho>'' e1) (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 (psubst \\<rho>'' e2)\""], ["proof (prove)\nusing this:\n  psubst \\<rho>'' e1 \\<longrightarrow>* v1\n\ngoal (1 subgoal):\n 1. EApp (psubst \\<rho>'' e1) (psubst \\<rho>'' e2) \\<longrightarrow>*\n    EApp v1 (psubst \\<rho>'' e2)", "by (rule app_red_cong1)"], ["proof (state)\nthis:\n  EApp (psubst \\<rho>'' e1) (psubst \\<rho>'' e2) \\<longrightarrow>*\n  EApp v1 (psubst \\<rho>'' e2)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from e2_v2"], ["proof (chain)\npicking this:\n  psubst \\<rho>'' e2 \\<longrightarrow>* v2", "have 2: \"EApp v1 (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 v2\""], ["proof (prove)\nusing this:\n  psubst \\<rho>'' e2 \\<longrightarrow>* v2\n\ngoal (1 subgoal):\n 1. EApp v1 (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 v2", "by (rule app_red_cong2)"], ["proof (state)\nthis:\n  EApp v1 (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 v2\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from vv2 fv_v2"], ["proof (chain)\npicking this:\n  is_val v2\n  FV v2 = {}", "have vv2b: \"is_val v2\""], ["proof (prove)\nusing this:\n  is_val v2\n  FV v2 = {}\n\ngoal (1 subgoal):\n 1. is_val v2", "by auto"], ["proof (state)\nthis:\n  is_val v2\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "let ?body = \"psubst ((x,EVar x)#\\<rho>2) e\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from v1_lam vv2b"], ["proof (chain)\npicking this:\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n  is_val v2", "have 3: \"EApp (ELam x ?body) v2 \\<longrightarrow>\n      subst x v2 (psubst ((x,EVar x)#\\<rho>2) e)\""], ["proof (prove)\nusing this:\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n  is_val v2\n\ngoal (1 subgoal):\n 1. EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n    subst x v2 (psubst ((x, EVar x) # \\<rho>2) e)", "using beta[of v2 x \"?body\"]"], ["proof (prove)\nusing this:\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n  is_val v2\n  is_val v2 \\<Longrightarrow>\n  EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e)\n\ngoal (1 subgoal):\n 1. EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n    subst x v2 (psubst ((x, EVar x) # \\<rho>2) e)", "by simp"], ["proof (state)\nthis:\n  EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e)\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "have 4: \"subst x v2 (psubst ((x,EVar x)#\\<rho>2) e) = psubst ?r e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n    psubst ((x, v2) # \\<rho>2) e", "apply (rule subst_psubst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed_env \\<rho>2\n 2. FV v2 = {}", "using fv_v2 cr2"], ["proof (prove)\nusing this:\n  FV v2 = {}\n  closed_env \\<rho>2\n\ngoal (2 subgoals):\n 1. closed_env \\<rho>2\n 2. FV v2 = {}", "by auto"], ["proof (state)\nthis:\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n  psubst ((x, v2) # \\<rho>2) e\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "have 4: \"subst x v2 (psubst ((x,EVar x)#\\<rho>2) e) = psubst ?r e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n    psubst ((x, v2) # \\<rho>2) e", "apply (rule subst_psubst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed_env \\<rho>2\n 2. FV v2 = {}", "using fv_v2 cr2"], ["proof (prove)\nusing this:\n  FV v2 = {}\n  closed_env \\<rho>2\n\ngoal (2 subgoals):\n 1. closed_env \\<rho>2\n 2. FV v2 = {}", "by auto"], ["proof (state)\nthis:\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n  psubst ((x, v2) # \\<rho>2) e\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 1 2"], ["proof (chain)\npicking this:\n  EApp (psubst \\<rho>'' e1) (psubst \\<rho>'' e2) \\<longrightarrow>*\n  EApp v1 (psubst \\<rho>'' e2)\n  EApp v1 (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 v2", "have 5: \"psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* EApp v1 v2\""], ["proof (prove)\nusing this:\n  EApp (psubst \\<rho>'' e1) (psubst \\<rho>'' e2) \\<longrightarrow>*\n  EApp v1 (psubst \\<rho>'' e2)\n  EApp v1 (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 v2\n\ngoal (1 subgoal):\n 1. psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* EApp v1 v2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EApp (psubst \\<rho>'' e1)\n              (psubst \\<rho>'' e2) \\<longrightarrow>*\n             EApp v1 (psubst \\<rho>'' e2);\n     EApp v1 (psubst \\<rho>'' e2) \\<longrightarrow>* EApp v1 v2\\<rbrakk>\n    \\<Longrightarrow> EApp (psubst \\<rho>'' e1)\n                       (psubst \\<rho>'' e2) \\<longrightarrow>*\n                      EApp v1 v2", "by (rule multi_step_trans) auto"], ["proof (state)\nthis:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* EApp v1 v2\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 5 3 4 v1_lam"], ["proof (chain)\npicking this:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* EApp v1 v2\n  EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e)\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n  psubst ((x, v2) # \\<rho>2) e\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)", "have 6: \"psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* psubst ?r e\""], ["proof (prove)\nusing this:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* EApp v1 v2\n  EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e)\n  subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n  psubst ((x, v2) # \\<rho>2) e\n  v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\n\ngoal (1 subgoal):\n 1. psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n    psubst ((x, v2) # \\<rho>2) e", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EApp (psubst \\<rho>'' e1)\n              (psubst \\<rho>'' e2) \\<longrightarrow>*\n             EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2;\n     EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n     psubst ((x, v2) # \\<rho>2) e;\n     subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n     psubst ((x, v2) # \\<rho>2) e;\n     v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\\<rbrakk>\n    \\<Longrightarrow> EApp (psubst \\<rho>'' e1)\n                       (psubst \\<rho>'' e2) \\<longrightarrow>*\n                      psubst ((x, v2) # \\<rho>2) e", "apply (rule multi_step_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>EApp (psubst \\<rho>'' e1)\n              (psubst \\<rho>'' e2) \\<longrightarrow>*\n             EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2;\n     EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n     psubst ((x, v2) # \\<rho>2) e;\n     subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n     psubst ((x, v2) # \\<rho>2) e;\n     v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\\<rbrakk>\n    \\<Longrightarrow> EApp (psubst \\<rho>'' e1)\n                       (psubst \\<rho>'' e2) \\<longrightarrow>*\n                      ?e2.4\n 2. \\<lbrakk>EApp (psubst \\<rho>'' e1)\n              (psubst \\<rho>'' e2) \\<longrightarrow>*\n             EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2;\n     EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n     psubst ((x, v2) # \\<rho>2) e;\n     subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n     psubst ((x, v2) # \\<rho>2) e;\n     v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\\<rbrakk>\n    \\<Longrightarrow> ?e2.4 \\<longrightarrow>* psubst ((x, v2) # \\<rho>2) e", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EApp (psubst \\<rho>'' e1)\n              (psubst \\<rho>'' e2) \\<longrightarrow>*\n             EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2;\n     EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e)) v2 \\<longrightarrow>\n     psubst ((x, v2) # \\<rho>2) e;\n     subst x v2 (psubst ((x, EVar x) # \\<rho>2) e) =\n     psubst ((x, v2) # \\<rho>2) e;\n     v1 = ELam x (psubst ((x, EVar x) # \\<rho>2) e)\\<rbrakk>\n    \\<Longrightarrow> EApp (ELam x (psubst ((x, EVar x) # \\<rho>2) e))\n                       v2 \\<longrightarrow>*\n                      psubst ((x, v2) # \\<rho>2) e", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n  psubst ((x, v2) # \\<rho>2) e\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 6 e_v3"], ["proof (chain)\npicking this:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n  psubst ((x, v2) # \\<rho>2) e\n  psubst ((x, v2) # \\<rho>2) e \\<longrightarrow>* v3", "have 7: \"psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* v3\""], ["proof (prove)\nusing this:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n  psubst ((x, v2) # \\<rho>2) e\n  psubst ((x, v2) # \\<rho>2) e \\<longrightarrow>* v3\n\ngoal (1 subgoal):\n 1. psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* v3", "by (rule multi_step_trans)"], ["proof (state)\nthis:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* v3\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v \\<rho>''.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env \\<rho> \\<rho>'';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>'' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and>\n                                bs_val (BClos x e \\<rho>') v;\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val arg v;\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>\\<rho>''.\n           \\<lbrakk>bs_env ((x, arg) # \\<rho>') \\<rho>'';\n            FV e \\<subseteq> set (map fst ((x, arg) # \\<rho>'))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>va.\n                                psubst \\<rho>'' e \\<longrightarrow>*\n                                va \\<and>\n                                is_val va \\<and> bs_val v va;\n        bs_env \\<rho> \\<rho>'';\n        FV (EApp e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>*\n                            va \\<and>\n                            is_val va \\<and> bs_val v va\n 2. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 3. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 4. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 7 vv3 v_v3"], ["proof (chain)\npicking this:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* v3\n  isval v3\n  bs_val v v3", "show ?case"], ["proof (prove)\nusing this:\n  psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* v3\n  isval v3\n  bs_val v v3\n\ngoal (1 subgoal):\n 1. \\<exists>va.\n       psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* va \\<and>\n       is_val va \\<and> bs_val v va", "by blast"], ["proof (state)\nthis:\n  \\<exists>va.\n     psubst \\<rho>'' (EApp e1 e2) \\<longrightarrow>* va \\<and>\n     is_val va \\<and> bs_val v va\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_prim \\<rho> e1 n1 e2 n2 n3 f \\<rho>')"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho> \\<turnstile> e2 \\<Down> BNat n2\n  n3 = f n1 n2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n1) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n2) v\n  bs_env \\<rho> \\<rho>'\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_prim(7)"], ["proof (chain)\npicking this:\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)", "have \"FV e1 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e1 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_prim"], ["proof (chain)\npicking this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho> \\<turnstile> e2 \\<Down> BNat n2\n  n3 = f n1 n2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n1) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n2) v\n  bs_env \\<rho> \\<rho>'\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)", "obtain v1 where e1_v1: \"psubst \\<rho>' e1 \\<longrightarrow>* v1\" and\n    n1_v1: \"bs_val (BNat n1) v1\""], ["proof (prove)\nusing this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho> \\<turnstile> e2 \\<Down> BNat n2\n  n3 = f n1 n2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n1) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n2) v\n  bs_env \\<rho> \\<rho>'\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1.\n        \\<lbrakk>psubst \\<rho>' e1 \\<longrightarrow>* v1;\n         bs_val (BNat n1) v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1\n  bs_val (BNat n1) v1\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from n1_v1"], ["proof (chain)\npicking this:\n  bs_val (BNat n1) v1", "have v1: \"v1 = ENat n1\""], ["proof (prove)\nusing this:\n  bs_val (BNat n1) v1\n\ngoal (1 subgoal):\n 1. v1 = ENat n1", "by blast"], ["proof (state)\nthis:\n  v1 = ENat n1\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_prim(7)"], ["proof (chain)\npicking this:\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)", "have \"FV e2 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e2 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_prim"], ["proof (chain)\npicking this:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho> \\<turnstile> e2 \\<Down> BNat n2\n  n3 = f n1 n2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n1) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n2) v\n  bs_env \\<rho> \\<rho>'\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)", "obtain v2 where e2_v2: \"psubst \\<rho>' e2 \\<longrightarrow>* v2\" and\n    n2_v2: \"bs_val (BNat n2) v2\""], ["proof (prove)\nusing this:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n1\n  \\<rho> \\<turnstile> e2 \\<Down> BNat n2\n  n3 = f n1 n2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n1) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n2) v\n  bs_env \\<rho> \\<rho>'\n  FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v2.\n        \\<lbrakk>psubst \\<rho>' e2 \\<longrightarrow>* v2;\n         bs_val (BNat n2) v2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst \\<rho>' e2 \\<longrightarrow>* v2\n  bs_val (BNat n2) v2\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from n2_v2"], ["proof (chain)\npicking this:\n  bs_val (BNat n2) v2", "have v2: \"v2 = ENat n2\""], ["proof (prove)\nusing this:\n  bs_val (BNat n2) v2\n\ngoal (1 subgoal):\n 1. v2 = ENat n2", "by blast"], ["proof (state)\nthis:\n  v2 = ENat n2\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from e1_v1"], ["proof (chain)\npicking this:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1", "have 1: \"EPrim f (psubst \\<rho>' e1) (psubst \\<rho>' e2) \\<longrightarrow>* EPrim f v1 (psubst \\<rho>' e2)\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1\n\ngoal (1 subgoal):\n 1. EPrim f (psubst \\<rho>' e1) (psubst \\<rho>' e2) \\<longrightarrow>*\n    EPrim f v1 (psubst \\<rho>' e2)", "by (rule prim_red_cong1)"], ["proof (state)\nthis:\n  EPrim f (psubst \\<rho>' e1) (psubst \\<rho>' e2) \\<longrightarrow>*\n  EPrim f v1 (psubst \\<rho>' e2)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from e2_v2"], ["proof (chain)\npicking this:\n  psubst \\<rho>' e2 \\<longrightarrow>* v2", "have 2: \"EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>* EPrim f v1 v2\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' e2 \\<longrightarrow>* v2\n\ngoal (1 subgoal):\n 1. EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>* EPrim f v1 v2", "by (rule prim_red_cong2)"], ["proof (state)\nthis:\n  EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>* EPrim f v1 v2\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from v1 v2"], ["proof (chain)\npicking this:\n  v1 = ENat n1\n  v2 = ENat n2", "have 3: \"EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\""], ["proof (prove)\nusing this:\n  v1 = ENat n1\n  v2 = ENat n2\n\ngoal (1 subgoal):\n 1. EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)", "by auto"], ["proof (state)\nthis:\n  EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 1 2"], ["proof (chain)\npicking this:\n  EPrim f (psubst \\<rho>' e1) (psubst \\<rho>' e2) \\<longrightarrow>*\n  EPrim f v1 (psubst \\<rho>' e2)\n  EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>* EPrim f v1 v2", "have 5: \"psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* EPrim f v1 v2\""], ["proof (prove)\nusing this:\n  EPrim f (psubst \\<rho>' e1) (psubst \\<rho>' e2) \\<longrightarrow>*\n  EPrim f v1 (psubst \\<rho>' e2)\n  EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>* EPrim f v1 v2\n\ngoal (1 subgoal):\n 1. psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* EPrim f v1 v2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 (psubst \\<rho>' e2);\n     EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>*\n     EPrim f v1 v2\\<rbrakk>\n    \\<Longrightarrow> EPrim f (psubst \\<rho>' e1)\n                       (psubst \\<rho>' e2) \\<longrightarrow>*\n                      EPrim f v1 v2", "apply (rule multi_step_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 (psubst \\<rho>' e2);\n     EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>*\n     EPrim f v1 v2\\<rbrakk>\n    \\<Longrightarrow> EPrim f (psubst \\<rho>' e1)\n                       (psubst \\<rho>' e2) \\<longrightarrow>*\n                      ?e2.2\n 2. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 (psubst \\<rho>' e2);\n     EPrim f v1 (psubst \\<rho>' e2) \\<longrightarrow>*\n     EPrim f v1 v2\\<rbrakk>\n    \\<Longrightarrow> ?e2.2 \\<longrightarrow>* EPrim f v1 v2", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* EPrim f v1 v2\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 5 3"], ["proof (chain)\npicking this:\n  psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* EPrim f v1 v2\n  EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)", "have 6: \"psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* ENat (f n1 n2)\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* EPrim f v1 v2\n  EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\n\ngoal (1 subgoal):\n 1. psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* ENat (f n1 n2)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 v2;\n     EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\\<rbrakk>\n    \\<Longrightarrow> EPrim f (psubst \\<rho>' e1)\n                       (psubst \\<rho>' e2) \\<longrightarrow>*\n                      ENat (f n1 n2)", "apply (rule multi_step_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 v2;\n     EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\\<rbrakk>\n    \\<Longrightarrow> EPrim f (psubst \\<rho>' e1)\n                       (psubst \\<rho>' e2) \\<longrightarrow>*\n                      ?e2.2\n 2. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 v2;\n     EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\\<rbrakk>\n    \\<Longrightarrow> ?e2.2 \\<longrightarrow>* ENat (f n1 n2)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EPrim f (psubst \\<rho>' e1)\n              (psubst \\<rho>' e2) \\<longrightarrow>*\n             EPrim f v1 v2;\n     EPrim f v1 v2 \\<longrightarrow> ENat (f n1 n2)\\<rbrakk>\n    \\<Longrightarrow> EPrim f v1 v2 \\<longrightarrow>* ENat (f n1 n2)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* ENat (f n1 n2)\n\ngoal (3 subgoals):\n 1. \\<And>\\<rho> e1 n1 e2 n2 n3 f \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n1) v;\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n2) v;\n        n3 = f n1 n2; bs_env \\<rho> \\<rho>';\n        FV (EPrim f e1 e2) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>'\n                             (EPrim f e1 e2) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val (BNat n3) v\n 2. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 3. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_prim(3)"], ["proof (chain)\npicking this:\n  psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* ENat (f n1 n2)\n  n3 = f n1 n2", "show ?case"], ["proof (prove)\nusing this:\n  psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* ENat (f n1 n2)\n  n3 = f n1 n2\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val (BNat n3) v", "apply (rule_tac x=\"ENat (f n1 n2)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>*\n             ENat (f n1 n2);\n     n3 = f n1 n2\\<rbrakk>\n    \\<Longrightarrow> psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>*\n                      ENat (f n1 n2) \\<and>\n                      is_val (ENat (f n1 n2)) \\<and>\n                      bs_val (BNat n3) (ENat (f n1 n2))", "by auto"], ["proof (state)\nthis:\n  \\<exists>v.\n     psubst \\<rho>' (EPrim f e1 e2) \\<longrightarrow>* v \\<and>\n     is_val v \\<and> bs_val (BNat n3) v\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_if0 \\<rho> e1 e3 v3 e2 \\<rho>')"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat 0\n  \\<rho> \\<turnstile> e3 \\<Down> v3\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat 0) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e3 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v3 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_if0(6)"], ["proof (chain)\npicking this:\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "have \"FV e1 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e1 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_if0"], ["proof (chain)\npicking this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat 0\n  \\<rho> \\<turnstile> e3 \\<Down> v3\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat 0) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e3 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v3 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "obtain v1 where e1_v1: \"psubst \\<rho>' e1 \\<longrightarrow>* v1\" and\n    n1_v1: \"bs_val (BNat 0) v1\""], ["proof (prove)\nusing this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat 0\n  \\<rho> \\<turnstile> e3 \\<Down> v3\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat 0) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e3 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v3 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1.\n        \\<lbrakk>psubst \\<rho>' e1 \\<longrightarrow>* v1;\n         bs_val (BNat 0) v1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1\n  bs_val (BNat 0) v1\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from n1_v1"], ["proof (chain)\npicking this:\n  bs_val (BNat 0) v1", "have v1: \"v1 = ENat 0\""], ["proof (prove)\nusing this:\n  bs_val (BNat 0) v1\n\ngoal (1 subgoal):\n 1. v1 = ENat 0", "by blast"], ["proof (state)\nthis:\n  v1 = ENat 0\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_if0(6)"], ["proof (chain)\npicking this:\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "have \"FV e3 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e3 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e3 \\<subseteq> set (map fst \\<rho>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_if0"], ["proof (chain)\npicking this:\n  FV e3 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat 0\n  \\<rho> \\<turnstile> e3 \\<Down> v3\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat 0) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e3 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v3 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "obtain v3' where e3_v3: \"psubst \\<rho>' e3 \\<longrightarrow>* v3'\" and\n    v3_v3: \"bs_val v3 v3'\""], ["proof (prove)\nusing this:\n  FV e3 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat 0\n  \\<rho> \\<turnstile> e3 \\<Down> v3\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat 0) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e3 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v3 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v3'.\n        \\<lbrakk>psubst \\<rho>' e3 \\<longrightarrow>* v3';\n         bs_val v3 v3'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst \\<rho>' e3 \\<longrightarrow>* v3'\n  bs_val v3 v3'\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from e1_v1"], ["proof (chain)\npicking this:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1", "have 1: \"EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2) (psubst \\<rho>' e3) \n    \\<longrightarrow>* EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1\n\ngoal (1 subgoal):\n 1. EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n     (psubst \\<rho>' e3) \\<longrightarrow>*\n    EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)", "by (rule if_red_cong1)"], ["proof (state)\nthis:\n  EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n   (psubst \\<rho>' e3) \\<longrightarrow>*\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from v1"], ["proof (chain)\npicking this:\n  v1 = ENat 0", "have 3: \"EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow> (psubst \\<rho>' e3)\""], ["proof (prove)\nusing this:\n  v1 = ENat 0\n\ngoal (1 subgoal):\n 1. EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n    psubst \\<rho>' e3", "by auto"], ["proof (state)\nthis:\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n  psubst \\<rho>' e3\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 1 3"], ["proof (chain)\npicking this:\n  EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n   (psubst \\<rho>' e3) \\<longrightarrow>*\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n  psubst \\<rho>' e3", "have 5: \"psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e3\""], ["proof (prove)\nusing this:\n  EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n   (psubst \\<rho>' e3) \\<longrightarrow>*\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n  psubst \\<rho>' e3\n\ngoal (1 subgoal):\n 1. psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e3", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e3\\<rbrakk>\n    \\<Longrightarrow> EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n                       (psubst \\<rho>' e3) \\<longrightarrow>*\n                      psubst \\<rho>' e3", "apply (rule multi_step_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e3\\<rbrakk>\n    \\<Longrightarrow> EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n                       (psubst \\<rho>' e3) \\<longrightarrow>*\n                      ?e2.2\n 2. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e3\\<rbrakk>\n    \\<Longrightarrow> ?e2.2 \\<longrightarrow>* psubst \\<rho>' e3", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e3\\<rbrakk>\n    \\<Longrightarrow> EIf v1 (psubst \\<rho>' e2)\n                       (psubst \\<rho>' e3) \\<longrightarrow>*\n                      psubst \\<rho>' e3", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e3\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 5 e3_v3"], ["proof (chain)\npicking this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e3\n  psubst \\<rho>' e3 \\<longrightarrow>* v3'", "have 6: \"psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v3'\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e3\n  psubst \\<rho>' e3 \\<longrightarrow>* v3'\n\ngoal (1 subgoal):\n 1. psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v3'", "apply (rule multi_step_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v3'\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> e1 e3 v3 e2 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat 0) v;\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e3 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e3 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v3 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v3 v\n 2. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 6 v3_v3"], ["proof (chain)\npicking this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v3'\n  bs_val v3 v3'", "show ?case"], ["proof (prove)\nusing this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v3'\n  bs_val v3 v3'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val v3 v", "by blast"], ["proof (state)\nthis:\n  \\<exists>v.\n     psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v \\<and>\n     is_val v \\<and> bs_val v3 v\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "case (eval_if1 \\<rho> e1 n e2 v2 e3 \\<rho>')"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_if1"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "have \"FV e1 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e1 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_if1"], ["proof (chain)\npicking this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "obtain v1 where e1_v1: \"psubst \\<rho>' e1 \\<longrightarrow>* v1\" and\n    n1_v1: \"bs_val (BNat n) v1\" and nz: \"n \\<noteq> 0\""], ["proof (prove)\nusing this:\n  FV e1 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v1.\n        \\<lbrakk>psubst \\<rho>' e1 \\<longrightarrow>* v1;\n         bs_val (BNat n) v1; n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v1.\n                \\<lbrakk>psubst \\<rho>' e1 \\<longrightarrow>* v1;\n                 bs_val (BNat n) v1\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     FV e1 \\<subseteq> fst ` set \\<rho>;\n     \\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n     \\<rho> \\<turnstile> e2 \\<Down> v2;\n     \\<And>\\<rho>'.\n        bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n        \\<exists>v.\n           psubst \\<rho>' e1 \\<longrightarrow>* v \\<and>\n           isval v \\<and> FV v = {} \\<and> bs_val (BNat n) v;\n     \\<And>\\<rho>'.\n        bs_env \\<rho> \\<rho>' \\<Longrightarrow>\n        \\<exists>v.\n           psubst \\<rho>' e2 \\<longrightarrow>* v \\<and>\n           isval v \\<and> FV v = {} \\<and> bs_val v2 v;\n     bs_env \\<rho> \\<rho>'; FV e2 \\<subseteq> fst ` set \\<rho>;\n     FV e3 \\<subseteq> fst ` set \\<rho>\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1\n  bs_val (BNat n) v1\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from n1_v1"], ["proof (chain)\npicking this:\n  bs_val (BNat n) v1", "have v1: \"v1 = ENat n\""], ["proof (prove)\nusing this:\n  bs_val (BNat n) v1\n\ngoal (1 subgoal):\n 1. v1 = ENat n", "by blast"], ["proof (state)\nthis:\n  v1 = ENat n\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from eval_if1"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "have \"FV e2 \\<subseteq> set (map fst \\<rho>)\""], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. FV e2 \\<subseteq> set (map fst \\<rho>)", "by auto"], ["proof (state)\nthis:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from this eval_if1"], ["proof (chain)\npicking this:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)", "obtain v2' where e2_v2: \"psubst \\<rho>' e2 \\<longrightarrow>* v2'\" and\n    v2_v2: \"bs_val v2 v2'\""], ["proof (prove)\nusing this:\n  FV e2 \\<subseteq> set (map fst \\<rho>)\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e1 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val (BNat n) v\n  \\<lbrakk>bs_env \\<rho> ?\\<rho>';\n   FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' e2 \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val v2 v\n  bs_env \\<rho> \\<rho>'\n  FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\n\ngoal (1 subgoal):\n 1. (\\<And>v2'.\n        \\<lbrakk>psubst \\<rho>' e2 \\<longrightarrow>* v2';\n         bs_val v2 v2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst \\<rho>' e2 \\<longrightarrow>* v2'\n  bs_val v2 v2'\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from e1_v1"], ["proof (chain)\npicking this:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1", "have 1: \"EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2) (psubst \\<rho>' e3) \n    \\<longrightarrow>* EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' e1 \\<longrightarrow>* v1\n\ngoal (1 subgoal):\n 1. EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n     (psubst \\<rho>' e3) \\<longrightarrow>*\n    EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)", "by (rule if_red_cong1)"], ["proof (state)\nthis:\n  EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n   (psubst \\<rho>' e3) \\<longrightarrow>*\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from v1 nz"], ["proof (chain)\npicking this:\n  v1 = ENat n\n  n \\<noteq> 0", "have 3: \"EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow> (psubst \\<rho>' e2)\""], ["proof (prove)\nusing this:\n  v1 = ENat n\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n    psubst \\<rho>' e2", "by auto"], ["proof (state)\nthis:\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n  psubst \\<rho>' e2\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 1 3"], ["proof (chain)\npicking this:\n  EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n   (psubst \\<rho>' e3) \\<longrightarrow>*\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n  psubst \\<rho>' e2", "have 5: \"psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e2\""], ["proof (prove)\nusing this:\n  EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n   (psubst \\<rho>' e3) \\<longrightarrow>*\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3)\n  EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n  psubst \\<rho>' e2\n\ngoal (1 subgoal):\n 1. psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e2\\<rbrakk>\n    \\<Longrightarrow> EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n                       (psubst \\<rho>' e3) \\<longrightarrow>*\n                      psubst \\<rho>' e2", "apply (rule multi_step_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e2\\<rbrakk>\n    \\<Longrightarrow> EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n                       (psubst \\<rho>' e3) \\<longrightarrow>*\n                      ?e2.2\n 2. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e2\\<rbrakk>\n    \\<Longrightarrow> ?e2.2 \\<longrightarrow>* psubst \\<rho>' e2", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EIf (psubst \\<rho>' e1) (psubst \\<rho>' e2)\n              (psubst \\<rho>' e3) \\<longrightarrow>*\n             EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3);\n     EIf v1 (psubst \\<rho>' e2) (psubst \\<rho>' e3) \\<longrightarrow>\n     psubst \\<rho>' e2\\<rbrakk>\n    \\<Longrightarrow> EIf v1 (psubst \\<rho>' e2)\n                       (psubst \\<rho>' e3) \\<longrightarrow>*\n                      psubst \\<rho>' e2", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e2\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 5 e2_v2"], ["proof (chain)\npicking this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e2\n  psubst \\<rho>' e2 \\<longrightarrow>* v2'", "have 6: \"psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v2'\""], ["proof (prove)\nusing this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* psubst \\<rho>' e2\n  psubst \\<rho>' e2 \\<longrightarrow>* v2'\n\ngoal (1 subgoal):\n 1. psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v2'", "by (rule multi_step_trans)"], ["proof (state)\nthis:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v2'\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> e1 n e2 v2 e3 \\<rho>'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e1 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e1 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val (BNat n) v;\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>\\<rho>'.\n           \\<lbrakk>bs_env \\<rho> \\<rho>';\n            FV e2 \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>v.\n                                psubst \\<rho>' e2 \\<longrightarrow>*\n                                v \\<and>\n                                is_val v \\<and> bs_val v2 v;\n        bs_env \\<rho> \\<rho>';\n        FV (EIf e1 e2 e3) \\<subseteq> set (map fst \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>*\n                            v \\<and>\n                            is_val v \\<and> bs_val v2 v", "from 6 v2_v2"], ["proof (chain)\npicking this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v2'\n  bs_val v2 v2'", "show ?case"], ["proof (prove)\nusing this:\n  psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v2'\n  bs_val v2 v2'\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v \\<and>\n       is_val v \\<and> bs_val v2 v", "by blast"], ["proof (state)\nthis:\n  \\<exists>v.\n     psubst \\<rho>' (EIf e1 e2 e3) \\<longrightarrow>* v \\<and>\n     is_val v \\<and> bs_val v2 v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma psubst_id: \"FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow> psubst \\<rho> e = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow> psubst \\<rho> e = e", "proof (induction e arbitrary: \\<rho>)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<rho>.\n       FV (EVar x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = EVar x\n 2. \\<And>x \\<rho>.\n       FV (ENat x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = ENat x\n 3. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 4. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 5. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 6. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "case (EVar x)"], ["proof (state)\nthis:\n  FV (EVar x) \\<inter> sdom \\<rho> = {}\n\ngoal (6 subgoals):\n 1. \\<And>x \\<rho>.\n       FV (EVar x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (EVar x) = EVar x\n 2. \\<And>x \\<rho>.\n       FV (ENat x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = ENat x\n 3. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 4. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 5. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 6. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "then"], ["proof (chain)\npicking this:\n  FV (EVar x) \\<inter> sdom \\<rho> = {}", "show ?case"], ["proof (prove)\nusing this:\n  FV (EVar x) \\<inter> sdom \\<rho> = {}\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (EVar x) = EVar x", "by (cases \"lookup \\<rho> x\") (auto simp: sdom_def)"], ["proof (state)\nthis:\n  psubst \\<rho> (EVar x) = EVar x\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       FV (ENat x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = ENat x\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       FV (ENat x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = ENat x\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "case (ENat x \\<rho>)"], ["proof (state)\nthis:\n  FV (ENat x) \\<inter> sdom \\<rho> = {}\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       FV (ENat x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = ENat x\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "from ENat"], ["proof (chain)\npicking this:\n  FV (ENat x) \\<inter> sdom \\<rho> = {}", "have \"sdom ((x,EVar x)#\\<rho>) = sdom \\<rho> - {x}\""], ["proof (prove)\nusing this:\n  FV (ENat x) \\<inter> sdom \\<rho> = {}\n\ngoal (1 subgoal):\n 1. sdom ((x, EVar x) # \\<rho>) = sdom \\<rho> - {x}", "by simp"], ["proof (state)\nthis:\n  sdom ((x, EVar x) # \\<rho>) = sdom \\<rho> - {x}\n\ngoal (5 subgoals):\n 1. \\<And>x \\<rho>.\n       FV (ENat x) \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n       psubst \\<rho> (ENat x) = ENat x\n 2. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 3. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 4. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 5. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "with ENat"], ["proof (chain)\npicking this:\n  FV (ENat x) \\<inter> sdom \\<rho> = {}\n  sdom ((x, EVar x) # \\<rho>) = sdom \\<rho> - {x}", "show ?case"], ["proof (prove)\nusing this:\n  FV (ENat x) \\<inter> sdom \\<rho> = {}\n  sdom ((x, EVar x) # \\<rho>) = sdom \\<rho> - {x}\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (ENat x) = ENat x", "by auto"], ["proof (state)\nthis:\n  psubst \\<rho> (ENat x) = ENat x\n\ngoal (4 subgoals):\n 1. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 2. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 3. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 4. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 2. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 3. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 4. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "case (ELam x e)"], ["proof (state)\nthis:\n  FV e \\<inter> sdom ?\\<rho> = {} \\<Longrightarrow> psubst ?\\<rho> e = e\n  FV (ELam x e) \\<inter> sdom \\<rho> = {}\n\ngoal (4 subgoals):\n 1. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 2. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 3. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 4. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "from ELam"], ["proof (chain)\npicking this:\n  FV e \\<inter> sdom ?\\<rho> = {} \\<Longrightarrow> psubst ?\\<rho> e = e\n  FV (ELam x e) \\<inter> sdom \\<rho> = {}", "have \"FV e \\<inter> sdom ((x,EVar x)#\\<rho>) = {}\""], ["proof (prove)\nusing this:\n  FV e \\<inter> sdom ?\\<rho> = {} \\<Longrightarrow> psubst ?\\<rho> e = e\n  FV (ELam x e) \\<inter> sdom \\<rho> = {}\n\ngoal (1 subgoal):\n 1. FV e \\<inter> sdom ((x, EVar x) # \\<rho>) = {}", "by auto"], ["proof (state)\nthis:\n  FV e \\<inter> sdom ((x, EVar x) # \\<rho>) = {}\n\ngoal (4 subgoals):\n 1. \\<And>x1a e \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e = e;\n        FV (ELam x1a e) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (ELam x1a e) = ELam x1a e\n 2. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 3. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 4. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "with ELam"], ["proof (chain)\npicking this:\n  FV e \\<inter> sdom ?\\<rho> = {} \\<Longrightarrow> psubst ?\\<rho> e = e\n  FV (ELam x e) \\<inter> sdom \\<rho> = {}\n  FV e \\<inter> sdom ((x, EVar x) # \\<rho>) = {}", "show ?case"], ["proof (prove)\nusing this:\n  FV e \\<inter> sdom ?\\<rho> = {} \\<Longrightarrow> psubst ?\\<rho> e = e\n  FV (ELam x e) \\<inter> sdom \\<rho> = {}\n  FV e \\<inter> sdom ((x, EVar x) # \\<rho>) = {}\n\ngoal (1 subgoal):\n 1. psubst \\<rho> (ELam x e) = ELam x e", "by auto"], ["proof (state)\nthis:\n  psubst \\<rho> (ELam x e) = ELam x e\n\ngoal (3 subgoals):\n 1. \\<And>e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EApp e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EApp e1 e2) = EApp e1 e2\n 2. \\<And>x1a e1 e2 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        FV (EPrim x1a e1 e2) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EPrim x1a e1 e2) = EPrim x1a e1 e2\n 3. \\<And>e1 e2 e3 \\<rho>.\n       \\<lbrakk>\\<And>\\<rho>.\n                   FV e1 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n                   psubst \\<rho> e1 = e1;\n        \\<And>\\<rho>.\n           FV e2 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e2 = e2;\n        \\<And>\\<rho>.\n           FV e3 \\<inter> sdom \\<rho> = {} \\<Longrightarrow>\n           psubst \\<rho> e3 = e3;\n        FV (EIf e1 e2 e3) \\<inter> sdom \\<rho> = {}\\<rbrakk>\n       \\<Longrightarrow> psubst \\<rho> (EIf e1 e2 e3) = EIf e1 e2 e3", "qed fastforce+"], ["", "fun bs_observe :: \"bval \\<Rightarrow> obs \\<Rightarrow> bool\" where\n  \"bs_observe (BNat n) (ONat n') = (n = n')\" |\n  \"bs_observe (BClos x e \\<rho>) OFun = True\" |\n  \"bs_observe e ob = False\""], ["", "theorem sound_wrt_small_step:\n  assumes e_v: \"[] \\<turnstile> e \\<Down> v\" and fv_e: \"FV e = {}\"\n  shows \"\\<exists> v' ob. e \\<longrightarrow>* v' \\<and> isval v' \\<and> observe v' ob\n    \\<and> bs_observe v ob\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "have 1: \"bs_env [] []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bs_env [] []", "by blast"], ["proof (state)\nthis:\n  bs_env [] []\n\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "from fv_e"], ["proof (chain)\npicking this:\n  FV e = {}", "have 2: \"FV e \\<subseteq> set (map fst [])\""], ["proof (prove)\nusing this:\n  FV e = {}\n\ngoal (1 subgoal):\n 1. FV e \\<subseteq> set (map fst [])", "by simp"], ["proof (state)\nthis:\n  FV e \\<subseteq> set (map fst [])\n\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "from e_v 1 2 big_small_step"], ["proof (chain)\npicking this:\n  [] \\<turnstile> e \\<Down> v\n  bs_env [] []\n  FV e \\<subseteq> set (map fst [])\n  \\<lbrakk>?\\<rho> \\<turnstile> ?e \\<Down> ?w; bs_env ?\\<rho> ?\\<rho>';\n   FV ?e \\<subseteq> set (map fst ?\\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' ?e \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val ?w v", "obtain v' where 3: \"psubst [] e \\<longrightarrow>* v'\" and 4: \"is_val v'\" and \n    5: \"bs_val v v'\""], ["proof (prove)\nusing this:\n  [] \\<turnstile> e \\<Down> v\n  bs_env [] []\n  FV e \\<subseteq> set (map fst [])\n  \\<lbrakk>?\\<rho> \\<turnstile> ?e \\<Down> ?w; bs_env ?\\<rho> ?\\<rho>';\n   FV ?e \\<subseteq> set (map fst ?\\<rho>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       psubst ?\\<rho>' ?e \\<longrightarrow>* v \\<and>\n                       is_val v \\<and> bs_val ?w v\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>psubst [] e \\<longrightarrow>* v'; is_val v';\n         bs_val v v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  psubst [] e \\<longrightarrow>* v'\n  is_val v'\n  bs_val v v'\n\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "have \"psubst [] e = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst [] e = e", "using psubst_id sdom_def"], ["proof (prove)\nusing this:\n  FV ?e \\<inter> sdom ?\\<rho> = {} \\<Longrightarrow> psubst ?\\<rho> ?e = ?e\n  sdom ?\\<rho> \\<equiv>\n  {x. \\<exists>v. lookup ?\\<rho> x = Some v \\<and> v \\<noteq> EVar x}\n\ngoal (1 subgoal):\n 1. psubst [] e = e", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  psubst [] e = e\n\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "from this 3 4 5"], ["proof (chain)\npicking this:\n  psubst [] e = e\n  psubst [] e \\<longrightarrow>* v'\n  is_val v'\n  bs_val v v'", "show ?thesis"], ["proof (prove)\nusing this:\n  psubst [] e = e\n  psubst [] e \\<longrightarrow>* v'\n  is_val v'\n  bs_val v v'\n\ngoal (1 subgoal):\n 1. \\<exists>v' ob.\n       e \\<longrightarrow>* v' \\<and>\n       isval v' \\<and> observe v' ob \\<and> bs_observe v ob", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>psubst [] e = e; psubst [] e \\<longrightarrow>* v'; is_val v';\n     bs_val v v'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         e \\<longrightarrow>* v' \\<and>\n                         isval v' \\<and>\n                         observe v' ob \\<and> bs_observe v ob", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n     isval v' \\<and> FV v' = {}; bs_val v v'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply (case_tac v)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v'; v = BNat x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val (BNat x1) v';\n        v = BNat x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob.\n                            observe v' ob \\<and> bs_observe (BNat x1) ob\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* ENat x1; v = BNat x1;\n        v' = ENat x1; isval (ENat x1); FV (ENat x1) = {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob.\n                            observe (ENat x1) ob \\<and>\n                            bs_observe (BNat x1) ob\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* ENat x1; v = BNat x1;\n        v' = ENat x1; isval (ENat x1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob.\n                            observe (ENat x1) ob \\<and>\n                            bs_observe (BNat x1) ob\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply (rename_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* ENat n; v = BNat n;\n        v' = ENat n; isval (ENat n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob.\n                            observe (ENat n) ob \\<and>\n                            bs_observe (BNat n) ob\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply (rule_tac x=\"ONat n\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* ENat n; v = BNat n;\n        v' = ENat n; isval (ENat n)\\<rbrakk>\n       \\<Longrightarrow> observe (ENat n) (ONat n) \\<and>\n                         bs_observe (BNat n) (ONat n)\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ob. observe v' ob \\<and> bs_observe v ob", "apply (rule_tac x=OFun in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>psubst [] e = e; e \\<longrightarrow>* v';\n        isval v' \\<and> FV v' = {}; bs_val v v';\n        v = BClos x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> observe v' OFun \\<and> bs_observe v OFun", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>v' ob.\n     e \\<longrightarrow>* v' \\<and>\n     isval v' \\<and> observe v' ob \\<and> bs_observe v ob\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Big-step semantics is deterministic\""], ["", "theorem big_step_fun:\n  assumes ev: \"\\<rho> \\<turnstile> e \\<Down> v\" and evp: \"\\<rho> \\<turnstile> e \\<Down> v'\" shows \"v = v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = v'", "using ev evp"], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e \\<Down> v\n  \\<rho> \\<turnstile> e \\<Down> v'\n\ngoal (1 subgoal):\n 1. v = v'", "proof (induction arbitrary: v')"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow>\n           BClos x e \\<rho>' = v';\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> arg = v';\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>v'.\n           (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v' \\<Longrightarrow>\n           v = v';\n        \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 6. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 7. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "case (eval_app \\<rho> e1 x e \\<rho>' e2 arg v)"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>'\n  \\<rho> \\<turnstile> e2 \\<Down> arg\n  (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow>\n  BClos x e \\<rho>' = ?v'\n  \\<rho> \\<turnstile> e2 \\<Down> ?v' \\<Longrightarrow> arg = ?v'\n  (x, arg) # \\<rho>' \\<turnstile> e \\<Down> ?v' \\<Longrightarrow> v = ?v'\n  \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\n\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow>\n           BClos x e \\<rho>' = v';\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> arg = v';\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>v'.\n           (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v' \\<Longrightarrow>\n           v = v';\n        \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 6. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 7. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "from eval_app(7)"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'", "obtain x' e' \\<rho>'' arg' where e1_cl: \"\\<rho> \\<turnstile> e1 \\<Down> BClos x' e' \\<rho>''\" and\n    e2_argp: \"\\<rho> \\<turnstile> e2 \\<Down> arg'\" and e_vp: \"(x', arg') # \\<rho>'' \\<turnstile> e' \\<Down> v'\""], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\n\ngoal (1 subgoal):\n 1. (\\<And>x' e' \\<rho>'' arg'.\n        \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x' e' \\<rho>'';\n         \\<rho> \\<turnstile> e2 \\<Down> arg';\n         (x', arg') # \\<rho>'' \\<turnstile> e' \\<Down> v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BClos x' e' \\<rho>''\n  \\<rho> \\<turnstile> e2 \\<Down> arg'\n  (x', arg') # \\<rho>'' \\<turnstile> e' \\<Down> v'\n\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow>\n           BClos x e \\<rho>' = v';\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> arg = v';\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>v'.\n           (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v' \\<Longrightarrow>\n           v = v';\n        \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 6. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 7. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "from eval_app(4) e1_cl"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow>\n  BClos x e \\<rho>' = ?v'\n  \\<rho> \\<turnstile> e1 \\<Down> BClos x' e' \\<rho>''", "have 1: \"BClos x e \\<rho>' = BClos x' e' \\<rho>''\""], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow>\n  BClos x e \\<rho>' = ?v'\n  \\<rho> \\<turnstile> e1 \\<Down> BClos x' e' \\<rho>''\n\ngoal (1 subgoal):\n 1. BClos x e \\<rho>' = BClos x' e' \\<rho>''", "by simp"], ["proof (state)\nthis:\n  BClos x e \\<rho>' = BClos x' e' \\<rho>''\n\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow>\n           BClos x e \\<rho>' = v';\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> arg = v';\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>v'.\n           (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v' \\<Longrightarrow>\n           v = v';\n        \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 6. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 7. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "from eval_app(5) e2_argp"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e2 \\<Down> ?v' \\<Longrightarrow> arg = ?v'\n  \\<rho> \\<turnstile> e2 \\<Down> arg'", "have 2: \"arg = arg'\""], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e2 \\<Down> ?v' \\<Longrightarrow> arg = ?v'\n  \\<rho> \\<turnstile> e2 \\<Down> arg'\n\ngoal (1 subgoal):\n 1. arg = arg'", "by simp"], ["proof (state)\nthis:\n  arg = arg'\n\ngoal (7 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 x e \\<rho>' e2 arg v v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BClos x e \\<rho>';\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow>\n           BClos x e \\<rho>' = v';\n        \\<rho> \\<turnstile> e2 \\<Down> arg;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> arg = v';\n        (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v;\n        \\<And>v'.\n           (x, arg) # \\<rho>' \\<turnstile> e \\<Down> v' \\<Longrightarrow>\n           v = v';\n        \\<rho> \\<turnstile> EApp e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 5. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 6. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 7. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "from eval_app(6) e_vp 1 2"], ["proof (chain)\npicking this:\n  (x, arg) # \\<rho>' \\<turnstile> e \\<Down> ?v' \\<Longrightarrow> v = ?v'\n  (x', arg') # \\<rho>'' \\<turnstile> e' \\<Down> v'\n  BClos x e \\<rho>' = BClos x' e' \\<rho>''\n  arg = arg'", "show ?case"], ["proof (prove)\nusing this:\n  (x, arg) # \\<rho>' \\<turnstile> e \\<Down> ?v' \\<Longrightarrow> v = ?v'\n  (x', arg') # \\<rho>'' \\<turnstile> e' \\<Down> v'\n  BClos x e \\<rho>' = BClos x' e' \\<rho>''\n  arg = arg'\n\ngoal (1 subgoal):\n 1. v = v'", "by simp"], ["proof (state)\nthis:\n  v = v'\n\ngoal (6 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 5. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 6. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 5. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 6. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "case (eval_if0 \\<rho> e1 e3 v3 e2)"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat 0\n  \\<rho> \\<turnstile> e3 \\<Down> v3\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow> BNat 0 = ?v'\n  \\<rho> \\<turnstile> e3 \\<Down> ?v' \\<Longrightarrow> v3 = ?v'\n  \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\n\ngoal (6 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 5. \\<And>\\<rho> e1 e3 v3 e2 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat 0 = v';\n        \\<rho> \\<turnstile> e3 \\<Down> v3;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e3 \\<Down> v' \\<Longrightarrow> v3 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'\n 6. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "from eval_if0(5)"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'", "show ?case"], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\n\ngoal (1 subgoal):\n 1. v3 = v'", "proof (rule eval_if_inv)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n     \\<rho> \\<turnstile> e3 \\<Down> v'\\<rbrakk>\n    \\<Longrightarrow> v3 = v'\n 2. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "assume \"\\<rho> \\<turnstile> e3 \\<Down> v'\""], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e3 \\<Down> v'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat 0;\n     \\<rho> \\<turnstile> e3 \\<Down> v'\\<rbrakk>\n    \\<Longrightarrow> v3 = v'\n 2. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "with eval_if0(4)"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e3 \\<Down> ?v' \\<Longrightarrow> v3 = ?v'\n  \\<rho> \\<turnstile> e3 \\<Down> v'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e3 \\<Down> ?v' \\<Longrightarrow> v3 = ?v'\n  \\<rho> \\<turnstile> e3 \\<Down> v'\n\ngoal (1 subgoal):\n 1. v3 = v'", "by simp"], ["proof (state)\nthis:\n  v3 = v'\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "assume \"\\<rho> \\<turnstile> e1 \\<Down> BNat n\" and nz: \"n > 0\""], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "with eval_if0(3)"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow> BNat 0 = ?v'\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  0 < n", "have \"False\""], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow> BNat 0 = ?v'\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  0 < n\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n; 0 < n;\n        \\<rho> \\<turnstile> e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v3 = v'", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. v3 = v'", ".."], ["proof (state)\nthis:\n  v3 = v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v3 = v'\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 5. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 5. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "case (eval_if1 \\<rho> e1 n e2 v2 e3)"], ["proof (state)\nthis:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow> BNat n = ?v'\n  \\<rho> \\<turnstile> e2 \\<Down> ?v' \\<Longrightarrow> v2 = ?v'\n  \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\n\ngoal (5 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'\n 5. \\<And>\\<rho> e1 n e2 v2 e3 v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n = v';\n        n \\<noteq> 0; \\<rho> \\<turnstile> e2 \\<Down> v2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> v2 = v';\n        \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v2 = v'", "then"], ["proof (chain)\npicking this:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow> BNat n = ?v'\n  \\<rho> \\<turnstile> e2 \\<Down> ?v' \\<Longrightarrow> v2 = ?v'\n  \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'", "show ?case"], ["proof (prove)\nusing this:\n  \\<rho> \\<turnstile> e1 \\<Down> BNat n\n  n \\<noteq> 0\n  \\<rho> \\<turnstile> e2 \\<Down> v2\n  \\<rho> \\<turnstile> e1 \\<Down> ?v' \\<Longrightarrow> BNat n = ?v'\n  \\<rho> \\<turnstile> e2 \\<Down> ?v' \\<Longrightarrow> v2 = ?v'\n  \\<rho> \\<turnstile> EIf e1 e2 e3 \\<Down> v'\n\ngoal (1 subgoal):\n 1. v2 = v'", "by blast"], ["proof (state)\nthis:\n  v2 = v'\n\ngoal (4 subgoals):\n 1. \\<And>\\<rho> n v'.\n       \\<rho> \\<turnstile> ENat n \\<Down> v' \\<Longrightarrow> BNat n = v'\n 2. \\<And>\\<rho> x v v'.\n       \\<lbrakk>lookup \\<rho> x = Some v;\n        \\<rho> \\<turnstile> EVar x \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> v = v'\n 3. \\<And>\\<rho> x e v'.\n       \\<rho> \\<turnstile> ELam x e \\<Down> v' \\<Longrightarrow>\n       BClos x e \\<rho> = v'\n 4. \\<And>\\<rho> e1 n1 e2 n2 n3 f v'.\n       \\<lbrakk>\\<rho> \\<turnstile> e1 \\<Down> BNat n1;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e1 \\<Down> v' \\<Longrightarrow> BNat n1 = v';\n        \\<rho> \\<turnstile> e2 \\<Down> BNat n2;\n        \\<And>v'.\n           \\<rho> \\<turnstile> e2 \\<Down> v' \\<Longrightarrow> BNat n2 = v';\n        n3 = f n1 n2; \\<rho> \\<turnstile> EPrim f e1 e2 \\<Down> v'\\<rbrakk>\n       \\<Longrightarrow> BNat n3 = v'", "qed fastforce+"], ["", "end"]]}