{"file_name": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL/SystemF.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Decl_Sem_Fun_PL", "problem_names": ["lemma wfenv_good_ctx: \"\\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow> good_ctx \\<Gamma>\"", "lemma nth_append1[simp]: \"n < length \\<rho>1 \\<Longrightarrow> (\\<rho>1@\\<rho>2)!n = \\<rho>1!n\"", "lemma nth_append2[simp]: \"n \\<ge> length \\<rho>1 \\<Longrightarrow> (\\<rho>1@\\<rho>2)!n = \\<rho>2!(n - length \\<rho>1)\"", "lemma shift_append_preserves_T_aux: \n  shows \"T \\<tau> (\\<rho>1@\\<rho>3) = T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>) (\\<rho>1@\\<rho>2@\\<rho>3)\"", "lemma shift_append_preserves_T: shows \"T \\<tau> \\<rho>3 = T (shift (length \\<rho>2) 0 \\<tau>) (\\<rho>2@\\<rho>3)\"", "lemma drop_shift_preserves_T: \n  assumes k: \"k \\<le> length \\<rho>\" shows \"T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>\"", "lemma shift_cons_preserves_T: shows \"T \\<tau> \\<rho> = T (shift (Suc 0) 0 \\<tau>) (b#\\<rho>)\"", "lemma compose_shift: shows \"shift (j+k) c \\<tau> = shift j c (shift k c \\<tau>)\"", "lemma shift_zero_id[simp]: \"shift 0 c \\<tau> = \\<tau>\"", "lemma lookup_wfenv: assumes r_g: \"\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\" and ln: \"lookup \\<Gamma> n = Some \\<tau>\"\n  shows \"\\<exists> v. \\<rho>!n = v \\<and> v \\<in> T \\<tau> \\<eta>\"", "lemma less_wrong[elim!]: \"\\<lbrakk> v \\<sqsubseteq> Wrong; v = Wrong \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma less_nat[elim!]: \"\\<lbrakk> v \\<sqsubseteq> VNat n; v = VNat n \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma less_fun[elim!]: \"\\<lbrakk> v \\<sqsubseteq> Fun f; \\<And> f'. \\<lbrakk> v = Fun f'; fset f' \\<subseteq> fset f \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma less_refl[simp]: \"v \\<sqsubseteq> v\"", "lemma less_trans: fixes v1::val and v2::val and v3::val\n  shows \"\\<lbrakk> v1 \\<sqsubseteq> v2; v2 \\<sqsubseteq> v3 \\<rbrakk> \\<Longrightarrow> v1 \\<sqsubseteq> v3\"", "lemma T_down_closed: assumes vt: \"v \\<in> T \\<tau> \\<eta>\" and vp_v: \"v' \\<sqsubseteq> v\"\n  shows \"v' \\<in> T \\<tau> \\<eta>\"", "lemma wrong_not_in_T: \"Wrong \\<notin> T \\<tau> \\<eta>\"", "lemma fun_app: assumes vmn: \"V \\<subseteq> T (m \\<rightarrow> n) \\<eta>\" and v2s: \"V' \\<subseteq> T m \\<eta>\" \n  shows \"apply_fun V V' \\<subseteq> T n \\<eta>\"", "lemma T_eta: \"{v. \\<exists>v'. v' \\<in> T \\<sigma> (\\<eta>) \\<and> v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong} = T \\<sigma> \\<eta>\"", "lemma compositionality: \"T \\<tau> (\\<eta>1 @ (T \\<sigma> (\\<eta>1@\\<eta>2)) # \\<eta>2) = T (subst (length \\<eta>1) \\<sigma> \\<tau>) (\\<eta>1@\\<eta>2)\"", "lemma iterate_sound:\n  assumes it: \"iterate Ee \\<rho> v\" \n    and IH: \"\\<forall> v. v \\<in> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta> \\<longrightarrow> Ee (v#\\<rho>) \\<subseteq> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\"\n  shows \"v \\<in> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\"", "theorem welltyped_dont_go_wrong:\n  assumes wte: \"\\<Gamma> \\<turnstile> e : \\<tau>\" and wfr: \"\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\"\n  shows \"E e \\<rho> \\<subseteq> T \\<tau> \\<eta>\""], "translations": [["", "lemma wfenv_good_ctx: \"\\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow> good_ctx \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n    good_ctx \\<Gamma>", "proof (induction rule: wfenv.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. good_ctx ([], 0)\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>; good_ctx \\<Gamma>;\n        v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_ty \\<tau> \\<Gamma>)\n 3. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "case wfnil"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. good_ctx ([], 0)\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>; good_ctx \\<Gamma>;\n        v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_ty \\<tau> \\<Gamma>)\n 3. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. good_ctx ([], 0)", "by (force simp: good_ctx_def)"], ["proof (state)\nthis:\n  good_ctx ([], 0)\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>; good_ctx \\<Gamma>;\n        v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_ty \\<tau> \\<Gamma>)\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>; good_ctx \\<Gamma>;\n        v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_ty \\<tau> \\<Gamma>)\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "case (wfvbind \\<rho> \\<eta> \\<Gamma> v \\<tau>)"], ["proof (state)\nthis:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v \\<in> T \\<tau> \\<eta>\n  good_ctx \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>; good_ctx \\<Gamma>;\n        v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_ty \\<tau> \\<Gamma>)\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v \\<in> T \\<tau> \\<eta>\n  good_ctx \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v \\<in> T \\<tau> \\<eta>\n  good_ctx \\<Gamma>\n\ngoal (1 subgoal):\n 1. good_ctx (push_ty \\<tau> \\<Gamma>)", "apply (simp add: good_ctx_def push_ty_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>; v \\<in> T \\<tau> \\<eta>;\n     \\<forall>n<length (fst \\<Gamma>).\n        snd (fst \\<Gamma> ! n) \\<le> snd \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n<Suc (length (fst \\<Gamma>)).\n                         snd (((\\<tau>, snd \\<Gamma>) # fst \\<Gamma>) ! n)\n                         \\<le> snd \\<Gamma>", "apply (cases \\<Gamma>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        v \\<in> T \\<tau> \\<eta>;\n        \\<forall>n<length (fst \\<Gamma>).\n           snd (fst \\<Gamma> ! n) \\<le> snd \\<Gamma>;\n        \\<Gamma> = (a, b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n<Suc (length (fst \\<Gamma>)).\n                            snd (((\\<tau>, snd \\<Gamma>) # fst \\<Gamma>) !\n                                 n)\n                            \\<le> snd \\<Gamma>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        v \\<in> T \\<tau> \\<eta>; \\<forall>n<length a. snd (a ! n) \\<le> b;\n        \\<Gamma> = (a, b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n<Suc (length a).\n                            snd (((\\<tau>, b) # a) ! n) \\<le> b", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        v \\<in> T \\<tau> \\<eta>; \\<forall>n<length a. snd (a ! n) \\<le> b;\n        \\<Gamma> = (a, b); n < Suc (length a)\\<rbrakk>\n       \\<Longrightarrow> snd (((\\<tau>, b) # a) ! n) \\<le> b", "apply (rename_tac n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        v \\<in> T \\<tau> \\<eta>; \\<forall>n<length a. snd (a ! n) \\<le> b;\n        \\<Gamma> = (a, b); n < Suc (length a)\\<rbrakk>\n       \\<Longrightarrow> snd (((\\<tau>, b) # a) ! n) \\<le> b", "apply (case_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        v \\<in> T \\<tau> \\<eta>; \\<forall>n<length a. snd (a ! n) \\<le> b;\n        \\<Gamma> = (a, b); n < Suc (length a); n = 0\\<rbrakk>\n       \\<Longrightarrow> snd (((\\<tau>, b) # a) ! n) \\<le> b\n 2. \\<And>a b n nat.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        v \\<in> T \\<tau> \\<eta>; \\<forall>n<length a. snd (a ! n) \\<le> b;\n        \\<Gamma> = (a, b); n < Suc (length a); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> snd (((\\<tau>, b) # a) ! n) \\<le> b", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n nat.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        v \\<in> T \\<tau> \\<eta>; \\<forall>n<length a. snd (a ! n) \\<le> b;\n        \\<Gamma> = (a, b); n < Suc (length a); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> snd (((\\<tau>, b) # a) ! n) \\<le> b", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  good_ctx (push_ty \\<tau> \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "case (wftbind \\<rho> \\<eta> \\<Gamma> V)"], ["proof (state)\nthis:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  good_ctx \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        good_ctx \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> good_ctx (push_tyvar \\<Gamma>)", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  good_ctx \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  good_ctx \\<Gamma>\n\ngoal (1 subgoal):\n 1. good_ctx (push_tyvar \\<Gamma>)", "apply (simp add: good_ctx_def push_tyvar_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n     \\<forall>n<length (fst \\<Gamma>).\n        snd (fst \\<Gamma> ! n) \\<le> snd \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n<length (fst \\<Gamma>).\n                         snd (fst \\<Gamma> ! n) \\<le> Suc (snd \\<Gamma>)", "apply (cases \\<Gamma>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<forall>n<length (fst \\<Gamma>).\n           snd (fst \\<Gamma> ! n) \\<le> snd \\<Gamma>;\n        \\<Gamma> = (a, b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n<length (fst \\<Gamma>).\n                            snd (fst \\<Gamma> ! n) \\<le> Suc (snd \\<Gamma>)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        \\<forall>n<length a. snd (a ! n) \\<le> b; \\<Gamma> = (a, b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n<length a. snd (a ! n) \\<le> Suc b", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        \\<forall>n<length a. snd (a ! n) \\<le> b; \\<Gamma> = (a, b);\n        n < length a\\<rbrakk>\n       \\<Longrightarrow> snd (a ! n) \\<le> Suc b", "apply (rename_tac n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b n.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        \\<forall>n<length a. snd (a ! n) \\<le> b; \\<Gamma> = (a, b);\n        n < length a\\<rbrakk>\n       \\<Longrightarrow> snd (a ! n) \\<le> Suc b", "apply (case_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b n.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        \\<forall>n<length a. snd (a ! n) \\<le> b; \\<Gamma> = (a, b);\n        n < length a; n = 0\\<rbrakk>\n       \\<Longrightarrow> snd (a ! n) \\<le> Suc b\n 2. \\<And>a b n nat.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : (a, b);\n        \\<forall>n<length a. snd (a ! n) \\<le> b; \\<Gamma> = (a, b);\n        n < length a; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> snd (a ! n) \\<le> Suc b", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  good_ctx (push_tyvar \\<Gamma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Well-typed Programs don't go wrong\""], ["", "lemma nth_append1[simp]: \"n < length \\<rho>1 \\<Longrightarrow> (\\<rho>1@\\<rho>2)!n = \\<rho>1!n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < length \\<rho>1 \\<Longrightarrow>\n    (\\<rho>1 @ \\<rho>2) ! n = \\<rho>1 ! n", "proof (induction \\<rho>1 arbitrary: \\<rho>2 n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho>2 n.\n       n < length [] \\<Longrightarrow> ([] @ \\<rho>2) ! n = [] ! n\n 2. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   n < length \\<rho>1 \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>1 ! n;\n        n < length (a # \\<rho>1)\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n", "case Nil"], ["proof (state)\nthis:\n  n < length []\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho>2 n.\n       n < length [] \\<Longrightarrow> ([] @ \\<rho>2) ! n = [] ! n\n 2. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   n < length \\<rho>1 \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>1 ! n;\n        n < length (a # \\<rho>1)\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n", "then"], ["proof (chain)\npicking this:\n  n < length []", "show ?case"], ["proof (prove)\nusing this:\n  n < length []\n\ngoal (1 subgoal):\n 1. ([] @ \\<rho>2) ! n = [] ! n", "by auto"], ["proof (state)\nthis:\n  ([] @ \\<rho>2) ! n = [] ! n\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   n < length \\<rho>1 \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>1 ! n;\n        n < length (a # \\<rho>1)\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   n < length \\<rho>1 \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>1 ! n;\n        n < length (a # \\<rho>1)\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n", "case (Cons a \\<rho>1)"], ["proof (state)\nthis:\n  ?n < length \\<rho>1 \\<Longrightarrow>\n  (\\<rho>1 @ ?\\<rho>2.0) ! ?n = \\<rho>1 ! ?n\n  n < length (a # \\<rho>1)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   n < length \\<rho>1 \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>1 ! n;\n        n < length (a # \\<rho>1)\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n", "then"], ["proof (chain)\npicking this:\n  ?n < length \\<rho>1 \\<Longrightarrow>\n  (\\<rho>1 @ ?\\<rho>2.0) ! ?n = \\<rho>1 ! ?n\n  n < length (a # \\<rho>1)", "show ?case"], ["proof (prove)\nusing this:\n  ?n < length \\<rho>1 \\<Longrightarrow>\n  (\\<rho>1 @ ?\\<rho>2.0) ! ?n = \\<rho>1 ! ?n\n  n < length (a # \\<rho>1)\n\ngoal (1 subgoal):\n 1. ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n", "by (cases n) auto"], ["proof (state)\nthis:\n  ((a # \\<rho>1) @ \\<rho>2) ! n = (a # \\<rho>1) ! n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_append2[simp]: \"n \\<ge> length \\<rho>1 \\<Longrightarrow> (\\<rho>1@\\<rho>2)!n = \\<rho>2!(n - length \\<rho>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length \\<rho>1 \\<le> n \\<Longrightarrow>\n    (\\<rho>1 @ \\<rho>2) ! n = \\<rho>2 ! (n - length \\<rho>1)", "proof (induction \\<rho>1 arbitrary: \\<rho>2 n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho>2 n.\n       length [] \\<le> n \\<Longrightarrow>\n       ([] @ \\<rho>2) ! n = \\<rho>2 ! (n - length [])\n 2. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   length \\<rho>1 \\<le> n \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>2 ! (n - length \\<rho>1);\n        length (a # \\<rho>1) \\<le> n\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n =\n                         \\<rho>2 ! (n - length (a # \\<rho>1))", "case Nil"], ["proof (state)\nthis:\n  length [] \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho>2 n.\n       length [] \\<le> n \\<Longrightarrow>\n       ([] @ \\<rho>2) ! n = \\<rho>2 ! (n - length [])\n 2. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   length \\<rho>1 \\<le> n \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>2 ! (n - length \\<rho>1);\n        length (a # \\<rho>1) \\<le> n\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n =\n                         \\<rho>2 ! (n - length (a # \\<rho>1))", "then"], ["proof (chain)\npicking this:\n  length [] \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  length [] \\<le> n\n\ngoal (1 subgoal):\n 1. ([] @ \\<rho>2) ! n = \\<rho>2 ! (n - length [])", "by auto"], ["proof (state)\nthis:\n  ([] @ \\<rho>2) ! n = \\<rho>2 ! (n - length [])\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   length \\<rho>1 \\<le> n \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>2 ! (n - length \\<rho>1);\n        length (a # \\<rho>1) \\<le> n\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n =\n                         \\<rho>2 ! (n - length (a # \\<rho>1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   length \\<rho>1 \\<le> n \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>2 ! (n - length \\<rho>1);\n        length (a # \\<rho>1) \\<le> n\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n =\n                         \\<rho>2 ! (n - length (a # \\<rho>1))", "case (Cons a \\<rho>1)"], ["proof (state)\nthis:\n  length \\<rho>1 \\<le> ?n \\<Longrightarrow>\n  (\\<rho>1 @ ?\\<rho>2.0) ! ?n = ?\\<rho>2.0 ! (?n - length \\<rho>1)\n  length (a # \\<rho>1) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a \\<rho>1 \\<rho>2 n.\n       \\<lbrakk>\\<And>\\<rho>2 n.\n                   length \\<rho>1 \\<le> n \\<Longrightarrow>\n                   (\\<rho>1 @ \\<rho>2) ! n = \\<rho>2 ! (n - length \\<rho>1);\n        length (a # \\<rho>1) \\<le> n\\<rbrakk>\n       \\<Longrightarrow> ((a # \\<rho>1) @ \\<rho>2) ! n =\n                         \\<rho>2 ! (n - length (a # \\<rho>1))", "then"], ["proof (chain)\npicking this:\n  length \\<rho>1 \\<le> ?n \\<Longrightarrow>\n  (\\<rho>1 @ ?\\<rho>2.0) ! ?n = ?\\<rho>2.0 ! (?n - length \\<rho>1)\n  length (a # \\<rho>1) \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  length \\<rho>1 \\<le> ?n \\<Longrightarrow>\n  (\\<rho>1 @ ?\\<rho>2.0) ! ?n = ?\\<rho>2.0 ! (?n - length \\<rho>1)\n  length (a # \\<rho>1) \\<le> n\n\ngoal (1 subgoal):\n 1. ((a # \\<rho>1) @ \\<rho>2) ! n = \\<rho>2 ! (n - length (a # \\<rho>1))", "by (cases n) auto"], ["proof (state)\nthis:\n  ((a # \\<rho>1) @ \\<rho>2) ! n = \\<rho>2 ! (n - length (a # \\<rho>1))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma shift_append_preserves_T_aux: \n  shows \"T \\<tau> (\\<rho>1@\\<rho>3) = T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>) (\\<rho>1@\\<rho>2@\\<rho>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<tau> (\\<rho>1 @ \\<rho>3) =\n    T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n     (\\<rho>1 @ \\<rho>2 @ \\<rho>3)", "proof (induction \\<tau> arbitrary: \\<rho>1 \\<rho>2 \\<rho>3)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<rho>1 \\<rho>2 \\<rho>3.\n       T (TVar x) (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) (TVar x))\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n       T TNat (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) TNat)\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 3. \\<And>\\<tau>1 \\<tau>2 \\<rho>1 \\<rho>2 \\<rho>3.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n                   T \\<tau>1 (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>1)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n           T \\<tau>2 (\\<rho>1 @ \\<rho>3) =\n           T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>2)\n            (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<rho>1 @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length \\<rho>1)\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 4. \\<And>\\<tau> \\<rho>1 \\<rho>2 \\<rho>3.\n       (\\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n           T \\<tau> (\\<rho>1 @ \\<rho>3) =\n           T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n            (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n       T (Forall \\<tau>) (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) (Forall \\<tau>))\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)", "case (Forall \\<tau>)"], ["proof (state)\nthis:\n  T \\<tau> (?\\<rho>1.0 @ ?\\<rho>3.0) =\n  T (shift (length ?\\<rho>2.0) (length ?\\<rho>1.0) \\<tau>)\n   (?\\<rho>1.0 @ ?\\<rho>2.0 @ ?\\<rho>3.0)\n\ngoal (4 subgoals):\n 1. \\<And>x \\<rho>1 \\<rho>2 \\<rho>3.\n       T (TVar x) (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) (TVar x))\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n       T TNat (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) TNat)\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 3. \\<And>\\<tau>1 \\<tau>2 \\<rho>1 \\<rho>2 \\<rho>3.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n                   T \\<tau>1 (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>1)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n           T \\<tau>2 (\\<rho>1 @ \\<rho>3) =\n           T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>2)\n            (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<rho>1 @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length \\<rho>1)\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 4. \\<And>\\<tau> \\<rho>1 \\<rho>2 \\<rho>3.\n       (\\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n           T \\<tau> (\\<rho>1 @ \\<rho>3) =\n           T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n            (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n       T (Forall \\<tau>) (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) (Forall \\<tau>))\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)", "then"], ["proof (chain)\npicking this:\n  T \\<tau> (?\\<rho>1.0 @ ?\\<rho>3.0) =\n  T (shift (length ?\\<rho>2.0) (length ?\\<rho>1.0) \\<tau>)\n   (?\\<rho>1.0 @ ?\\<rho>2.0 @ ?\\<rho>3.0)", "show ?case"], ["proof (prove)\nusing this:\n  T \\<tau> (?\\<rho>1.0 @ ?\\<rho>3.0) =\n  T (shift (length ?\\<rho>2.0) (length ?\\<rho>1.0) \\<tau>)\n   (?\\<rho>1.0 @ ?\\<rho>2.0 @ ?\\<rho>3.0)\n\ngoal (1 subgoal):\n 1. T (Forall \\<tau>) (\\<rho>1 @ \\<rho>3) =\n    T (shift (length \\<rho>2) (length \\<rho>1) (Forall \\<tau>))\n     (\\<rho>1 @ \\<rho>2 @ \\<rho>3)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))) \\<or>\n        v = Abs None} =\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T\n(shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n(V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                    v = Abs None}\n 2. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x \\<in> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {v. (\\<exists>v'.\n   v = Abs (Some v') \\<and>\n   (\\<forall>V.\n       v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                 (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                                     v = Abs None}\n 2. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (simp only: mem_Collect_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        (\\<exists>v'.\n            x = Abs (Some v') \\<and>\n            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))) \\<or>\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (erule exE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v') \\<and>\n        (\\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (erule conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rule disjI1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V.\n                                v' \\<in> T\n    (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n    (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rename_tac x v')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V.\n                                v' \\<in> T\n    (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n    (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> x = Abs (Some v') \\<and>\n                         (\\<forall>V.\n                             v' \\<in> T\n (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V.\n                            v' \\<in> T\n(shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n(V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (shift (length \\<rho>2)\n(Suc (length \\<rho>1)) \\<tau>)\n                                   (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rename_tac V)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (shift (length \\<rho>2)\n(Suc (length \\<rho>1)) \\<tau>)\n                                   (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (erule_tac x=V in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (shift (length \\<rho>2)\n(Suc (length \\<rho>1)) \\<tau>)\n                                   (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (subgoal_tac \"T \\<tau> ((V#\\<rho>1) @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length (V#\\<rho>1)) \\<tau>) ((V#\\<rho>1) @ \\<rho>2 @ \\<rho>3)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3);\n        T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length (V # \\<rho>1)) \\<tau>)\n         ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (shift (length \\<rho>2)\n(Suc (length \\<rho>1)) \\<tau>)\n                                   (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length (V # \\<rho>1))\n                             \\<tau>)\n                          ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 4. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length (V # \\<rho>1))\n                             \\<tau>)\n                          ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3);\n        T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length (V # \\<rho>1)) \\<tau>)\n         ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (shift (length \\<rho>2)\n(Suc (length \\<rho>1)) \\<tau>)\n                                   (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 4. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3);\n        T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length (V # \\<rho>1)) \\<tau>)\n         ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (shift (length \\<rho>2)\n(Suc (length \\<rho>1)) \\<tau>)\n                                   (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 3. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> x = Abs None\n 2. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n        T \\<tau> (\\<rho>1 @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n         (\\<rho>1 @ \\<rho>2 @ \\<rho>3)) \\<Longrightarrow>\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<rho>1 @ \\<rho>3))) \\<or>\n                    v = Abs None}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x \\<in> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T\n(shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n(V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n                    v = Abs None}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {v. (\\<exists>v'.\n   v = Abs (Some v') \\<and>\n   (\\<forall>V. v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                                     v = Abs None}", "apply (simp only: mem_Collect_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        (\\<exists>v'.\n            x = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                             \\<tau>)\n                          (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))) \\<or>\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                            \\<tau>)\n                         (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v') \\<and>\n        (\\<forall>V.\n            v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1))\n                         \\<tau>)\n                      (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V.\n                                v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (rename_tac x v')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V.\n                                v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> x = Abs (Some v') \\<and>\n                         (\\<forall>V.\n                             v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3))\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V.\n                            v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (rename_tac V)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<forall>V.\n           v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                     (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (erule_tac x=V in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                  (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (subgoal_tac \"T \\<tau> ((V#\\<rho>1) @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length (V#\\<rho>1)) \\<tau>) ((V#\\<rho>1) @ \\<rho>2 @ \\<rho>3)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                  (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length (V # \\<rho>1)) \\<tau>)\n         ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 2. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                  (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length (V # \\<rho>1))\n                             \\<tau>)\n                          ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                  (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length (V # \\<rho>1))\n                             \\<tau>)\n                          ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                  (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length (V # \\<rho>1)) \\<tau>)\n         ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        v' \\<in> T (shift (length \\<rho>2) (Suc (length \\<rho>1)) \\<tau>)\n                  (V # \\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        T \\<tau> ((V # \\<rho>1) @ \\<rho>3) =\n        T (shift (length \\<rho>2) (length (V # \\<rho>1)) \\<tau>)\n         ((V # \\<rho>1) @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<rho>1 @ \\<rho>3)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<rho>1 @ \\<rho>3))) \\<or>\n                         x = Abs None", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>3 \\<rho>2.\n                   T \\<tau> (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        x = Abs None\\<rbrakk>\n       \\<Longrightarrow> x = Abs None", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  T (Forall \\<tau>) (\\<rho>1 @ \\<rho>3) =\n  T (shift (length \\<rho>2) (length \\<rho>1) (Forall \\<tau>))\n   (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n\ngoal (3 subgoals):\n 1. \\<And>x \\<rho>1 \\<rho>2 \\<rho>3.\n       T (TVar x) (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) (TVar x))\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 2. \\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n       T TNat (\\<rho>1 @ \\<rho>3) =\n       T (shift (length \\<rho>2) (length \\<rho>1) TNat)\n        (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\n 3. \\<And>\\<tau>1 \\<tau>2 \\<rho>1 \\<rho>2 \\<rho>3.\n       \\<lbrakk>\\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n                   T \\<tau>1 (\\<rho>1 @ \\<rho>3) =\n                   T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>1)\n                    (\\<rho>1 @ \\<rho>2 @ \\<rho>3);\n        \\<And>\\<rho>1 \\<rho>2 \\<rho>3.\n           T \\<tau>2 (\\<rho>1 @ \\<rho>3) =\n           T (shift (length \\<rho>2) (length \\<rho>1) \\<tau>2)\n            (\\<rho>1 @ \\<rho>2 @ \\<rho>3)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<rho>1 @ \\<rho>3) =\n                         T (shift (length \\<rho>2) (length \\<rho>1)\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<rho>1 @ \\<rho>2 @ \\<rho>3)", "qed force+"], ["", "lemma shift_append_preserves_T: shows \"T \\<tau> \\<rho>3 = T (shift (length \\<rho>2) 0 \\<tau>) (\\<rho>2@\\<rho>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<tau> \\<rho>3 =\n    T (shift (length \\<rho>2) 0 \\<tau>) (\\<rho>2 @ \\<rho>3)", "using shift_append_preserves_T_aux[of \\<tau> \"[]\" \\<rho>3 \\<rho>2]"], ["proof (prove)\nusing this:\n  T \\<tau> ([] @ \\<rho>3) =\n  T (shift (length \\<rho>2) (length []) \\<tau>) ([] @ \\<rho>2 @ \\<rho>3)\n\ngoal (1 subgoal):\n 1. T \\<tau> \\<rho>3 =\n    T (shift (length \\<rho>2) 0 \\<tau>) (\\<rho>2 @ \\<rho>3)", "by auto"], ["", "lemma drop_shift_preserves_T: \n  assumes k: \"k \\<le> length \\<rho>\" shows \"T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "let ?r2 = \"take k \\<rho>\" and ?r3 = \"drop k \\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "have 1: \"T \\<tau> (?r3) = T (shift (length ?r2) 0 \\<tau>) (?r2@?r3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) =\n    T (shift (length (take k \\<rho>)) 0 \\<tau>)\n     (take k \\<rho> @ drop k \\<rho>)", "using shift_append_preserves_T_aux[of \\<tau> \"[]\" ?r3 ?r2]"], ["proof (prove)\nusing this:\n  T \\<tau> ([] @ drop k \\<rho>) =\n  T (shift (length (take k \\<rho>)) (length []) \\<tau>)\n   ([] @ take k \\<rho> @ drop k \\<rho>)\n\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) =\n    T (shift (length (take k \\<rho>)) 0 \\<tau>)\n     (take k \\<rho> @ drop k \\<rho>)", "by simp"], ["proof (state)\nthis:\n  T \\<tau> (drop k \\<rho>) =\n  T (shift (length (take k \\<rho>)) 0 \\<tau>)\n   (take k \\<rho> @ drop k \\<rho>)\n\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "have 2: \"?r2@?r3 = \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take k \\<rho> @ drop k \\<rho> = \\<rho>", "by simp"], ["proof (state)\nthis:\n  take k \\<rho> @ drop k \\<rho> = \\<rho>\n\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "from k"], ["proof (chain)\npicking this:\n  k \\<le> length \\<rho>", "have 3: \"length ?r2 = k\""], ["proof (prove)\nusing this:\n  k \\<le> length \\<rho>\n\ngoal (1 subgoal):\n 1. length (take k \\<rho>) = k", "by simp"], ["proof (state)\nthis:\n  length (take k \\<rho>) = k\n\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "from 1 2 3"], ["proof (chain)\npicking this:\n  T \\<tau> (drop k \\<rho>) =\n  T (shift (length (take k \\<rho>)) 0 \\<tau>)\n   (take k \\<rho> @ drop k \\<rho>)\n  take k \\<rho> @ drop k \\<rho> = \\<rho>\n  length (take k \\<rho>) = k", "show ?thesis"], ["proof (prove)\nusing this:\n  T \\<tau> (drop k \\<rho>) =\n  T (shift (length (take k \\<rho>)) 0 \\<tau>)\n   (take k \\<rho> @ drop k \\<rho>)\n  take k \\<rho> @ drop k \\<rho> = \\<rho>\n  length (take k \\<rho>) = k\n\ngoal (1 subgoal):\n 1. T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>", "by simp"], ["proof (state)\nthis:\n  T \\<tau> (drop k \\<rho>) = T (shift k 0 \\<tau>) \\<rho>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma shift_cons_preserves_T: shows \"T \\<tau> \\<rho> = T (shift (Suc 0) 0 \\<tau>) (b#\\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<tau> \\<rho> = T (shift (Suc 0) 0 \\<tau>) (b # \\<rho>)", "using drop_shift_preserves_T[of \"Suc 0\" \"b#\\<rho>\" \\<tau>]"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> length (b # \\<rho>) \\<Longrightarrow>\n  T \\<tau> (drop (Suc 0) (b # \\<rho>)) =\n  T (shift (Suc 0) 0 \\<tau>) (b # \\<rho>)\n\ngoal (1 subgoal):\n 1. T \\<tau> \\<rho> = T (shift (Suc 0) 0 \\<tau>) (b # \\<rho>)", "by simp"], ["", "lemma compose_shift: shows \"shift (j+k) c \\<tau> = shift j c (shift k c \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shift (j + k) c \\<tau> = shift j c (shift k c \\<tau>)", "by (induction \\<tau> arbitrary: j k c) auto"], ["", "lemma shift_zero_id[simp]: \"shift 0 c \\<tau> = \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shift 0 c \\<tau> = \\<tau>", "by (induction \\<tau> arbitrary: c) auto"], ["", "lemma lookup_wfenv: assumes r_g: \"\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\" and ln: \"lookup \\<Gamma> n = Some \\<tau>\"\n  shows \"\\<exists> v. \\<rho>!n = v \\<and> v \\<in> T \\<tau> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>", "using r_g ln"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  lookup \\<Gamma> n = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>", "proof (induction \\<rho> \\<eta> \\<Gamma> arbitrary: n \\<tau> rule: wfenv.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n \\<tau>.\n       lookup ([], 0) n = Some \\<tau> \\<Longrightarrow>\n       \\<exists>v. [] ! n = v \\<and> v \\<in> T \\<tau> []\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau> n \\<tau>'.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        v \\<in> T \\<tau> \\<eta>;\n        lookup (push_ty \\<tau> \\<Gamma>) n = Some \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (v # \\<rho>) ! n = va \\<and>\n                            va \\<in> T \\<tau>' \\<eta>\n 3. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "case wfnil"], ["proof (state)\nthis:\n  lookup ([], 0) n = Some \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>n \\<tau>.\n       lookup ([], 0) n = Some \\<tau> \\<Longrightarrow>\n       \\<exists>v. [] ! n = v \\<and> v \\<in> T \\<tau> []\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau> n \\<tau>'.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        v \\<in> T \\<tau> \\<eta>;\n        lookup (push_ty \\<tau> \\<Gamma>) n = Some \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (v # \\<rho>) ! n = va \\<and>\n                            va \\<in> T \\<tau>' \\<eta>\n 3. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "then"], ["proof (chain)\npicking this:\n  lookup ([], 0) n = Some \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  lookup ([], 0) n = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>v. [] ! n = v \\<and> v \\<in> T \\<tau> []", "unfolding lookup_def"], ["proof (prove)\nusing this:\n  (if n < length (fst ([], 0))\n   then let k = snd ([], 0) - snd (fst ([], 0) ! n)\n        in Some (shift k 0 (fst (fst ([], 0) ! n)))\n   else None) =\n  Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>v. [] ! n = v \\<and> v \\<in> T \\<tau> []", "by force"], ["proof (state)\nthis:\n  \\<exists>v. [] ! n = v \\<and> v \\<in> T \\<tau> []\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau> n \\<tau>'.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        v \\<in> T \\<tau> \\<eta>;\n        lookup (push_ty \\<tau> \\<Gamma>) n = Some \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (v # \\<rho>) ! n = va \\<and>\n                            va \\<in> T \\<tau>' \\<eta>\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau> n \\<tau>'.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        v \\<in> T \\<tau> \\<eta>;\n        lookup (push_ty \\<tau> \\<Gamma>) n = Some \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (v # \\<rho>) ! n = va \\<and>\n                            va \\<in> T \\<tau>' \\<eta>\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "case (wfvbind \\<rho> \\<eta> \\<Gamma> v \\<tau>')"], ["proof (state)\nthis:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v \\<in> T \\<tau>' \\<eta>\n  lookup \\<Gamma> ?n = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>v. \\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> \\<eta>\n  lookup (push_ty \\<tau>' \\<Gamma>) n = Some \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau> n \\<tau>'.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        v \\<in> T \\<tau> \\<eta>;\n        lookup (push_ty \\<tau> \\<Gamma>) n = Some \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (v # \\<rho>) ! n = va \\<and>\n                            va \\<in> T \\<tau>' \\<eta>\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from wfvbind(2)"], ["proof (chain)\npicking this:\n  v \\<in> T \\<tau>' \\<eta>", "have vtp: \"v \\<in> T \\<tau>' \\<eta>\""], ["proof (prove)\nusing this:\n  v \\<in> T \\<tau>' \\<eta>\n\ngoal (1 subgoal):\n 1. v \\<in> T \\<tau>' \\<eta>", "."], ["proof (state)\nthis:\n  v \\<in> T \\<tau>' \\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> v \\<tau> n \\<tau>'.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        v \\<in> T \\<tau> \\<eta>;\n        lookup (push_ty \\<tau> \\<Gamma>) n = Some \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>va.\n                            (v # \\<rho>) ! n = va \\<and>\n                            va \\<in> T \\<tau>' \\<eta>\n 2. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "from 0 wfvbind(4)"], ["proof (chain)\npicking this:\n  n = 0\n  lookup (push_ty \\<tau>' \\<Gamma>) n = Some \\<tau>", "have t: \"\\<tau> =  shift 0 0 \\<tau>'\""], ["proof (prove)\nusing this:\n  n = 0\n  lookup (push_ty \\<tau>' \\<Gamma>) n = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> = shift 0 0 \\<tau>'", "unfolding lookup_def"], ["proof (prove)\nusing this:\n  n = 0\n  (if n < length (fst (push_ty \\<tau>' \\<Gamma>))\n   then let k = snd (push_ty \\<tau>' \\<Gamma>) -\n                snd (fst (push_ty \\<tau>' \\<Gamma>) ! n)\n        in Some (shift k 0 (fst (fst (push_ty \\<tau>' \\<Gamma>) ! n)))\n   else None) =\n  Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> = shift 0 0 \\<tau>'", "by (simp add: push_ty_def)"], ["proof (state)\nthis:\n  \\<tau> = shift 0 0 \\<tau>'\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "from 0 vtp t"], ["proof (chain)\npicking this:\n  n = 0\n  v \\<in> T \\<tau>' \\<eta>\n  \\<tau> = shift 0 0 \\<tau>'", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n  v \\<in> T \\<tau>' \\<eta>\n  \\<tau> = shift 0 0 \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "by simp"], ["proof (state)\nthis:\n  \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "case (Suc n')"], ["proof (state)\nthis:\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "let ?G = \"push_ty \\<tau>' \\<Gamma>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "from wfvbind(4) Suc"], ["proof (chain)\npicking this:\n  lookup (push_ty \\<tau>' \\<Gamma>) n = Some \\<tau>\n  n = Suc n'", "obtain \\<sigma> k where gnp: \"(fst \\<Gamma>)!n' = (\\<sigma>,k)\" and t: \"\\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>\" \n      and npg: \"n' < length (fst \\<Gamma>)\""], ["proof (prove)\nusing this:\n  lookup (push_ty \\<tau>' \\<Gamma>) n = Some \\<tau>\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma> k.\n        \\<lbrakk>fst \\<Gamma> ! n' = (\\<sigma>, k);\n         \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>;\n         n' < length (fst \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lookup_def push_ty_def"], ["proof (prove)\nusing this:\n  (if n < length\n           (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>, snd \\<Gamma>))\n   then let k = snd ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>, snd \\<Gamma>) -\n                snd (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                          snd \\<Gamma>) !\n                     n)\n        in Some\n            (shift k 0\n              (fst (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                         snd \\<Gamma>) !\n                    n)))\n   else None) =\n  Some \\<tau>\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma> k.\n        \\<lbrakk>fst \\<Gamma> ! n' = (\\<sigma>, k);\n         \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>;\n         n' < length (fst \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (cases \"n' < length (fst \\<Gamma>)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>\\<sigma> k.\n                \\<lbrakk>fst \\<Gamma> ! n' = (\\<sigma>, k);\n                 \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>;\n                 n' < length (fst \\<Gamma>)\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     (if n < length\n              (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>, snd \\<Gamma>))\n      then let k = snd ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                        snd \\<Gamma>) -\n                   snd (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                             snd \\<Gamma>) !\n                        n)\n           in Some\n               (shift k 0\n                 (fst (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                            snd \\<Gamma>) !\n                       n)))\n      else None) =\n     Some \\<tau>;\n     n = Suc n'; n' < length (fst \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>\\<sigma> k.\n                \\<lbrakk>fst \\<Gamma> ! n' = (\\<sigma>, k);\n                 \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>;\n                 n' < length (fst \\<Gamma>)\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     (if n < length\n              (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>, snd \\<Gamma>))\n      then let k = snd ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                        snd \\<Gamma>) -\n                   snd (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                             snd \\<Gamma>) !\n                        n)\n           in Some\n               (shift k 0\n                 (fst (fst ((\\<tau>', snd \\<Gamma>) # fst \\<Gamma>,\n                            snd \\<Gamma>) !\n                       n)))\n      else None) =\n     Some \\<tau>;\n     n = Suc n'; \\<not> n' < length (fst \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<sigma> k.\n                fst \\<Gamma> ! n' = (\\<sigma>, k) \\<Longrightarrow> thesis;\n     n = Suc n'; n' < length (fst \\<Gamma>);\n     \\<tau> =\n     shift (snd \\<Gamma> - snd (fst \\<Gamma> ! n')) 0\n      (fst (fst \\<Gamma> ! n'))\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (cases \"fst \\<Gamma> ! n'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>\\<sigma> k.\n                   fst \\<Gamma> ! n' = (\\<sigma>, k) \\<Longrightarrow>\n                   thesis;\n        n = Suc n'; n' < length (fst \\<Gamma>);\n        \\<tau> =\n        shift (snd \\<Gamma> - snd (fst \\<Gamma> ! n')) 0\n         (fst (fst \\<Gamma> ! n'));\n        fst \\<Gamma> ! n' = (a, b)\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fst \\<Gamma> ! n' = (\\<sigma>, k)\n  \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>\n  n' < length (fst \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "from gnp Suc npg t"], ["proof (chain)\npicking this:\n  fst \\<Gamma> ! n' = (\\<sigma>, k)\n  n = Suc n'\n  n' < length (fst \\<Gamma>)\n  \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>", "have ln: \"lookup \\<Gamma> n' = Some \\<tau>\""], ["proof (prove)\nusing this:\n  fst \\<Gamma> ! n' = (\\<sigma>, k)\n  n = Suc n'\n  n' < length (fst \\<Gamma>)\n  \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>\n\ngoal (1 subgoal):\n 1. lookup \\<Gamma> n' = Some \\<tau>", "unfolding lookup_def"], ["proof (prove)\nusing this:\n  fst \\<Gamma> ! n' = (\\<sigma>, k)\n  n = Suc n'\n  n' < length (fst \\<Gamma>)\n  \\<tau> = shift (snd \\<Gamma> - k) 0 \\<sigma>\n\ngoal (1 subgoal):\n 1. (if n' < length (fst \\<Gamma>)\n     then let k = snd \\<Gamma> - snd (fst \\<Gamma> ! n')\n          in Some (shift k 0 (fst (fst \\<Gamma> ! n')))\n     else None) =\n    Some \\<tau>", "by auto"], ["proof (state)\nthis:\n  lookup \\<Gamma> n' = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "from wfvbind(3) ln"], ["proof (chain)\npicking this:\n  lookup \\<Gamma> ?n = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>v. \\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> \\<eta>\n  lookup \\<Gamma> n' = Some \\<tau>", "obtain v' where rnp: \"\\<rho>!n' = v'\" and vt: \"v' \\<in> T \\<tau> \\<eta>\""], ["proof (prove)\nusing this:\n  lookup \\<Gamma> ?n = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>v. \\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> \\<eta>\n  lookup \\<Gamma> n' = Some \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>\\<rho> ! n' = v'; v' \\<in> T \\<tau> \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho> ! n' = v'\n  v' \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "from Suc rnp vt"], ["proof (chain)\npicking this:\n  n = Suc n'\n  \\<rho> ! n' = v'\n  v' \\<in> T \\<tau> \\<eta>", "show ?thesis"], ["proof (prove)\nusing this:\n  n = Suc n'\n  \\<rho> ! n' = v'\n  v' \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>", "by simp"], ["proof (state)\nthis:\n  \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>va. (v # \\<rho>) ! n = va \\<and> va \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "case (wftbind \\<rho> \\<eta> \\<Gamma> V)"], ["proof (state)\nthis:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  lookup \\<Gamma> ?n = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>v. \\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> \\<eta>\n  lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "let ?a = \"fst \\<Gamma>\" and ?b = \"snd \\<Gamma>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "obtain \\<sigma> k where s: \"\\<sigma> = fst (fst \\<Gamma> ! n)\" and k: \"k = snd (fst \\<Gamma> ! n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma> k.\n        \\<lbrakk>\\<sigma> = fst (fst \\<Gamma> ! n);\n         k = snd (fst \\<Gamma> ! n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<sigma> = fst (fst \\<Gamma> ! n)\n  k = snd (fst \\<Gamma> ! n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from wftbind(3) s k"], ["proof (chain)\npicking this:\n  lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\n  \\<sigma> = fst (fst \\<Gamma> ! n)\n  k = snd (fst \\<Gamma> ! n)", "have t: \"\\<tau> = shift (Suc ?b - k) 0 \\<sigma>\" and nl: \"n < length (fst \\<Gamma>)\""], ["proof (prove)\nusing this:\n  lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\n  \\<sigma> = fst (fst \\<Gamma> ! n)\n  k = snd (fst \\<Gamma> ! n)\n\ngoal (1 subgoal):\n 1. \\<tau> = shift (Suc (snd \\<Gamma>) - k) 0 \\<sigma> &&&\n    n < length (fst \\<Gamma>)", "unfolding push_tyvar_def lookup_def"], ["proof (prove)\nusing this:\n  (if n < length (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)))\n   then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)\n        in Some\n            (shift k 0 (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)))\n   else None) =\n  Some \\<tau>\n  \\<sigma> = fst (fst \\<Gamma> ! n)\n  k = snd (fst \\<Gamma> ! n)\n\ngoal (1 subgoal):\n 1. \\<tau> = shift (Suc (snd \\<Gamma>) - k) 0 \\<sigma> &&&\n    n < length (fst \\<Gamma>)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(if n < length (fst \\<Gamma>)\n              then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                           snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)\n                   in Some\n                       (shift k 0\n                         (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)))\n              else None) =\n             Some \\<tau>;\n     \\<sigma> = fst (fst \\<Gamma> ! n); k = snd (fst \\<Gamma> ! n)\\<rbrakk>\n    \\<Longrightarrow> \\<tau> =\n                      shift (Suc (snd \\<Gamma>) - snd (fst \\<Gamma> ! n)) 0\n                       (fst (fst \\<Gamma> ! n))\n 2. \\<lbrakk>(if n < length (fst \\<Gamma>)\n              then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                           snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)\n                   in Some\n                       (shift k 0\n                         (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)))\n              else None) =\n             Some \\<tau>;\n     \\<sigma> = fst (fst \\<Gamma> ! n); k = snd (fst \\<Gamma> ! n)\\<rbrakk>\n    \\<Longrightarrow> n < length (fst \\<Gamma>)", "apply (case_tac \"n < length (fst \\<Gamma>)\", auto)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<tau> = shift (Suc (snd \\<Gamma>) - k) 0 \\<sigma>\n  n < length (fst \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "let ?t = \"shift (?b - k) 0 (fst (?a ! n))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from wftbind(3) k"], ["proof (chain)\npicking this:\n  lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\n  k = snd (fst \\<Gamma> ! n)", "have ln: \"lookup \\<Gamma> n = Some ?t\""], ["proof (prove)\nusing this:\n  lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\n  k = snd (fst \\<Gamma> ! n)\n\ngoal (1 subgoal):\n 1. lookup \\<Gamma> n =\n    Some (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))", "unfolding push_tyvar_def lookup_def"], ["proof (prove)\nusing this:\n  (if n < length (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)))\n   then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)\n        in Some\n            (shift k 0 (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) ! n)))\n   else None) =\n  Some \\<tau>\n  k = snd (fst \\<Gamma> ! n)\n\ngoal (1 subgoal):\n 1. (if n < length (fst \\<Gamma>)\n     then let k = snd \\<Gamma> - snd (fst \\<Gamma> ! n)\n          in Some (shift k 0 (fst (fst \\<Gamma> ! n)))\n     else None) =\n    Some (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))", "apply (cases \\<Gamma>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(if n < length (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)))\n                 then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                              snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                   n)\n                      in Some\n                          (shift k 0\n                            (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                  n)))\n                 else None) =\n                Some \\<tau>;\n        k = snd (fst \\<Gamma> ! n); \\<Gamma> = (a, b)\\<rbrakk>\n       \\<Longrightarrow> (if n < length (fst \\<Gamma>)\n                          then let k = snd \\<Gamma> - snd (fst \\<Gamma> ! n)\n                               in Some (shift k 0 (fst (fst \\<Gamma> ! n)))\n                          else None) =\n                         Some\n                          (shift (snd \\<Gamma> - k) 0\n                            (fst (fst \\<Gamma> ! n)))", "apply (rename_tac k' G)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k' G.\n       \\<lbrakk>(if n < length (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)))\n                 then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                              snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                   n)\n                      in Some\n                          (shift k 0\n                            (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                  n)))\n                 else None) =\n                Some \\<tau>;\n        k = snd (fst \\<Gamma> ! n); \\<Gamma> = (k', G)\\<rbrakk>\n       \\<Longrightarrow> (if n < length (fst \\<Gamma>)\n                          then let k = snd \\<Gamma> - snd (fst \\<Gamma> ! n)\n                               in Some (shift k 0 (fst (fst \\<Gamma> ! n)))\n                          else None) =\n                         Some\n                          (shift (snd \\<Gamma> - k) 0\n                            (fst (fst \\<Gamma> ! n)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k' G.\n       \\<lbrakk>(if n < length k'\n                 then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                              snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                   n)\n                      in Some\n                          (shift k 0\n                            (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                  n)))\n                 else None) =\n                Some \\<tau>;\n        k = snd (k' ! n); \\<Gamma> = (k', G)\\<rbrakk>\n       \\<Longrightarrow> n < length k'", "apply (case_tac \"n < length k'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k' G.\n       \\<lbrakk>(if n < length k'\n                 then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                              snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                   n)\n                      in Some\n                          (shift k 0\n                            (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                  n)))\n                 else None) =\n                Some \\<tau>;\n        k = snd (k' ! n); \\<Gamma> = (k', G); n < length k'\\<rbrakk>\n       \\<Longrightarrow> n < length k'\n 2. \\<And>k' G.\n       \\<lbrakk>(if n < length k'\n                 then let k = snd (fst \\<Gamma>, Suc (snd \\<Gamma>)) -\n                              snd (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                   n)\n                      in Some\n                          (shift k 0\n                            (fst (fst (fst \\<Gamma>, Suc (snd \\<Gamma>)) !\n                                  n)))\n                 else None) =\n                Some \\<tau>;\n        k = snd (k' ! n); \\<Gamma> = (k', G); \\<not> n < length k'\\<rbrakk>\n       \\<Longrightarrow> n < length k'", "by auto"], ["proof (state)\nthis:\n  lookup \\<Gamma> n =\n  Some (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from wftbind(2) ln"], ["proof (chain)\npicking this:\n  lookup \\<Gamma> ?n = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>v. \\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> \\<eta>\n  lookup \\<Gamma> n =\n  Some (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))", "obtain v' where rn_vp: \"\\<rho> ! n = v'\" and vp_t: \"v' \\<in> T ?t \\<eta>\""], ["proof (prove)\nusing this:\n  lookup \\<Gamma> ?n = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>v. \\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> \\<eta>\n  lookup \\<Gamma> n =\n  Some (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>\\<rho> ! n = v';\n         v' \\<in> T (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))\n                   \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho> ! n = v'\n  v' \\<in> T (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from vp_t"], ["proof (chain)\npicking this:\n  v' \\<in> T (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))) \\<eta>", "have \"v' \\<in> T (shift (Suc 0) 0 ?t) (V # \\<eta>)\""], ["proof (prove)\nusing this:\n  v' \\<in> T (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))) \\<eta>\n\ngoal (1 subgoal):\n 1. v' \\<in> T (shift (Suc 0) 0\n                 (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))))\n              (V # \\<eta>)", "using shift_cons_preserves_T"], ["proof (prove)\nusing this:\n  v' \\<in> T (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))) \\<eta>\n  T ?\\<tau> ?\\<rho> = T (shift (Suc 0) 0 ?\\<tau>) (?b # ?\\<rho>)\n\ngoal (1 subgoal):\n 1. v' \\<in> T (shift (Suc 0) 0\n                 (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))))\n              (V # \\<eta>)", "by auto"], ["proof (state)\nthis:\n  v' \\<in> T (shift (Suc 0) 0\n               (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))))\n            (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "hence vp_t2: \"v' \\<in> T (shift (Suc 0 + (?b - k)) 0 (fst (?a!n))) (V # \\<eta>)\""], ["proof (prove)\nusing this:\n  v' \\<in> T (shift (Suc 0) 0\n               (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))))\n            (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. v' \\<in> T (shift (Suc 0 + (snd \\<Gamma> - k)) 0\n                 (fst (fst \\<Gamma> ! n)))\n              (V # \\<eta>)", "using compose_shift[of \"Suc 0\" \"?b - k\" 0 \"fst (?a!n)\"]"], ["proof (prove)\nusing this:\n  v' \\<in> T (shift (Suc 0) 0\n               (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n))))\n            (V # \\<eta>)\n  shift (Suc 0 + (snd \\<Gamma> - k)) 0 (fst (fst \\<Gamma> ! n)) =\n  shift (Suc 0) 0 (shift (snd \\<Gamma> - k) 0 (fst (fst \\<Gamma> ! n)))\n\ngoal (1 subgoal):\n 1. v' \\<in> T (shift (Suc 0 + (snd \\<Gamma> - k)) 0\n                 (fst (fst \\<Gamma> ! n)))\n              (V # \\<eta>)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T (shift (Suc 0 + (snd \\<Gamma> - k)) 0 (fst (fst \\<Gamma> ! n)))\n            (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from wftbind(1)"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "have \"good_ctx \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. good_ctx \\<Gamma>", "using wfenv_good_ctx"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  \\<turnstile> ?\\<rho>,?\\<eta> : ?\\<Gamma> \\<Longrightarrow>\n  good_ctx ?\\<Gamma>\n\ngoal (1 subgoal):\n 1. good_ctx \\<Gamma>", "by blast"], ["proof (state)\nthis:\n  good_ctx \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from this k nl"], ["proof (chain)\npicking this:\n  good_ctx \\<Gamma>\n  k = snd (fst \\<Gamma> ! n)\n  n < length (fst \\<Gamma>)", "have \"?b \\<ge> k\""], ["proof (prove)\nusing this:\n  good_ctx \\<Gamma>\n  k = snd (fst \\<Gamma> ! n)\n  n < length (fst \\<Gamma>)\n\ngoal (1 subgoal):\n 1. k \\<le> snd \\<Gamma>", "unfolding good_ctx_def"], ["proof (prove)\nusing this:\n  \\<forall>n<length (fst \\<Gamma>).\n     snd (fst \\<Gamma> ! n) \\<le> snd \\<Gamma>\n  k = snd (fst \\<Gamma> ! n)\n  n < length (fst \\<Gamma>)\n\ngoal (1 subgoal):\n 1. k \\<le> snd \\<Gamma>", "by auto"], ["proof (state)\nthis:\n  k \\<le> snd \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from this"], ["proof (chain)\npicking this:\n  k \\<le> snd \\<Gamma>", "have \"Suc 0 + (?b - k) = Suc ?b - k\""], ["proof (prove)\nusing this:\n  k \\<le> snd \\<Gamma>\n\ngoal (1 subgoal):\n 1. Suc 0 + (snd \\<Gamma> - k) = Suc (snd \\<Gamma>) - k", "by simp"], ["proof (state)\nthis:\n  Suc 0 + (snd \\<Gamma> - k) = Suc (snd \\<Gamma>) - k\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from this vp_t2"], ["proof (chain)\npicking this:\n  Suc 0 + (snd \\<Gamma> - k) = Suc (snd \\<Gamma>) - k\n  v' \\<in> T (shift (Suc 0 + (snd \\<Gamma> - k)) 0 (fst (fst \\<Gamma> ! n)))\n            (V # \\<eta>)", "have vp_t3: \"v' \\<in> T (shift (Suc ?b - k) 0 (fst (?a!n))) (V # \\<eta>)\""], ["proof (prove)\nusing this:\n  Suc 0 + (snd \\<Gamma> - k) = Suc (snd \\<Gamma>) - k\n  v' \\<in> T (shift (Suc 0 + (snd \\<Gamma> - k)) 0 (fst (fst \\<Gamma> ! n)))\n            (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. v' \\<in> T (shift (Suc (snd \\<Gamma>) - k) 0 (fst (fst \\<Gamma> ! n)))\n              (V # \\<eta>)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T (shift (Suc (snd \\<Gamma>) - k) 0 (fst (fst \\<Gamma> ! n)))\n            (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<rho> \\<eta> \\<Gamma> V n \\<tau>.\n       \\<lbrakk>\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>;\n        \\<And>n \\<tau>.\n           lookup \\<Gamma> n = Some \\<tau> \\<Longrightarrow>\n           \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> \\<eta>;\n        lookup (push_tyvar \\<Gamma>) n = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            \\<rho> ! n = v \\<and>\n                            v \\<in> T \\<tau> (V # \\<eta>)", "from rn_vp vp_t3 t s"], ["proof (chain)\npicking this:\n  \\<rho> ! n = v'\n  v' \\<in> T (shift (Suc (snd \\<Gamma>) - k) 0 (fst (fst \\<Gamma> ! n)))\n            (V # \\<eta>)\n  \\<tau> = shift (Suc (snd \\<Gamma>) - k) 0 \\<sigma>\n  \\<sigma> = fst (fst \\<Gamma> ! n)", "show ?case"], ["proof (prove)\nusing this:\n  \\<rho> ! n = v'\n  v' \\<in> T (shift (Suc (snd \\<Gamma>) - k) 0 (fst (fst \\<Gamma> ! n)))\n            (V # \\<eta>)\n  \\<tau> = shift (Suc (snd \\<Gamma>) - k) 0 \\<sigma>\n  \\<sigma> = fst (fst \\<Gamma> ! n)\n\ngoal (1 subgoal):\n 1. \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> (V # \\<eta>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>v. \\<rho> ! n = v \\<and> v \\<in> T \\<tau> (V # \\<eta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_wrong[elim!]: \"\\<lbrakk> v \\<sqsubseteq> Wrong; v = Wrong \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<sqsubseteq> Wrong; v = Wrong \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (case_tac v) auto"], ["", "lemma less_nat[elim!]: \"\\<lbrakk> v \\<sqsubseteq> VNat n; v = VNat n \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<sqsubseteq> VNat n; v = VNat n \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (case_tac v) auto"], ["", "lemma less_fun[elim!]: \"\\<lbrakk> v \\<sqsubseteq> Fun f; \\<And> f'. \\<lbrakk> v = Fun f'; fset f' \\<subseteq> fset f \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<sqsubseteq> val.Fun f;\n     \\<And>f'.\n        \\<lbrakk>v = val.Fun f'; fset f' \\<subseteq> fset f\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (case_tac v) auto"], ["", "lemma less_refl[simp]: \"v \\<sqsubseteq> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<sqsubseteq> v", "proof (induction v)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. VNat x \\<sqsubseteq> VNat x\n 2. \\<And>x.\n       \\<lbrakk>\\<And>xa xa1.\n                   \\<lbrakk>xa \\<in> fset x;\n                    xa1 \\<in> Basic_BNFs.fsts xa\\<rbrakk>\n                   \\<Longrightarrow> xa1 \\<sqsubseteq> xa1;\n        \\<And>xa xa2.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa\\<rbrakk>\n           \\<Longrightarrow> xa2 \\<sqsubseteq> xa2\\<rbrakk>\n       \\<Longrightarrow> val.Fun x \\<sqsubseteq> val.Fun x\n 3. \\<And>x.\n       (\\<And>xa.\n           xa \\<in> set_option x \\<Longrightarrow>\n           xa \\<sqsubseteq> xa) \\<Longrightarrow>\n       Abs x \\<sqsubseteq> Abs x\n 4. Wrong \\<sqsubseteq> Wrong", "case (Abs v')"], ["proof (state)\nthis:\n  ?xa \\<in> set_option v' \\<Longrightarrow> ?xa \\<sqsubseteq> ?xa\n\ngoal (4 subgoals):\n 1. \\<And>x. VNat x \\<sqsubseteq> VNat x\n 2. \\<And>x.\n       \\<lbrakk>\\<And>xa xa1.\n                   \\<lbrakk>xa \\<in> fset x;\n                    xa1 \\<in> Basic_BNFs.fsts xa\\<rbrakk>\n                   \\<Longrightarrow> xa1 \\<sqsubseteq> xa1;\n        \\<And>xa xa2.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa\\<rbrakk>\n           \\<Longrightarrow> xa2 \\<sqsubseteq> xa2\\<rbrakk>\n       \\<Longrightarrow> val.Fun x \\<sqsubseteq> val.Fun x\n 3. \\<And>x.\n       (\\<And>xa.\n           xa \\<in> set_option x \\<Longrightarrow>\n           xa \\<sqsubseteq> xa) \\<Longrightarrow>\n       Abs x \\<sqsubseteq> Abs x\n 4. Wrong \\<sqsubseteq> Wrong", "then"], ["proof (chain)\npicking this:\n  ?xa \\<in> set_option v' \\<Longrightarrow> ?xa \\<sqsubseteq> ?xa", "show ?case"], ["proof (prove)\nusing this:\n  ?xa \\<in> set_option v' \\<Longrightarrow> ?xa \\<sqsubseteq> ?xa\n\ngoal (1 subgoal):\n 1. Abs v' \\<sqsubseteq> Abs v'", "by (cases v') auto"], ["proof (state)\nthis:\n  Abs v' \\<sqsubseteq> Abs v'\n\ngoal (3 subgoals):\n 1. \\<And>x. VNat x \\<sqsubseteq> VNat x\n 2. \\<And>x.\n       \\<lbrakk>\\<And>xa xa1.\n                   \\<lbrakk>xa \\<in> fset x;\n                    xa1 \\<in> Basic_BNFs.fsts xa\\<rbrakk>\n                   \\<Longrightarrow> xa1 \\<sqsubseteq> xa1;\n        \\<And>xa xa2.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa\\<rbrakk>\n           \\<Longrightarrow> xa2 \\<sqsubseteq> xa2\\<rbrakk>\n       \\<Longrightarrow> val.Fun x \\<sqsubseteq> val.Fun x\n 3. Wrong \\<sqsubseteq> Wrong", "qed force+"], ["", "lemma less_trans: fixes v1::val and v2::val and v3::val\n  shows \"\\<lbrakk> v1 \\<sqsubseteq> v2; v2 \\<sqsubseteq> v3 \\<rbrakk> \\<Longrightarrow> v1 \\<sqsubseteq> v3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v1 \\<sqsubseteq> v2; v2 \\<sqsubseteq> v3\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "proof (induction v2 arbitrary: v1 v3)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> VNat x; VNat x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset x; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun x; val.Fun x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "case (VNat n)"], ["proof (state)\nthis:\n  v1 \\<sqsubseteq> VNat n\n  VNat n \\<sqsubseteq> v3\n\ngoal (4 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> VNat x; VNat x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset x; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun x; val.Fun x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "then"], ["proof (chain)\npicking this:\n  v1 \\<sqsubseteq> VNat n\n  VNat n \\<sqsubseteq> v3", "show ?case"], ["proof (prove)\nusing this:\n  v1 \\<sqsubseteq> VNat n\n  VNat n \\<sqsubseteq> v3\n\ngoal (1 subgoal):\n 1. v1 \\<sqsubseteq> v3", "by (cases v1) auto"], ["proof (state)\nthis:\n  v1 \\<sqsubseteq> v3\n\ngoal (3 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset x; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun x; val.Fun x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset x; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun x; val.Fun x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "case (Fun t)"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> fset t; ?xa1.0 \\<in> Basic_BNFs.fsts ?xa;\n   ?v1.0 \\<sqsubseteq> ?xa1.0; ?xa1.0 \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  \\<lbrakk>?xa \\<in> fset t; ?xa2.0 \\<in> Basic_BNFs.snds ?xa;\n   ?v1.0 \\<sqsubseteq> ?xa2.0; ?xa2.0 \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  v1 \\<sqsubseteq> val.Fun t\n  val.Fun t \\<sqsubseteq> v3\n\ngoal (3 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset x; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset x; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun x; val.Fun x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?xa \\<in> fset t; ?xa1.0 \\<in> Basic_BNFs.fsts ?xa;\n   ?v1.0 \\<sqsubseteq> ?xa1.0; ?xa1.0 \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  \\<lbrakk>?xa \\<in> fset t; ?xa2.0 \\<in> Basic_BNFs.snds ?xa;\n   ?v1.0 \\<sqsubseteq> ?xa2.0; ?xa2.0 \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  v1 \\<sqsubseteq> val.Fun t\n  val.Fun t \\<sqsubseteq> v3", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> fset t; ?xa1.0 \\<in> Basic_BNFs.fsts ?xa;\n   ?v1.0 \\<sqsubseteq> ?xa1.0; ?xa1.0 \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  \\<lbrakk>?xa \\<in> fset t; ?xa2.0 \\<in> Basic_BNFs.snds ?xa;\n   ?v1.0 \\<sqsubseteq> ?xa2.0; ?xa2.0 \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  v1 \\<sqsubseteq> val.Fun t\n  val.Fun t \\<sqsubseteq> v3\n\ngoal (1 subgoal):\n 1. v1 \\<sqsubseteq> v3", "apply (cases v1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = VNat x1\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x2.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa xa1 v1 v3.\n                \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                 v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     \\<And>xa xa2 v1 v3.\n        \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n         v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n        \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n     v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa xa1 v1 v3.\n                \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                 v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     \\<And>xa xa2 v1 v3.\n        \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n         v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n        \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n     v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        fset x2 \\<subseteq> fset t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> val.Fun x2 \\<sqsubseteq> v3\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa xa1 v1 v3.\n                \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                 v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     \\<And>xa xa2 v1 v3.\n        \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n         v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n        \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n     v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (cases v3)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x2 x1.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        fset x2 \\<subseteq> fset t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2; v3 = VNat x1\\<rbrakk>\n       \\<Longrightarrow> val.Fun x2 \\<sqsubseteq> v3\n 2. \\<And>x2 x2a.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        fset x2 \\<subseteq> fset t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2; v3 = val.Fun x2a\\<rbrakk>\n       \\<Longrightarrow> val.Fun x2 \\<sqsubseteq> v3\n 3. \\<And>x2 x3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        fset x2 \\<subseteq> fset t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2; v3 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> val.Fun x2 \\<sqsubseteq> v3\n 4. \\<And>x2.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        fset x2 \\<subseteq> fset t; val.Fun t \\<sqsubseteq> v3;\n        v1 = val.Fun x2; v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> val.Fun x2 \\<sqsubseteq> v3\n 5. \\<And>x3.\n       \\<lbrakk>\\<And>xa xa1 v1 v3.\n                   \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                    v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        \\<And>xa xa2 v1 v3.\n           \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n            v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n           \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n        v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 6. \\<lbrakk>\\<And>xa xa1 v1 v3.\n                \\<lbrakk>xa \\<in> fset t; xa1 \\<in> Basic_BNFs.fsts xa;\n                 v1 \\<sqsubseteq> xa1; xa1 \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     \\<And>xa xa2 v1 v3.\n        \\<lbrakk>xa \\<in> fset t; xa2 \\<in> Basic_BNFs.snds xa;\n         v1 \\<sqsubseteq> xa2; xa2 \\<sqsubseteq> v3\\<rbrakk>\n        \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> val.Fun t; val.Fun t \\<sqsubseteq> v3;\n     v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v1 \\<sqsubseteq> v3\n\ngoal (2 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "case (Abs v)"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> set_option v; ?v1.0 \\<sqsubseteq> ?xa;\n   ?xa \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  v1 \\<sqsubseteq> Abs v\n  Abs v \\<sqsubseteq> v3\n\ngoal (2 subgoals):\n 1. \\<And>x v1 v3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option x; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs x; Abs x \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?xa \\<in> set_option v; ?v1.0 \\<sqsubseteq> ?xa;\n   ?xa \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  v1 \\<sqsubseteq> Abs v\n  Abs v \\<sqsubseteq> v3", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> set_option v; ?v1.0 \\<sqsubseteq> ?xa;\n   ?xa \\<sqsubseteq> ?v3.0\\<rbrakk>\n  \\<Longrightarrow> ?v1.0 \\<sqsubseteq> ?v3.0\n  v1 \\<sqsubseteq> Abs v\n  Abs v \\<sqsubseteq> v3\n\ngoal (1 subgoal):\n 1. v1 \\<sqsubseteq> v3", "apply (cases v1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3;\n        v1 = VNat x1\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x2.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3;\n        v1 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3;\n        v1 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (case_tac v3)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x3 x1.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = VNat x1\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x3 x2.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>x3 x3a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Abs x3a\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 5. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x3 x2.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x3 x3a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Abs x3a\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x3 x3a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Abs x3a\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (rename_tac v' v3')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v3'.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs v';\n        v3 = Abs v3'\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v3'.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (cases v)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v' v3'.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = None\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (case_tac v')"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v' v3'.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = None; v' = None\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = None; v' = Some a\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 3. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 4. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 5. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = None; v' = Some a\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (case_tac v3')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v' v3' a.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a; v3' = None\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>v' v3' a aa.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a; v3' = Some aa\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v3' a aa.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>v = Some xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> Abs v3';\n        v1 = Abs v'; v3 = Abs v3'; v = Some a; v3' = Some aa\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs v3'\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v3' a aa.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>a = xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs (Some a); a \\<sqsubseteq> aa; v1 = Abs v';\n        v3 = Abs (Some aa); v = Some a; v3' = Some aa\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs (Some aa)\n 2. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 3. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply (case_tac v')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v' v3' a aa.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>a = xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs (Some a); a \\<sqsubseteq> aa; v1 = Abs v';\n        v3 = Abs (Some aa); v = Some a; v3' = Some aa; v' = None\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs (Some aa)\n 2. \\<And>v' v3' a aa ab.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>a = xa; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        Abs v' \\<sqsubseteq> Abs (Some a); a \\<sqsubseteq> aa; v1 = Abs v';\n        v3 = Abs (Some aa); v = Some a; v3' = Some aa; v' = Some ab\\<rbrakk>\n       \\<Longrightarrow> Abs v' \\<sqsubseteq> Abs (Some aa)\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>xa v1 v3.\n                   \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                    xa \\<sqsubseteq> v3\\<rbrakk>\n                   \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n        v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Abs x3;\n        v3 = Wrong\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3\n 4. \\<lbrakk>\\<And>xa v1 v3.\n                \\<lbrakk>xa \\<in> set_option v; v1 \\<sqsubseteq> xa;\n                 xa \\<sqsubseteq> v3\\<rbrakk>\n                \\<Longrightarrow> v1 \\<sqsubseteq> v3;\n     v1 \\<sqsubseteq> Abs v; Abs v \\<sqsubseteq> v3; v1 = Wrong\\<rbrakk>\n    \\<Longrightarrow> v1 \\<sqsubseteq> v3", "apply force+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v1 \\<sqsubseteq> v3\n\ngoal (1 subgoal):\n 1. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "case Wrong"], ["proof (state)\nthis:\n  v1 \\<sqsubseteq> Wrong\n  Wrong \\<sqsubseteq> v3\n\ngoal (1 subgoal):\n 1. \\<And>v1 v3.\n       \\<lbrakk>v1 \\<sqsubseteq> Wrong; Wrong \\<sqsubseteq> v3\\<rbrakk>\n       \\<Longrightarrow> v1 \\<sqsubseteq> v3", "then"], ["proof (chain)\npicking this:\n  v1 \\<sqsubseteq> Wrong\n  Wrong \\<sqsubseteq> v3", "show ?case"], ["proof (prove)\nusing this:\n  v1 \\<sqsubseteq> Wrong\n  Wrong \\<sqsubseteq> v3\n\ngoal (1 subgoal):\n 1. v1 \\<sqsubseteq> v3", "by auto"], ["proof (state)\nthis:\n  v1 \\<sqsubseteq> v3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma T_down_closed: assumes vt: \"v \\<in> T \\<tau> \\<eta>\" and vp_v: \"v' \\<sqsubseteq> v\"\n  shows \"v' \\<in> T \\<tau> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau> \\<eta>", "using vt vp_v"], ["proof (prove)\nusing this:\n  v \\<in> T \\<tau> \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau> \\<eta>", "proof (induction \\<tau> arbitrary: v v' \\<eta>)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x v v' \\<eta>.\n       \\<lbrakk>v \\<in> T (TVar x) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (TVar x) \\<eta>\n 2. \\<And>v v' \\<eta>.\n       \\<lbrakk>v \\<in> T TNat \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T TNat \\<eta>\n 3. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 4. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "case (TVar x v v' \\<eta>)"], ["proof (state)\nthis:\n  v \\<in> T (TVar x) \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (4 subgoals):\n 1. \\<And>x v v' \\<eta>.\n       \\<lbrakk>v \\<in> T (TVar x) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (TVar x) \\<eta>\n 2. \\<And>v v' \\<eta>.\n       \\<lbrakk>v \\<in> T TNat \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T TNat \\<eta>\n 3. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 4. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "then"], ["proof (chain)\npicking this:\n  v \\<in> T (TVar x) \\<eta>\n  v' \\<sqsubseteq> v", "show ?case"], ["proof (prove)\nusing this:\n  v \\<in> T (TVar x) \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. v' \\<in> T (TVar x) \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (case_tac \"x < length \\<eta>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>\n 2. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>v'.\n                v' \\<in> \\<eta> ! x \\<and>\n                v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong;\n     v' \\<sqsubseteq> v; x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>v'.\n                         v' \\<in> \\<eta> ! x \\<and>\n                         v' \\<sqsubseteq> v' \\<and> v' \\<noteq> Wrong\n 2. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' \\<in> \\<eta> ! x \\<and>\n                            v' \\<sqsubseteq> v' \\<and> v' \\<noteq> Wrong\n 2. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> \\<eta> ! x \\<and>\n                         v' \\<sqsubseteq> v' \\<and> v' \\<noteq> Wrong\n 2. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<sqsubseteq> v' \\<and> v' \\<noteq> Wrong\n 2. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<sqsubseteq> v'\n 2. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 3. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (rule less_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<sqsubseteq> ?v2.16 v'\n 2. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> ?v2.16 v' \\<sqsubseteq> v'\n 3. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 4. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v \\<sqsubseteq> v'\n 2. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 3. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 2. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (case_tac v')"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v' x1.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = VNat x1\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 2. \\<And>v' x2.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 3. \\<And>v' x3.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 4. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 5. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (case_tac v)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>v' x1 x1a.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = VNat x1;\n        v = VNat x1a\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 2. \\<And>v' x1 x2.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = VNat x1;\n        v = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 3. \\<And>v' x1 x3.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = VNat x1;\n        v = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 4. \\<And>v' x1.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = VNat x1;\n        v = Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 5. \\<And>v' x2.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 6. \\<And>v' x3.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 7. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 8. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply force+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' x3.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 2. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 3. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply (case_tac v)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>v' x3 x1.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3;\n        v = VNat x1\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 2. \\<And>v' x3 x2.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3;\n        v = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 3. \\<And>v' x3 x3a.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3;\n        v = Abs x3a\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 4. \\<And>v' x3.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Abs x3;\n        v = Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 5. \\<And>v'.\n       \\<lbrakk>v' \\<sqsubseteq> v; x < length \\<eta>; v' \\<in> \\<eta> ! x;\n        v \\<sqsubseteq> v'; v \\<noteq> Wrong; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> v' \\<noteq> Wrong\n 6. \\<lbrakk>v \\<in> (if x < length \\<eta>\n                      then {v. \\<exists>v'.\n                                  v' \\<in> \\<eta> ! x \\<and>\n                                  v \\<sqsubseteq> v' \\<and>\n                                  v \\<noteq> Wrong}\n                      else {});\n     v' \\<sqsubseteq> v; \\<not> x < length \\<eta>\\<rbrakk>\n    \\<Longrightarrow> (x < length \\<eta> \\<longrightarrow>\n                       (\\<exists>v'.\n                           v' \\<in> \\<eta> ! x \\<and>\n                           v' \\<sqsubseteq> v' \\<and>\n                           v' \\<noteq> Wrong)) \\<and>\n                      x < length \\<eta>", "apply force+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v' \\<in> T (TVar x) \\<eta>\n\ngoal (3 subgoals):\n 1. \\<And>v v' \\<eta>.\n       \\<lbrakk>v \\<in> T TNat \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T TNat \\<eta>\n 2. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 3. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>v v' \\<eta>.\n       \\<lbrakk>v \\<in> T TNat \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T TNat \\<eta>\n 2. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 3. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "case TNat"], ["proof (state)\nthis:\n  v \\<in> T TNat \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (3 subgoals):\n 1. \\<And>v v' \\<eta>.\n       \\<lbrakk>v \\<in> T TNat \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T TNat \\<eta>\n 2. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 3. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "then"], ["proof (chain)\npicking this:\n  v \\<in> T TNat \\<eta>\n  v' \\<sqsubseteq> v", "show ?case"], ["proof (prove)\nusing this:\n  v \\<in> T TNat \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. v' \\<in> T TNat \\<eta>", "by auto"], ["proof (state)\nthis:\n  v' \\<in> T TNat \\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 2. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 2. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "case (Fun \\<tau>1 \\<tau>2)"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> T \\<tau>1 ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau>1 ?\\<eta>\n  \\<lbrakk>?v \\<in> T \\<tau>2 ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau>2 ?\\<eta>\n  v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (2 subgoals):\n 1. \\<And>\\<tau>1 \\<tau>2 v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v v' \\<eta>.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>;\n        v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n 2. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?v \\<in> T \\<tau>1 ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau>1 ?\\<eta>\n  \\<lbrakk>?v \\<in> T \\<tau>2 ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau>2 ?\\<eta>\n  v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n  v' \\<sqsubseteq> v", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> T \\<tau>1 ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau>1 ?\\<eta>\n  \\<lbrakk>?v \\<in> T \\<tau>2 ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau>2 ?\\<eta>\n  v \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n     \\<And>v \\<eta> v'.\n        \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n        \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n     \\<exists>f.\n        v = val.Fun f \\<and>\n        (\\<forall>v1 v2'.\n            (v1, v2') \\<in> fset f \\<longrightarrow>\n            v1 \\<in> T \\<tau>1 \\<eta> \\<longrightarrow>\n            (\\<exists>v2.\n                v2 \\<in> T \\<tau>2 \\<eta> \\<and> v2' \\<sqsubseteq> v2));\n     v' \\<sqsubseteq> v\\<rbrakk>\n    \\<Longrightarrow> \\<exists>f.\n                         v' = val.Fun f \\<and>\n                         (\\<forall>v1 v2'.\n                             (v1, v2') \\<in> fset f \\<longrightarrow>\n                             v1 \\<in> T \\<tau>1 \\<eta> \\<longrightarrow>\n                             (\\<exists>v2.\n                                 v2 \\<in> T \\<tau>2 \\<eta> \\<and>\n                                 v2' \\<sqsubseteq> v2))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f f'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v \\<eta> v'.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        \\<forall>v1 v2'.\n           (v1, v2') \\<in> fset f \\<longrightarrow>\n           v1 \\<in> T \\<tau>1 \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T \\<tau>2 \\<eta> \\<and> v2' \\<sqsubseteq> v2);\n        v = val.Fun f; fset f' \\<subseteq> fset f; v' = val.Fun f'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            val.Fun f' = val.Fun f \\<and>\n                            (\\<forall>v1 v2'.\n                                (v1, v2') \\<in> fset f \\<longrightarrow>\n                                v1 \\<in> T \\<tau>1 \\<eta> \\<longrightarrow>\n                                (\\<exists>v2.\n                                    v2 \\<in> T \\<tau>2 \\<eta> \\<and>\n                                    v2' \\<sqsubseteq> v2))", "apply (rule_tac x=f' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f f'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau>1 \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau>1 \\<eta>;\n        \\<And>v \\<eta> v'.\n           \\<lbrakk>v \\<in> T \\<tau>2 \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n           \\<Longrightarrow> v' \\<in> T \\<tau>2 \\<eta>;\n        \\<forall>v1 v2'.\n           (v1, v2') \\<in> fset f \\<longrightarrow>\n           v1 \\<in> T \\<tau>1 \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T \\<tau>2 \\<eta> \\<and> v2' \\<sqsubseteq> v2);\n        v = val.Fun f; fset f' \\<subseteq> fset f; v' = val.Fun f'\\<rbrakk>\n       \\<Longrightarrow> val.Fun f' = val.Fun f' \\<and>\n                         (\\<forall>v1 v2'.\n                             (v1, v2') \\<in> fset f' \\<longrightarrow>\n                             v1 \\<in> T \\<tau>1 \\<eta> \\<longrightarrow>\n                             (\\<exists>v2.\n                                 v2 \\<in> T \\<tau>2 \\<eta> \\<and>\n                                 v2' \\<sqsubseteq> v2))", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v' \\<in> T (\\<tau>1 \\<rightarrow> \\<tau>2) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "case (Forall \\<tau> v v' \\<eta>)"], ["proof (state)\nthis:\n  \\<lbrakk>?v \\<in> T \\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau> ?\\<eta>\n  v \\<in> T (Forall \\<tau>) \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. \\<And>\\<tau> v v' \\<eta>.\n       \\<lbrakk>\\<And>v v' \\<eta>.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v \\<in> T (Forall \\<tau>) \\<eta>; v' \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> v' \\<in> T (Forall \\<tau>) \\<eta>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?v \\<in> T \\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau> ?\\<eta>\n  v \\<in> T (Forall \\<tau>) \\<eta>\n  v' \\<sqsubseteq> v", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> T \\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau> ?\\<eta>\n  v \\<in> T (Forall \\<tau>) \\<eta>\n  v' \\<sqsubseteq> v\n\ngoal (1 subgoal):\n 1. v' \\<in> T (Forall \\<tau>) \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     (\\<exists>v'.\n         v = Abs (Some v') \\<and>\n         (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n     v = Abs None;\n     v' \\<sqsubseteq> v\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v;\n     \\<exists>v'.\n        v = Abs (Some v') \\<and>\n        (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None\n 2. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply (cases v')"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>v' x1.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = VNat x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v' x2.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<And>v' x3.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 4. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 5. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply force"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v' x2.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v' x3.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 4. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' x3.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' x3.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        Abs x3 \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        \\<exists>y. x3 = Some y; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x3 = Some v' \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply (rename_tac v'')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v''.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        Abs v'' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        \\<exists>y. v'' = Some y; v' = Abs v''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v'' = Some v' \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply (case_tac v'')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>v' v''.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        Abs v'' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        \\<exists>y. v'' = Some y; v' = Abs v''; v'' = None\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v'' = Some v' \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v' v'' a.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        Abs v'' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        \\<exists>y. v'' = Some y; v' = Abs v''; v'' = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v'' = Some v' \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 4. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v'' a.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        Abs v'' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        \\<exists>y. v'' = Some y; v' = Abs v''; v'' = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v'' = Some v' \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v'' a.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        a \\<sqsubseteq> v'; \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>);\n        v = Abs (Some v'); v' = Abs (Some a); v'' = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V. a \\<in> T \\<tau> (V # \\<eta>)\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v'' a V.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        a \\<sqsubseteq> v'; \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>);\n        v = Abs (Some v'); v' = Abs (Some a)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> T \\<tau> (V # \\<eta>)\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply (erule_tac x=V in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>v' v'' a V.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        a \\<sqsubseteq> v'; v = Abs (Some v'); v' = Abs (Some a);\n        v' \\<in> T \\<tau> (V # \\<eta>)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> T \\<tau> (V # \\<eta>)\n 2. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 3. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v'.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs (Some v');\n        \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>); v = Abs (Some v');\n        v' \\<noteq> Abs None; v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            v' = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> v; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> Abs None; v = Abs None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply (case_tac v')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs None; v = Abs None; v' = VNat x1\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             v' = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                         v' = Abs None\n 2. \\<And>x2.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs None; v = Abs None; v' = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             v' = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                         v' = Abs None\n 3. \\<And>x3.\n       \\<lbrakk>\\<And>v \\<eta> v'.\n                   \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                    v' \\<sqsubseteq> v\\<rbrakk>\n                   \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n        v' \\<sqsubseteq> Abs None; v = Abs None; v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             v' = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                         v' = Abs None\n 4. \\<lbrakk>\\<And>v \\<eta> v'.\n                \\<lbrakk>v \\<in> T \\<tau> \\<eta>;\n                 v' \\<sqsubseteq> v\\<rbrakk>\n                \\<Longrightarrow> v' \\<in> T \\<tau> \\<eta>;\n     v' \\<sqsubseteq> Abs None; v = Abs None; v' = Wrong\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v'.\n                          v' = Abs (Some v') \\<and>\n                          (\\<forall>V.\n                              v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                      v' = Abs None", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  v' \\<in> T (Forall \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wrong_not_in_T: \"Wrong \\<notin> T \\<tau> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Wrong \\<notin> T \\<tau> \\<eta>", "by (induction \\<tau>) auto"], ["", "lemma fun_app: assumes vmn: \"V \\<subseteq> T (m \\<rightarrow> n) \\<eta>\" and v2s: \"V' \\<subseteq> T m \\<eta>\" \n  shows \"apply_fun V V' \\<subseteq> T n \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_fun V V' \\<subseteq> T n \\<eta>", "using vmn v2s"], ["proof (prove)\nusing this:\n  V \\<subseteq> T (m \\<rightarrow> n) \\<eta>\n  V' \\<subseteq> T m \\<eta>\n\ngoal (1 subgoal):\n 1. apply_fun V V' \\<subseteq> T n \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                            \\<forall>v1 v2'.\n                               (v1, v2') \\<in> fset f \\<longrightarrow>\n                               v1 \\<in> T m \\<eta> \\<longrightarrow>\n                               (\\<exists>v2.\n                                   v2 \\<in> T n \\<eta> \\<and>\n                                   v2' \\<sqsubseteq> v2)};\n     V' \\<subseteq> T m \\<eta>\\<rbrakk>\n    \\<Longrightarrow> {v. \\<exists>v'.\n                             v' \\<in> V \\<and>\n                             v' \\<noteq> Wrong \\<and>\n                             ((\\<exists>v'a.\n                                  v'a \\<in> V' \\<and>\n                                  v'a \\<noteq> Wrong \\<and>\n                                  v \\<in> (case v' of\n     val.Fun f \\<Rightarrow>\n       (v2', v3') \\<leftarrow> fset f;\n       if v2' \\<sqsubseteq> v'a then return v3' else {}\n     | _ \\<Rightarrow> return Wrong)) \\<or>\n                              v = Wrong \\<and> Wrong \\<in> V')}\n                      \\<subseteq> T n \\<eta> \\<and>\n                      {v. v = Wrong \\<and> Wrong \\<in> V}\n                      \\<subseteq> T n \\<eta>", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                            \\<forall>v1 v2'.\n                               (v1, v2') \\<in> fset f \\<longrightarrow>\n                               v1 \\<in> T m \\<eta> \\<longrightarrow>\n                               (\\<exists>v2.\n                                   v2 \\<in> T n \\<eta> \\<and>\n                                   v2' \\<sqsubseteq> v2)};\n     V' \\<subseteq> T m \\<eta>\\<rbrakk>\n    \\<Longrightarrow> {v. \\<exists>v'.\n                             v' \\<in> V \\<and>\n                             v' \\<noteq> Wrong \\<and>\n                             ((\\<exists>v'a.\n                                  v'a \\<in> V' \\<and>\n                                  v'a \\<noteq> Wrong \\<and>\n                                  v \\<in> (case v' of\n     val.Fun f \\<Rightarrow>\n       (v2', v3') \\<leftarrow> fset f;\n       if v2' \\<sqsubseteq> v'a then return v3' else {}\n     | _ \\<Rightarrow> return Wrong)) \\<or>\n                              v = Wrong \\<and> Wrong \\<in> V')}\n                      \\<subseteq> T n \\<eta>\n 2. \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                            \\<forall>v1 v2'.\n                               (v1, v2') \\<in> fset f \\<longrightarrow>\n                               v1 \\<in> T m \\<eta> \\<longrightarrow>\n                               (\\<exists>v2.\n                                   v2 \\<in> T n \\<eta> \\<and>\n                                   v2' \\<sqsubseteq> v2)};\n     V' \\<subseteq> T m \\<eta>\\<rbrakk>\n    \\<Longrightarrow> {v. v = Wrong \\<and> Wrong \\<in> V}\n                      \\<subseteq> T n \\<eta>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                            \\<forall>v1 v2'.\n                               (v1, v2') \\<in> fset f \\<longrightarrow>\n                               v1 \\<in> T m \\<eta> \\<longrightarrow>\n                               (\\<exists>v2.\n                                   v2 \\<in> T n \\<eta> \\<and>\n                                   v2' \\<sqsubseteq> v2)};\n     V' \\<subseteq> T m \\<eta>\\<rbrakk>\n    \\<Longrightarrow> {v. v = Wrong \\<and> Wrong \\<in> V}\n                      \\<subseteq> T n \\<eta>\n 2. \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                            \\<forall>v1 v2'.\n                               (v1, v2') \\<in> fset f \\<longrightarrow>\n                               v1 \\<in> T m \\<eta> \\<longrightarrow>\n                               (\\<exists>v2.\n                                   v2 \\<in> T n \\<eta> \\<and>\n                                   v2' \\<sqsubseteq> v2)};\n     V' \\<subseteq> T m \\<eta>\\<rbrakk>\n    \\<Longrightarrow> {v. \\<exists>v'.\n                             v' \\<in> V \\<and>\n                             v' \\<noteq> Wrong \\<and>\n                             ((\\<exists>v'a.\n                                  v'a \\<in> V' \\<and>\n                                  v'a \\<noteq> Wrong \\<and>\n                                  v \\<in> (case v' of\n     val.Fun f \\<Rightarrow>\n       (v2', v3') \\<leftarrow> fset f;\n       if v2' \\<sqsubseteq> v'a then return v3' else {}\n     | _ \\<Rightarrow> return Wrong)) \\<or>\n                              v = Wrong \\<and> Wrong \\<in> V')}\n                      \\<subseteq> T n \\<eta>", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                            \\<forall>v1 v2'.\n                               (v1, v2') \\<in> fset f \\<longrightarrow>\n                               v1 \\<in> T m \\<eta> \\<longrightarrow>\n                               (\\<exists>v2.\n                                   v2 \\<in> T n \\<eta> \\<and>\n                                   v2' \\<sqsubseteq> v2)};\n     V' \\<subseteq> T m \\<eta>\\<rbrakk>\n    \\<Longrightarrow> {v. \\<exists>v'.\n                             v' \\<in> V \\<and>\n                             v' \\<noteq> Wrong \\<and>\n                             ((\\<exists>v'a.\n                                  v'a \\<in> V' \\<and>\n                                  v'a \\<noteq> Wrong \\<and>\n                                  v \\<in> (case v' of\n     val.Fun f \\<Rightarrow>\n       (v2', v3') \\<leftarrow> fset f;\n       if v2' \\<sqsubseteq> v'a then return v3' else {}\n     | _ \\<Rightarrow> return Wrong)) \\<or>\n                              v = Wrong \\<and> Wrong \\<in> V')}\n                      \\<subseteq> T n \\<eta>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        (\\<exists>v'a.\n            v'a \\<in> V' \\<and>\n            v'a \\<noteq> Wrong \\<and>\n            x \\<in> (case v' of\n                     val.Fun f \\<Rightarrow>\n                       (v2', v3') \\<leftarrow> fset f;\n                       if v2' \\<sqsubseteq> v'a then return v3' else {}\n                     | _ \\<Rightarrow> return Wrong)) \\<or>\n        x = Wrong \\<and> Wrong \\<in> V'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        \\<exists>v'a.\n           v'a \\<in> V' \\<and>\n           v'a \\<noteq> Wrong \\<and>\n           x \\<in> (case v' of\n                    val.Fun f \\<Rightarrow>\n                      (v2', v3') \\<leftarrow> fset f;\n                      if v2' \\<sqsubseteq> v'a then return v3' else {}\n                    | _ \\<Rightarrow> return Wrong)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 2. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        x = Wrong \\<and> Wrong \\<in> V'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        x = Wrong \\<and> Wrong \\<in> V'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 2. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        \\<exists>v'a.\n           v'a \\<in> V' \\<and>\n           v'a \\<noteq> Wrong \\<and>\n           x \\<in> (case v' of\n                    val.Fun f \\<Rightarrow>\n                      (v2', v3') \\<leftarrow> fset f;\n                      if v2' \\<sqsubseteq> v'a then return v3' else {}\n                    | _ \\<Rightarrow> return Wrong)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "using wrong_not_in_T"], ["proof (prove)\nusing this:\n  Wrong \\<notin> T ?\\<tau> ?\\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        x = Wrong \\<and> Wrong \\<in> V'\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 2. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        \\<exists>v'a.\n           v'a \\<in> V' \\<and>\n           v'a \\<noteq> Wrong \\<and>\n           x \\<in> (case v' of\n                    val.Fun f \\<Rightarrow>\n                      (v2', v3') \\<leftarrow> fset f;\n                      if v2' \\<sqsubseteq> v'a then return v3' else {}\n                    | _ \\<Rightarrow> return Wrong)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        \\<exists>v'a.\n           v'a \\<in> V' \\<and>\n           v'a \\<noteq> Wrong \\<and>\n           x \\<in> (case v' of\n                    val.Fun f \\<Rightarrow>\n                      (v2', v3') \\<leftarrow> fset f;\n                      if v2' \\<sqsubseteq> v'a then return v3' else {}\n                    | _ \\<Rightarrow> return Wrong)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v' v'a.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        v'a \\<in> V'; v'a \\<noteq> Wrong;\n        x \\<in> (case v' of\n                 val.Fun f \\<Rightarrow>\n                   (v2', v3') \\<leftarrow> fset f;\n                   if v2' \\<sqsubseteq> v'a then return v3' else {}\n                 | _ \\<Rightarrow> return Wrong)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (rename_tac v'')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v' v''.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        v'' \\<in> V'; v'' \\<noteq> Wrong;\n        x \\<in> (case v' of\n                 val.Fun f \\<Rightarrow>\n                   (v2', v3') \\<leftarrow> fset f;\n                   if v2' \\<sqsubseteq> v'' then return v3' else {}\n                 | _ \\<Rightarrow> return Wrong)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (case_tac v')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x v' v'' x1.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        v'' \\<in> V'; v'' \\<noteq> Wrong;\n        x \\<in> (case v' of\n                 val.Fun f \\<Rightarrow>\n                   (v2', v3') \\<leftarrow> fset f;\n                   if v2' \\<sqsubseteq> v'' then return v3' else {}\n                 | _ \\<Rightarrow> return Wrong);\n        v' = VNat x1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 2. \\<And>x v' v'' x2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        v'' \\<in> V'; v'' \\<noteq> Wrong;\n        x \\<in> (case v' of\n                 val.Fun f \\<Rightarrow>\n                   (v2', v3') \\<leftarrow> fset f;\n                   if v2' \\<sqsubseteq> v'' then return v3' else {}\n                 | _ \\<Rightarrow> return Wrong);\n        v' = val.Fun x2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 3. \\<And>x v' v'' x3.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        v'' \\<in> V'; v'' \\<noteq> Wrong;\n        x \\<in> (case v' of\n                 val.Fun f \\<Rightarrow>\n                   (v2', v3') \\<leftarrow> fset f;\n                   if v2' \\<sqsubseteq> v'' then return v3' else {}\n                 | _ \\<Rightarrow> return Wrong);\n        v' = Abs x3\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 4. \\<And>x v' v''.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; v' \\<in> V; v' \\<noteq> Wrong;\n        v'' \\<in> V'; v'' \\<noteq> Wrong;\n        x \\<in> (case v' of\n                 val.Fun f \\<Rightarrow>\n                   (v2', v3') \\<leftarrow> fset f;\n                   if v2' \\<sqsubseteq> v'' then return v3' else {}\n                 | _ \\<Rightarrow> return Wrong);\n        v' = Wrong\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 a b.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (a, b) \\<in> fset x2;\n        x \\<in> (if a \\<sqsubseteq> v'' then return b else {})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (rename_tac v1 v2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2;\n        x \\<in> (if v1 \\<sqsubseteq> v'' then return v2 else {})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (case_tac \"v1 \\<sqsubseteq> v''\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2;\n        x \\<in> (if v1 \\<sqsubseteq> v'' then return v2 else {});\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 2. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2;\n        x \\<in> (if v1 \\<sqsubseteq> v'' then return v2 else {});\n        \\<not> v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (subgoal_tac \"\\<forall>v1 v2'.\n                (v1, v2') \\<in> fset x2 \\<longrightarrow> v1 \\<in> T m \\<eta> \\<longrightarrow> (\\<exists>v2. v2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<forall>v1 v2'.\n           (v1, v2') \\<in> fset x2 \\<longrightarrow>\n           v1 \\<in> T m \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>\n 2. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v1 v2'.\n                            (v1, v2') \\<in> fset x2 \\<longrightarrow>\n                            v1 \\<in> T m \\<eta> \\<longrightarrow>\n                            (\\<exists>v2.\n                                v2 \\<in> T n \\<eta> \\<and>\n                                v2' \\<sqsubseteq> v2)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v1 v2'.\n                            (v1, v2') \\<in> fset x2 \\<longrightarrow>\n                            v1 \\<in> T m \\<eta> \\<longrightarrow>\n                            (\\<exists>v2.\n                                v2 \\<in> T n \\<eta> \\<and>\n                                v2' \\<sqsubseteq> v2)\n 2. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<forall>v1 v2'.\n           (v1, v2') \\<in> fset x2 \\<longrightarrow>\n           v1 \\<in> T m \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<forall>v1 v2'.\n           (v1, v2') \\<in> fset x2 \\<longrightarrow>\n           v1 \\<in> T m \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (rename_tac v1 v2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<forall>v1 v2'.\n           (v1, v2') \\<in> fset x2 \\<longrightarrow>\n           v1 \\<in> T m \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (erule_tac x=v1 in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<forall>v2'.\n           (v1, v2') \\<in> fset x2 \\<longrightarrow>\n           v1 \\<in> T m \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (erule_tac x=v2 in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        (v1, v2) \\<in> fset x2 \\<longrightarrow>\n        v1 \\<in> T m \\<eta> \\<longrightarrow>\n        (\\<exists>v2a.\n            v2a \\<in> T n \\<eta> \\<and> v2 \\<sqsubseteq> v2a)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> (v1, v2) \\<in> fset x2\n 2. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        v1 \\<in> T m \\<eta> \\<longrightarrow>\n        (\\<exists>v2a.\n            v2a \\<in> T n \\<eta> \\<and> v2 \\<sqsubseteq> v2a)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        v1 \\<in> T m \\<eta> \\<longrightarrow>\n        (\\<exists>v2a.\n            v2a \\<in> T n \\<eta> \\<and> v2 \\<sqsubseteq> v2a)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> v1 \\<in> T m \\<eta>\n 2. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<exists>v2a.\n           v2a \\<in> T n \\<eta> \\<and> v2 \\<sqsubseteq> v2a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "using T_down_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> T ?\\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T ?\\<tau> ?\\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''\\<rbrakk>\n       \\<Longrightarrow> v1 \\<in> T m \\<eta>\n 2. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<exists>v2a.\n           v2a \\<in> T n \\<eta> \\<and> v2 \\<sqsubseteq> v2a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v'';\n        \\<exists>v2a.\n           v2a \\<in> T n \\<eta> \\<and> v2 \\<sqsubseteq> v2a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2 v2a.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''; v2a \\<in> T n \\<eta>;\n        v2 \\<sqsubseteq> v2a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "using T_down_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> T ?\\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T ?\\<tau> ?\\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>x v'' x2 v1 v2 v2a.\n       \\<lbrakk>V \\<subseteq> {val.Fun f |f.\n                               \\<forall>v1 v2'.\n                                  (v1, v2') \\<in> fset f \\<longrightarrow>\n                                  v1 \\<in> T m \\<eta> \\<longrightarrow>\n                                  (\\<exists>v2.\nv2 \\<in> T n \\<eta> \\<and> v2' \\<sqsubseteq> v2)};\n        V' \\<subseteq> T m \\<eta>; val.Fun x2 \\<in> V; v'' \\<in> V';\n        v'' \\<noteq> Wrong; (v1, v2) \\<in> fset x2; x \\<sqsubseteq> v2;\n        v1 \\<sqsubseteq> v''; v2a \\<in> T n \\<eta>;\n        v2 \\<sqsubseteq> v2a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T n \\<eta>", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma T_eta: \"{v. \\<exists>v'. v' \\<in> T \\<sigma> (\\<eta>) \\<and> v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong} = T \\<sigma> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. \\<exists>v'.\n           v' \\<in> T \\<sigma> \\<eta> \\<and>\n           v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong} =\n    T \\<sigma> \\<eta>", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> T \\<sigma> \\<eta>; x \\<sqsubseteq> v';\n        x \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T \\<sigma> \\<eta>\n 2. \\<And>x.\n       x \\<in> T \\<sigma> \\<eta> \\<Longrightarrow>\n       \\<exists>v'.\n          v' \\<in> T \\<sigma> \\<eta> \\<and>\n          x \\<sqsubseteq> v' \\<and> x \\<noteq> Wrong", "using T_down_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> T ?\\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T ?\\<tau> ?\\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> T \\<sigma> \\<eta>; x \\<sqsubseteq> v';\n        x \\<noteq> Wrong\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T \\<sigma> \\<eta>\n 2. \\<And>x.\n       x \\<in> T \\<sigma> \\<eta> \\<Longrightarrow>\n       \\<exists>v'.\n          v' \\<in> T \\<sigma> \\<eta> \\<and>\n          x \\<sqsubseteq> v' \\<and> x \\<noteq> Wrong", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> T \\<sigma> \\<eta> \\<Longrightarrow>\n       \\<exists>v'.\n          v' \\<in> T \\<sigma> \\<eta> \\<and>\n          x \\<sqsubseteq> v' \\<and> x \\<noteq> Wrong", "apply (rename_tac v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> T \\<sigma> \\<eta> \\<Longrightarrow>\n       \\<exists>v'.\n          v' \\<in> T \\<sigma> \\<eta> \\<and>\n          v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong", "apply (rule_tac x=v in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> T \\<sigma> \\<eta> \\<Longrightarrow>\n       v \\<in> T \\<sigma> \\<eta> \\<and>\n       v \\<sqsubseteq> v \\<and> v \\<noteq> Wrong", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T \\<sigma> \\<eta> \\<Longrightarrow> v \\<noteq> Wrong", "using wrong_not_in_T"], ["proof (prove)\nusing this:\n  Wrong \\<notin> T ?\\<tau> ?\\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T \\<sigma> \\<eta> \\<Longrightarrow> v \\<noteq> Wrong", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma compositionality: \"T \\<tau> (\\<eta>1 @ (T \\<sigma> (\\<eta>1@\\<eta>2)) # \\<eta>2) = T (subst (length \\<eta>1) \\<sigma> \\<tau>) (\\<eta>1@\\<eta>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> \\<tau>) (\\<eta>1 @ \\<eta>2)", "proof (induction \\<tau> arbitrary: \\<sigma> \\<eta>1 \\<eta>2)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>1 \\<eta>2.\n       T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n       T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)\n 3. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 4. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "case (TVar x)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x \\<sigma> \\<eta>1 \\<eta>2.\n       T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n       T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)\n 3. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 4. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)", "apply (case_tac \"length \\<eta>1 = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. length \\<eta>1 = x \\<Longrightarrow>\n    T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)\n 2. length \\<eta>1 \\<noteq> x \\<Longrightarrow>\n    T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. length \\<eta>1 = x \\<Longrightarrow>\n    {v. \\<exists>v'.\n           v' \\<in> T \\<sigma> (\\<eta>1 @ \\<eta>2) \\<and>\n           v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong} =\n    T \\<sigma> (\\<eta>1 @ \\<eta>2)\n 2. length \\<eta>1 \\<noteq> x \\<Longrightarrow>\n    T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)", "using T_eta"], ["proof (prove)\nusing this:\n  {v. \\<exists>v'.\n         v' \\<in> T ?\\<sigma> ?\\<eta> \\<and>\n         v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong} =\n  T ?\\<sigma> ?\\<eta>\n\ngoal (2 subgoals):\n 1. length \\<eta>1 = x \\<Longrightarrow>\n    {v. \\<exists>v'.\n           v' \\<in> T \\<sigma> (\\<eta>1 @ \\<eta>2) \\<and>\n           v \\<sqsubseteq> v' \\<and> v \\<noteq> Wrong} =\n    T \\<sigma> (\\<eta>1 @ \\<eta>2)\n 2. length \\<eta>1 \\<noteq> x \\<Longrightarrow>\n    T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. length \\<eta>1 \\<noteq> x \\<Longrightarrow>\n    T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)", "apply (case_tac \"length \\<eta>1 < x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)\n 2. \\<lbrakk>length \\<eta>1 \\<noteq> x; \\<not> length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)", "apply (subgoal_tac \"\\<exists> x'. x = Suc x'\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x;\n     \\<exists>x'. x = Suc x'\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)\n 2. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'. x = Suc x'\n 3. \\<lbrakk>length \\<eta>1 \\<noteq> x; \\<not> length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'. x = Suc x'\n 2. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x;\n     \\<exists>x'. x = Suc x'\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)\n 3. \\<lbrakk>length \\<eta>1 \\<noteq> x; \\<not> length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)", "apply (cases x)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x; x = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x'. x = Suc x'\n 2. \\<And>nat.\n       \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x;\n        x = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x'. x = Suc x'\n 3. \\<lbrakk>length \\<eta>1 \\<noteq> x; length \\<eta>1 < x;\n     \\<exists>x'. x = Suc x'\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)\n 4. \\<lbrakk>length \\<eta>1 \\<noteq> x; \\<not> length \\<eta>1 < x\\<rbrakk>\n    \\<Longrightarrow> T (TVar x)\n                       (\\<eta>1 @\n                        T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                      T (subst (length \\<eta>1) \\<sigma> (TVar x))\n                       (\\<eta>1 @ \\<eta>2)", "apply force+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  T (TVar x) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n  T (subst (length \\<eta>1) \\<sigma> (TVar x)) (\\<eta>1 @ \\<eta>2)\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n       T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 3. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n       T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 3. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "case TNat"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n       T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 3. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)", "by auto"], ["proof (state)\nthis:\n  T TNat (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n  T (subst (length \\<eta>1) \\<sigma> TNat) (\\<eta>1 @ \\<eta>2)\n\ngoal (2 subgoals):\n 1. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "case (Fun \\<tau>1 \\<tau>2)"], ["proof (state)\nthis:\n  T \\<tau>1\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>1) (?\\<eta>1.0 @ ?\\<eta>2.0)\n  T \\<tau>2\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>2) (?\\<eta>1.0 @ ?\\<eta>2.0)\n\ngoal (2 subgoals):\n 1. \\<And>\\<tau>1 \\<tau>2 \\<sigma> \\<eta>1 \\<eta>2.\n       \\<lbrakk>\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n                   T \\<tau>1\n                    (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                   T (subst (length \\<eta>1) \\<sigma> \\<tau>1)\n                    (\\<eta>1 @ \\<eta>2);\n        \\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau>2 (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>2)\n            (\\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> T (\\<tau>1 \\<rightarrow> \\<tau>2)\n                          (\\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n                         T (subst (length \\<eta>1) \\<sigma>\n                             (\\<tau>1 \\<rightarrow> \\<tau>2))\n                          (\\<eta>1 @ \\<eta>2)\n 2. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "then"], ["proof (chain)\npicking this:\n  T \\<tau>1\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>1) (?\\<eta>1.0 @ ?\\<eta>2.0)\n  T \\<tau>2\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>2) (?\\<eta>1.0 @ ?\\<eta>2.0)", "show ?case"], ["proof (prove)\nusing this:\n  T \\<tau>1\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>1) (?\\<eta>1.0 @ ?\\<eta>2.0)\n  T \\<tau>2\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>2) (?\\<eta>1.0 @ ?\\<eta>2.0)\n\ngoal (1 subgoal):\n 1. T (\\<tau>1 \\<rightarrow> \\<tau>2)\n     (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (\\<tau>1 \\<rightarrow> \\<tau>2))\n     (\\<eta>1 @ \\<eta>2)", "by auto"], ["proof (state)\nthis:\n  T (\\<tau>1 \\<rightarrow> \\<tau>2)\n   (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n  T (subst (length \\<eta>1) \\<sigma> (\\<tau>1 \\<rightarrow> \\<tau>2))\n   (\\<eta>1 @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "case (Forall \\<tau>)"], ["proof (state)\nthis:\n  T \\<tau>\n   (?\\<eta>1.0 @ T ?\\<sigma> (?\\<eta>1.0 @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length ?\\<eta>1.0) ?\\<sigma> \\<tau>) (?\\<eta>1.0 @ ?\\<eta>2.0)\n\ngoal (1 subgoal):\n 1. \\<And>\\<tau> \\<sigma> \\<eta>1 \\<eta>2.\n       (\\<And>\\<sigma> \\<eta>1 \\<eta>2.\n           T \\<tau> (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n           T (subst (length \\<eta>1) \\<sigma> \\<tau>)\n            (\\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       T (Forall \\<tau>)\n        (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n       T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>))\n        (\\<eta>1 @ \\<eta>2)", "show \"T (Forall \\<tau>) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n        T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>)) (\\<eta>1 @ \\<eta>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (Forall \\<tau>) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n    T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>)) (\\<eta>1 @ \\<eta>2)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T \\<tau>\n                          (V #\n                           \\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n        v = Abs None} =\n    {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}", "apply (rule equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T \\<tau>\n                          (V #\n                           \\<eta>1 @\n                           T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T\n(subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n(V # \\<eta>1 @ \\<eta>2))) \\<or>\n                    v = Abs None}\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {v. (\\<exists>v'.\n                       v = Abs (Some v') \\<and>\n                       (\\<forall>V.\n                           v' \\<in> T \\<tau>\n                                     (V #\n\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                   v = Abs None} \\<Longrightarrow>\n       x \\<in> {v. (\\<exists>v'.\n                       v = Abs (Some v') \\<and>\n                       (\\<forall>V.\n                           v' \\<in> T (subst (Suc (length \\<eta>1))\n  (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                                     (V # \\<eta>1 @ \\<eta>2))) \\<or>\n                   v = Abs None}\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (simp only: mem_Collect_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and>\n          (\\<forall>V.\n              v' \\<in> T \\<tau>\n                        (V #\n                         \\<eta>1 @\n                         T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                         \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x.\n       x = Abs None \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 3. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x = Abs None \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and>\n          (\\<forall>V.\n              v' \\<in> T \\<tau>\n                        (V #\n                         \\<eta>1 @\n                         T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                         \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 3. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and>\n          (\\<forall>V.\n              v' \\<in> T \\<tau>\n                        (V #\n                         \\<eta>1 @\n                         T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                         \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       x = Abs (Some v') \\<and>\n       (\\<forall>V.\n           v' \\<in> T \\<tau>\n                     (V #\n                      \\<eta>1 @\n                      T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                      \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T \\<tau>\n                     (V #\n                      \\<eta>1 @\n                      T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T\n     (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n     (V # \\<eta>1 @ \\<eta>2))) \\<or>\n                         x = Abs None\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T \\<tau>\n                     (V #\n                      \\<eta>1 @\n                      T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V.\n                                v' \\<in> T\n    (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n    (V # \\<eta>1 @ \\<eta>2))\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T \\<tau>\n                     (V #\n                      \\<eta>1 @\n                      T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> x = Abs (Some v') \\<and>\n                         (\\<forall>V.\n                             v' \\<in> T\n (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n (V # \\<eta>1 @ \\<eta>2))\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T \\<tau>\n                     (V #\n                      \\<eta>1 @\n                      T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V.\n                            v' \\<in> T\n(subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n(V # \\<eta>1 @ \\<eta>2)\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       \\<forall>V.\n          v' \\<in> T \\<tau>\n                    (V #\n                     \\<eta>1 @\n                     T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                     \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "apply (erule_tac x=\"V\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. {v. (\\<exists>v'.\n            v = Abs (Some v') \\<and>\n            (\\<forall>V.\n                v' \\<in> T (subst (Suc (length \\<eta>1))\n                             (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                          (V # \\<eta>1 @ \\<eta>2))) \\<or>\n        v = Abs None}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                    v = Abs None}\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {v. (\\<exists>v'.\n                       v = Abs (Some v') \\<and>\n                       (\\<forall>V.\n                           v' \\<in> T (subst (Suc (length \\<eta>1))\n  (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                                     (V # \\<eta>1 @ \\<eta>2))) \\<or>\n                   v = Abs None} \\<Longrightarrow>\n       x \\<in> {v. (\\<exists>v'.\n                       v = Abs (Some v') \\<and>\n                       (\\<forall>V.\n                           v' \\<in> T \\<tau>\n                                     (V #\n\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                   v = Abs None}\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (simp only: mem_Collect_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T (subst (Suc (length \\<eta>1))\n                            (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                         (V # \\<eta>1 @ \\<eta>2))) \\<or>\n       x = Abs None \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and>\n          (\\<forall>V.\n              v' \\<in> T (subst (Suc (length \\<eta>1))\n                           (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                        (V # \\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x.\n       x = Abs None \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 3. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x = Abs None \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and>\n          (\\<forall>V.\n              v' \\<in> T (subst (Suc (length \\<eta>1))\n                           (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                        (V # \\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 3. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and>\n          (\\<forall>V.\n              v' \\<in> T (subst (Suc (length \\<eta>1))\n                           (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                        (V # \\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       x = Abs (Some v') \\<and>\n       (\\<forall>V.\n           v' \\<in> T (subst (Suc (length \\<eta>1))\n                        (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                     (V # \\<eta>1 @ \\<eta>2)) \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V.\n               v' \\<in> T \\<tau>\n                         (V #\n                          \\<eta>1 @\n                          T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n       x = Abs None\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (subst (Suc (length \\<eta>1))\n                        (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                     (V # \\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau>\n     (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))) \\<or>\n                         x = Abs None\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (subst (Suc (length \\<eta>1))\n                        (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                     (V # \\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V.\n                                v' \\<in> T \\<tau>\n    (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (subst (Suc (length \\<eta>1))\n                        (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                     (V # \\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> x = Abs (Some v') \\<and>\n                         (\\<forall>V.\n                             v' \\<in> T \\<tau>\n (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v');\n        \\<forall>V.\n           v' \\<in> T (subst (Suc (length \\<eta>1))\n                        (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                     (V # \\<eta>1 @ \\<eta>2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V.\n                            v' \\<in> T \\<tau>\n(V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       \\<forall>V.\n          v' \\<in> T (subst (Suc (length \\<eta>1))\n                       (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n                    (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "apply (erule_tac x=\"V\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "fix x v' V"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "let ?L1 = \"length \\<eta>1\" and ?R1 = \"V#\\<eta>1\" and ?s = \"shift (Suc 0) 0 \\<sigma>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "assume 1: \"v' \\<in> T \\<tau> (V # (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2))\""], ["proof (state)\nthis:\n  v' \\<in> T \\<tau> (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from 1"], ["proof (chain)\npicking this:\n  v' \\<in> T \\<tau> (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "have a: \"v' \\<in> T \\<tau> (?R1 @ T \\<sigma> (\\<eta>1@\\<eta>2) # \\<eta>2)\""], ["proof (prove)\nusing this:\n  v' \\<in> T \\<tau> (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau>\n              ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "have b: \"T \\<sigma> (\\<eta>1@\\<eta>2) = T ?s (V#(\\<eta>1@\\<eta>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n    T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)", "by (rule shift_cons_preserves_T)"], ["proof (state)\nthis:\n  T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n  T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)\n\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from a b"], ["proof (chain)\npicking this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n  T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n  T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)", "have c: \"v' \\<in> T \\<tau> (?R1 @ T ?s (?R1 @ \\<eta>2) # \\<eta>2)\""], ["proof (prove)\nusing this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n  T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n  T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau>\n              ((V # \\<eta>1) @\n               T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n               \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @\n             T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n             \\<eta>2)\n\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from Forall[of ?R1 ?s \\<eta>2]"], ["proof (chain)\npicking this:\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)", "have 2: \"T \\<tau> (?R1 @ T ?s (?R1 @ \\<eta>2) # \\<eta>2) =\n                                  T (subst (length ?R1) ?s \\<tau>) (?R1 @ \\<eta>2)\""], ["proof (prove)\nusing this:\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. T \\<tau>\n     ((V # \\<eta>1) @\n      T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n    T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n     ((V # \\<eta>1) @ \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)\n\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> T \\<tau>\n                 (V #\n                  \\<eta>1 @\n                  T \\<sigma> (\\<eta>1 @ \\<eta>2) #\n                  \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2)\n 2. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from c 2"], ["proof (chain)\npicking this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @\n             T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n             \\<eta>2)\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)", "show \"v' \\<in> T (subst (Suc ?L1) ?s \\<tau>) (V # (\\<eta>1 @ \\<eta>2))\""], ["proof (prove)\nusing this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @\n             T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n             \\<eta>2)\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                 \\<tau>)\n              (V # \\<eta>1 @ \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n               \\<tau>)\n            (V # \\<eta>1 @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "fix x v' V"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "let ?L1 = \"length \\<eta>1\" and ?R1 = \"V#\\<eta>1\" and ?s = \"shift (Suc 0) 0 \\<sigma>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "assume 1: \"v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>) (V # \\<eta>1 @ \\<eta>2)\""], ["proof (state)\nthis:\n  v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n               \\<tau>)\n            (V # \\<eta>1 @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from Forall[of ?R1 ?s \\<eta>2]"], ["proof (chain)\npicking this:\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)", "have 2: \"T \\<tau> (?R1 @ T ?s (?R1 @ \\<eta>2) # \\<eta>2) =\n                                  T (subst (length ?R1) ?s \\<tau>) (?R1 @ \\<eta>2)\""], ["proof (prove)\nusing this:\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. T \\<tau>\n     ((V # \\<eta>1) @\n      T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n    T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n     ((V # \\<eta>1) @ \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from 1 2"], ["proof (chain)\npicking this:\n  v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n               \\<tau>)\n            (V # \\<eta>1 @ \\<eta>2)\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)", "have 3: \"v' \\<in> T \\<tau> (?R1 @ T ?s (?R1 @ \\<eta>2) # \\<eta>2)\""], ["proof (prove)\nusing this:\n  v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n               \\<tau>)\n            (V # \\<eta>1 @ \\<eta>2)\n  T \\<tau>\n   ((V # \\<eta>1) @\n    T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) # \\<eta>2) =\n  T (subst (length (V # \\<eta>1)) (shift (Suc 0) 0 \\<sigma>) \\<tau>)\n   ((V # \\<eta>1) @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau>\n              ((V # \\<eta>1) @\n               T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n               \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @\n             T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n             \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "have b: \"T \\<sigma> (\\<eta>1@\\<eta>2) = T ?s (V#(\\<eta>1@\\<eta>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n    T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)", "by (rule shift_cons_preserves_T)"], ["proof (state)\nthis:\n  T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n  T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from 3 b"], ["proof (chain)\npicking this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @\n             T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n             \\<eta>2)\n  T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n  T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)", "have a: \"v' \\<in> T \\<tau> (?R1 @ T \\<sigma> (\\<eta>1@\\<eta>2) # \\<eta>2)\""], ["proof (prove)\nusing this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @\n             T (shift (Suc 0) 0 \\<sigma>) ((V # \\<eta>1) @ \\<eta>2) #\n             \\<eta>2)\n  T \\<sigma> (\\<eta>1 @ \\<eta>2) =\n  T (shift (Suc 0) 0 \\<sigma>) (V # \\<eta>1 @ \\<eta>2)\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau>\n              ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> T (subst (Suc (length \\<eta>1)) (shift (Suc 0) 0 \\<sigma>)\n                    \\<tau>)\n                 (V # \\<eta>1 @ \\<eta>2) \\<Longrightarrow>\n       v' \\<in> T \\<tau>\n                 (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "from this"], ["proof (chain)\npicking this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "show \"v' \\<in> T \\<tau> (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\""], ["proof (prove)\nusing this:\n  v' \\<in> T \\<tau>\n            ((V # \\<eta>1) @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau>\n              (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)", "by simp"], ["proof (state)\nthis:\n  v' \\<in> T \\<tau> (V # \\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T (Forall \\<tau>) (\\<eta>1 @ T \\<sigma> (\\<eta>1 @ \\<eta>2) # \\<eta>2) =\n  T (subst (length \\<eta>1) \\<sigma> (Forall \\<tau>)) (\\<eta>1 @ \\<eta>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iterate_sound:\n  assumes it: \"iterate Ee \\<rho> v\" \n    and IH: \"\\<forall> v. v \\<in> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta> \\<longrightarrow> Ee (v#\\<rho>) \\<subseteq> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\"\n  shows \"v \\<in> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "using it IH"], ["proof (prove)\nusing this:\n  iterate Ee \\<rho> v\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "proof (induction rule: iterate.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Ee \\<rho>.\n       \\<forall>v.\n          v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n          Ee (v # \\<rho>)\n          \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                       \\<eta> \\<Longrightarrow>\n       val.Fun {||} \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n 2. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "case (iterate_none Ee \\<rho>)"], ["proof (state)\nthis:\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>Ee \\<rho>.\n       \\<forall>v.\n          v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n          Ee (v # \\<rho>)\n          \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                       \\<eta> \\<Longrightarrow>\n       val.Fun {||} \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n 2. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "then"], ["proof (chain)\npicking this:\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. val.Fun {||} \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by auto"], ["proof (state)\nthis:\n  val.Fun {||} \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "case (iterate_again Ee \\<rho> f f')"], ["proof (state)\nthis:\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from iterate_again"], ["proof (chain)\npicking this:\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "have f_st: \"f \\<in> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from iterate_again f_st"], ["proof (chain)\npicking this:\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "have \"Ee (f#\\<rho>) \\<subseteq> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. Ee (f # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  Ee (f # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>Ee \\<rho> f f'.\n       \\<lbrakk>iterate Ee \\<rho> f;\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n                        \\<eta> \\<Longrightarrow>\n        f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        f' \\<in> Ee (f # \\<rho>);\n        \\<forall>v.\n           v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>)\n                    \\<eta> \\<longrightarrow>\n           Ee (v # \\<rho>)\n           \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\\<rbrakk>\n       \\<Longrightarrow> f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from this iterate_again"], ["proof (chain)\npicking this:\n  Ee (f # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "show ?case"], ["proof (prove)\nusing this:\n  Ee (f # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  iterate Ee \\<rho> f\n  f' \\<in> Ee (f # \\<rho>)\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>)\n     \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<Longrightarrow>\n  f \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     Ee (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by auto"], ["proof (state)\nthis:\n  f' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem welltyped_dont_go_wrong:\n  assumes wte: \"\\<Gamma> \\<turnstile> e : \\<tau>\" and wfr: \"\\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\"\n  shows \"E e \\<rho> \\<subseteq> T \\<tau> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E e \\<rho> \\<subseteq> T \\<tau> \\<eta>", "using wte wfr"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : \\<tau>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e \\<rho> \\<subseteq> T \\<tau> \\<eta>", "proof (induction \\<Gamma> e \\<tau> arbitrary: \\<rho> \\<eta> rule: well_typed.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> n \\<rho> \\<eta>.\n       \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n       E (ENat n) \\<rho> \\<subseteq> T TNat \\<eta>\n 2. \\<And>\\<Gamma> n \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>lookup \\<Gamma> n = Some \\<tau>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 3. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 4. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 5. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 6. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 7. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtnat \\<Gamma> n \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> n \\<rho> \\<eta>.\n       \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n       E (ENat n) \\<rho> \\<subseteq> T TNat \\<eta>\n 2. \\<And>\\<Gamma> n \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>lookup \\<Gamma> n = Some \\<tau>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 3. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 4. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 5. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 6. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 7. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. E (ENat n) \\<rho> \\<subseteq> T TNat \\<eta>", "by auto"], ["proof (state)\nthis:\n  E (ENat n) \\<rho> \\<subseteq> T TNat \\<eta>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> n \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>lookup \\<Gamma> n = Some \\<tau>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 3. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 6. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> n \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>lookup \\<Gamma> n = Some \\<tau>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 3. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 6. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtvar \\<Gamma> n \\<tau> \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  lookup \\<Gamma> n = Some \\<tau>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> n \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>lookup \\<Gamma> n = Some \\<tau>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 3. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 6. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from wtvar"], ["proof (chain)\npicking this:\n  lookup \\<Gamma> n = Some \\<tau>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "obtain v where lx: \"\\<rho> ! n = v\" and vt: \"v \\<in> T \\<tau> \\<eta>\""], ["proof (prove)\nusing this:\n  lookup \\<Gamma> n = Some \\<tau>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>\\<rho> ! n = v; v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lookup_wfenv"], ["proof (prove)\nusing this:\n  lookup \\<Gamma> n = Some \\<tau>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  \\<lbrakk>\\<turnstile> ?\\<rho>,?\\<eta> : ?\\<Gamma>;\n   lookup ?\\<Gamma> ?n = Some ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v.\n                       ?\\<rho> ! ?n = v \\<and> v \\<in> T ?\\<tau> ?\\<eta>\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>\\<rho> ! n = v; v \\<in> T \\<tau> \\<eta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<rho> ! n = v\n  v \\<in> T \\<tau> \\<eta>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> n \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>lookup \\<Gamma> n = Some \\<tau>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 3. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 6. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from lx vt"], ["proof (chain)\npicking this:\n  \\<rho> ! n = v\n  v \\<in> T \\<tau> \\<eta>", "show ?case"], ["proof (prove)\nusing this:\n  \\<rho> ! n = v\n  v \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<rho> ! n \\<in> T \\<tau> \\<eta>; v = \\<rho> ! n;\n        x \\<sqsubseteq> \\<rho> ! n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T \\<tau> \\<eta>", "using T_down_closed[of \"\\<rho>!n\" \\<tau> \"\\<eta>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<rho> ! n \\<in> T \\<tau> \\<eta>;\n   ?v' \\<sqsubseteq> \\<rho> ! n\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<rho> ! n \\<in> T \\<tau> \\<eta>; v = \\<rho> ! n;\n        x \\<sqsubseteq> \\<rho> ! n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T \\<tau> \\<eta>", "by blast"], ["proof (state)\nthis:\n  E (EVar n) \\<rho> \\<subseteq> T \\<tau> \\<eta>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtapp \\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>\n  \\<Gamma> \\<turnstile> e' : \\<sigma>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e' ?\\<rho> \\<subseteq> T \\<sigma> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from wtapp"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>\n  \\<Gamma> \\<turnstile> e' : \\<sigma>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e' ?\\<rho> \\<subseteq> T \\<sigma> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "have Ee: \"E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>\n  \\<Gamma> \\<turnstile> e' : \\<sigma>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e' ?\\<rho> \\<subseteq> T \\<sigma> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from wtapp"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>\n  \\<Gamma> \\<turnstile> e' : \\<sigma>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e' ?\\<rho> \\<subseteq> T \\<sigma> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "have Eep: \"E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>\n  \\<Gamma> \\<turnstile> e' : \\<sigma>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e' ?\\<rho> \\<subseteq> T \\<sigma> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>", "by blast"], ["proof (state)\nthis:\n  E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> e \\<sigma> \\<tau> e' \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<Gamma> \\<turnstile> e' : \\<sigma>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n 2. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 5. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from Ee Eep"], ["proof (chain)\npicking this:\n  E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>", "show ?case"], ["proof (prove)\nusing this:\n  E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>\n\ngoal (1 subgoal):\n 1. E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>", "using fun_app"], ["proof (prove)\nusing this:\n  E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  E e' \\<rho> \\<subseteq> T \\<sigma> \\<eta>\n  \\<lbrakk>?V \\<subseteq> T (?m \\<rightarrow> ?n) ?\\<eta>;\n   ?V' \\<subseteq> T ?m ?\\<eta>\\<rbrakk>\n  \\<Longrightarrow> apply_fun ?V ?V' \\<subseteq> T ?n ?\\<eta>\n\ngoal (1 subgoal):\n 1. E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>", "by simp"], ["proof (state)\nthis:\n  E (EApp e e') \\<rho> \\<subseteq> T \\<tau> \\<eta>\n\ngoal (4 subgoals):\n 1. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtlam \\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_ty \\<sigma> \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T \\<tau> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<sigma> \\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_ty \\<sigma> \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty \\<sigma>\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (ELam \\<sigma> e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 4. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. E (ELam \\<sigma> e) \\<rho>\n    \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {val.Fun f |f.\n     \\<forall>v1 v2'.\n        (v1, v2') \\<in> fset f \\<longrightarrow>\n        (\\<exists>v2.\n            v2 \\<in> E e (v1 # \\<rho>) \\<and> v2' \\<sqsubseteq> v2)}\n    \\<subseteq> {val.Fun f |f.\n                 \\<forall>v1 v2'.\n                    (v1, v2') \\<in> fset f \\<longrightarrow>\n                    v1 \\<in> T \\<sigma> \\<eta> \\<longrightarrow>\n                    (\\<exists>v2.\n                        v2 \\<in> T \\<tau> \\<eta> \\<and>\n                        v2' \\<sqsubseteq> v2)}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {val.Fun f |f.\n                \\<forall>v1 v2'.\n                   (v1, v2') \\<in> fset f \\<longrightarrow>\n                   (\\<exists>v2.\n                       v2 \\<in> E e (v1 # \\<rho>) \\<and>\n                       v2' \\<sqsubseteq> v2)} \\<Longrightarrow>\n       x \\<in> {val.Fun f |f.\n                \\<forall>v1 v2'.\n                   (v1, v2') \\<in> fset f \\<longrightarrow>\n                   v1 \\<in> T \\<sigma> \\<eta> \\<longrightarrow>\n                   (\\<exists>v2.\n                       v2 \\<in> T \\<tau> \\<eta> \\<and>\n                       v2' \\<sqsubseteq> v2)}", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x f.\n       \\<forall>v1 v2'.\n          (v1, v2') \\<in> fset f \\<longrightarrow>\n          (\\<exists>v2.\n              v2 \\<in> E e (v1 # \\<rho>) \\<and>\n              v2' \\<sqsubseteq> v2) \\<Longrightarrow>\n       \\<exists>fa.\n          val.Fun f = val.Fun fa \\<and>\n          (\\<forall>v1 v2'.\n              (v1, v2') \\<in> fset fa \\<longrightarrow>\n              v1 \\<in> T \\<sigma> \\<eta> \\<longrightarrow>\n              (\\<exists>v2.\n                  v2 \\<in> T \\<tau> \\<eta> \\<and> v2' \\<sqsubseteq> v2))", "apply (rule_tac x=f in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x f.\n       \\<forall>v1 v2'.\n          (v1, v2') \\<in> fset f \\<longrightarrow>\n          (\\<exists>v2.\n              v2 \\<in> E e (v1 # \\<rho>) \\<and>\n              v2' \\<sqsubseteq> v2) \\<Longrightarrow>\n       val.Fun f = val.Fun f \\<and>\n       (\\<forall>v1 v2'.\n           (v1, v2') \\<in> fset f \\<longrightarrow>\n           v1 \\<in> T \\<sigma> \\<eta> \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> T \\<tau> \\<eta> \\<and> v2' \\<sqsubseteq> v2))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       \\<forall>v1 v2'.\n          (v1, v2') \\<in> fset f \\<longrightarrow>\n          (\\<exists>v2.\n              v2 \\<in> E e (v1 # \\<rho>) \\<and>\n              v2' \\<sqsubseteq> v2) \\<Longrightarrow>\n       \\<forall>v1 v2'.\n          (v1, v2') \\<in> fset f \\<longrightarrow>\n          v1 \\<in> T \\<sigma> \\<eta> \\<longrightarrow>\n          (\\<exists>v2.\n              v2 \\<in> T \\<tau> \\<eta> \\<and> v2' \\<sqsubseteq> v2)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2'.\n       \\<lbrakk>\\<forall>v1 v2'.\n                   (v1, v2') \\<in> fset f \\<longrightarrow>\n                   (\\<exists>v2.\n                       v2 \\<in> E e (v1 # \\<rho>) \\<and>\n                       v2' \\<sqsubseteq> v2);\n        (v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "apply (erule_tac x=v1 in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2'.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        \\<forall>v2'.\n           (v1, v2') \\<in> fset f \\<longrightarrow>\n           (\\<exists>v2.\n               v2 \\<in> E e (v1 # \\<rho>) \\<and>\n               v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "apply (erule_tac x=v2' in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2'.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        (v1, v2') \\<in> fset f \\<longrightarrow>\n        (\\<exists>v2.\n            v2 \\<in> E e (v1 # \\<rho>) \\<and> v2' \\<sqsubseteq> v2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "fix f v1 v2' v2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "assume v1_T: \"v1 \\<in> T \\<sigma> \\<eta>\" and v2_E: \"v2 \\<in> E e (v1#\\<rho>)\" and v2p_v2: \"v2' \\<sqsubseteq> v2\""], ["proof (state)\nthis:\n  v1 \\<in> T \\<sigma> \\<eta>\n  v2 \\<in> E e (v1 # \\<rho>)\n  v2' \\<sqsubseteq> v2\n\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "let ?r = \"v1#\\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "from wtlam(3) v1_T"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v1 \\<in> T \\<sigma> \\<eta>", "have 1: \"\\<turnstile> v1#\\<rho>,\\<eta> : push_ty \\<sigma> \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v1 \\<in> T \\<sigma> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<turnstile> v1 # \\<rho>,\\<eta> : push_ty \\<sigma> \\<Gamma>", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> v1 # \\<rho>,\\<eta> : push_ty \\<sigma> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "from wtlam(2) 1"], ["proof (chain)\npicking this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_ty \\<sigma> \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T \\<tau> ?\\<eta>\n  \\<turnstile> v1 # \\<rho>,\\<eta> : push_ty \\<sigma> \\<Gamma>", "have IH: \"E e (v1#\\<rho>) \\<subseteq> T \\<tau> \\<eta>\""], ["proof (prove)\nusing this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_ty \\<sigma> \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T \\<tau> ?\\<eta>\n  \\<turnstile> v1 # \\<rho>,\\<eta> : push_ty \\<sigma> \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e (v1 # \\<rho>) \\<subseteq> T \\<tau> \\<eta>", "by blast"], ["proof (state)\nthis:\n  E e (v1 # \\<rho>) \\<subseteq> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "from IH v2_E"], ["proof (chain)\npicking this:\n  E e (v1 # \\<rho>) \\<subseteq> T \\<tau> \\<eta>\n  v2 \\<in> E e (v1 # \\<rho>)", "have v2_T: \"v2 \\<in> T \\<tau> \\<eta>\""], ["proof (prove)\nusing this:\n  E e (v1 # \\<rho>) \\<subseteq> T \\<tau> \\<eta>\n  v2 \\<in> E e (v1 # \\<rho>)\n\ngoal (1 subgoal):\n 1. v2 \\<in> T \\<tau> \\<eta>", "by blast"], ["proof (state)\nthis:\n  v2 \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "from v2_T"], ["proof (chain)\npicking this:\n  v2 \\<in> T \\<tau> \\<eta>", "have v2_Tb: \"v2 \\<in> T \\<tau> \\<eta>\""], ["proof (prove)\nusing this:\n  v2 \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. v2 \\<in> T \\<tau> \\<eta>", "by simp"], ["proof (state)\nthis:\n  v2 \\<in> T \\<tau> \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>f v1 v2' v2.\n       \\<lbrakk>(v1, v2') \\<in> fset f; v1 \\<in> T \\<sigma> \\<eta>;\n        v2 \\<in> E e (v1 # \\<rho>); v2' \\<sqsubseteq> v2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v2.\n                            v2 \\<in> T \\<tau> \\<eta> \\<and>\n                            v2' \\<sqsubseteq> v2", "from v2_Tb v2p_v2"], ["proof (chain)\npicking this:\n  v2 \\<in> T \\<tau> \\<eta>\n  v2' \\<sqsubseteq> v2", "show \"\\<exists>v2. v2 \\<in> T \\<tau> \\<eta> \\<and> v2' \\<sqsubseteq> v2 \""], ["proof (prove)\nusing this:\n  v2 \\<in> T \\<tau> \\<eta>\n  v2' \\<sqsubseteq> v2\n\ngoal (1 subgoal):\n 1. \\<exists>v2. v2 \\<in> T \\<tau> \\<eta> \\<and> v2' \\<sqsubseteq> v2", "by blast"], ["proof (state)\nthis:\n  \\<exists>v2. v2 \\<in> T \\<tau> \\<eta> \\<and> v2' \\<sqsubseteq> v2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  E (ELam \\<sigma> e) \\<rho>\n  \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtfix \\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n   \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                  \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "have \"\\<forall> v. iterate (E e) \\<rho> v \\<longrightarrow> v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       iterate (E e) \\<rho> v \\<longrightarrow>\n       v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       iterate (E e) \\<rho> v \\<Longrightarrow>\n       v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       iterate (E e) \\<rho> v \\<Longrightarrow>\n       v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "assume it: \"iterate (E e) \\<rho> v\""], ["proof (state)\nthis:\n  iterate (E e) \\<rho> v\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       iterate (E e) \\<rho> v \\<Longrightarrow>\n       v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "have 1: \" \\<forall>v. v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow> E e (v#\\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v.\n       v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n       E e (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v x.\n       \\<lbrakk>v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        x \\<in> E e (v # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "fix v' v''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v x.\n       \\<lbrakk>v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        x \\<in> E e (v # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "assume 2: \"v' \\<in> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\" and 3: \"v'' \\<in> E e (v'#\\<rho>)\""], ["proof (state)\nthis:\n  v' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  v'' \\<in> E e (v' # \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<And>v x.\n       \\<lbrakk>v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        x \\<in> E e (v # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from wtfix(3) 2"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "have \"\\<turnstile> (v'#\\<rho>),\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n  v' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<turnstile> v' #\n                 \\<rho>,\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                  \\<Gamma>", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> v' #\n               \\<rho>,\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>v x.\n       \\<lbrakk>v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        x \\<in> E e (v # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from wtfix(2) this"], ["proof (chain)\npicking this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                  \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> v' #\n               \\<rho>,\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                \\<Gamma>", "have IH: \"E e (v'#\\<rho>) \\<subseteq> T (\\<sigma>\\<rightarrow>\\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                  \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n  \\<turnstile> v' #\n               \\<rho>,\\<eta> : push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                                \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e (v' # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  E e (v' # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>v x.\n       \\<lbrakk>v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        x \\<in> E e (v # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from 3 IH"], ["proof (chain)\npicking this:\n  v'' \\<in> E e (v' # \\<rho>)\n  E e (v' # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "have \"v'' \\<in> T (\\<sigma>\\<rightarrow>\\<tau>)  \\<eta>\""], ["proof (prove)\nusing this:\n  v'' \\<in> E e (v' # \\<rho>)\n  E e (v' # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>v x.\n       \\<lbrakk>v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        x \\<in> E e (v # \\<rho>)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from this"], ["proof (chain)\npicking this:\n  v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "show \"v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by simp"], ["proof (state)\nthis:\n  v'' \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     E e (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       iterate (E e) \\<rho> v \\<Longrightarrow>\n       v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "from it 1"], ["proof (chain)\npicking this:\n  iterate (E e) \\<rho> v\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     E e (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "show \"v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  iterate (E e) \\<rho> v\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     E e (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "using iterate_sound[of \"E e\" \\<rho> v \\<sigma> \\<tau>]"], ["proof (prove)\nusing this:\n  iterate (E e) \\<rho> v\n  \\<forall>v.\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta> \\<longrightarrow>\n     E e (v # \\<rho>) \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n  \\<lbrakk>iterate (E e) \\<rho> v;\n   \\<forall>v.\n      v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta> \\<longrightarrow>\n      E e (v # \\<rho>)\n      \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\\<rbrakk>\n  \\<Longrightarrow> v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) ?\\<eta>\n\ngoal (1 subgoal):\n 1. v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v.\n     iterate (E e) \\<rho> v \\<longrightarrow>\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> \\<Gamma> e \\<rho> \\<eta>.\n       \\<lbrakk>push_ty (\\<sigma> \\<rightarrow> \\<tau>)\n                 \\<Gamma> \\<turnstile> e : \\<sigma> \\<rightarrow> \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_ty\n   (\\<sigma> \\<rightarrow> \\<tau>) \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n                         \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>)\n\\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 3. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from this"], ["proof (chain)\npicking this:\n  \\<forall>v.\n     iterate (E e) \\<rho> v \\<longrightarrow>\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>v.\n     iterate (E e) \\<rho> v \\<longrightarrow>\n     v \\<in> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n    \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>", "by auto"], ["proof (state)\nthis:\n  E (EFix (\\<sigma> \\<rightarrow> \\<tau>) e) \\<rho>\n  \\<subseteq> T (\\<sigma> \\<rightarrow> \\<tau>) \\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtabs \\<Gamma> e \\<tau> \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_tyvar \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T \\<tau> ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e \\<tau> \\<rho> \\<eta>.\n       \\<lbrakk>push_tyvar \\<Gamma> \\<turnstile> e : \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : push_tyvar\n   \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T \\<tau> \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EAbs e) \\<rho>\n                         \\<subseteq> T (Forall \\<tau>) \\<eta>\n 2. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. E (EAbs e) \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. (\\<exists>v'. v = Abs (Some v') \\<and> v' \\<in> E e \\<rho>) \\<or>\n        v = Abs None \\<and> E e \\<rho> = {}}\n    \\<subseteq> {v. (\\<exists>v'.\n                        v = Abs (Some v') \\<and>\n                        (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                    v = Abs None}", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {v. (\\<exists>v'.\n                       v = Abs (Some v') \\<and> v' \\<in> E e \\<rho>) \\<or>\n                   v = Abs None \\<and> E e \\<rho> = {}} \\<Longrightarrow>\n       x \\<in> {v. (\\<exists>v'.\n                       v = Abs (Some v') \\<and>\n                       (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                   v = Abs None}", "apply (simp only: mem_Collect_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<exists>v'. x = Abs (Some v') \\<and> v' \\<in> E e \\<rho>) \\<or>\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply (erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<exists>v'.\n          x = Abs (Some v') \\<and> v' \\<in> E e \\<rho> \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       x = Abs (Some v') \\<and> v' \\<in> E e \\<rho> \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v'); v' \\<in> E e \\<rho>\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v'.\n                             x = Abs (Some v') \\<and>\n                             (\\<forall>V.\n                                 v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n                         x = Abs None\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply (rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v'); v' \\<in> E e \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v'.\n                            x = Abs (Some v') \\<and>\n                            (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply (rule_tac x=v' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v'); v' \\<in> E e \\<rho>\\<rbrakk>\n       \\<Longrightarrow> x = Abs (Some v') \\<and>\n                         (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>x = Abs (Some v'); v' \\<in> E e \\<rho>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>)\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)\n 2. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow>\n       (\\<exists>v'.\n           x = Abs (Some v') \\<and>\n           (\\<forall>V. v' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n       x = Abs None\n 2. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x = Abs None \\<and> E e \\<rho> = {} \\<Longrightarrow> x = Abs None\n 2. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "fix x v' V"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "assume 2: \"v' \\<in> E e \\<rho>\""], ["proof (state)\nthis:\n  v' \\<in> E e \\<rho>\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "from wtabs(3)"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "have 3: \" \\<turnstile> \\<rho>,(V#\\<eta>) : push_tyvar \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<rho>,V # \\<eta> : push_tyvar \\<Gamma>", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> \\<rho>,V # \\<eta> : push_tyvar \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "from wtabs(2) 3"], ["proof (chain)\npicking this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_tyvar \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T \\<tau> ?\\<eta>\n  \\<turnstile> \\<rho>,V # \\<eta> : push_tyvar \\<Gamma>", "have IH: \"E e \\<rho> \\<subseteq> T \\<tau> (V#\\<eta>)\""], ["proof (prove)\nusing this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : push_tyvar \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T \\<tau> ?\\<eta>\n  \\<turnstile> \\<rho>,V # \\<eta> : push_tyvar \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e \\<rho> \\<subseteq> T \\<tau> (V # \\<eta>)", "by blast"], ["proof (state)\nthis:\n  E e \\<rho> \\<subseteq> T \\<tau> (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. \\<And>x v' V.\n       v' \\<in> E e \\<rho> \\<Longrightarrow> v' \\<in> T \\<tau> (V # \\<eta>)", "from 2 IH"], ["proof (chain)\npicking this:\n  v' \\<in> E e \\<rho>\n  E e \\<rho> \\<subseteq> T \\<tau> (V # \\<eta>)", "show \"v' \\<in> T \\<tau> (V#\\<eta>)\""], ["proof (prove)\nusing this:\n  v' \\<in> E e \\<rho>\n  E e \\<rho> \\<subseteq> T \\<tau> (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. v' \\<in> T \\<tau> (V # \\<eta>)", "by (case_tac \\<rho>) auto"], ["proof (state)\nthis:\n  v' \\<in> T \\<tau> (V # \\<eta>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  E (EAbs e) \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "case (wtinst \\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> e : Forall \\<tau>\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (Forall \\<tau>) ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from wtinst(2) wtinst(3)"], ["proof (chain)\npicking this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (Forall \\<tau>) ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>", "have IH: \"E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  \\<turnstile> ?\\<rho>,?\\<eta> : \\<Gamma> \\<Longrightarrow>\n  E e ?\\<rho> \\<subseteq> T (Forall \\<tau>) ?\\<eta>\n  \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\n\ngoal (1 subgoal):\n 1. E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> e \\<tau> \\<sigma> \\<rho> \\<eta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> e : Forall \\<tau>;\n        \\<And>\\<rho> \\<eta>.\n           \\<turnstile> \\<rho>,\\<eta> : \\<Gamma> \\<Longrightarrow>\n           E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>;\n        \\<turnstile> \\<rho>,\\<eta> : \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> E (EInst e \\<sigma>) \\<rho>\n                         \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. E (EInst e \\<sigma>) \\<rho>\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. \\<exists>v'.\n           v' \\<in> E e \\<rho> \\<and>\n           v' \\<noteq> Wrong \\<and>\n           v \\<in> (case v' of Abs None \\<Rightarrow> {}\n                    | Abs (Some xa) \\<Rightarrow> return xa\n                    | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta> \\<and>\n    {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {v. \\<exists>v'.\n           v' \\<in> E e \\<rho> \\<and>\n           v' \\<noteq> Wrong \\<and>\n           v \\<in> (case v' of Abs None \\<Rightarrow> {}\n                    | Abs (Some xa) \\<Rightarrow> return xa\n                    | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "apply (rule subsetI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {v. \\<exists>v'.\n                      v' \\<in> E e \\<rho> \\<and>\n                      v' \\<noteq> Wrong \\<and>\n                      v \\<in> (case v' of Abs None \\<Rightarrow> {}\n                               | Abs (Some xa) \\<Rightarrow> return xa\n                               | _ \\<Rightarrow>\n                                   {v'.\n                                    v' \\<sqsubseteq>\n                                    Wrong})} \\<Longrightarrow>\n       x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "apply (simp only: mem_Collect_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<exists>v'.\n          v' \\<in> E e \\<rho> \\<and>\n          v' \\<noteq> Wrong \\<and>\n          x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                   | Abs (Some xa) \\<Rightarrow> return xa\n                   | _ \\<Rightarrow>\n                       {v'. v' \\<sqsubseteq> Wrong}) \\<Longrightarrow>\n       x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       v' \\<in> E e \\<rho> \\<and>\n       v' \\<noteq> Wrong \\<and>\n       x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                | Abs (Some xa) \\<Rightarrow> return xa\n                | _ \\<Rightarrow>\n                    {v'. v' \\<sqsubseteq> Wrong}) \\<Longrightarrow>\n       x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "apply (erule conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> E e \\<rho>; v' \\<noteq> Wrong;\n        x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                 | Abs (Some xa) \\<Rightarrow> return xa\n                 | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> E e \\<rho>; v' \\<noteq> Wrong;\n        x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                 | Abs (Some xa) \\<Rightarrow> return xa\n                 | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "fix x v'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> E e \\<rho>; v' \\<noteq> Wrong;\n        x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                 | Abs (Some xa) \\<Rightarrow> return xa\n                 | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "assume vp_E: \"v' \\<in> E e \\<rho>\" and vp_w: \"v' \\<noteq> Wrong\" and \n      x: \"x \\<in> (case v' of Abs None \\<Rightarrow> {} | Abs (Some xa) \\<Rightarrow> return xa\n             | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\""], ["proof (state)\nthis:\n  v' \\<in> E e \\<rho>\n  v' \\<noteq> Wrong\n  x \\<in> (case v' of Abs None \\<Rightarrow> {}\n           | Abs (Some xa) \\<Rightarrow> return xa\n           | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\n\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> E e \\<rho>; v' \\<noteq> Wrong;\n        x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                 | Abs (Some xa) \\<Rightarrow> return xa\n                 | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from IH vp_E"], ["proof (chain)\npicking this:\n  E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\n  v' \\<in> E e \\<rho>", "have vp_T: \"v' \\<in> T (Forall \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\n  v' \\<in> E e \\<rho>\n\ngoal (1 subgoal):\n 1. v' \\<in> T (Forall \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  v' \\<in> T (Forall \\<tau>) \\<eta>\n\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> E e \\<rho>; v' \\<noteq> Wrong;\n        x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                 | Abs (Some xa) \\<Rightarrow> return xa\n                 | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from vp_T"], ["proof (chain)\npicking this:\n  v' \\<in> T (Forall \\<tau>) \\<eta>", "have \"(\\<exists>v''. v' = Abs (Some v'') \\<and> (\\<forall> V. v'' \\<in> T \\<tau> (V#\\<eta>)))\n                           \\<or> v' = Abs None\""], ["proof (prove)\nusing this:\n  v' \\<in> T (Forall \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. (\\<exists>v''.\n        v' = Abs (Some v'') \\<and>\n        (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n    v' = Abs None", "by simp"], ["proof (state)\nthis:\n  (\\<exists>v''.\n      v' = Abs (Some v'') \\<and>\n      (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n  v' = Abs None\n\ngoal (2 subgoals):\n 1. \\<And>x v'.\n       \\<lbrakk>v' \\<in> E e \\<rho>; v' \\<noteq> Wrong;\n        x \\<in> (case v' of Abs None \\<Rightarrow> {}\n                 | Abs (Some xa) \\<Rightarrow> return xa\n                 | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from this"], ["proof (chain)\npicking this:\n  (\\<exists>v''.\n      v' = Abs (Some v'') \\<and>\n      (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n  v' = Abs None", "show \"x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  (\\<exists>v''.\n      v' = Abs (Some v'') \\<and>\n      (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))) \\<or>\n  v' = Abs None\n\ngoal (1 subgoal):\n 1. x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "assume \"\\<exists>v''. v' = Abs (Some v'') \\<and> (\\<forall> V. v'' \\<in> T \\<tau> (V#\\<eta>))\""], ["proof (state)\nthis:\n  \\<exists>v''.\n     v' = Abs (Some v'') \\<and>\n     (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))\n\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>v''.\n     v' = Abs (Some v'') \\<and>\n     (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))", "obtain v'' where vp: \"v' = Abs (Some v'')\" and \n        vpp_T: \"\\<forall> V. v'' \\<in> T \\<tau> (V#\\<eta>)\""], ["proof (prove)\nusing this:\n  \\<exists>v''.\n     v' = Abs (Some v'') \\<and>\n     (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>))\n\ngoal (1 subgoal):\n 1. (\\<And>v''.\n        \\<lbrakk>v' = Abs (Some v'');\n         \\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v' = Abs (Some v'')\n  \\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)\n\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from vp x"], ["proof (chain)\npicking this:\n  v' = Abs (Some v'')\n  x \\<in> (case v' of Abs None \\<Rightarrow> {}\n           | Abs (Some xa) \\<Rightarrow> return xa\n           | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})", "have x_vpp: \"x \\<sqsubseteq> v''\""], ["proof (prove)\nusing this:\n  v' = Abs (Some v'')\n  x \\<in> (case v' of Abs None \\<Rightarrow> {}\n           | Abs (Some xa) \\<Rightarrow> return xa\n           | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> v''", "by auto"], ["proof (state)\nthis:\n  x \\<sqsubseteq> v''\n\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "let ?V = \"T \\<sigma> \\<eta>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from vpp_T"], ["proof (chain)\npicking this:\n  \\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)", "have \"v'' \\<in> T \\<tau> (?V#\\<eta>)\""], ["proof (prove)\nusing this:\n  \\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)\n\ngoal (1 subgoal):\n 1. v'' \\<in> T \\<tau> (T \\<sigma> \\<eta> # \\<eta>)", "by blast"], ["proof (state)\nthis:\n  v'' \\<in> T \\<tau> (T \\<sigma> \\<eta> # \\<eta>)\n\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from this"], ["proof (chain)\npicking this:\n  v'' \\<in> T \\<tau> (T \\<sigma> \\<eta> # \\<eta>)", "have \"v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  v'' \\<in> T \\<tau> (T \\<sigma> \\<eta> # \\<eta>)\n\ngoal (1 subgoal):\n 1. v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "using compositionality[of \\<tau> \"[]\" \\<sigma>]"], ["proof (prove)\nusing this:\n  v'' \\<in> T \\<tau> (T \\<sigma> \\<eta> # \\<eta>)\n  T \\<tau> ([] @ T \\<sigma> ([] @ ?\\<eta>2.0) # ?\\<eta>2.0) =\n  T (subst (length []) \\<sigma> \\<tau>) ([] @ ?\\<eta>2.0)\n\ngoal (1 subgoal):\n 1. v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "by simp"], ["proof (state)\nthis:\n  v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n\ngoal (2 subgoals):\n 1. \\<exists>v''.\n       v' = Abs (Some v'') \\<and>\n       (\\<forall>V. v'' \\<in> T \\<tau> (V # \\<eta>)) \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n 2. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from this x_vpp"], ["proof (chain)\npicking this:\n  v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n  x \\<sqsubseteq> v''", "show \"x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n  x \\<sqsubseteq> v''\n\ngoal (1 subgoal):\n 1. x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "using T_down_closed"], ["proof (prove)\nusing this:\n  v'' \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n  x \\<sqsubseteq> v''\n  \\<lbrakk>?v \\<in> T ?\\<tau> ?\\<eta>; ?v' \\<sqsubseteq> ?v\\<rbrakk>\n  \\<Longrightarrow> ?v' \\<in> T ?\\<tau> ?\\<eta>\n\ngoal (1 subgoal):\n 1. x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "by blast"], ["proof (state)\nthis:\n  x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "assume vp: \"v' = Abs None\""], ["proof (state)\nthis:\n  v' = Abs None\n\ngoal (1 subgoal):\n 1. v' = Abs None \\<Longrightarrow>\n    x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from vp x"], ["proof (chain)\npicking this:\n  v' = Abs None\n  x \\<in> (case v' of Abs None \\<Rightarrow> {}\n           | Abs (Some xa) \\<Rightarrow> return xa\n           | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})", "show \"x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  v' = Abs None\n  x \\<in> (case v' of Abs None \\<Rightarrow> {}\n           | Abs (Some xa) \\<Rightarrow> return xa\n           | _ \\<Rightarrow> {v'. v' \\<sqsubseteq> Wrong})\n\ngoal (1 subgoal):\n 1. x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "by simp"], ["proof (state)\nthis:\n  x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "from IH"], ["proof (chain)\npicking this:\n  E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>", "show \"{v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>} \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>\""], ["proof (prove)\nusing this:\n  E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\n\ngoal (1 subgoal):\n 1. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "using wrong_not_in_T"], ["proof (prove)\nusing this:\n  E e \\<rho> \\<subseteq> T (Forall \\<tau>) \\<eta>\n  Wrong \\<notin> T ?\\<tau> ?\\<eta>\n\ngoal (1 subgoal):\n 1. {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n    \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>", "by auto"], ["proof (state)\nthis:\n  {v. v = Wrong \\<and> Wrong \\<in> E e \\<rho>}\n  \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  E (EInst e \\<sigma>) \\<rho> \\<subseteq> T (subst 0 \\<sigma> \\<tau>) \\<eta>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}