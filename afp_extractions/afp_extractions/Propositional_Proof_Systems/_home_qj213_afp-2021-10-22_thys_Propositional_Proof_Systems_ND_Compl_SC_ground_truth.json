{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/ND_Compl_SC.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemma ND_sound_complete_countable:\n  fixes \\<Gamma> :: \"'a :: countable formula set\"\n  shows \"\\<Gamma> \\<turnstile> F \\<longleftrightarrow> \\<Gamma> \\<TTurnstile> F\" (is \"?n \\<longleftrightarrow> ?s\")", "lemma ND_sound_complete_finite:\n  assumes \"finite \\<Gamma>\"\n  shows \"\\<Gamma> \\<turnstile> F \\<longleftrightarrow> \\<Gamma> \\<TTurnstile> F\" (is \"?n \\<longleftrightarrow> ?s\")"], "translations": [["", "lemma ND_sound_complete_countable:\n  fixes \\<Gamma> :: \"'a :: countable formula set\"\n  shows \"\\<Gamma> \\<turnstile> F \\<longleftrightarrow> \\<Gamma> \\<TTurnstile> F\" (is \"?n \\<longleftrightarrow> ?s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Gamma> \\<turnstile> F) = \\<Gamma> \\<TTurnstile> F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma> \\<turnstile> F \\<Longrightarrow> \\<Gamma> \\<TTurnstile> F\n 2. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "assume ?n"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> F\n\ngoal (2 subgoals):\n 1. \\<Gamma> \\<turnstile> F \\<Longrightarrow> \\<Gamma> \\<TTurnstile> F\n 2. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "thus ?s"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F", "by (fact ND_sound)"], ["proof (state)\nthis:\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "assume s: ?s"], ["proof (state)\nthis:\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "with compact_entailment"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<TTurnstile> ?F \\<Longrightarrow>\n  \\<exists>\\<Gamma>'.\n     finite \\<Gamma>' \\<and>\n     \\<Gamma>' \\<subseteq> ?\\<Gamma> \\<and> \\<Gamma>' \\<TTurnstile> ?F\n  \\<Gamma> \\<TTurnstile> F", "obtain \\<Gamma>' where 0: \"finite \\<Gamma>'\" \"\\<Gamma>' \\<TTurnstile> F\" \"\\<Gamma>' \\<subseteq> \\<Gamma>\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<TTurnstile> ?F \\<Longrightarrow>\n  \\<exists>\\<Gamma>'.\n     finite \\<Gamma>' \\<and>\n     \\<Gamma>' \\<subseteq> ?\\<Gamma> \\<and> \\<Gamma>' \\<TTurnstile> ?F\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'.\n        \\<lbrakk>finite \\<Gamma>'; \\<Gamma>' \\<TTurnstile> F;\n         \\<Gamma>' \\<subseteq> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding entailment_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<A>.\n     (\\<forall>G\\<in>?\\<Gamma>. \\<A> \\<Turnstile> G) \\<longrightarrow>\n     \\<A> \\<Turnstile> ?F \\<Longrightarrow>\n  \\<exists>\\<Gamma>'.\n     finite \\<Gamma>' \\<and>\n     \\<Gamma>' \\<subseteq> ?\\<Gamma> \\<and>\n     (\\<forall>\\<A>.\n         (\\<forall>G\\<in>\\<Gamma>'. \\<A> \\<Turnstile> G) \\<longrightarrow>\n         \\<A> \\<Turnstile> ?F)\n  \\<forall>\\<A>.\n     (\\<forall>G\\<in>\\<Gamma>. \\<A> \\<Turnstile> G) \\<longrightarrow>\n     \\<A> \\<Turnstile> F\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'.\n        \\<lbrakk>finite \\<Gamma>';\n         \\<forall>\\<A>.\n            (\\<forall>G\\<in>\\<Gamma>'.\n                \\<A> \\<Turnstile> G) \\<longrightarrow>\n            \\<A> \\<Turnstile> F;\n         \\<Gamma>' \\<subseteq> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "then"], ["proof (chain)\npicking this:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>", "obtain \\<Gamma>'' where \\<Gamma>'': \"\\<Gamma>' = set_mset \\<Gamma>''\""], ["proof (prove)\nusing this:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<Gamma>' = set_mset \\<Gamma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using finite_set_mset_mset_set"], ["proof (prove)\nusing this:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>\n  finite ?A \\<Longrightarrow> set_mset (mset_set ?A) = ?A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<Gamma>' = set_mset \\<Gamma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>' = set_mset \\<Gamma>''\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "have su: \"set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>", "using 0  \\<Gamma>''"], ["proof (prove)\nusing this:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>\n  \\<Gamma>' = set_mset \\<Gamma>''\n\ngoal (1 subgoal):\n 1. set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>", "by fast"], ["proof (state)\nthis:\n  set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "from 0"], ["proof (chain)\npicking this:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>", "have \"\\<Turnstile> \\<Gamma>'' \\<Rightarrow> {#F#}\""], ["proof (prove)\nusing this:\n  finite \\<Gamma>'\n  \\<Gamma>' \\<TTurnstile> F\n  \\<Gamma>' \\<subseteq> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}", "unfolding sequent_semantics_def entailment_def \\<Gamma>''"], ["proof (prove)\nusing this:\n  finite (set_mset \\<Gamma>'')\n  \\<forall>\\<A>.\n     (\\<forall>G\\<in>#\\<Gamma>''. \\<A> \\<Turnstile> G) \\<longrightarrow>\n     \\<A> \\<Turnstile> F\n  set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>A.\n       (\\<forall>\\<gamma>\\<in>#\\<Gamma>''.\n           A \\<Turnstile> \\<gamma>) \\<longrightarrow>\n       (\\<exists>\\<delta>\\<in>#F, {#}. A \\<Turnstile> \\<delta>)", "by simp"], ["proof (state)\nthis:\n  \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "with SC_sound_complete"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> =\n  \\<Turnstile> ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n  \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}", "have \"\\<Gamma>'' \\<Rightarrow> {#F#}\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> =\n  \\<Turnstile> ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n  \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma>'' \\<Rightarrow> F, {#}", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "with SCND"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  set_mset ?\\<Gamma> \\<union>\n  \\<^bold>\\<not> ` set_mset ?\\<Delta> \\<turnstile>\n  \\<bottom>\n  \\<Gamma>'' \\<Rightarrow> F, {#}", "have \"set_mset \\<Gamma>'' \\<union> \\<^bold>\\<not> ` set_mset {#F#} \\<turnstile> \\<bottom>\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  set_mset ?\\<Gamma> \\<union>\n  \\<^bold>\\<not> ` set_mset ?\\<Delta> \\<turnstile>\n  \\<bottom>\n  \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. set_mset \\<Gamma>'' \\<union>\n    \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n    \\<bottom>", "."], ["proof (state)\nthis:\n  set_mset \\<Gamma>'' \\<union>\n  \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n  \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "thus ?n"], ["proof (prove)\nusing this:\n  set_mset \\<Gamma>'' \\<union>\n  \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n  \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> F", "using ND.CC Weaken[OF _ su[THEN insert_mono]]"], ["proof (prove)\nusing this:\n  set_mset \\<Gamma>'' \\<union>\n  \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n  \\<bottom>\n  \\<^bold>\\<not> ?F \\<triangleright> ?\\<Gamma> \\<turnstile>\n  \\<bottom> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> ?F\n  ?a1 \\<triangleright> set_mset \\<Gamma>'' \\<turnstile> ?F \\<Longrightarrow>\n  ?a1 \\<triangleright> \\<Gamma> \\<turnstile> ?F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> F", "by force"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> F\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>If you do not like the requirement that our atoms are countable,\nyou can also restrict yourself to a finite set of assumptions.\\<close>"], ["", "lemma ND_sound_complete_finite:\n  assumes \"finite \\<Gamma>\"\n  shows \"\\<Gamma> \\<turnstile> F \\<longleftrightarrow> \\<Gamma> \\<TTurnstile> F\" (is \"?n \\<longleftrightarrow> ?s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Gamma> \\<turnstile> F) = \\<Gamma> \\<TTurnstile> F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma> \\<turnstile> F \\<Longrightarrow> \\<Gamma> \\<TTurnstile> F\n 2. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "assume ?n"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> F\n\ngoal (2 subgoals):\n 1. \\<Gamma> \\<turnstile> F \\<Longrightarrow> \\<Gamma> \\<TTurnstile> F\n 2. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "thus ?s"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F", "by (fact ND_sound)"], ["proof (state)\nthis:\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "assume s: ?s"], ["proof (state)\nthis:\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "then"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<TTurnstile> F", "obtain \\<Gamma>'' where \\<Gamma>'': \"\\<Gamma> = set_mset \\<Gamma>''\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<Gamma> = set_mset \\<Gamma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using finite_set_mset_mset_set assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<TTurnstile> F\n  finite ?A \\<Longrightarrow> set_mset (mset_set ?A) = ?A\n  finite \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<Gamma> = set_mset \\<Gamma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> = set_mset \\<Gamma>''\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "have su: \"set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>", "using \\<Gamma>''"], ["proof (prove)\nusing this:\n  \\<Gamma> = set_mset \\<Gamma>''\n\ngoal (1 subgoal):\n 1. set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>", "by fast"], ["proof (state)\nthis:\n  set_mset \\<Gamma>'' \\<subseteq> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "have \"\\<Turnstile> \\<Gamma>'' \\<Rightarrow> {#F#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}", "using s"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<TTurnstile> F\n\ngoal (1 subgoal):\n 1. \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}", "unfolding sequent_semantics_def entailment_def \\<Gamma>''"], ["proof (prove)\nusing this:\n  \\<forall>\\<A>.\n     (\\<forall>G\\<in>#\\<Gamma>''. \\<A> \\<Turnstile> G) \\<longrightarrow>\n     \\<A> \\<Turnstile> F\n\ngoal (1 subgoal):\n 1. \\<forall>A.\n       (\\<forall>\\<gamma>\\<in>#\\<Gamma>''.\n           A \\<Turnstile> \\<gamma>) \\<longrightarrow>\n       (\\<exists>\\<delta>\\<in>#F, {#}. A \\<Turnstile> \\<delta>)", "by auto"], ["proof (state)\nthis:\n  \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "with SC_sound_complete"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> =\n  \\<Turnstile> ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n  \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}", "have \"\\<Gamma>'' \\<Rightarrow> {#F#}\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> =\n  \\<Turnstile> ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n  \\<Turnstile> \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma>'' \\<Rightarrow> F, {#}", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "with SCND"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  set_mset ?\\<Gamma> \\<union>\n  \\<^bold>\\<not> ` set_mset ?\\<Delta> \\<turnstile>\n  \\<bottom>\n  \\<Gamma>'' \\<Rightarrow> F, {#}", "have \"set_mset \\<Gamma>'' \\<union> \\<^bold>\\<not> ` set_mset {#F#} \\<turnstile> \\<bottom>\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  set_mset ?\\<Gamma> \\<union>\n  \\<^bold>\\<not> ` set_mset ?\\<Delta> \\<turnstile>\n  \\<bottom>\n  \\<Gamma>'' \\<Rightarrow> F, {#}\n\ngoal (1 subgoal):\n 1. set_mset \\<Gamma>'' \\<union>\n    \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n    \\<bottom>", "."], ["proof (state)\nthis:\n  set_mset \\<Gamma>'' \\<union>\n  \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n  \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<TTurnstile> F \\<Longrightarrow> \\<Gamma> \\<turnstile> F", "thus ?n"], ["proof (prove)\nusing this:\n  set_mset \\<Gamma>'' \\<union>\n  \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n  \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> F", "using ND.CC Weaken[OF _ su[THEN insert_mono]]"], ["proof (prove)\nusing this:\n  set_mset \\<Gamma>'' \\<union>\n  \\<^bold>\\<not> ` set_mset (F, {#}) \\<turnstile>\n  \\<bottom>\n  \\<^bold>\\<not> ?F \\<triangleright> ?\\<Gamma> \\<turnstile>\n  \\<bottom> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> ?F\n  ?a1 \\<triangleright> set_mset \\<Gamma>'' \\<turnstile> ?F \\<Longrightarrow>\n  ?a1 \\<triangleright> \\<Gamma> \\<turnstile> ?F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> F", "by force"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> F\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}