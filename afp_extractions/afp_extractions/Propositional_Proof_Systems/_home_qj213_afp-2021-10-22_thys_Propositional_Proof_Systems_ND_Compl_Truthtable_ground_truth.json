{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/ND_Compl_Truthtable.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemma lemma0[simp,intro!]: \"\\<A> \\<Turnstile> turn_true \\<A> F\"", "lemma turn_true_simps[simp]: \n  \"\\<A> \\<Turnstile> F \\<Longrightarrow> turn_true \\<A> F = F\"\n  \"\\<not> \\<A> \\<Turnstile> F \\<Longrightarrow> turn_true \\<A> F = \\<^bold>\\<not> F\"", "lemma line_suitable_junctors[simp]:\n  \"line_suitable \\<A> (Not F) = line_suitable \\<A> F\"\n  \"line_suitable \\<A> (And F G) = (line_suitable \\<A> F \\<and> line_suitable \\<A> G)\"\n  \"line_suitable \\<A> (Or F G) = (line_suitable \\<A> F \\<and> line_suitable \\<A> G)\"\n  \"line_suitable \\<A> (Imp F G) = (line_suitable \\<A> F \\<and> line_suitable \\<A> G)\"", "lemma line_assm_Cons[simp]: \"line_assm \\<A> (k\\<triangleright>ks) = (if \\<A> k then Atom k else Not (Atom k)) \\<triangleright> line_assm \\<A> ks\"", "lemma NotD: \"\\<Gamma> \\<turnstile> \\<^bold>\\<not> F \\<Longrightarrow> F\\<triangleright>\\<Gamma> \\<turnstile> \\<bottom>\"", "lemma truthline_ND_proof:\n  fixes F :: \"'a formula\"\n  assumes \"line_suitable Z F\"\n  shows \"line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\"", "lemma deconstruct_assm_set:\n  assumes IH: \"\\<And>\\<A>. line_assm \\<A> (k\\<triangleright>Z) \\<turnstile> F\"\n  shows \"\\<And>\\<A>. line_assm \\<A> Z \\<turnstile> F\"", "theorem ND_complete:\n  assumes taut: \"\\<Turnstile> F\"\n  shows \"{} \\<turnstile> F\""], "translations": [["", "lemma lemma0[simp,intro!]: \"\\<A> \\<Turnstile> turn_true \\<A> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> turn_true \\<A> F", "unfolding turn_true_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> (if \\<A> \\<Turnstile> F then F else \\<^bold>\\<not> F)", "by simp"], ["", "lemma turn_true_simps[simp]: \n  \"\\<A> \\<Turnstile> F \\<Longrightarrow> turn_true \\<A> F = F\"\n  \"\\<not> \\<A> \\<Turnstile> F \\<Longrightarrow> turn_true \\<A> F = \\<^bold>\\<not> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<A> \\<Turnstile> F \\<Longrightarrow> turn_true \\<A> F = F) &&&\n    (\\<not> \\<A> \\<Turnstile> F \\<Longrightarrow>\n     turn_true \\<A> F = \\<^bold>\\<not> F)", "unfolding turn_true_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<A> \\<Turnstile> F \\<Longrightarrow>\n     (if \\<A> \\<Turnstile> F then F else \\<^bold>\\<not> F) = F) &&&\n    (\\<not> \\<A> \\<Turnstile> F \\<Longrightarrow>\n     (if \\<A> \\<Turnstile> F then F else \\<^bold>\\<not> F) =\n     \\<^bold>\\<not> F)", "by simp_all"], ["", "(* often more sensible than to unfold everything *)"], ["", "definition line_assm :: \"'a valuation \\<Rightarrow> 'a set \\<Rightarrow> 'a formula set\" where\n\"line_assm \\<A> \\<equiv> (`) (\\<lambda>k. turn_true \\<A> (Atom k))\""], ["", "definition line_suitable :: \"'a set \\<Rightarrow> 'a formula \\<Rightarrow> bool\" where\n\"line_suitable Z F \\<equiv> (atoms F \\<subseteq> Z)\""], ["", "lemma line_suitable_junctors[simp]:\n  \"line_suitable \\<A> (Not F) = line_suitable \\<A> F\"\n  \"line_suitable \\<A> (And F G) = (line_suitable \\<A> F \\<and> line_suitable \\<A> G)\"\n  \"line_suitable \\<A> (Or F G) = (line_suitable \\<A> F \\<and> line_suitable \\<A> G)\"\n  \"line_suitable \\<A> (Imp F G) = (line_suitable \\<A> F \\<and> line_suitable \\<A> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (line_suitable \\<A> (\\<^bold>\\<not> F) = line_suitable \\<A> F &&&\n     line_suitable \\<A> (F \\<^bold>\\<and> G) =\n     (line_suitable \\<A> F \\<and> line_suitable \\<A> G)) &&&\n    line_suitable \\<A> (F \\<^bold>\\<or> G) =\n    (line_suitable \\<A> F \\<and> line_suitable \\<A> G) &&&\n    line_suitable \\<A> (F \\<^bold>\\<rightarrow> G) =\n    (line_suitable \\<A> F \\<and> line_suitable \\<A> G)", "unfolding line_suitable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((atoms (\\<^bold>\\<not> F) \\<subseteq> \\<A>) =\n     (atoms F \\<subseteq> \\<A>) &&&\n     (atoms (F \\<^bold>\\<and> G) \\<subseteq> \\<A>) =\n     (atoms F \\<subseteq> \\<A> \\<and> atoms G \\<subseteq> \\<A>)) &&&\n    (atoms (F \\<^bold>\\<or> G) \\<subseteq> \\<A>) =\n    (atoms F \\<subseteq> \\<A> \\<and> atoms G \\<subseteq> \\<A>) &&&\n    (atoms (F \\<^bold>\\<rightarrow> G) \\<subseteq> \\<A>) =\n    (atoms F \\<subseteq> \\<A> \\<and> atoms G \\<subseteq> \\<A>)", "by(clarsimp; linarith)+"], ["", "lemma line_assm_Cons[simp]: \"line_assm \\<A> (k\\<triangleright>ks) = (if \\<A> k then Atom k else Not (Atom k)) \\<triangleright> line_assm \\<A> ks\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line_assm \\<A> (k \\<triangleright> ks) =\n    (if \\<A> k then Atom k\n     else \\<^bold>\\<not> (Atom k)) \\<triangleright> line_assm \\<A> ks", "unfolding line_assm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k. turn_true \\<A> (Atom k)) ` (k \\<triangleright> ks) =\n    (if \\<A> k then Atom k\n     else \\<^bold>\\<not>\n           (Atom\n             k)) \\<triangleright> (\\<lambda>k. turn_true \\<A> (Atom k)) ` ks", "by simp"], ["", "lemma NotD: \"\\<Gamma> \\<turnstile> \\<^bold>\\<not> F \\<Longrightarrow> F\\<triangleright>\\<Gamma> \\<turnstile> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> \\<^bold>\\<not> F \\<Longrightarrow>\n    F \\<triangleright> \\<Gamma> \\<turnstile> \\<bottom>", "by (meson Not2I NotE Weaken subset_insertI)"], ["", "lemma truthline_ND_proof:\n  fixes F :: \"'a formula\"\n  assumes \"line_suitable Z F\"\n  shows \"line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> F", "using assms"], ["proof (prove)\nusing this:\n  line_suitable Z F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> F", "proof(induction F)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       line_suitable Z (Atom x) \\<Longrightarrow>\n       line_assm \\<A> Z \\<turnstile> turn_true \\<A> (Atom x)\n 2. line_suitable Z \\<bottom> \\<Longrightarrow>\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n 3. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 5. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 6. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "case (Atom k)"], ["proof (state)\nthis:\n  line_suitable Z (Atom k)\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       line_suitable Z (Atom x) \\<Longrightarrow>\n       line_assm \\<A> Z \\<turnstile> turn_true \\<A> (Atom x)\n 2. line_suitable Z \\<bottom> \\<Longrightarrow>\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n 3. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 5. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 6. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  line_suitable Z (Atom k)\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> (Atom k)", "using Ax[where 'a='a]"], ["proof (prove)\nusing this:\n  line_suitable Z (Atom k)\n  ?F \\<in> ?\\<Gamma> \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> (Atom k)", "by (simp add: line_suitable_def line_assm_def)"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> (Atom k)\n\ngoal (5 subgoals):\n 1. line_suitable Z \\<bottom> \\<Longrightarrow>\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n 2. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. line_suitable Z \\<bottom> \\<Longrightarrow>\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n 2. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "case Bot"], ["proof (state)\nthis:\n  line_suitable Z \\<bottom>\n\ngoal (5 subgoals):\n 1. line_suitable Z \\<bottom> \\<Longrightarrow>\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n 2. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "have \"turn_true \\<A> \\<bottom> = Not Bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. turn_true \\<A> \\<bottom> = \\<^bold>\\<not> \\<bottom>", "unfolding turn_true_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<A> \\<Turnstile> \\<bottom> then \\<bottom>\n     else \\<^bold>\\<not> \\<bottom>) =\n    \\<^bold>\\<not> \\<bottom>", "by simp"], ["proof (state)\nthis:\n  turn_true \\<A> \\<bottom> = \\<^bold>\\<not> \\<bottom>\n\ngoal (5 subgoals):\n 1. line_suitable Z \\<bottom> \\<Longrightarrow>\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n 2. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  turn_true \\<A> \\<bottom> = \\<^bold>\\<not> \\<bottom>\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>", "by (simp add: Ax NotI)"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n\ngoal (4 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "(* the theorems from ND/BigFormulas would be useful here. but\\<dots> nah. *)"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> \\<bottom>\n\ngoal (4 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "have [simp]: \"\\<Gamma> \\<turnstile> \\<^bold>\\<not> (\\<^bold>\\<not> F) \\<longleftrightarrow> \\<Gamma> \\<turnstile> F\" for F :: \"'a formula\" and \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Gamma> \\<turnstile> \\<^bold>\\<not> (\\<^bold>\\<not> F)) =\n    (\\<Gamma> \\<turnstile> F)", "by (metis NDtrans Not2E Not2I)"], ["proof (state)\nthis:\n  (?\\<Gamma> \\<turnstile> \\<^bold>\\<not> (\\<^bold>\\<not> ?F)) =\n  (?\\<Gamma> \\<turnstile> ?F)\n\ngoal (4 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "case (Not F)"], ["proof (state)\nthis:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z (\\<^bold>\\<not> F)\n\ngoal (4 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "hence \"line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\""], ["proof (prove)\nusing this:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z (\\<^bold>\\<not> F)\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> F", "by simp"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n\ngoal (4 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>line_suitable Z F \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F;\n        line_suitable Z (\\<^bold>\\<not> F)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> (\\<^bold>\\<not> F)", "by(cases \"\\<A> \\<Turnstile> F\"; simp)"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> (\\<^bold>\\<not> F)\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "have [simp]: \"\\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> F; \\<not> \\<A> \\<Turnstile> F\\<rbrakk> \\<Longrightarrow> F \\<^bold>\\<and> G\\<triangleright> line_assm \\<A> Z \\<turnstile> \\<bottom>\" for F G"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> F;\n     \\<not> \\<A> \\<Turnstile> F\\<rbrakk>\n    \\<Longrightarrow> F \\<^bold>\\<and>\n                      G \\<triangleright> line_assm \\<A> Z \\<turnstile>\n                      \\<bottom>", "by(blast intro!: NotE[where F=F] intro: AndE1[OF Ax] Weaken[OF _ subset_insertI])"], ["proof (state)\nthis:\n  \\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> ?F;\n   \\<not> \\<A> \\<Turnstile> ?F\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<and>\n                    ?G \\<triangleright> line_assm \\<A> Z \\<turnstile>\n                    \\<bottom>\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "have [simp]: \"\\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> G; \\<not> \\<A> \\<Turnstile> G\\<rbrakk> \\<Longrightarrow> F \\<^bold>\\<and> G\\<triangleright> line_assm \\<A> Z \\<turnstile> \\<bottom>\" for F G"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> G;\n     \\<not> \\<A> \\<Turnstile> G\\<rbrakk>\n    \\<Longrightarrow> F \\<^bold>\\<and>\n                      G \\<triangleright> line_assm \\<A> Z \\<turnstile>\n                      \\<bottom>", "by(blast intro!: NotE[where F=G] intro: AndE2[OF Ax] Weaken[OF _ subset_insertI])"], ["proof (state)\nthis:\n  \\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> ?G;\n   \\<not> \\<A> \\<Turnstile> ?G\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<and>\n                    ?G \\<triangleright> line_assm \\<A> Z \\<turnstile>\n                    \\<bottom>\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "(* (meson AndL_sim Not2I NotE Weaken subset_insertI) *)"], ["proof (state)\nthis:\n  \\<lbrakk>line_assm \\<A> Z \\<turnstile> \\<^bold>\\<not> ?G;\n   \\<not> \\<A> \\<Turnstile> ?G\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<and>\n                    ?G \\<triangleright> line_assm \\<A> Z \\<turnstile>\n                    \\<bottom>\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "case (And F G)"], ["proof (state)\nthis:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z G \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n  line_suitable Z (F \\<^bold>\\<and> G)\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<and> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z G \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n  line_suitable Z (F \\<^bold>\\<and> G)\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> (F \\<^bold>\\<and> G)", "by(cases \"\\<A> \\<Turnstile> F\"; cases \"\\<A> \\<Turnstile> G\"; simp; intro ND.NotI AndI; simp)"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> (F \\<^bold>\\<and> G)\n\ngoal (2 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "case (Or F G)"], ["proof (state)\nthis:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z G \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n  line_suitable Z (F \\<^bold>\\<or> G)\n\ngoal (2 subgoals):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<or> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<or> F2)\n 2. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z G \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n  line_suitable Z (F \\<^bold>\\<or> G)\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> (F \\<^bold>\\<or> G)", "by(cases \"\\<A> \\<Turnstile> F\"; cases \"\\<A> \\<Turnstile> G\"; simp; (elim ND.OrI1 ND.OrI2)?) (force intro!: NotI dest!: NotD dest: OrL_sim)"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> (F \\<^bold>\\<or> G)\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "case (Imp F G)"], ["proof (state)\nthis:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z G \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n  line_suitable Z (F \\<^bold>\\<rightarrow> G)\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "hence mIH: \"line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\" \"line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\""], ["proof (prove)\nusing this:\n  line_suitable Z F \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_suitable Z G \\<Longrightarrow>\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n  line_suitable Z (F \\<^bold>\\<rightarrow> G)\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> F &&&\n    line_assm \\<A> Z \\<turnstile> turn_true \\<A> G", "by simp+"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2.\n       \\<lbrakk>line_suitable Z F1 \\<Longrightarrow>\n                line_assm \\<A> Z \\<turnstile> turn_true \\<A> F1;\n        line_suitable Z F2 \\<Longrightarrow>\n        line_assm \\<A> Z \\<turnstile> turn_true \\<A> F2;\n        line_suitable Z (F1 \\<^bold>\\<rightarrow> F2)\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> Z \\<turnstile>\n                         turn_true \\<A> (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> F\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> G\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> turn_true \\<A> (F \\<^bold>\\<rightarrow> G)", "by(cases \"\\<A> \\<Turnstile> F\"; cases \"\\<A> \\<Turnstile> G\"; simp; intro ImpI NotI ImpL_sim; simp add: Weaken[OF _ subset_insertI] NotSwap NotD NotD[THEN BotE])"], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> turn_true \\<A> (F \\<^bold>\\<rightarrow> G)\n\ngoal:\nNo subgoals!", "qed"], ["", "thm NotD[THEN BotE]"], ["", "lemma deconstruct_assm_set:\n  assumes IH: \"\\<And>\\<A>. line_assm \\<A> (k\\<triangleright>Z) \\<turnstile> F\"\n  shows \"\\<And>\\<A>. line_assm \\<A> Z \\<turnstile> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<A>. line_assm \\<A> Z \\<turnstile> F", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<A>. ?P \\<A> \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F\n 2. \\<And>\\<A>.\n       \\<not> ?P \\<A> \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "assume \"k \\<in> Z\""], ["proof (state)\nthis:\n  k \\<in> Z\n\ngoal (2 subgoals):\n 1. \\<And>\\<A>. ?P \\<A> \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F\n 2. \\<And>\\<A>.\n       \\<not> ?P \\<A> \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "with IH"], ["proof (chain)\npicking this:\n  line_assm ?\\<A> (k \\<triangleright> Z) \\<turnstile> F\n  k \\<in> Z", "show \"?thesis \\<A>\" for \\<A>"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> (k \\<triangleright> Z) \\<turnstile> F\n  k \\<in> Z\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> F", "by (simp add: insert_absorb)"], ["proof (state)\nthis:\n  line_assm ?\\<A> Z \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "assume \"k \\<notin> Z\""], ["proof (state)\nthis:\n  k \\<notin> Z\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "fix \\<A>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "text\\<open>Since we require the IH for arbitrary @{term \\<A>}, we use a modified @{term \\<A>} from the conclusion like this:\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "from IH"], ["proof (chain)\npicking this:\n  line_assm ?\\<A> (k \\<triangleright> Z) \\<turnstile> F", "have av: \"line_assm (\\<A>(k := v)) (k\\<triangleright>Z) \\<turnstile> F\" for v"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> (k \\<triangleright> Z) \\<turnstile> F\n\ngoal (1 subgoal):\n 1. line_assm (\\<A>(k := v)) (k \\<triangleright> Z) \\<turnstile> F", "by blast"], ["proof (state)\nthis:\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "text\\<open>However, that modification is only relevant for @{term \"k\\<triangleright>Z\"}, nothing from @{term Z} gets touched.\\<close>"], ["proof (state)\nthis:\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "from \\<open>k \\<notin> Z\\<close>"], ["proof (chain)\npicking this:\n  k \\<notin> Z", "have \"line_assm (\\<A>(k := v)) Z = line_assm \\<A> Z\" for v"], ["proof (prove)\nusing this:\n  k \\<notin> Z\n\ngoal (1 subgoal):\n 1. line_assm (\\<A>(k := v)) Z = line_assm \\<A> Z", "unfolding line_assm_def turn_true_def"], ["proof (prove)\nusing this:\n  k \\<notin> Z\n\ngoal (1 subgoal):\n 1. (\\<lambda>ka.\n        if \\<A>(k := v) \\<Turnstile> Atom ka then Atom ka\n        else \\<^bold>\\<not> (Atom ka)) `\n    Z =\n    (\\<lambda>k.\n        if \\<A> \\<Turnstile> Atom k then Atom k\n        else \\<^bold>\\<not> (Atom k)) `\n    Z", "by force"], ["proof (state)\nthis:\n  line_assm (\\<A>(k := ?v)) Z = line_assm \\<A> Z\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "text\\<open>That means we can rewrite the modified @{const line_assm} like this:\\<close>"], ["proof (state)\nthis:\n  line_assm (\\<A>(k := ?v)) Z = line_assm \\<A> Z\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "hence \"line_assm (\\<A>(k := v)) (k\\<triangleright>Z) = \n      (if v then Atom k else Not (Atom k)) \\<triangleright> line_assm \\<A> Z\" for v"], ["proof (prove)\nusing this:\n  line_assm (\\<A>(k := ?v)) Z = line_assm \\<A> Z\n\ngoal (1 subgoal):\n 1. line_assm (\\<A>(k := v)) (k \\<triangleright> Z) =\n    (if v then Atom k\n     else \\<^bold>\\<not> (Atom k)) \\<triangleright> line_assm \\<A> Z", "by simp"], ["proof (state)\nthis:\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) =\n  (if ?v then Atom k\n   else \\<^bold>\\<not> (Atom k)) \\<triangleright> line_assm \\<A> Z\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "text\\<open>Inserting @{const True} and @{const False} for \\<open>v\\<close> yields the two alternatives.\\<close>"], ["proof (state)\nthis:\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) =\n  (if ?v then Atom k\n   else \\<^bold>\\<not> (Atom k)) \\<triangleright> line_assm \\<A> Z\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "with av"], ["proof (chain)\npicking this:\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) \\<turnstile> F\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) =\n  (if ?v then Atom k\n   else \\<^bold>\\<not> (Atom k)) \\<triangleright> line_assm \\<A> Z", "have \"Atom k \\<triangleright> line_assm \\<A> Z \\<turnstile> F\" \"Not (Atom k) \\<triangleright> line_assm \\<A> Z \\<turnstile> F\""], ["proof (prove)\nusing this:\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) \\<turnstile> F\n  line_assm (\\<A>(k := ?v)) (k \\<triangleright> Z) =\n  (if ?v then Atom k\n   else \\<^bold>\\<not> (Atom k)) \\<triangleright> line_assm \\<A> Z\n\ngoal (1 subgoal):\n 1. Atom k \\<triangleright> line_assm \\<A> Z \\<turnstile> F &&&\n    \\<^bold>\\<not> (Atom k) \\<triangleright> line_assm \\<A> Z \\<turnstile> F", "by(metis (full_types))+"], ["proof (state)\nthis:\n  Atom k \\<triangleright> line_assm \\<A> Z \\<turnstile> F\n  \\<^bold>\\<not> (Atom k) \\<triangleright> line_assm \\<A> Z \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<And>\\<A>.\n       k \\<notin> Z \\<Longrightarrow> line_assm \\<A> Z \\<turnstile> F", "with ND_caseDistinction"], ["proof (chain)\npicking this:\n  \\<lbrakk>?F \\<triangleright> ?\\<Gamma> \\<turnstile> ?H;\n   \\<^bold>\\<not> ?F \\<triangleright> ?\\<Gamma> \\<turnstile> ?H\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?H\n  Atom k \\<triangleright> line_assm \\<A> Z \\<turnstile> F\n  \\<^bold>\\<not> (Atom k) \\<triangleright> line_assm \\<A> Z \\<turnstile> F", "show \"line_assm \\<A> Z \\<turnstile> F\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?F \\<triangleright> ?\\<Gamma> \\<turnstile> ?H;\n   \\<^bold>\\<not> ?F \\<triangleright> ?\\<Gamma> \\<turnstile> ?H\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?H\n  Atom k \\<triangleright> line_assm \\<A> Z \\<turnstile> F\n  \\<^bold>\\<not> (Atom k) \\<triangleright> line_assm \\<A> Z \\<turnstile> F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> Z \\<turnstile> F", "."], ["proof (state)\nthis:\n  line_assm \\<A> Z \\<turnstile> F\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ND_complete:\n  assumes taut: \"\\<Turnstile> F\"\n  shows \"{} \\<turnstile> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "have [simp]: \"turn_true Z F = F\" for Z"], ["proof (prove)\ngoal (1 subgoal):\n 1. turn_true Z F = F", "using taut"], ["proof (prove)\nusing this:\n  \\<Turnstile> F\n\ngoal (1 subgoal):\n 1. turn_true Z F = F", "by simp"], ["proof (state)\nthis:\n  turn_true ?Z F = F\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "(* \\<up> too fast for you? read \\<down> *)"], ["proof (state)\nthis:\n  turn_true ?Z F = F\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "have \"line_assm \\<A> {} \\<turnstile> F\" for \\<A>"], ["proof (prove)\ngoal (1 subgoal):\n 1. line_assm \\<A> {} \\<turnstile> F", "proof(induction arbitrary: \\<A> rule: finite_empty_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite ?A2\n 2. \\<And>\\<A>. line_assm \\<A> ?A2 \\<turnstile> F\n 3. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "show fat: \"finite (atoms F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (atoms F)", "by (fact atoms_finite)"], ["proof (state)\nthis:\n  finite (atoms F)\n\ngoal (2 subgoals):\n 1. \\<And>\\<A>. line_assm \\<A> (atoms F) \\<turnstile> F\n 2. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<A>. line_assm \\<A> (atoms F) \\<turnstile> F\n 2. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "have su: \"line_suitable (atoms F) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line_suitable (atoms F) F", "unfolding line_suitable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms F \\<subseteq> atoms F", "by simp"], ["proof (state)\nthis:\n  line_suitable (atoms F) F\n\ngoal (2 subgoals):\n 1. \\<And>\\<A>. line_assm \\<A> (atoms F) \\<turnstile> F\n 2. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "with truthline_ND_proof[OF su]"], ["proof (chain)\npicking this:\n  line_assm ?\\<A> (atoms F) \\<turnstile> turn_true ?\\<A> F\n  line_suitable (atoms F) F", "show base: \"line_assm \\<A> (atoms F) \\<turnstile> F\" for \\<A>"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> (atoms F) \\<turnstile> turn_true ?\\<A> F\n  line_suitable (atoms F) F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> (atoms F) \\<turnstile> F", "by simp"], ["proof (state)\nthis:\n  line_assm ?\\<A> (atoms F) \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "case (3 k Z)"], ["proof (state)\nthis:\n  finite Z\n  k \\<in> Z\n  line_assm ?\\<A> Z \\<turnstile> F\n\ngoal (1 subgoal):\n 1. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "from \\<open>k \\<in> Z\\<close>"], ["proof (chain)\npicking this:\n  k \\<in> Z", "have *: \\<open>k \\<triangleright> Z - {k} = Z\\<close>"], ["proof (prove)\nusing this:\n  k \\<in> Z\n\ngoal (1 subgoal):\n 1. k \\<triangleright> Z - {k} = Z", "by blast"], ["proof (state)\nthis:\n  k \\<triangleright> Z - {k} = Z\n\ngoal (1 subgoal):\n 1. \\<And>a A \\<A>.\n       \\<lbrakk>finite A; a \\<in> A;\n        \\<And>\\<A>. line_assm \\<A> A \\<turnstile> F\\<rbrakk>\n       \\<Longrightarrow> line_assm \\<A> (A - {a}) \\<turnstile> F", "from \\<open>\\<And>\\<A>. line_assm \\<A> Z \\<turnstile> F\\<close>"], ["proof (chain)\npicking this:\n  line_assm ?\\<A> Z \\<turnstile> F", "show \\<open>line_assm \\<A> (Z - {k}) \\<turnstile> F\\<close>"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> Z \\<turnstile> F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> (Z - {k}) \\<turnstile> F", "using deconstruct_assm_set[of k \"Z - {k}\" F \\<A>]"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> Z \\<turnstile> F\n  (\\<And>\\<A>.\n      line_assm \\<A> (k \\<triangleright> Z - {k}) \\<turnstile>\n      F) \\<Longrightarrow>\n  line_assm \\<A> (Z - {k}) \\<turnstile> F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> (Z - {k}) \\<turnstile> F", "unfolding *"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> Z \\<turnstile> F\n  (\\<And>\\<A>. line_assm \\<A> Z \\<turnstile> F) \\<Longrightarrow>\n  line_assm \\<A> (Z - {k}) \\<turnstile> F\n\ngoal (1 subgoal):\n 1. line_assm \\<A> (Z - {k}) \\<turnstile> F", "by argo"], ["proof (state)\nthis:\n  line_assm \\<A> (Z - {k}) \\<turnstile> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  line_assm ?\\<A> {} \\<turnstile> F\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "(* could have done that more efficiently\\<dots>\n  have \"line_assm \\<A> {} \\<turnstile> F\" for \\<A>\n    using deconstruct_assm_set[OF spec[where P=\"\\<lambda>\\<A>. line_assm \\<A> (_ \\<triangleright> _) \\<turnstile> F\"]]\n    using finite_empty_induct[OF fat, where P=\"\\<lambda>Z. \\<forall>\\<A>. line_assm \\<A> Z \\<turnstile> F\",\n        OF base[THEN allI[where P=\"\\<lambda>\\<A>. line_assm \\<A> (atoms F) \\<turnstile> F\"]]]\n    by (metis (full_types) insert_Diff_single insert_absorb)*)"], ["proof (state)\nthis:\n  line_assm ?\\<A> {} \\<turnstile> F\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "thus ?thesis"], ["proof (prove)\nusing this:\n  line_assm ?\\<A> {} \\<turnstile> F\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "unfolding line_assm_def"], ["proof (prove)\nusing this:\n  (\\<lambda>k. turn_true ?\\<A> (Atom k)) ` {} \\<turnstile> F\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> F", "by simp"], ["proof (state)\nthis:\n  {} \\<turnstile> F\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ND_sound_complete: \"{} \\<turnstile> F \\<longleftrightarrow> \\<Turnstile> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({} \\<turnstile> F) = \\<Turnstile> F", "using ND_sound[of \"{}\" F] ND_complete[of F]"], ["proof (prove)\nusing this:\n  {} \\<turnstile> F \\<Longrightarrow> {} \\<TTurnstile> F\n  \\<Turnstile> F \\<Longrightarrow> {} \\<turnstile> F\n\ngoal (1 subgoal):\n 1. ({} \\<turnstile> F) = \\<Turnstile> F", "unfolding entailment_def"], ["proof (prove)\nusing this:\n  {} \\<turnstile> F \\<Longrightarrow>\n  \\<forall>\\<A>.\n     (\\<forall>G\\<in>{}. \\<A> \\<Turnstile> G) \\<longrightarrow>\n     \\<A> \\<Turnstile> F\n  \\<Turnstile> F \\<Longrightarrow> {} \\<turnstile> F\n\ngoal (1 subgoal):\n 1. ({} \\<turnstile> F) = \\<Turnstile> F", "by blast"], ["", "end"]]}