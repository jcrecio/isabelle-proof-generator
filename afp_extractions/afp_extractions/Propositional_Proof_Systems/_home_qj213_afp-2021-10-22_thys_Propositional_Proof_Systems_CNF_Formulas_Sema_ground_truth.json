{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/CNF_Formulas_Sema.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemma nnf_semantics: \"\\<A> \\<Turnstile> nnf F \\<longleftrightarrow> \\<A> \\<Turnstile> F\"", "lemma cnf_semantics: \"is_nnf F \\<Longrightarrow> cnf_semantics \\<A> (cnf F) \\<longleftrightarrow> \\<A> \\<Turnstile> F\"", "lemma cnf_form_semantics: \n  fixes F :: \"'a formula\"\n  assumes nnf: \"is_nnf F\"\n  shows \"\\<A> \\<Turnstile> cnf_form_of F \\<longleftrightarrow> \\<A> \\<Turnstile> F\""], "translations": [["", "lemma nnf_semantics: \"\\<A> \\<Turnstile> nnf F \\<longleftrightarrow> \\<A> \\<Turnstile> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> nnf F = \\<A> \\<Turnstile> F", "by(induction F rule: nnf.induct; simp)"], ["", "lemma cnf_semantics: \"is_nnf F \\<Longrightarrow> cnf_semantics \\<A> (cnf F) \\<longleftrightarrow> \\<A> \\<Turnstile> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_nnf F \\<Longrightarrow>\n    cnf_semantics \\<A> (cnf F) = \\<A> \\<Turnstile> F", "by(induction F rule: cnf.induct; simp add: cnf_semantics_def clause_semantics_def ball_Un; metis Un_iff)"], ["", "(* surprisingly, the solvers are smarter if this one is done on mutlisets.*)"], ["", "lemma cnf_form_semantics: \n  fixes F :: \"'a formula\"\n  assumes nnf: \"is_nnf F\"\n  shows \"\\<A> \\<Turnstile> cnf_form_of F \\<longleftrightarrow> \\<A> \\<Turnstile> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "define cnf_semantics_list\n    where \"cnf_semantics_list \\<A> S \\<longleftrightarrow> (\\<forall>s \\<in> set S. \\<exists>l \\<in> set s. lit_semantics \\<A> (l :: 'a literal))\"\n    for \\<A> S"], ["proof (state)\nthis:\n  cnf_semantics_list ?\\<A> ?S =\n  (\\<forall>s\\<in>set ?S. \\<exists>l\\<in>set s. lit_semantics ?\\<A> l)\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "have tcn: \"cnf F = set (map set (cnf_lists F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf F = set (map set (cnf_lists F))", "using nnf"], ["proof (prove)\nusing this:\n  is_nnf F\n\ngoal (1 subgoal):\n 1. cnf F = set (map set (cnf_lists F))", "by(induction F rule: cnf.induct) (auto simp add: image_UN image_comp comp_def )"], ["proof (state)\nthis:\n  cnf F = set (map set (cnf_lists F))\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "have \"\\<A> \\<Turnstile> F \\<longleftrightarrow> cnf_semantics \\<A> (cnf F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> F = cnf_semantics \\<A> (cnf F)", "using cnf_semantics[OF nnf]"], ["proof (prove)\nusing this:\n  cnf_semantics ?\\<A> (cnf F) = ?\\<A> \\<Turnstile> F\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> F = cnf_semantics \\<A> (cnf F)", "by simp"], ["proof (state)\nthis:\n  \\<A> \\<Turnstile> F = cnf_semantics \\<A> (cnf F)\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "also"], ["proof (state)\nthis:\n  \\<A> \\<Turnstile> F = cnf_semantics \\<A> (cnf F)\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "have \"\\<dots> = cnf_semantics \\<A> (set (map set (cnf_lists F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf_semantics \\<A> (cnf F) =\n    cnf_semantics \\<A> (set (map set (cnf_lists F)))", "unfolding tcn"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf_semantics \\<A> (set (map set (cnf_lists F))) =\n    cnf_semantics \\<A> (set (map set (cnf_lists F)))", ".."], ["proof (state)\nthis:\n  cnf_semantics \\<A> (cnf F) =\n  cnf_semantics \\<A> (set (map set (cnf_lists F)))\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "also"], ["proof (state)\nthis:\n  cnf_semantics \\<A> (cnf F) =\n  cnf_semantics \\<A> (set (map set (cnf_lists F)))\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "have \"\\<dots> = cnf_semantics_list \\<A> (cnf_lists F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf_semantics \\<A> (set (map set (cnf_lists F))) =\n    cnf_semantics_list \\<A> (cnf_lists F)", "unfolding cnf_semantics_def clause_semantics_def cnf_semantics_list_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>C\\<in>set (map set (cnf_lists F)).\n        \\<exists>L\\<in>C. lit_semantics \\<A> L) =\n    (\\<forall>s\\<in>set (cnf_lists F). Bex (set s) (lit_semantics \\<A>))", "by fastforce"], ["proof (state)\nthis:\n  cnf_semantics \\<A> (set (map set (cnf_lists F))) =\n  cnf_semantics_list \\<A> (cnf_lists F)\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "also"], ["proof (state)\nthis:\n  cnf_semantics \\<A> (set (map set (cnf_lists F))) =\n  cnf_semantics_list \\<A> (cnf_lists F)\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "have \"\\<dots> = \\<A> \\<Turnstile> (cnf_form_of F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf_semantics_list \\<A> (cnf_lists F) = \\<A> \\<Turnstile> cnf_form_of F", "using nnf"], ["proof (prove)\nusing this:\n  is_nnf F\n\ngoal (1 subgoal):\n 1. cnf_semantics_list \\<A> (cnf_lists F) = \\<A> \\<Turnstile> cnf_form_of F", "by(induction F rule: cnf_lists.induct;\n       simp add: cnf_semantics_list_def cnf_form_of_defs  ball_Un bex_Un)"], ["proof (state)\nthis:\n  cnf_semantics_list \\<A> (cnf_lists F) = \\<A> \\<Turnstile> cnf_form_of F\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "finally"], ["proof (chain)\npicking this:\n  \\<A> \\<Turnstile> F = \\<A> \\<Turnstile> cnf_form_of F", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<A> \\<Turnstile> F = \\<A> \\<Turnstile> cnf_form_of F\n\ngoal (1 subgoal):\n 1. \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F", "by simp"], ["proof (state)\nthis:\n  \\<A> \\<Turnstile> cnf_form_of F = \\<A> \\<Turnstile> F\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary \"\\<exists>G. \\<A> \\<Turnstile> F \\<longleftrightarrow> \\<A> \\<Turnstile> G \\<and> is_cnf G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G. \\<A> \\<Turnstile> F = (\\<A> \\<Turnstile> G \\<and> is_cnf G)", "using cnf_form_of_is cnf_form_semantics is_nnf_nnf nnf_semantics"], ["proof (prove)\nusing this:\n  is_nnf ?F \\<Longrightarrow> is_cnf (cnf_form_of ?F)\n  is_nnf ?F \\<Longrightarrow>\n  ?\\<A> \\<Turnstile> cnf_form_of ?F = ?\\<A> \\<Turnstile> ?F\n  is_nnf (nnf ?F)\n  ?\\<A> \\<Turnstile> nnf ?F = ?\\<A> \\<Turnstile> ?F\n\ngoal (1 subgoal):\n 1. \\<exists>G. \\<A> \\<Turnstile> F = (\\<A> \\<Turnstile> G \\<and> is_cnf G)", "by blast"], ["", "end"]]}